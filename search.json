[{"title":"Todolist 練習筆記","url":"/Practice-Note/20191227/3911274210/","content":"<h2 id=\"練習-Todolist-的原因\"><a href=\"#練習-Todolist-的原因\" class=\"headerlink\" title=\"練習 Todolist 的原因\"></a>練習 Todolist 的原因</h2><p>todolist 看似簡單的介面，但其實隱藏了很多小細節，記錄一下這次的練習，預計要完成的畫面如下：<br><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/todolist.png?alt=media&token=049c8df9-9ab8-41b3-b321-8166aeb6432d\" alt=\"todolist\"></p>\n<hr>\n<h2 id=\"重點練習\"><a href=\"#重點練習\" class=\"headerlink\" title=\"重點練習\"></a>重點練習</h2><blockquote>\n<p>navbar 用 Bootstrap 4 套件很快速就可以完成了，相關的 CSS 再看 codepen，就不做太多陳述。</p>\n</blockquote>\n<p>下方的 content 分成兩欄，這邊稍微紀錄一下：</p>\n<p>左邊 <code>siderbar</code> 設定為 <code>Width:30%</code></p>\n<p>右邊 <code>inputbar</code> 為 <code>width: 67%</code>，再往左邊推 <code>margin-left: 3%</code>。</p>\n<p>因為最下面的 <code>taskList</code> 清單想要再 inputbar 下方，且限制其寬度，所以再 CSS 設定為 <code>width: 70%</code> 跟 <code>margin-left: 26%</code>。</p>\n<h3 id=\"HTML\"><a href=\"#HTML\" class=\"headerlink\" title=\"HTML\"></a>HTML</h3><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"content\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"siderbar\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>今天<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>明天<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>未來七天<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"inputbar\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"task\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"task\"</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">\"請輸入待辦事項\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fas fa-plus\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!-- input --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"taskList\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"SCSS\"><a href=\"#SCSS\" class=\"headerlink\" title=\"SCSS\"></a>SCSS</h3><figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.content</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">margin-top</span>: <span class=\"number\">3%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\"></span><br><span class=\"line\">  .siderbar &#123;</span><br><span class=\"line\">    <span class=\"selector-tag\">width</span>: 30%;</span><br><span class=\"line\">    <span class=\"selector-tag\">line-height</span>: 2;</span><br><span class=\"line\">    <span class=\"selector-tag\">margin-right</span>: 0;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"selector-tag\">a</span> &#123;</span><br><span class=\"line\">      <span class=\"attribute\">text-decoration</span>: none;</span><br><span class=\"line\">      <span class=\"attribute\">color</span>: $primary-color;</span><br><span class=\"line\"></span><br><span class=\"line\">      &amp;:hover &#123;</span><br><span class=\"line\">        <span class=\"selector-tag\">font-weight</span>: <span class=\"selector-tag\">bold</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"selector-class\">.inputbar</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">    <span class=\"attribute\">margin-left</span>: <span class=\"number\">3%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">42px</span>;</span><br><span class=\"line\">    //限制高度，就能讓 inputbar 的高度固定，不會受 flex 影響</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"selector-tag\">input</span> &#123;</span><br><span class=\"line\">      <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">      <span class=\"attribute\">margin-right</span>: <span class=\"number\">0.3em</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"selector-class\">.btn</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: $primary-color;</span><br><span class=\"line\">    <span class=\"attribute\">padding</span>: <span class=\"number\">5px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"number\">#fff</span>;</span><br><span class=\"line\">    <span class=\"attribute\">font-size</span>: <span class=\"number\">16px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">42px</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    &amp;:hover &#123;</span><br><span class=\"line\">      background-color: (darken($color: $primary-color, $amount: 20%));</span><br><span class=\"line\">      <span class=\"selector-tag\">color</span>: <span class=\"selector-id\">#fff</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>以上是<strong>靜態頁面</strong>會呈現的樣子，但 todolist 需要有互動，可增加與刪除事項的功能，所以要加入 JavaScript。</p>\n<h3 id=\"JavaScript\"><a href=\"#JavaScript\" class=\"headerlink\" title=\"JavaScript\"></a>JavaScript</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> btn = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\".btn\"</span>);</span><br><span class=\"line\"><span class=\"comment\">//宣告變數 btn 為選定 class=btn</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> input = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\"#task\"</span>);</span><br><span class=\"line\"><span class=\"comment\">//宣告變數 input 為選定 input 中的 id</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> list = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\".taskList\"</span>);</span><br><span class=\"line\"><span class=\"comment\">//宣告變數 list 為選定的 ul 的內容</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> getData = localStorage.getItem(<span class=\"string\">\"task\"</span>);</span><br><span class=\"line\"><span class=\"comment\">//宣告變數 getDate 找到getData 這個 key，從 localStorage 取出 value</span></span><br><span class=\"line\"><span class=\"comment\">// 用 console.log=(typeof(getData)) 類型值會得到 string</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> getDataAry = <span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (getData) &#123;</span><br><span class=\"line\">  getDataAry = <span class=\"built_in\">JSON</span>.parse(getData);</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">  getDataAry = [];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//宣告變數 getDataAry=空值，如果 getData 是 true，會去解析 getDataAry 字串資料成陣列，否則就會空陣列</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> taskList = getDataAry;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//建立監聽事件</span></span><br><span class=\"line\"></span><br><span class=\"line\">btn.addEventListener(<span class=\"string\">\"click\"</span>, getInput, <span class=\"literal\">false</span>);</span><br><span class=\"line\"><span class=\"comment\">//新增監聽按鈕，當有點擊事件時得到 input 的值</span></span><br><span class=\"line\">list.addEventListener(<span class=\"string\">\"click\"</span>, delTask, <span class=\"literal\">false</span>);</span><br><span class=\"line\"><span class=\"comment\">//新增監聽清單，當點擊事件時刪除 list 的值</span></span><br><span class=\"line\"></span><br><span class=\"line\">updateList();</span><br><span class=\"line\"><span class=\"comment\">//更新清單 funciton</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">updateList</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> len = taskList.length;</span><br><span class=\"line\">  <span class=\"comment\">//計算 taskList 的長度</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> str = <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">  <span class=\"comment\">//先串一個字串</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; len; i++) &#123;</span><br><span class=\"line\">    str += <span class=\"string\">\"&lt;li&gt;&lt;a data-num=\"</span> + i + <span class=\"string\">\" &gt;&lt;i class='fas fa-times-circle'&gt;&lt;/i&gt;&lt;/a&gt;\"</span> + taskList[i] + <span class=\"string\">\"&lt;/li&gt;\"</span>;</span><br><span class=\"line\">    <span class=\"comment\">//字串加總 HTML 的 li 的 a 連結 + 自定義的 data-num 的第幾筆資料，刪除按鈕 + 取出的資料</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">//for end</span></span><br><span class=\"line\"></span><br><span class=\"line\">  list.innerHTML = str;</span><br><span class=\"line\">  <span class=\"comment\">//每次更新就存回 localStorage 印在網頁上成字串</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">var</span> taskListStr = <span class=\"built_in\">JSON</span>.stringify(taskList); <span class=\"comment\">//解析陣列成字串</span></span><br><span class=\"line\">  localStorage.setItem(<span class=\"string\">\"task\"</span>, taskListStr); <span class=\"comment\">//把輸入的資料存到 localStorage 的 key, value</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//當使用者輸入</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getInput</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(input.value);</span><br><span class=\"line\">  <span class=\"keyword\">var</span> text = input.value;</span><br><span class=\"line\">  <span class=\"comment\">//簡易判斷是否為空值</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (text === <span class=\"string\">\"\"</span>) &#123;</span><br><span class=\"line\">    alert(<span class=\"string\">\"您未輸入事項\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">//把 input 加入陣列</span></span><br><span class=\"line\">  taskList.push(text); <span class=\"comment\">//輸入的值丟回代辦事項的陣列</span></span><br><span class=\"line\">  input.value = <span class=\"string\">\"\"</span>; <span class=\"comment\">//清空輸入框</span></span><br><span class=\"line\">  updateList();</span><br><span class=\"line\">  <span class=\"comment\">//重新更新清單</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//刪除資料</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">delTask</span>(<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> current = e.target.nodeName;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (current == <span class=\"string\">\"A\"</span> || current == <span class=\"string\">\"I\"</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//點到的 nodeName 為 A 或是 I 就中斷，造成點選「A」和「I」就結束動作，而點到後面文字，也就是 LI 則被刪除，所以要把刪除的動作放在 if 判斷內就能點 icon 圖示刪除 todo </span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> currentNum = e.target.dataset.num;</span><br><span class=\"line\">    taskList.splice(currentNum, <span class=\"number\">1</span>); </span><br><span class=\"line\">   &#125; <span class=\"keyword\">else</span> &#123;<span class=\"keyword\">return</span>&#125;</span><br><span class=\"line\">  updateList();</span><br><span class=\"line\">  <span class=\"comment\">//重新更新清單</span></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>在 JS 中有寫到 <code>taskList</code> 的行為，且在這裡程式碼有加入 fontawesome 的元件</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; len; i++) &#123;</span><br><span class=\"line\">    str += <span class=\"string\">\"&lt;li&gt;&lt;a data-num=\"</span> + i + <span class=\"string\">\" &gt;&lt;i class='fas fa-times-circle'&gt;&lt;/i&gt;&lt;/a&gt;\"</span> + taskList[i] + <span class=\"string\">\"&lt;/li&gt;\"</span>;</span><br></pre></td></tr></table></figure>\n\n<p>所以也要美化 <code>taskList</code> 的 CSS：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.taskList</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">10px</span> auto;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">70%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin-left</span>: <span class=\"number\">26%</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  a &#123;</span><br><span class=\"line\">    <span class=\"selector-tag\">display</span>: <span class=\"selector-tag\">inline-block</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">margin-right</span>: 3<span class=\"selector-tag\">px</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">color</span>: <span class=\"selector-id\">#333333</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">padding</span>: 3<span class=\"selector-tag\">px</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">cursor</span>: <span class=\"selector-tag\">pointer</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"selector-tag\">li</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">padding</span>: <span class=\"number\">3px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">border-bottom</span>: <span class=\"number\">1px</span> solid <span class=\"number\">#b1b1b1</span>;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"number\">#333333</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.fa-times-circle</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: $primary-color;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">24px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>個人覺得最值得注意的是在 todolist 的新增與刪除事項的寫法，還有更新頁面的寫法，需要搞懂來龍去脈，也就是下方這一段：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//更新清單 funciton</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">updateList</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> len = taskList.length;</span><br><span class=\"line\">  <span class=\"comment\">//計算 taskList 的長度</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> str = <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">  <span class=\"comment\">//先串一個字串</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; len; i++) &#123;</span><br><span class=\"line\">    str += <span class=\"string\">\"&lt;li&gt;&lt;a data-num=\"</span> + i + <span class=\"string\">\" &gt;&lt;i class='fas fa-times-circle'&gt;&lt;/i&gt;&lt;/a&gt;\"</span> + taskList[i] + <span class=\"string\">\"&lt;/li&gt;\"</span>;</span><br><span class=\"line\">    <span class=\"comment\">//字串加總 HTML 的 li 的 a 連結 + 自定義的 data-num 的第幾筆資料，刪除按鈕 + 取出的資料</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">//for end</span></span><br><span class=\"line\"></span><br><span class=\"line\">  list.innerHTML = str;</span><br><span class=\"line\">  <span class=\"comment\">//每次更新就存回 localStorage 印在網頁上成字串</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">var</span> taskListStr = <span class=\"built_in\">JSON</span>.stringify(taskList); <span class=\"comment\">//解析陣列成字串</span></span><br><span class=\"line\">  localStorage.setItem(<span class=\"string\">\"task\"</span>, taskListStr); <span class=\"comment\">//把輸入的資料存到 localStorage 的 key, value</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//當使用者輸入</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getInput</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(input.value);</span><br><span class=\"line\">  <span class=\"keyword\">var</span> text = input.value;</span><br><span class=\"line\">  <span class=\"comment\">//簡易判斷是否為空值</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (text === <span class=\"string\">\"\"</span>) &#123;</span><br><span class=\"line\">    alert(<span class=\"string\">\"您未輸入事項\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">//把 input 加入陣列</span></span><br><span class=\"line\">  taskList.push(text); <span class=\"comment\">//輸入的值丟回代辦事項的陣列</span></span><br><span class=\"line\">  input.value = <span class=\"string\">\"\"</span>; <span class=\"comment\">//清空輸入框</span></span><br><span class=\"line\">  updateList();</span><br><span class=\"line\">  <span class=\"comment\">//重新更新清單</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//刪除資料</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">delTask</span>(<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> current = e.target.nodeName;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (current == <span class=\"string\">\"A\"</span> || current == <span class=\"string\">\"I\"</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//點到的 nodeName 為 A 或是 I 就中斷，造成點選「A」和「I」就結束動作，而點到後面文字，也就是 LI 則被刪除，所以要把刪除的動作放在 if 判斷內就能點 icon 圖示刪除 todo </span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> currentNum = e.target.dataset.num;</span><br><span class=\"line\">    taskList.splice(currentNum, <span class=\"number\">1</span>); </span><br><span class=\"line\">   &#125; <span class=\"keyword\">else</span> &#123;<span class=\"keyword\">return</span>&#125;</span><br><span class=\"line\">  updateList();</span><br><span class=\"line\">  <span class=\"comment\">//重新更新清單</span></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"結語\"><a href=\"#結語\" class=\"headerlink\" title=\"結語\"></a>結語</h2><p>JS 的互動行為有點細，跟人腦思維不太一樣，要一個口令一個動作，也不用想得太難，要直觀一點，可能人腦的思維可以很快速的整合一件事情的內容，但 JS 是要透過很多的行為告訴電腦該怎麼完成這些很細的動作。很有趣的練習!!</p>\n<p>附上 codepen，可以玩玩看： <a href=\"https://codepen.io/hnzxewqw/pen/eYmRgoJ\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/eYmRgoJ</a></p>\n","categories":["Practice Note"],"tags":["HTML, CSS, JavaScript"]},{"title":"美化 Powershell","url":"/Powershell/20191225/611397980/","content":"<h2 id=\"Powershell-的美化原因\"><a href=\"#Powershell-的美化原因\" class=\"headerlink\" title=\"Powershell 的美化原因\"></a>Powershell 的美化原因</h2><p>為了開發更方便，Win10 有內建一個終端機叫做 Powershell，但原本的樣式很醜…</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/powershell%E9%A0%90%E8%A8%AD.png?alt=media&token=33be3a02-3289-4ee3-adb6-eff49f6d2b72\" alt=\"Windows 預設的樣式\"></p>\n<p>這種配色相當刺眼，所以為了以後開發保護眼睛，還是美化一下好了!</p>\n<hr>\n<h2 id=\"環境條件\"><a href=\"#環境條件\" class=\"headerlink\" title=\"環境條件\"></a>環境條件</h2><ul>\n<li>需要在 Windows 10 1903 版以上才能美化喔~不然會失敗。</li>\n</ul>\n<hr>\n<h2 id=\"查看-Windows-版本\"><a href=\"#查看-Windows-版本\" class=\"headerlink\" title=\"查看 Windows 版本\"></a>查看 Windows 版本</h2><p>在下方搜尋列中打 <code>winver</code>，就可以看到版本喔! 如果發現不是 1903 版本要記得更新系統。</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/winver.png?alt=media&token=e6862e07-d4ab-477e-aada-2db27d22da7e\" alt=\"winver\"></p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/winver1903.png?alt=media&token=7980ae9d-7a88-4047-b40a-48d1a82147b6\" alt=\"winver 1903\"></p>\n<p>確認好後就可以繼續進行美化了。</p>\n<hr>\n<h2 id=\"美化提示條\"><a href=\"#美化提示條\" class=\"headerlink\" title=\"美化提示條\"></a>美化提示條</h2><p>預計要美化提示條的樣式如下：</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/powershell%E6%8F%90%E7%A4%BA%E6%A2%9D.png?alt=media&token=fa27bd1b-6555-4aa9-9120-b835e639eed1\" alt=\"美化後的提示條\"></p>\n<p>安裝提示條套件 <code>oh-my-posh</code>，<a href=\"https://github.com/JanDeDobbeleer/oh-my-posh\" target=\"_blank\" rel=\"noopener\">oh-my-posh GitHub</a></p>\n<h3 id=\"安裝套件\"><a href=\"#安裝套件\" class=\"headerlink\" title=\"安裝套件\"></a>安裝套件</h3><p>在 powershell 輸入下方指令：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">Install-Module posh-git -Scope CurrentUser</span><br></pre></td></tr></table></figure>\n<p>安裝過程會有問題提問，一直輸入 <code>Y</code> 就可以了。</p>\n<p>再來安裝 oh-my-posh 模組，輸入下方指令：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">Install-Module oh-my-posh -Scope CurrentUser</span><br></pre></td></tr></table></figure>\n<p>安裝過程會有問題提問，一樣輸入 <code>Y</code> 就可以了。</p>\n<h3 id=\"設定自動套用\"><a href=\"#設定自動套用\" class=\"headerlink\" title=\"設定自動套用\"></a>設定自動套用</h3><p>在 PowerShell 上面輸入 <code>$profile</code> 來顯示 PowerShell 自定義路徑</p>\n<blockquote>\n<p>C:\\Users\\您的資料夾名稱\\Documents\\WindowsPowerShell\\</p>\n</blockquote>\n<p>複製路徑到文件視窗中貼上，打開資料夾後底下若沒有一個檔案叫 Microsoft.PowerShell_profile.ps1 那就新增一個記事本，如果有的話要在 vscode 打開，並內容填入以下資訊：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">Import-Module posh-git</span><br><span class=\"line\">Import-Module oh-my-posh</span><br><span class=\"line\"><span class=\"built_in\">Set</span>-Theme Agnoster //我是用這個樣式</span><br></pre></td></tr></table></figure>\n\n<p>設定完成後，往後每次打開 powershell 就會自動套用了~如果想換配色的話可以到官方 readme 底下有提供別的名稱。<a href=\"https://github.com/JanDeDobbeleer/oh-my-posh#themes\" target=\"_blank\" rel=\"noopener\">官方 GitHub</a></p>\n<hr>\n<h2 id=\"調整背景色\"><a href=\"#調整背景色\" class=\"headerlink\" title=\"調整背景色\"></a>調整背景色</h2><p>有鑑於藍色底真是太痛苦了，做平面設計出身的我喜歡深灰色背景，閱讀上比較不吃力，所以要來改下背景。</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/powershell%20%E7%BE%8E%E5%8C%96.png?alt=media&token=dd4b4099-8d09-4e57-ba60-ebc048210047\" alt=\"我的 powershell 背景\"></p>\n<ul>\n<li>美化之前要先完成環境條件才可以進行</li>\n</ul>\n<hr>\n<h3 id=\"安裝-Windows-Terminal\"><a href=\"#安裝-Windows-Terminal\" class=\"headerlink\" title=\"安裝 Windows Terminal\"></a>安裝 Windows Terminal</h3><p>新版的 Windows Terminal 是透過 Store 安裝的，<a href=\"ms-windows-store://pdp/?ProductId=9n0dx20hk701\">前往 Store 商店</a></p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/windows%20Terminal.png?alt=media&token=5602a109-7a90-4b4e-ad00-f6869f314af9\" alt=\"Windows Terminal\"></p>\n<p>安裝完畢後在搜尋列輸入 <code>Windows Terminal</code> 即可找到。</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/find%20windows%20Terminal.png?alt=media&token=4ef90689-4e6f-4326-9443-d4acf470550d\" alt=\"直接在搜尋列搜尋 Windows Terminal 即可\"></p>\n<p>打開後在工具列中找到<strong>倒三角形</strong>的圖示，會看到 <strong>setting</strong> 選項。</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/setting.png?alt=media&token=b2e21fef-5297-4366-bd0b-67a6674628c8\" alt=\"setting\"></p>\n<p>選擇後會打開一個記事本檔案，先另存新檔找到該路徑，在把檔案丟掉 VScode 裡面修改第一個物件，會看到如下圖：</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/powershell%20%E8%A8%AD%E5%AE%9A.png?alt=media&token=1d615b67-9a2c-4787-a993-2228534f9bed\" alt=\"修改內容\"></p>\n<p>註解處是我修改的地方，可以參考看看。</p>\n<h4 id=\"注意兩件事情\"><a href=\"#注意兩件事情\" class=\"headerlink\" title=\"注意兩件事情\"></a>注意兩件事情</h4><ul>\n<li>背景圖片的地方不可以有中文字，否則無法正常顯示背景圖片。</li>\n<li>字體建議修改，我個人是使用 Sarasa Term SC，否則滿怪的，原本設定 Arial 但如果出現中文字變亂碼。</li>\n</ul>\n<p>設定完之後就成功囉!!</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/powershell%20%E7%BE%8E%E5%8C%96.png?alt=media&token=dd4b4099-8d09-4e57-ba60-ebc048210047\" alt=\"完成後的 powershell \"></p>\n<hr>\n<blockquote>\n<p>參考文章：<a href=\"https://hsiangfeng.github.io/other/20190924/3446878284/\" target=\"_blank\" rel=\"noopener\">https://hsiangfeng.github.io/other/20190924/3446878284/</a></p>\n</blockquote>\n","categories":["Powershell"],"tags":["Powershell"]},{"title":"第一次建立 Hexo 與推上 GitHub","url":"/hexo/20191217/1291925723/","content":"<h2 id=\"為什麼要建立-Hexo-部落格\"><a href=\"#為什麼要建立-Hexo-部落格\" class=\"headerlink\" title=\"為什麼要建立 Hexo 部落格\"></a>為什麼要建立 Hexo 部落格</h2><p>從今年 2 月開始學習前端，在不同階段給我自己設立目標去挑戰，算一算也 10 個月了，看自己的能力還需要一個挑戰來幫助自己升級，讓我自己可以更快投入前端產業領域，經與 Ray 討論後，開始建立 Hexo 部落格，平台這麼多為什麼要使用 Hexo？</p>\n<p>因為 Hexo 是要使用指令來做開發，也要配合 GitHub 使用，一方面可以練習指令，另一方面可以練習 GitHub 版本控制，算是一石二鳥。</p>\n<p>使用 Hexo 是使用 Markdown 撰寫格式，也需要熟悉 Git 指令還有一點 npm 的知識，可以參考下方連結教學。</p>\n<p><a href=\"https://hsiangfeng.github.io/other/20191111/1875438261/\" target=\"_blank\" rel=\"noopener\">Markdown</a></p>\n<p><a href=\"https://w3c.hexschool.com/git/cfdbd310\" target=\"_blank\" rel=\"noopener\">Git</a></p>\n<p><a href=\"https://hsiangfeng.github.io/nodejs/20190626/1317979814/\" target=\"_blank\" rel=\"noopener\">npm</a></p>\n<hr>\n<h2 id=\"建立-Hexo-部落格\"><a href=\"#建立-Hexo-部落格\" class=\"headerlink\" title=\"建立 Hexo 部落格\"></a>建立 Hexo 部落格</h2><h3 id=\"版本與環境\"><a href=\"#版本與環境\" class=\"headerlink\" title=\"版本與環境\"></a>版本與環境</h3><p>作業系統： Windows10 X64</p>\n<p>Nodejs:：V12.13.1 LTS</p>\n<p>IDE：VS Code</p>\n<h3 id=\"本文環境\"><a href=\"#本文環境\" class=\"headerlink\" title=\"本文環境\"></a>本文環境</h3><p><strong>Hexo 版本</strong></p>\n<p>hexo: 4.1.1</p>\n<p>hexo-cli: 3.1.0</p>\n<p><strong>NexT 版本</strong></p>\n<p>Next: 7.6.0</p>\n<hr>\n<h2 id=\"從-GitHub-建立新的數據-Creat-a-new-Repository\"><a href=\"#從-GitHub-建立新的數據-Creat-a-new-Repository\" class=\"headerlink\" title=\"從 GitHub 建立新的數據 (Creat a new Repository)\"></a>從 GitHub 建立新的數據 (Creat a new Repository)</h2><p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/%E5%BB%BA%E7%AB%8B%E6%95%B8%E6%93%9A.png?alt=media&token=1f2b07d5-023a-48aa-a163-21b4095e955d\" alt=\"初始 GitHub 畫面\"></p>\n<ul>\n<li>名稱務必要謹慎設定，因為之後就無法更改，若想要修改只能重新建立數據庫，記得後面的 github.io 要打一樣的。</li>\n<li>下方的權限直接用 Public (公開) 即可，若一開始還不想公開就選擇 Private (私人的)。</li>\n<li>其他不用更動，直接選擇最下方的綠色按鈕 (Create repostory) 建立數據庫。</li>\n</ul>\n<p><strong>Warning</strong></p>\n<ul>\n<li>有提到 HEXO 是用指令建立的，所以不要在本地端建立數據庫，建立的格式內容會是錯誤的 (我已經失敗過一次，最後還是重新來過。)</li>\n</ul>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/GitHub%20%E4%B8%80%E9%96%8B%E5%A7%8B%E6%9C%83%E7%9C%8B%E5%88%B0%E7%9A%84%E6%A8%A3%E5%AD%90.png?alt=media&token=105bb415-3516-491f-af61-df87a4f22a43\" alt=\"這是一開始看到的樣子，如下圖：\"></p>\n<hr>\n<h2 id=\"安裝-Hexo\"><a href=\"#安裝-Hexo\" class=\"headerlink\" title=\"安裝 Hexo\"></a>安裝 Hexo</h2><p>使用指令安裝 Hexo，開啟終端機 (cmd)輸入以下指令：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm install hexo-cli -g</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/%E5%AE%89%E8%A3%9D%20HEXO.png?alt=media&token=f6e154ec-0f7f-4077-b918-10694c06454d\" alt=\"安裝 Hexo\"></p>\n<p>*指令說明：透過 npm 在 全域 (-g) 下安裝 Hexo-Cli</p>\n<p>輸入後會看到有進度條再跑，大概幾秒後就完成了。</p>\n<hr>\n<h2 id=\"建立-Hexo\"><a href=\"#建立-Hexo\" class=\"headerlink\" title=\"建立 Hexo\"></a>建立 Hexo</h2><p>在要存取的硬碟中開啟一個新資料夾，並自訂名稱 (建議用英文)，之後的資料就會在這個資料夾內，並輸入以下指令：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo init projectname</span><br></pre></td></tr></table></figure>\n<ul>\n<li>projectname 改成自己定義的名稱，建議用英文，安裝完成後如下圖：</li>\n</ul>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/%E5%BB%BA%E7%AB%8B%20HEXO.png?alt=media&token=48c35faf-b65e-42ee-9433-a89d265def7a\" alt=\"\"></p>\n<hr>\n<h2 id=\"進入-Hexo\"><a href=\"#進入-Hexo\" class=\"headerlink\" title=\"進入 Hexo\"></a>進入 Hexo</h2><p>在終端機輸入：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> projectname</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>projectname 改成自己定義的名稱，建議用英文</li>\n</ul>\n<h3 id=\"安裝相關套件\"><a href=\"#安裝相關套件\" class=\"headerlink\" title=\"安裝相關套件\"></a>安裝相關套件</h3><p>由於建立完畢的 Hexo 還必須安裝 npm 相關套件，所以必須在這個目錄下輸入：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>指令說明：將 package.json 相依套件下載下來</li>\n</ul>\n<hr>\n<h2 id=\"啟動-Hexo\"><a href=\"#啟動-Hexo\" class=\"headerlink\" title=\"啟動 Hexo\"></a>啟動 Hexo</h2><p>完成上方內容後再輸入下方指令：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo server</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/%E5%95%9F%E5%8B%95%20hexo.png?alt=media&token=b06502f3-b23c-4a8d-8b69-5e07cd31fdc0\" alt=\"啟動 hexo server\"></p>\n<hr>\n<h2 id=\"使用主題-themes\"><a href=\"#使用主題-themes\" class=\"headerlink\" title=\"使用主題 themes\"></a>使用主題 themes</h2><p>使用 Next 7.6.0 ，<a href=\"https://github.com/theme-next/hexo-theme-next\" target=\"_blank\" rel=\"noopener\">主題連結</a>，或是可以到<a href=\"https://theme-next.iissnan.com/\" target=\"_blank\" rel=\"noopener\">官方網站</a>取得想要的主題，但因為每個主題要修改的程式碼不同，如果要按照我這邊設定，建議選用一樣的樣式!! </p>\n<h3 id=\"替換主題\"><a href=\"#替換主題\" class=\"headerlink\" title=\"替換主題\"></a>替換主題</h3><p>下載 themes 並解壓縮到資料夾內的 themes 資料夾內，並使用 VSCODE 開啟跟目錄資料夾中的 <code>congig.yml</code></p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/themes%20%E8%B3%87%E6%96%99%E5%A4%BE.png?alt=media&token=23291574-3088-4580-8a67-be03a21fa206\" alt=\"資料夾 themes 選項\"></p>\n<p>找到第 96 行更改 themes 後面的名稱如下：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">theme: <span class=\"title\">hexo</span>-<span class=\"title\">theme</span>-<span class=\"title\">next</span>-<span class=\"title\">master</span></span></span><br></pre></td></tr></table></figure>\n\n<hr>\n<p>Hexo 基礎設定</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\">// Site</span><br><span class=\"line\">title: TimCodingBlog// 網站標題</span><br><span class=\"line\">subtitle: 提姆寫程式。 // 網站副標題</span><br><span class=\"line\">description: 提姆的前端筆記 // 網站敘述</span><br><span class=\"line\">keywords: // 關鍵字</span><br><span class=\"line\">author: Tim // 網站作者</span><br><span class=\"line\">language: zh-TW // 網站語系</span><br><span class=\"line\">timezone:</span><br><span class=\"line\"></span><br><span class=\"line\">// URL</span><br><span class=\"line\">url: http://yoursite.com  //輸入您的網站URL，舉例我的就是ray.github.io</span><br><span class=\"line\">root: /</span><br><span class=\"line\">permalink: :year/:month/:day/:title/</span><br><span class=\"line\">permalink_defaults:</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"部署-GitHub\"><a href=\"#部署-GitHub\" class=\"headerlink\" title=\"部署 GitHub\"></a>部署 GitHub</h2><p>需要安裝一個 Hexo 沒有安裝的插件</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n\n<p>修改 _config.yml 中的 Depolyment 如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">  type: git // 模式</span><br><span class=\"line\">  repo: https://github.com/yourGithub /yourGithubName.github.io.git // 自己 GitHub repos 連結</span><br><span class=\"line\">  branch: master // 分支</span><br></pre></td></tr></table></figure>\n\n<p>修改完後輸入下方指令：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo d g</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>指令說明：d →部屬、g →生成靜態頁面</li>\n</ul>\n<hr>\n<h2 id=\"其他指令\"><a href=\"#其他指令\" class=\"headerlink\" title=\"其他指令\"></a>其他指令</h2><figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo new \"<span class=\"built_in\">title</span>\"</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>說明：建立新文章</li>\n</ul>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo s -g</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>說明：s →啟動伺服器 -g →生成靜態頁面</li>\n</ul>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo d -g</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>說明： d →部屬模式 -g →生成靜態頁面</li>\n</ul>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo clean</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>說明：刪除已生成的靜態頁面及快取檔案</li>\n</ul>\n<hr>\n<blockquote>\n<p>參考文章：<a href=\"https://hsiangfeng.github.io/hexo/20190411/932826160/\" target=\"_blank\" rel=\"noopener\">https://hsiangfeng.github.io/hexo/20190411/932826160/</a></p>\n</blockquote>\n","categories":["hexo"],"tags":["hexo"]}]