[{"title":"Regular Expression 正則表達式 - 進階用法","url":"/regex/20220731/2418624309/","content":"<p>前篇認識了 RegEX 基本語法的觀念後，接下來要介紹的是在實戰中常用的幾個用法，使用文字範例如下方假文字：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">Lorem ipsum dolor sit amet consectetur</span><br><span class=\"line\">adipisicing elit. Voluptate odit aspernatur veritatis,</span><br><span class=\"line\">quasi asperiores ab consequatur modi quia perspiciatis</span><br><span class=\"line\">ex ipsum ut laborum laboriosam, <span class=\"built_in\">rem</span>, similique ipsam ad?</span><br><span class=\"line\">Necessitatibus, voluptatum!</span><br></pre></td></tr></table></figure>\n\n<p>可使用網路正則表達式網站 <a href=\"https://regex101.com/\" target=\"_blank\" rel=\"noopener\">regex101</a> 一併實作看看，會更清楚喔！</p>\n<h2 id=\"字元類別-Character-Classes\"><a href=\"#字元類別-Character-Classes\" class=\"headerlink\" title=\"字元類別 (Character Classes)\"></a>字元類別 (Character Classes)</h2><h3 id=\"dot-點\"><a href=\"#dot-點\" class=\"headerlink\" title=\". dot 點\"></a>. dot 點</h3><p>除了斷行以外，其他通通都會匹配。</p>\n<p><img src=\"https://i.imgur.com/rfUP22n.png\" alt=\"all\"></p>\n<h3 id=\"s-match-space\"><a href=\"#s-match-space\" class=\"headerlink\" title=\"\\s match space\"></a>\\s match space</h3><p>除了字符以外，匹配所有空格。</p>\n<p><img src=\"https://i.imgur.com/8jQau8J.png\" alt=\"s\"></p>\n<h3 id=\"S-match-string\"><a href=\"#S-match-string\" class=\"headerlink\" title=\"\\S match string\"></a>\\S match string</h3><p>除了空格以外，匹配所有字符。</p>\n<p><img src=\"https://i.imgur.com/v8Ut4pA.png\" alt=\"S\"></p>\n<h3 id=\"w-匹配所有文字\"><a href=\"#w-匹配所有文字\" class=\"headerlink\" title=\"\\w 匹配所有文字\"></a>\\w 匹配所有文字</h3><p>效果等同於 <code>[a-zA-Z0-9_]</code>，但不能選到特殊符號。</p>\n<p><img src=\"https://i.imgur.com/2GIpWeO.png\" alt=\"w\"></p>\n<h3 id=\"W-除了文字外都匹配\"><a href=\"#W-除了文字外都匹配\" class=\"headerlink\" title=\"\\W 除了文字外都匹配\"></a>\\W 除了文字外都匹配</h3><p>也就是 <code>[^a-zA-Z0-9_]</code>，\\w 的相反效果。</p>\n<p><img src=\"https://i.imgur.com/87jOfGe.png\" alt=\"W\"></p>\n<h3 id=\"d-匹配所有數字-0-9\"><a href=\"#d-匹配所有數字-0-9\" class=\"headerlink\" title=\"\\d 匹配所有數字 0-9\"></a>\\d 匹配所有數字 0-9</h3><p>效果等同於<code>[0-9]</code>。</p>\n<p><img src=\"https://i.imgur.com/tmLbVGD.png\" alt=\"d\"></p>\n<blockquote>\n<p>原範例沒有數字，在最後面加上數字，才匹配得到。</p>\n</blockquote>\n<h3 id=\"D-除了數字外都匹配\"><a href=\"#D-除了數字外都匹配\" class=\"headerlink\" title=\"\\D 除了數字外都匹配\"></a>\\D 除了數字外都匹配</h3><p>效果等同於 <code>[^0-9]</code>，\\d 的相反效果。</p>\n<p><img src=\"https://i.imgur.com/L4zlktj.png\" alt=\"D\"></p>\n<h3 id=\"a-z-與-A-Z-匹配大小寫\"><a href=\"#a-z-與-A-Z-匹配大小寫\" class=\"headerlink\" title=\"[a-z] 與 [A-Z] 匹配大小寫\"></a>[a-z] 與 [A-Z] 匹配大小寫</h3><ul>\n<li><code>[a-z]</code>：匹配所有小寫字符，數字與符號除外。</li>\n<li><code>[A-Z]</code>：匹配所有大寫字符，數字與符號除外。</li>\n<li><code>[^a-z]</code>：除了小寫字符外，其他都匹配。</li>\n<li><code>[^A-Z]</code>：除了大寫字符外，其他都匹配。</li>\n</ul>\n<h2 id=\"錨點符號\"><a href=\"#錨點符號\" class=\"headerlink\" title=\"錨點符號\"></a>錨點符號</h2><h3 id=\"b-單字邊界\"><a href=\"#b-單字邊界\" class=\"headerlink\" title=\"\\b 單字邊界\"></a>\\b 單字邊界</h3><p>匹配字符的前後的起末點，除了空白字元與標點符號，以及字串開頭或結尾外，不可再有其他字符。</p>\n<p><img src=\"https://i.imgur.com/h9TiFVX.png\" alt=\"b\"></p>\n<h3 id=\"B-非單字邊界\"><a href=\"#B-非單字邊界\" class=\"headerlink\" title=\"\\B 非單字邊界\"></a>\\B 非單字邊界</h3><p><code>\\b</code> 的相反效果，也就是原本單字邊界沒有匹配到的，都會匹配到。</p>\n<p><img src=\"https://i.imgur.com/8Xb4QxW.png\" alt=\"B\"></p>\n<h2 id=\"常用的特殊字元\"><a href=\"#常用的特殊字元\" class=\"headerlink\" title=\"常用的特殊字元\"></a>常用的特殊字元</h2><ul>\n<li>\\n 換行字元。</li>\n<li>\\0 null 字元。</li>\n<li>. 因為已經是跳脫字元，所以變成一般的點。</li>\n<li>/ 反斜線。</li>\n</ul>\n<h2 id=\"1-Backreference-回參考\"><a href=\"#1-Backreference-回參考\" class=\"headerlink\" title=\"\\1 Backreference 回參考\"></a>\\1 Backreference 回參考</h2><p>匹配對稱的字符。</p>\n<p>範例文字如下：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">abc=abc,</span><br><span class=\"line\">def=def</span><br><span class=\"line\">abc=def</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/24d7cs9.png\" alt=\"\\1\"></p>\n<h2 id=\"1-替換\"><a href=\"#1-替換\" class=\"headerlink\" title=\"$1 替換\"></a>$1 替換</h2><p>主要是把原本的字串替換成要加上的元素。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> str = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\".str\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">let</span> string = <span class=\"string\">\"abc=abc\"</span>;</span><br><span class=\"line\">str.textContent = string;</span><br><span class=\"line\"><span class=\"keyword\">const</span> regex = <span class=\"regexp\">/(abc)=\\1/gm</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> replace = <span class=\"string\">\"xx$1xx\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> result = string.replace(regex, replace);</span><br><span class=\"line\">str.textContent = result;</span><br></pre></td></tr></table></figure>\n\n<p>點此連結看&gt;&gt;&gt;<a href=\"https://codepen.io/hnzxewqw/pen/mdxqqqB\" target=\"_blank\" rel=\"noopener\">範例效果</a></p>\n<h2 id=\"左右合樣-Lookaround\"><a href=\"#左右合樣-Lookaround\" class=\"headerlink\" title=\"左右合樣 Lookaround\"></a>左右合樣 Lookaround</h2><p>有四種 pattern：</p>\n<ol>\n<li>右合樣 <code>a(?=b)</code></li>\n<li>右不合樣。<code>a(?!b)</code></li>\n<li>左合樣。<code>(?&lt;=b)a</code></li>\n<li>左不合樣。<code>(?&lt;!a)b</code></li>\n</ol>\n<p>以下方字串為例：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">abandon</span><br><span class=\"line\">aboard</span><br><span class=\"line\">absolute</span><br><span class=\"line\">active</span><br><span class=\"line\">add</span><br><span class=\"line\">address</span><br><span class=\"line\">advice</span><br><span class=\"line\">attribute</span><br><span class=\"line\">apple</span><br></pre></td></tr></table></figure>\n\n<p>用來判斷右(左)邊緊接著的字元是否符合比對條件，如果符合條件才會繼續比對下去。</p>\n<h3 id=\"右合樣、正向肯定預查-Positive-Lookahead\"><a href=\"#右合樣、正向肯定預查-Positive-Lookahead\" class=\"headerlink\" title=\"右合樣、正向肯定預查 Positive Lookahead\"></a>右合樣、正向肯定預查 Positive Lookahead</h3><p>如字面所表示，從右邊開始匹配，遇到匹配條件才會成功匹配出結果，否則會跳過。</p>\n<p><img src=\"https://i.imgur.com/5QhISbv.png\" alt=\"right\"></p>\n<p>小括號是群組此匹配條件，問號代表前面的字元可出現 0 到 1 次，匹配條件可有可無，若有只能匹配一次。本次範例匹配條件為在 a 右面要找到 b 才符合匹配條件，並且找到一個 b 就會停止匹配。</p>\n<h3 id=\"右不合樣、正向否定預查-Negative-Lookahead\"><a href=\"#右不合樣、正向否定預查-Negative-Lookahead\" class=\"headerlink\" title=\"右不合樣、正向否定預查 Negative Lookahead\"></a>右不合樣、正向否定預查 Negative Lookahead</h3><p>匹配結果會與右合樣相反。</p>\n<p><img src=\"https://i.imgur.com/vuw44eV.png\" alt=\"not b\"></p>\n<p>a 後面不是 b 的單字字串都會被匹配出來。</p>\n<h3 id=\"左合樣、反向肯定預查-Positive-Lookbehind\"><a href=\"#左合樣、反向肯定預查-Positive-Lookbehind\" class=\"headerlink\" title=\"左合樣、反向肯定預查 Positive Lookbehind\"></a>左合樣、反向肯定預查 Positive Lookbehind</h3><p>從左邊開始匹配，遇到匹配條件才會出現匹配結果，否則會跳過。</p>\n<p><img src=\"https://i.imgur.com/ehgh4Wz.png\" alt=\"l\"></p>\n<p>要找出 b 左邊有 a 的字串才符合匹配條件，並找到一個 a 就停止匹配。</p>\n<h3 id=\"左不合樣、反向否定預查-Negative-Lookbehind\"><a href=\"#左不合樣、反向否定預查-Negative-Lookbehind\" class=\"headerlink\" title=\"左不合樣、反向否定預查 Negative Lookbehind\"></a>左不合樣、反向否定預查 Negative Lookbehind</h3><p>匹配結果與左合樣相反。</p>\n<p><img src=\"https://i.imgur.com/aaSX4i4.png\" alt=\"not l\"></p>\n<blockquote>\n<p>左右合樣匹配條件是不佔空間的，所以比對完條件後會再回到字符起點，再比對第二個條件，也是如此特性，如果複雜又沒有寫好的合樣條件，可能演變成無限迴圈而佔用 CPU 資源，</p>\n</blockquote>\n<h2 id=\"實戰範例\"><a href=\"#實戰範例\" class=\"headerlink\" title=\"實戰範例\"></a>實戰範例</h2><h3 id=\"驗證密碼的條件\"><a href=\"#驗證密碼的條件\" class=\"headerlink\" title=\"驗證密碼的條件\"></a>驗證密碼的條件</h3><ol>\n<li>至少有一個數字</li>\n<li>至少有一個小寫英文字母</li>\n<li>至少有一個大寫英文字母</li>\n<li>字串長度在 6 ~ 30 個字母之間</li>\n</ol>\n<p>正則可以寫成：<code>^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,30}$</code></p>\n<p><img src=\"https://i.imgur.com/Cm0A0nT.png\" alt=\"example\"></p>\n<h3 id=\"匹配網址\"><a href=\"#匹配網址\" class=\"headerlink\" title=\"匹配網址\"></a>匹配網址</h3><p>若網址如下：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">https://<span class=\"title\">www.google.com</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">https</span>://<span class=\"title\">www.youtube.com</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">http</span>://<span class=\"title\">testweb.com.tw</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">https</span>://<span class=\"title\">www.nasa.gov</span></span></span><br></pre></td></tr></table></figure>\n\n<p>正則可寫成：<code>https?:\\/\\/(www\\.)?(\\w+)(\\.\\w+)(\\.\\w+)?</code></p>\n<p>說明：</p>\n<ol>\n<li>一定會有 http 但不一定會有 S，所以在 s 後面加問號。</li>\n<li>會有冒號與 // 雙斜線符號。</li>\n<li>www. 群組成為匹配條件，但有可能網址沒有此字串，故使用冒號。</li>\n<li>取得中間網址所有字串。</li>\n<li>取得 <code>.</code> 之後所有的字串，也就是 <code>.com</code>, <code>.gov</code> 之類的。</li>\n<li>最後不一定會有國碼字串，故也選到 <code>.</code> 之後所有字串並且給問號代表選填。</li>\n</ol>\n<p><img src=\"https://i.imgur.com/uTbuZUz.png\" alt=\"ex\"></p>\n<h2 id=\"修飾詞-Flags\"><a href=\"#修飾詞-Flags\" class=\"headerlink\" title=\"修飾詞 Flags\"></a>修飾詞 Flags</h2><p>正則表達式引擎有預設規則，可依照不同設定給予不同的修飾詞改變匹配結果。</p>\n<h3 id=\"g-global-search-全域模式\"><a href=\"#g-global-search-全域模式\" class=\"headerlink\" title=\"g - global search 全域模式\"></a>g - global search 全域模式</h3><p>使用全局匹配模式。有時候你會希望重複匹配目標字串多次，使用 <code>g</code> flag 就可以保留 <code>lastIndex</code> 的狀態，讓下一次再匹配時，可以從 <code>lastIndex</code> 的位置開始找起，你就可以遍歷整個文本中的所有可匹配字串，而不是每一次再匹配時都得到一樣的結果 (文本中從頭開始第一個找到的字串)。另外預設上，如果沒有開啟 <code>g</code> flag，Regex 引擎只會返回「第一個」匹配到的字串結果。</p>\n<h3 id=\"m-multiline-多行模式\"><a href=\"#m-multiline-多行模式\" class=\"headerlink\" title=\"m - multiline 多行模式\"></a>m - multiline 多行模式</h3><p>使用多行模式，使 <code>^</code> 和 <code>$</code> 會比對每一行的開頭與結尾，而不是輸入字串的開頭和結尾。</p>\n<h3 id=\"i-case-insensitive-忽略大小寫\"><a href=\"#i-case-insensitive-忽略大小寫\" class=\"headerlink\" title=\"i - case insensitive 忽略大小寫\"></a>i - case insensitive 忽略大小寫</h3><p>使用不區分大小寫的比對方式。</p>\n<h3 id=\"s-singleline-單行模式\"><a href=\"#s-singleline-單行模式\" class=\"headerlink\" title=\"s - singleline 單行模式\"></a>s - singleline 單行模式</h3><p>使用單行模式，使句點 . 會比對每個字元，而不是換行符號 <code>\\n</code> 以外的每個字元</p>\n<h2 id=\"優先權\"><a href=\"#優先權\" class=\"headerlink\" title=\"優先權\"></a>優先權</h2><p><img src=\"https://i.imgur.com/EzmiJrK.png\" alt=\"sort\"></p>\n<h2 id=\"找中文\"><a href=\"#找中文\" class=\"headerlink\" title=\"找中文\"></a>找中文</h2><p>正則可以寫：<code>\\p{L}</code></p>\n<p><img src=\"https://i.imgur.com/M1VUJOg.png\" alt=\"chinese\"></p>\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><ul>\n<li><a href=\"https://www.youtube.com/watch?v=Ex6cCWDwNJU\" target=\"_blank\" rel=\"noopener\">深入淺出正則表達式</a></li>\n<li><a href=\"https://www.fooish.com/regex-regular-expression/syntax.html\" target=\"_blank\" rel=\"noopener\">Regex 正規表示法 - 基本語法</a></li>\n<li><a href=\"https://zh.wikipedia.org/zh-tw/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F\" target=\"_blank\" rel=\"noopener\">正規表示法 Wiki</a></li>\n<li><a href=\"https://blog.miniasp.com/post/2008/05/09/Using-Regular-Expression-to-validate-password\" target=\"_blank\" rel=\"noopener\">使用 Regular Expression 驗證密碼複雜度</a></li>\n</ul>\n","categories":["RegEx"],"tags":["RegEx"]},{"title":"Regular Expression 正則表達式 - 初探","url":"/regex/20220731/4121487144/","content":"<p>維基百科陳述如下：</p>\n<blockquote>\n<p>正規表示式（英語：Regular Expression，常簡寫為 regex、regexp 或 RE），又稱正規表達式、正規表示法、規則運算式、常規表示法，是電腦科學的一個概念。正規表示式使用單個字串來描述、符合一系列符合某個句法規則的字串。在很多文字編輯器裡，正則表達式通常被用來檢索、替換那些符合某個模式的文字。</p>\n</blockquote>\n<p>簡單來說正則表達式並不是程式語言，是一種「字串樣式規則」的「表示法」，用來判斷字串的方法，並且使用一套專屬自己的符號表式法，讓開發者可以快速搜尋、取代、刪除以及測試字串是否符合規則，大多數程式語言都有支援 RegEX 來處理字串。</p>\n<p>正則入門教學與測驗網站 <a href=\"https://regexone.com/\" target=\"_blank\" rel=\"noopener\">RegexOne</a></p>\n<h2 id=\"基本語法\"><a href=\"#基本語法\" class=\"headerlink\" title=\"基本語法\"></a>基本語法</h2><p>正則表達式通常會稱為一個 pattern，是用來描述或匹配符合某樣式規則的字串。而匹配字串最簡單的方式是把所有可能性都列出，透過簡潔有效率的語法和符號來描述 pattern，可以優雅地找到想要的字串。</p>\n<p>要匹配同一組字串有很多種寫，但最重要的原則能簡單易讀，而不是寫得很長結果連自己過了一段時間回頭都看不懂，那就不太好了。</p>\n<p>pattern 通常由字符常量 (literal character constants) 和符號運算子 (operator symbols) 組成。</p>\n<p>以下說明可以同步使用 <a href=\"https://regex101.com/\" target=\"_blank\" rel=\"noopener\">regex101</a> 此網站做練習，比較知道下方舉例的效果。</p>\n<p>一個 pattern 會由以下幾個常見的元素組成：</p>\n<h3 id=\"字元\"><a href=\"#字元\" class=\"headerlink\" title=\"字元\"></a>字元</h3><p>也就是單純照著字面意思來做匹配。</p>\n<blockquote>\n<p>例如：<br>可以透過輸入 <code>dog</code> 來找到 <code>dog</code> 的字串， <code>hello</code> 可以找到 <code>hello</code> 的字串。</p>\n</blockquote>\n<h4 id=\"包含字元種類\"><a href=\"#包含字元種類\" class=\"headerlink\" title=\"[ ] 包含字元種類\"></a>[ ] 包含字元種類</h4><p>因為在實務中，不可能找字串都完全使用輸入文字來找，會非常耗時又沒效率，而且失去使用正則的意義，故要匹配上方條件的字串會使用一個中括號，裡面輸入<code>[a-z]</code> 代表匹配出 <code>a-z</code> 的字符。</p>\n<h4 id=\"不包含字元種類\"><a href=\"#不包含字元種類\" class=\"headerlink\" title=\"[^] 不包含字元種類\"></a>[^] 不包含字元種類</h4><p>在中括號裡面加一個 caret 符號，代表除了字串裡面的文字都是不需要匹配的。</p>\n<blockquote>\n<p>例如：<br>要找一個人的帳號 <code>abc123</code>，但我要排除英文字符，只需要數字，此時就可以寫 <code>[^abc]</code>，在匹配時只會找出數字。</p>\n</blockquote>\n<h3 id=\"或-or\"><a href=\"#或-or\" class=\"headerlink\" title=\"| (或 or)\"></a>| (或 or)</h3><p>管線符號，用來表示所有可能的條件，並將其分隔開。</p>\n<blockquote>\n<p>例如：<br>想找到 <code>tom</code> 或是 <code>tim</code> 這兩組字串，使用字串來找可以使用 <code>tom | tim</code>，來找出匹配 <code>tom</code> 或是 <code>tim</code> 的字串。</p>\n</blockquote>\n<h3 id=\"群組\"><a href=\"#群組\" class=\"headerlink\" title=\"群組 ()\"></a>群組 ()</h3><p>使用小括號 () 來表示作用範圍或是其優先順序。</p>\n<blockquote>\n<p>例如：<br>要找到有 <code>dog</code> 跟 <code>cat</code> 這兩組字串或是優先找到有包含這兩組字串的時候，就可以輸入<code>(dog | cat)</code> 來優先找出匹配有 <code>dog</code> 或是 <code>cat</code> 的字串，這在找一些複雜情境時會很好用。</p>\n</blockquote>\n<h3 id=\"量詞\"><a href=\"#量詞\" class=\"headerlink\" title=\"量詞\"></a>量詞</h3><p>接在字符串或群組後面，表示某些條件要出現的「次數」，常用的量詞有：</p>\n<h4 id=\"起始-結束\"><a href=\"#起始-結束\" class=\"headerlink\" title=\"^ 起始 $ 結束\"></a>^ 起始 $ 結束</h4><p>這兩個很長共用也常分開使用，但觀念雷同，故一起介紹， ^ 代表字符代表的起始位置。</p>\n<blockquote>\n<p>例如：<br>我今天要找通訊錄中開頭有 <code>a</code> 的同事，像是 Alex，Allen，Alice，Amy…等，就可以寫 <code>^a</code>，就會找出名字是 <code>a</code> 開頭的字符；相對的我要找結尾有 <code>n</code> 的同事，像是 Allen，Sean，Brian…等。就可以寫 <code>n$</code>，就會找出結尾是 <code>n</code> 的字符。</p>\n</blockquote>\n<h4 id=\"一次到無限次\"><a href=\"#一次到無限次\" class=\"headerlink\" title=\"+ 一次到無限次\"></a>+ 一次到無限次</h4><p>在指定字符後寫上加號，就會從該字符後只要有出現往後盡量匹配跟條件相符的結果。</p>\n<blockquote>\n<p>例如：<br>要匹配的項目是 <code>aaabbbaaaccccccccc</code>，條件寫 <code>a+</code>，就會盡量匹配只要出現一個 <code>a</code> 的字符，若中間有匹配條件外的中斷匹配，會在匹配條件後繼續匹配。像這邊的結果就會找到一開始的 <code>aaa</code>，中間 <code>bbb</code> 中斷了匹配，但會再繼續從 <code>bbb</code> 後匹配到 <code>aaa</code> 把 <code>a</code> 出現一次以上的找出來。</p>\n</blockquote>\n<h4 id=\"零次到無限次\"><a href=\"#零次到無限次\" class=\"headerlink\" title=\"* 零次到無限次\"></a>* 零次到無限次</h4><p>跟 <code>+</code> 很像，只是會從沒有出現的字符開始匹配，用下圖表示會更清楚。</p>\n<h4 id=\"從零次到-1-次\"><a href=\"#從零次到-1-次\" class=\"headerlink\" title=\"? 從零次到 1 次\"></a>? 從零次到 1 次</h4><p>匹配條件可有可無，但如果有，就只能一次。</p>\n<blockquote>\n<p>例如：<br><code>balloon</code> 這個字串，有兩個練續的 <code>o</code> 字符，如果匹配條件是 <code>lo?</code>，代表我要找的條件一定要有 <code>l</code>，但 <code>o</code> 可有可無。</p>\n</blockquote>\n<h3 id=\"min-max-最少連續出現幾次與最多連續出現幾次\"><a href=\"#min-max-最少連續出現幾次與最多連續出現幾次\" class=\"headerlink\" title=\"{min, max} 最少連續出現幾次與最多連續出現幾次\"></a>{min, max} 最少連續出現幾次與最多連續出現幾次</h3><p>這個匹配條件最常用的情境，其中一個是在設定帳號或密碼的長度，會要求最少要多少字符以上，最多要多少字符。<br>例如：<br>匹配條件要是英文字符，且最少 6 字符，最多 16 字符。就可以這樣寫 <code>[a-z]{6,16}</code></p>\n<h3 id=\"跳脫字元\"><a href=\"#跳脫字元\" class=\"headerlink\" title=\"\\ 跳脫字元\"></a>\\ 跳脫字元</h3><p>就是把一些特殊符號轉成正則可以匹配的條件。<br>例如：<br>網站會有一些符號，可以透過跳脫字元將其轉成可匹配的條件。像是 <code>option:item</code>，匹配條件可以是：<code>[a-z]{3,}\\:[a-z]{1,}</code>。max 的直沒有寫，就是無限長。</p>\n<p>以上就是基本 RegEX 的介紹，而 RegEX 在寫 patten 的時候會發生很多 bug，而網路上有很多寫好的 pattern，但如果看不懂的話又貿然使用，複雜的正則式會造成無線迴圈造成把 CPU 的資源吃光。</p>\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><ul>\n<li><a href=\"https://www.youtube.com/watch?v=Ex6cCWDwNJU\" target=\"_blank\" rel=\"noopener\">深入淺出正則表達式</a></li>\n<li><a href=\"https://www.fooish.com/regex-regular-expression/syntax.html\" target=\"_blank\" rel=\"noopener\">Regex 正規表示法 - 基本語法</a></li>\n</ul>\n","categories":["RegEx"],"tags":["RegEx"]},{"title":"Angular 筆記 - 使用內建事件 mousemove 動態 hover 更換圖片","url":"/angular/20220516/2245908404/","content":"<p><img src=\"https://i.imgur.com/GRS9dg8.png\" alt=\"demo\"></p>\n<p>本篇記錄使用 ngStyle 結合 Angular 動態 hover 的方法，當滑鼠經過列表的時候，會顯示對應的圖片。</p>\n<p>下方是假資料：</p>\n<p><strong>Typescript</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">data = [</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    id: <span class=\"string\">\"list01\"</span>,</span><br><span class=\"line\">    title: <span class=\"string\">\"pic01\"</span>,</span><br><span class=\"line\">    image: <span class=\"string\">\"https://picsum.photos/300/656?pepple=10\"</span>,</span><br><span class=\"line\">    desc: <span class=\"string\">\"文字文字文字文字文字文字文字文字文字文字文字文字\"</span>,</span><br><span class=\"line\">    btnText: <span class=\"string\">\"立即前往\"</span>,</span><br><span class=\"line\">    url: <span class=\"string\">\"#\"</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    id: <span class=\"string\">\"list02\"</span>,</span><br><span class=\"line\">    title: <span class=\"string\">\"pic02\"</span>,</span><br><span class=\"line\">    image: <span class=\"string\">\"https://picsum.photos/300/656?pepple=20\"</span>,</span><br><span class=\"line\">    desc: <span class=\"string\">\"文字文字文字文字文字文字文字文字文字文字文字文字\"</span>,</span><br><span class=\"line\">    btnText: <span class=\"string\">\"立即前往\"</span>,</span><br><span class=\"line\">    url: <span class=\"string\">\"#\"</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    id: <span class=\"string\">\"list03\"</span>,</span><br><span class=\"line\">    title: <span class=\"string\">\"pic03\"</span>,</span><br><span class=\"line\">    image: <span class=\"string\">\"https://picsum.photos/300/656?pepple=30\"</span>,</span><br><span class=\"line\">    desc: <span class=\"string\">\"文字文字文字文字文字文字文字文字文字文字文字文字\"</span>,</span><br><span class=\"line\">    btnText: <span class=\"string\">\"立即前往\"</span>,</span><br><span class=\"line\">    url: <span class=\"string\">\"#\"</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    id: <span class=\"string\">\"list04\"</span>,</span><br><span class=\"line\">    title: <span class=\"string\">\"pic04\"</span>,</span><br><span class=\"line\">    image: <span class=\"string\">\"https://picsum.photos/300/656?pepple=40\"</span>,</span><br><span class=\"line\">    desc: <span class=\"string\">\"文字文字文字文字文字文字文字文字文字文字文字文字\"</span>,</span><br><span class=\"line\">    btnText: <span class=\"string\">\"立即前往\"</span>,</span><br><span class=\"line\">    url: <span class=\"string\">\"#\"</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">];</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"基礎-layout-完成\"><a href=\"#基礎-layout-完成\" class=\"headerlink\" title=\"基礎 layout 完成\"></a>基礎 layout 完成</h2><p>依據 data 資料先把資料串在模板上，</p>\n<p><strong>template</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>動態 hover 更換圖片<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"container\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"img-section\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ng-container</span> *<span class=\"attr\">ngFor</span>=<span class=\"string\">\"let item of data\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">class</span>=<span class=\"string\">\"img-text\"</span>&gt;</span>&#123;&#123; item.title &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">img</span> [<span class=\"attr\">src</span>]=<span class=\"string\">\"item.image\"</span> [<span class=\"attr\">alt</span>]=<span class=\"string\">\"item.title\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ng-container</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"list-section\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"list-box\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">ng-container</span> *<span class=\"attr\">ngFor</span>=<span class=\"string\">\"let item of data\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"list-item\"</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">h4</span>&gt;</span>&#123;&#123; item.title &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h4</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>&#123;&#123; item.desc &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">a</span> [<span class=\"attr\">href</span>]=<span class=\"string\">\"item.url\"</span>&gt;</span>&#123;&#123; item.btnText &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">ng-container</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>把樣式寫好，這邊就不多做解釋，應該都滿好理解的。</p>\n<p><strong>CSS</strong></p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">h1</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">36px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">2rem</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">800px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> auto;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.img-section</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">38%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">img</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">  <span class=\"attribute\">top</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">left</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.img-text</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">  <span class=\"attribute\">top</span>: <span class=\"number\">1rem</span>;</span><br><span class=\"line\">  <span class=\"attribute\">left</span>: <span class=\"number\">1rem</span>;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"number\">#fff</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">24px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">z-index</span>: <span class=\"number\">10</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.list-section</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">60%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin-left</span>: <span class=\"number\">2%</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.list-section</span> <span class=\"selector-class\">.list-box</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#fff</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.list-section</span> <span class=\"selector-class\">.list-box</span> <span class=\"selector-class\">.list-item</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#fff</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">19px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">box-shadow</span>: <span class=\"number\">5px</span> <span class=\"number\">5px</span> <span class=\"number\">5px</span> <span class=\"number\">#eee</span>;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">1rem</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin-bottom</span>: <span class=\"number\">1rem</span>;</span><br><span class=\"line\">  <span class=\"attribute\">cursor</span>: pointer;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.list-section</span> <span class=\"selector-class\">.list-box</span> <span class=\"selector-class\">.list-item</span><span class=\"selector-pseudo\">:hover</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#eee</span>;</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: all <span class=\"number\">0.3s</span> ease-in-out;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.list-section</span> <span class=\"selector-class\">.list-box</span> <span class=\"selector-class\">.list-item</span> <span class=\"selector-tag\">h4</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">24px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">padding-bottom</span>: <span class=\"number\">1rem</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.list-section</span> <span class=\"selector-class\">.list-box</span> <span class=\"selector-class\">.list-item</span> <span class=\"selector-tag\">a</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">1rem</span> <span class=\"number\">2rem</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#2d5eff</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"number\">#fff</span>;</span><br><span class=\"line\">  <span class=\"attribute\">text-decoration</span>: none;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: block;</span><br><span class=\"line\">  <span class=\"attribute\">margin-top</span>: <span class=\"number\">1rem</span>;</span><br><span class=\"line\">  <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.list-section</span> <span class=\"selector-class\">.list-box</span> <span class=\"selector-class\">.list-item</span> <span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:hover</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#2041ad</span>;</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: all <span class=\"number\">0.3s</span> ease-in-out;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"使用-Angular-內建-mousemove-方法完成動態-hover-效果\"><a href=\"#使用-Angular-內建-mousemove-方法完成動態-hover-效果\" class=\"headerlink\" title=\"使用 Angular 內建 mousemove 方法完成動態 hover 效果\"></a>使用 Angular 內建 mousemove 方法完成動態 hover 效果</h2><p>此功能設計當使用者滑鼠移動到方塊樣式時，會顯示對應的圖片，直接使用在模板即可，並加上想要執行的 function，這次練習我家在 li 上：</p>\n<p><strong>template</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"list-section\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"list-box\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ng-container</span> *<span class=\"attr\">ngFor</span>=<span class=\"string\">\"let item of data\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"list-item\"</span> (<span class=\"attr\">mousemove</span>)=<span class=\"string\">\"hover(item.id)\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">h4</span>&gt;</span>&#123;&#123; item.title &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h4</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>&#123;&#123; item.desc &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">a</span> [<span class=\"attr\">href</span>]=<span class=\"string\">\"item.url\"</span>&gt;</span>&#123;&#123; item.btnText &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ng-container</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>並在 ts 寫入對應的方法，因為一開始我預設要呈現的是第一筆的文字與圖片標題，所以預設值是直接取得資料的內容(雖然這樣取不是很好的做法)，</p>\n<p>以前在寫這邊的情境會都用 <code>forEach</code>，雖然這樣也會找到，但把資料全部遍歷一遍，效能會比較低，然而此情境使用 <code>find</code>，是因為我知道資料裡面一定會找到所要的結果，當找到後就會回傳 true，這樣會提高效能。</p>\n<p><strong>Typescript</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">imgPath: string = <span class=\"keyword\">this</span>.data[<span class=\"number\">0</span>].image; <span class=\"comment\">//載入網頁的預設圖片</span></span><br><span class=\"line\">imgTitle: string = <span class=\"keyword\">this</span>.data[<span class=\"number\">0</span>].title; <span class=\"comment\">// 載入網頁的預設文字</span></span><br><span class=\"line\"></span><br><span class=\"line\">hover(id: string) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.data.find(<span class=\"function\">(<span class=\"params\">item</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (id === item.id) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.imgPath = item.image;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.imgTitle = item.title;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>把變數放到 template 上，就完成了。</p>\n<p>附上範例程式碼：<a href=\"https://stackblitz.com/edit/angular-ivy-apz3nj?file=src/app/app.component.ts\" target=\"_blank\" rel=\"noopener\">https://stackblitz.com/edit/angular-ivy-apz3nj?file=src/app/app.component.ts</a></p>\n","categories":["Angular"],"tags":["Angular","JavaScript"]},{"title":"Angular 筆記 - 使用 ngClass 動態改變點擊狀態","url":"/angular/20220516/2457106816/","content":"<p><img src=\"https://i.imgur.com/5ZsvT0x.png\" alt=\"demo\"></p>\n<p>本篇記錄前台網站很常出現的點擊標籤切換圖片功能，而使用動態切換 CSS，在點擊標籤時產生對應的資料。</p>\n<p>首先有一組標籤資料，有標籤名稱、狀態、圖片。</p>\n<p><strong>data</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">tabList = [</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    name: <span class=\"string\">\"tab01\"</span>,</span><br><span class=\"line\">    active: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    imgPath: <span class=\"string\">\"https://picsum.photos/400/400?pepple=10\"</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    name: <span class=\"string\">\"tab02\"</span>,</span><br><span class=\"line\">    active: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    imgPath: <span class=\"string\">\"https://picsum.photos/400/400?pepple=20\"</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    name: <span class=\"string\">\"tab03\"</span>,</span><br><span class=\"line\">    active: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    imgPath: <span class=\"string\">\"https://picsum.photos/400/400?pepple=30\"</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    name: <span class=\"string\">\"tab04\"</span>,</span><br><span class=\"line\">    active: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    imgPath: <span class=\"string\">\"https://picsum.photos/400/400?pepple=30\"</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    name: <span class=\"string\">\"tab05\"</span>,</span><br><span class=\"line\">    active: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    imgPath: <span class=\"string\">\"https://picsum.photos/400/400?pepple=30\"</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">];</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Layout\"><a href=\"#Layout\" class=\"headerlink\" title=\"Layout\"></a>Layout</h2><p>先把基礎的 template 跟 CSS 以及資料先串接好，</p>\n<p><strong>template</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>使用 ngClass 動態改變點擊狀態<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"container\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ng-container</span> *<span class=\"attr\">ngFor</span>=<span class=\"string\">\"let item of tabList\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>&#123;&#123; item.name &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ng-container</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ng-container</span> *<span class=\"attr\">ngFor</span>=<span class=\"string\">\"let item of tabList\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">img</span> [<span class=\"attr\">src</span>]=<span class=\"string\">\"item.imgPath\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ng-container</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>CSS</strong></p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">h1</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">2rem</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">24px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-weight</span>: bold;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"number\">#009688</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> auto;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">ul</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> auto <span class=\"number\">2rem</span> auto;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">li</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">list-style</span>: none;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">a</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">1rem</span> <span class=\"number\">2rem</span>;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"number\">#009688</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-bottom</span>: <span class=\"number\">3px</span> solid transparent;</span><br><span class=\"line\">  <span class=\"attribute\">text-decoration</span>: none;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:hover</span>,</span><br><span class=\"line\"><span class=\"selector-tag\">a</span><span class=\"selector-class\">.active</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#eee</span>;</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: all <span class=\"number\">0.5s</span> ease-in-out;</span><br><span class=\"line\">  <span class=\"attribute\">cursor</span>: pointer;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:hover</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border-bottom</span>: <span class=\"number\">3px</span> solid <span class=\"number\">#eee</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">a</span><span class=\"selector-class\">.active</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border-bottom</span>: <span class=\"number\">3px</span> solid <span class=\"number\">#009688</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">img</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> auto;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>完成後，可以看到頁面有標籤，有圖片，跟預期的相同。</p>\n<p><img src=\"https://i.imgur.com/kQBDyaK.png\" alt=\"layout\"></p>\n<h2 id=\"加入-ngClass-與點擊事件\"><a href=\"#加入-ngClass-與點擊事件\" class=\"headerlink\" title=\"加入 ngClass 與點擊事件\"></a>加入 ngClass 與點擊事件</h2><p>在 Angular 看到要動態產生 CSS 的狀態，就要想到 ngClass，</p>\n<p><strong>template</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>使用 ngClass 動態改變點擊狀態<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"container\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ng-container</span> *<span class=\"attr\">ngFor</span>=<span class=\"string\">\"let item of tabList\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">a</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span></span></span><br><span class=\"line\"><span class=\"tag\">          [<span class=\"attr\">ngClass</span>]=<span class=\"string\">\"&#123; active: item.active &#125;\"</span></span></span><br><span class=\"line\"><span class=\"tag\">          (<span class=\"attr\">click</span>)=<span class=\"string\">\"tabClick(item.name)\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        &gt;</span></span><br><span class=\"line\">          &#123;&#123; item.name &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">a</span></span></span><br><span class=\"line\"><span class=\"tag\">        &gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ng-container</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ng-container</span> *<span class=\"attr\">ngFor</span>=<span class=\"string\">\"let item of tabList\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">img</span> [<span class=\"attr\">src</span>]=<span class=\"string\">\"item.imgPath\"</span> *<span class=\"attr\">ngIf</span>=<span class=\"string\">\"item.active\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ng-container</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>TypeScript</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">tabClick(name: string) &#123;</span><br><span class=\"line\">   <span class=\"keyword\">this</span>.tabList.find(<span class=\"function\">(<span class=\"params\">item</span>) =&gt;</span> &#123;</span><br><span class=\"line\">     <span class=\"keyword\">if</span> (name === item.name) &#123;</span><br><span class=\"line\">       item.active = <span class=\"literal\">true</span>;</span><br><span class=\"line\">     &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">       item.active = <span class=\"literal\">false</span>;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">   &#125;);</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n\n<p>這樣就完成這次的功能了，但上面這個邏輯還有優化的空間！</p>\n<h2 id=\"ngClass-與邏輯優化\"><a href=\"#ngClass-與邏輯優化\" class=\"headerlink\" title=\"ngClass 與邏輯優化\"></a>ngClass 與邏輯優化</h2><p>後來經資深工程師的建議，他表示如果像是樣式 active 是固定的，正確的 ngClass 用法應該是改成下方這樣，</p>\n<h3 id=\"ngClass-指令修改\"><a href=\"#ngClass-指令修改\" class=\"headerlink\" title=\"ngClass 指令修改\"></a>ngClass 指令修改</h3><p>因目前 active 是固定不會變動的樣式，可改寫成 class.active，表示這個功能的樣式在 item.active 這個值是 true 的時候，active 就會動態產生。</p>\n<p><strong>template</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">href</span>=<span class=\"string\">\"javascript:void(0)\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  [<span class=\"attr\">class.active</span>]=<span class=\"string\">\"item.active\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  (<span class=\"attr\">click</span>)=<span class=\"string\">\"tabClick(item.name)\"</span></span></span><br><span class=\"line\"><span class=\"tag\">&gt;</span></span><br><span class=\"line\">  &#123;&#123; item.name &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">a</span></span></span><br><span class=\"line\"><span class=\"tag\">&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"邏輯修改\"><a href=\"#邏輯修改\" class=\"headerlink\" title=\"邏輯修改\"></a>邏輯修改</h3><p>原本的邏輯是，點擊事件傳進來的參數是頁籤的名稱，去跟資料裡面的頁籤名稱比對，若找到第一筆相符，該資料的 <code>active</code> 的值就是 <code>true</code>，透過資深工程師指點，因為 <code>if(name === item.name)</code> 的結果也會是 <code>true</code>，故可以把此結果當作是值，讓原本的 <code>item.active</code> 直接等於判斷結果，讓原本五行的程式碼，瞬間一行解決！</p>\n<p><strong>Typescript</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">tabClick(name: string) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.tabList.find(<span class=\"function\">(<span class=\"params\">item</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      item.active = name === item.name;</span><br><span class=\"line\">   &#125;);</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"小結\"><a href=\"#小結\" class=\"headerlink\" title=\"小結\"></a>小結</h2><p>此功能是相當簡單又很實用的情境，很多地方都會用到，特別是在優化程式碼的思維更是值得紀錄！所以先求有，再求好！如果公司內部有資深工程是願意 code review 的時候，更是要加倍把握喔！</p>\n<p>範例程式碼：<a href=\"https://stackblitz.com/edit/angular-ivy-hffsyu?file=src/app/app.component.ts\" target=\"_blank\" rel=\"noopener\">https://stackblitz.com/edit/angular-ivy-hffsyu?file=src/app/app.component.ts</a></p>\n","categories":["Angular"],"tags":["Angular","JavaScript"]},{"title":"Angular 筆記 - 檔案上傳實作","url":"/angular/20220209/3344138314/","content":"<p><img src=\"https://www.lifewire.com/thmb/eCn_BQgPpd0l-6FhgYCA8ebbOn0=/650x0/filters:no_upscale():max_bytes(150000):strip_icc():format(webp)/cloud-upload-a30f385a928e44e199a62210d578375a.jpg\" alt=\"upload\"></p>\n<h2 id=\"主要需求\"><a href=\"#主要需求\" class=\"headerlink\" title=\"主要需求\"></a>主要需求</h2><p>需要一個上傳檔案的功能，但為了視覺統一，要把真正上傳檔案的部分隱藏，用另一個 input 來呈現上傳檔案的內容。</p>\n<h2 id=\"建立上傳檔案區塊\"><a href=\"#建立上傳檔案區塊\" class=\"headerlink\" title=\"建立上傳檔案區塊\"></a>建立上傳檔案區塊</h2><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"uploadFileBlock\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"file\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"uploadInput\"</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn\"</span>&gt;</span>檔案上傳<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ol>\n<li>建立一個上傳檔案的區塊（可以看實際專案需求），裡面個別放了兩個 input。</li>\n<li>第一個 input 的 type 是 file，主要用來上傳檔案用的。</li>\n<li>第二個 input 的 type 是 text，是用來呈現上傳檔案的檔名。</li>\n<li>使用按鈕完成上傳檔案的功能。</li>\n</ol>\n<p>完成主要架構後先來進行樣式的處理。</p>\n<h3 id=\"CSS-樣式\"><a href=\"#CSS-樣式\" class=\"headerlink\" title=\"CSS 樣式\"></a>CSS 樣式</h3><p>因為只會出現一個 input，並且前端介面要給使用者看到的是上傳檔案的檔名結果，所以我把 <code>.uploadInput</code> 使用 <code>display:none</code> 隱藏起來，之後要用 Angular 的範本變數去觸發這個功能。</p>\n<p><strong>HTML</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"uploadFileBlock\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"file\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"uploadInput\"</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"viewInput\"</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn\"</span>&gt;</span>檔案上傳<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>此練習有使用到 Tailwind CSS 作樣式，基本上沒有很困難，可以參考樣式內容。</p>\n<p><strong>SCSS</strong></p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.uploadFileBlock</span> &#123;</span><br><span class=\"line\">  @apply mb-5;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.uploadInput</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: none;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.viewInput</span> &#123;</span><br><span class=\"line\">  @apply py-2 px-1 rounded-md border-gray-400 border-2 focus:ring-2 focus:border-gray-400;</span><br><span class=\"line\">  <span class=\"selector-tag\">outline</span>: <span class=\"selector-tag\">none</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.btn</span> &#123;</span><br><span class=\"line\">  @apply text-white bg-green-500 py-2 px-4 ml-2 hover:bg-green-600 duration-200;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"使用範本變數取得-click-事件的值\"><a href=\"#使用範本變數取得-click-事件的值\" class=\"headerlink\" title=\"使用範本變數取得 click 事件的值\"></a>使用範本變數取得 click 事件的值</h2><p>透過自定義的範本變數可以讓按鈕取得 input 裡面的值。</p>\n<p><strong>HTML</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"uploadFileBlock\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">type</span>=<span class=\"string\">\"file\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">class</span>=<span class=\"string\">\"uploadInput\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    (<span class=\"attr\">change</span>)=<span class=\"string\">\"fileSelected($event)\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    #<span class=\"attr\">fileUpload</span></span></span><br><span class=\"line\"><span class=\"tag\">  /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"viewInput\"</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn\"</span> (<span class=\"attr\">click</span>)=<span class=\"string\">\"fileUpload.click()\"</span>&gt;</span>檔案上傳<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ol>\n<li>在第一個 input 給一個 change 事件以及範本變數，這邊自定義為 <code>#fileUpload</code>，前面要加井字號，這樣就完成了範本變數的綁定。</li>\n<li>再來在第二個按鈕上新增 click 事件，去取得範本變數 fileUpload 的 click 方法。</li>\n</ol>\n<p>此時 ts 檔也要同時新增 change 事件方法。</p>\n<p><strong>TypeScript</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">fileSelected(e) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(e);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>在點擊按鈕後會彈跳出一個視窗，需要先選擇檔案，可以任意選擇一個檔案試試看，選擇後在 console 就可以看到有事件的內容出現。</p>\n<p><img src=\"https://i.imgur.com/1oSyujK.png\" alt=\"console\"></p>\n<p>然後可以找到一個 target 的屬性，再找到 files 這個屬性，在點開會發現是一個陣列，裡面有一個物件。</p>\n<p><img src=\"https://i.imgur.com/BUAuFsH.png\" alt=\"target\"></p>\n<h3 id=\"取得-file-的內容\"><a href=\"#取得-file-的內容\" class=\"headerlink\" title=\"取得 file 的內容\"></a>取得 file 的內容</h3><p>此時可以在 fileSelected 方法中寫入功能，這邊假設我要取得檔案的名稱。</p>\n<p><strong>TypeScript</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">fileName: string;</span><br><span class=\"line\"> fileSelected(e) &#123;</span><br><span class=\"line\">   <span class=\"built_in\">console</span>.log(e);</span><br><span class=\"line\">   <span class=\"keyword\">const</span> file: File = e.target.files[<span class=\"number\">0</span>];</span><br><span class=\"line\">   <span class=\"keyword\">if</span> (file) &#123;</span><br><span class=\"line\">     <span class=\"keyword\">this</span>.fileName = file.name;</span><br><span class=\"line\">     <span class=\"keyword\">const</span> formData = <span class=\"keyword\">new</span> FormData();</span><br><span class=\"line\">     formData.append(<span class=\"string\">'thumbnail'</span>, file);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n\n<ol>\n<li>從 console 中可以知道 files 裡面只有一個物件，所以我取得第 0 筆資料。</li>\n<li>判斷如果 file 是 true 的時候，宣告一個 <code>fileName</code> 去儲存 <code>file.name</code> 的檔案名稱。</li>\n<li>因為來源是不可改變的，所以我用 const 宣告一個變數 <code>formData</code>，並 new 一個 formData 的實體。</li>\n<li>在使用 <code>append</code> 方法去增加檔案。</li>\n</ol>\n<h2 id=\"把檔名放到前端顯示\"><a href=\"#把檔名放到前端顯示\" class=\"headerlink\" title=\"把檔名放到前端顯示\"></a>把檔名放到前端顯示</h2><p>剛剛已經透過全域變數取得 <code>file.name</code> 的字串，我在第二個 input 綁定一個 placeholder，並用三元運算子判斷要顯示變數內容或是預設提示文字。</p>\n<p><strong>HTML</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">class</span>=<span class=\"string\">\"viewInput\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  [<span class=\"attr\">placeholder</span>]=<span class=\"string\">\"fileName ? fileName : '請上傳檔案'\"</span></span></span><br><span class=\"line\"><span class=\"tag\">/&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>這樣就完成了，</p>\n<p>DEMO: <a href=\"https://stackblitz.com/edit/angular-ivy-cfj62u?embed=1&amp;file=src/app/app.component.html\" target=\"_blank\" rel=\"noopener\">https://stackblitz.com/edit/angular-ivy-cfj62u?embed=1&amp;file=src/app/app.component.html</a></p>\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><ul>\n<li><a href=\"https://blog.angular-university.io/angular-file-upload/\" target=\"_blank\" rel=\"noopener\">Angular File Upload: Complete Guide</a></li>\n</ul>\n","categories":["Angular"],"tags":["Angular","JavaScript"]},{"title":"Vue 筆記 - 在 Vue3 安裝 TailwindCSS 3.0","url":"/vue-js/20220130/1190658877/","content":"<p><img src=\"https://i.imgur.com/JoZOrBu.jpg\" alt=\"vue+tailwindcss\"></p>\n<p>最近剛好有個機會要使用 Vue 3 並引入 TailwindCSS3.0，紀錄一下安裝流程。</p>\n<h2 id=\"安裝環境\"><a href=\"#安裝環境\" class=\"headerlink\" title=\"安裝環境\"></a>安裝環境</h2><ul>\n<li>Window11</li>\n<li>Vue 3 要使用 node.js v14 以上版本。</li>\n<li>TailwindCSS 3.0 要使用 node.js v15 以上版本。</li>\n</ul>\n<p>安裝前要先講一下，經過實際測試 Vue 3 跟 TailwindCSS 要使用的 node.js 版本有些不同。</p>\n<blockquote>\n<p>在安裝的時候一直失敗，後來才發現要切換 node 版本才可以安裝成功，目前測試是這樣，若有可以同一版可以順利安裝的朋友還請指教一下。</p>\n</blockquote>\n<h3 id=\"建議安裝-nvm-切換版本\"><a href=\"#建議安裝-nvm-切換版本\" class=\"headerlink\" title=\"建議安裝 nvm 切換版本\"></a>建議安裝 nvm 切換版本</h3><p>前面提到因為要使用不同的 node 版本做兩個框架的安裝，所以建議使用 nvm 切換會比較快速。</p>\n<p>首先先打開終端機輸入 <code>nvm ls</code>，會出現安裝過的版本號，目前選擇的是 <code>14.17.0</code> 的版本。</p>\n<p><img src=\"https://i.imgur.com/fFnPpus.png\" alt=\"nvm\"></p>\n<h2 id=\"使用-Vite-安裝-Vue-3-專案\"><a href=\"#使用-Vite-安裝-Vue-3-專案\" class=\"headerlink\" title=\"使用 Vite 安裝 Vue 3 專案\"></a>使用 Vite 安裝 Vue 3 專案</h2><p>因為後來跑去寫 Angular 了，這次想重溫一下 Vue，中間有聽聞 Vite 很香，想說不知道香在哪，剛好 TailwindCSS 3.0 建議用 Vite 安裝，就來嘗鮮一下。</p>\n<p>輸入以下指令，</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm init vite vue-tailwindcss</span><br></pre></td></tr></table></figure>\n\n<p>會出現要使用的框架，選擇 vue。</p>\n<p><img src=\"https://i.imgur.com/A2Am0Us.png\" alt=\"vue\"></p>\n<p>在選擇要使用的 variant，因為這次先不使用 ts，故選擇 vue。</p>\n<p><img src=\"https://i.imgur.com/9Ttx6cL.png\" alt=\"vue\"></p>\n<p>然後就裝完了！(也太神速了！)</p>\n<p><img src=\"https://i.imgur.com/J5ozpV8.png\" alt=\"done\"></p>\n<p>再來就依照指令指示輸入，先移到剛剛命名的專案，然後 <code>npm install</code>，在執行專案，然後就瞬間完成了編譯…這是什麼黑魔法！</p>\n<p><img src=\"https://i.imgur.com/IWcYccS.png\" alt=\"vite\"></p>\n<p>點開 local 端網址後，出現了既陌生又熟悉的畫面！</p>\n<p><img src=\"https://i.imgur.com/g51RdDB.png\" alt=\"vite\"></p>\n<p>整個流程花不到五分鐘，超有效率！</p>\n<h2 id=\"安裝-TailwindCSS\"><a href=\"#安裝-TailwindCSS\" class=\"headerlink\" title=\"安裝 TailwindCSS\"></a>安裝 TailwindCSS</h2><p>再來就是要安裝 TailwindCSS 在專案中，輸入以下指令安裝。</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm install -D tailwindcss postcss autoprefixer</span><br></pre></td></tr></table></figure>\n\n<p>安裝完後再輸入下方指令建立 TailwindCSS 配置檔與 PostCSS 配置檔。</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">npx tailwindcss init -p</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p><code>-p</code> 就是 PostCSS 的配置檔。</p>\n</blockquote>\n<p>安裝完後會看到專案架構變這樣。</p>\n<p><img src=\"https://i.imgur.com/ja767uw.png\" alt=\"vscode\"></p>\n<h2 id=\"安裝智能提示套件\"><a href=\"#安裝智能提示套件\" class=\"headerlink\" title=\"安裝智能提示套件\"></a>安裝智能提示套件</h2><p>記得要安裝官方出的 <a href=\"https://marketplace.visualstudio.com/items?itemName=bradlc.vscode-tailwindcss\" target=\"_blank\" rel=\"noopener\">TailwindCSS 智能提示套件</a>可以加速使用 TailwindCSS 的開發。</p>\n<h2 id=\"修改-tailwind-config-js-配置檔\"><a href=\"#修改-tailwind-config-js-配置檔\" class=\"headerlink\" title=\"修改 tailwind.config.js 配置檔\"></a>修改 tailwind.config.js 配置檔</h2><p>原本 2.0 的 purge 在 3.0 改成 content，在此陣列放入以下內容。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  content: [<span class=\"string\">\"./index.html\"</span>, <span class=\"string\">\"./src/**/*.&#123;vue,js,ts,jsx,tsx&#125;\"</span>],</span><br><span class=\"line\">  theme: &#123;</span><br><span class=\"line\">    extend: &#123;&#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  plugins: [],</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"新建一個-CSS-檔案並引入-main-js\"><a href=\"#新建一個-CSS-檔案並引入-main-js\" class=\"headerlink\" title=\"新建一個 CSS 檔案並引入 main.js\"></a>新建一個 CSS 檔案並引入 main.js</h2><p>在 src 目錄下新建一個 style 的資料夾，要放 TailwindCSS 的核心。</p>\n<p><img src=\"https://i.imgur.com/VFTxWuv.png\" alt=\"css\"></p>\n<p><strong>src/style/index.css</strong></p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@tailwind</span> base;</span><br><span class=\"line\"><span class=\"keyword\">@tailwind</span> components;</span><br><span class=\"line\"><span class=\"keyword\">@tailwind</span> utilities;</span><br></pre></td></tr></table></figure>\n\n<p>引入專案的進入點 <code>main.js</code> 檔案。</p>\n<p><strong>main.js</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; createApp &#125; <span class=\"keyword\">from</span> <span class=\"string\">\"vue\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> App <span class=\"keyword\">from</span> <span class=\"string\">\"./App.vue\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">\"./style/index.css\"</span>; <span class=\"comment\">//在此引入</span></span><br><span class=\"line\"></span><br><span class=\"line\">createApp(App).mount(<span class=\"string\">\"#app\"</span>);</span><br></pre></td></tr></table></figure>\n\n<p>以上設定完存檔後就可以啟動專案囉！</p>\n<h2 id=\"啟動專案跟寫一段-TailwindCSS-樣式\"><a href=\"#啟動專案跟寫一段-TailwindCSS-樣式\" class=\"headerlink\" title=\"啟動專案跟寫一段 TailwindCSS 樣式\"></a>啟動專案跟寫一段 TailwindCSS 樣式</h2><p>輸入指令 <code>npm run dev</code> 啟動專案。</p>\n<p>在 App.vue 檔案中把原本的內容刪掉，並增加一段自己喜歡的內容，我就簡單寫了下面的內容並給予樣式。</p>\n<p><strong>App.vue</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"text-center bg-gray-100 p-5\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">class</span>=<span class=\"string\">\"text-6xl text-red-700\"</span>&gt;</span>Hello!<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">class</span>=<span class=\"string\">\"text-4xl text-green-500\"</span>&gt;</span>Vite + TailwindCSS<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>就得到以下畫面囉！</p>\n<p><img src=\"https://i.imgur.com/1he3NeO.png\" alt=\"final\"></p>\n<h2 id=\"結語\"><a href=\"#結語\" class=\"headerlink\" title=\"結語\"></a>結語</h2><p>跟直接安裝 Vue CLI 專案不太一樣，直接安裝 Vue 專案會有比較多套件可以選擇，那 Vite 就是直接安裝 Vue 專案而已，少了路由跟 css 處理器那些的套件，如果專案需要的話要自己安裝，但這邊就只先專注在 Vue 跟 TailwindCSS 兩者關係上，不得不說 Vite 真的香！</p>\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><ul>\n<li><a href=\"https://tailwindcss.com/docs/guides/vite\" target=\"_blank\" rel=\"noopener\">Install Tailwind CSS with Vue 3 and Vite</a></li>\n</ul>\n","categories":["vue.js"],"tags":["vue.js","tailwindcss","vite"]},{"title":"Angualr 筆記 - 使用 RxJS:range 完成信用卡有效日期選項","url":"/angular/20220123/2939572972/","content":"<p><img src=\"https://images.unsplash.com/photo-1613243555978-636c48dc653c?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1170&q=80\" alt=\"\"></p>\n<p>延續 <a href=\"https://hsuchihting.github.io/css/20220123/2596783176/\">CSS 筆記 - 使用 ul li 製作互動式下拉選單</a>來延伸做一個信用卡的有效期限選單，本次專案使用 Angular 框架開發，故功能會使用 Angular 的方式記錄。</p>\n<h2 id=\"layout\"><a href=\"#layout\" class=\"headerlink\" title=\"layout\"></a>layout</h2><p>要呈現的畫面如下圖，</p>\n<p><img src=\"https://i.imgur.com/jrQ4Rgk.png\" alt=\"credit card valid date\"></p>\n<p>切版內容大致與延續的文章相同，以下就不贅述。</p>\n<p><strong>HTML</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span>信用卡有效期限：<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"creditCard\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"drop\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"dropOption\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>有效月份<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"dropdown\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>選項 1<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>選項 2<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>選項 3<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>選項 4<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>選項 5<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>選項 6<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>選項 7<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>選項 8<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>/<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"drop\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"dropOption\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>有效年份 <span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"dropdown\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>選項 1<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>選項 2<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>選項 3<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>選項 4<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>選項 5<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>選項 6<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>選項 7<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>選項 8<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>SCSS</strong></p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">label</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">24px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">0.5rem</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-weight</span>: bold;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"number\">#333</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-left</span>: orange <span class=\"number\">5px</span> solid;</span><br><span class=\"line\">  <span class=\"attribute\">margin-bottom</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.creditCard</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">  <span class=\"attribute\">align-items</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">padding-top</span>: <span class=\"number\">1rem</span>;</span><br><span class=\"line\">  &gt; span &#123;</span><br><span class=\"line\">    <span class=\"selector-tag\">margin</span>: 0 1<span class=\"selector-tag\">rem</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"selector-class\">.drop</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: block;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">130px</span>;</span><br><span class=\"line\">    // margin: 0 0 10px;</span><br><span class=\"line\">    &amp;<span class=\"selector-pseudo\">:hover</span> &#123;</span><br><span class=\"line\">      .dropOption &#123;</span><br><span class=\"line\">        <span class=\"selector-tag\">display</span>: <span class=\"selector-tag\">block</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    &amp;<span class=\"selector-pseudo\">:hover</span> &#123;</span><br><span class=\"line\">      .dropdown &#123;</span><br><span class=\"line\">        <span class=\"selector-tag\">display</span>: <span class=\"selector-tag\">block</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    &amp;<span class=\"selector-pseudo\">:hover</span> &#123;</span><br><span class=\"line\">      .dropdown.close &#123;</span><br><span class=\"line\">        <span class=\"selector-tag\">display</span>: <span class=\"selector-tag\">none</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.dropOption</span> &#123;</span><br><span class=\"line\">      <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">      <span class=\"attribute\">width</span>: auto;</span><br><span class=\"line\">      <span class=\"attribute\">color</span>: <span class=\"number\">#666</span>;</span><br><span class=\"line\">      <span class=\"attribute\">font-size</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">background-color</span>: <span class=\"number\">#fff</span>;</span><br><span class=\"line\">      <span class=\"attribute\">padding</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid <span class=\"number\">#888</span>;</span><br><span class=\"line\">      <span class=\"attribute\">border-radius</span>: <span class=\"number\">5px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">box-sizing</span>: border-box;</span><br><span class=\"line\">      <span class=\"attribute\">cursor</span>: pointer;</span><br><span class=\"line\">      &amp;::after &#123;</span><br><span class=\"line\">        <span class=\"selector-tag\">content</span>: \"\";</span><br><span class=\"line\">        <span class=\"selector-tag\">position</span>: <span class=\"selector-tag\">absolute</span>;</span><br><span class=\"line\">        <span class=\"selector-tag\">top</span>: 20<span class=\"selector-tag\">px</span>;</span><br><span class=\"line\">        <span class=\"selector-tag\">right</span>: 12<span class=\"selector-tag\">px</span>;</span><br><span class=\"line\">        <span class=\"selector-tag\">border-width</span>: 8<span class=\"selector-tag\">px</span> 6<span class=\"selector-tag\">px</span>;</span><br><span class=\"line\">        <span class=\"selector-tag\">border-style</span>: <span class=\"selector-tag\">solid</span>;</span><br><span class=\"line\">        <span class=\"selector-tag\">border-color</span>: <span class=\"selector-id\">#999</span> <span class=\"selector-tag\">transparent</span> <span class=\"selector-tag\">transparent</span> <span class=\"selector-tag\">transparent</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.dropdown</span> &#123;</span><br><span class=\"line\">      <span class=\"attribute\">display</span>: none;</span><br><span class=\"line\">      <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">      <span class=\"attribute\">max-height</span>: <span class=\"number\">350px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">      <span class=\"attribute\">color</span>: <span class=\"number\">#333</span>;</span><br><span class=\"line\">      <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">      <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">      <span class=\"attribute\">background-color</span>: <span class=\"number\">#f9f9f9</span>;</span><br><span class=\"line\">      <span class=\"attribute\">box-shadow</span>: <span class=\"number\">0px</span> <span class=\"number\">2px</span> <span class=\"number\">3px</span> <span class=\"number\">0px</span> <span class=\"number\">#ccc</span>;</span><br><span class=\"line\">      <span class=\"attribute\">border-radius</span>: <span class=\"number\">6px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">box-sizing</span>: border-box;</span><br><span class=\"line\">      <span class=\"attribute\">overflow</span>: auto;</span><br><span class=\"line\">      <span class=\"attribute\">z-index</span>: <span class=\"number\">10</span>;</span><br><span class=\"line\">      &gt; li &#123;</span><br><span class=\"line\">        <span class=\"selector-tag\">display</span>: <span class=\"selector-tag\">block</span>;</span><br><span class=\"line\">        <span class=\"selector-tag\">color</span>: <span class=\"selector-id\">#000</span>;</span><br><span class=\"line\">        <span class=\"selector-tag\">padding</span>: 12<span class=\"selector-tag\">px</span>;</span><br><span class=\"line\">        <span class=\"selector-tag\">font-size</span>: 20<span class=\"selector-tag\">px</span>;</span><br><span class=\"line\">        <span class=\"selector-tag\">margin</span>: 0 10<span class=\"selector-tag\">px</span>;</span><br><span class=\"line\">        <span class=\"selector-tag\">cursor</span>: <span class=\"selector-tag\">pointer</span>;</span><br><span class=\"line\">        &amp;<span class=\"selector-pseudo\">:first-child</span> &#123;</span><br><span class=\"line\">          <span class=\"attribute\">margin</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        &amp;<span class=\"selector-pseudo\">:last-child</span> &#123;</span><br><span class=\"line\">          <span class=\"attribute\">margin-bottom</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        &amp;<span class=\"selector-pseudo\">:hover</span> &#123;</span><br><span class=\"line\">          <span class=\"attribute\">background-color</span>: <span class=\"number\">#eee</span>;</span><br><span class=\"line\">          <span class=\"attribute\">border-radius</span>: <span class=\"number\">6px</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      &amp;<span class=\"selector-pseudo\">::-webkit-scrollbar</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">width</span>: <span class=\"number\">15px</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      &amp;<span class=\"selector-pseudo\">::-webkit-scrollbar-track</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">background-color</span>: <span class=\"number\">#eee</span>;</span><br><span class=\"line\">        <span class=\"attribute\">border-radius</span>: <span class=\"number\">6px</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      &amp;<span class=\"selector-pseudo\">::-webkit-scrollbar-thumb</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">background-color</span>: <span class=\"number\">#888</span>;</span><br><span class=\"line\">        <span class=\"attribute\">border-radius</span>: <span class=\"number\">15px</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      &amp;<span class=\"selector-pseudo\">::-webkit-scrollbar-button</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">background-color</span>: <span class=\"number\">#f9f9f9</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"使用-RxJS-range-來完成功能\"><a href=\"#使用-RxJS-range-來完成功能\" class=\"headerlink\" title=\"使用 RxJS: range 來完成功能\"></a>使用 RxJS: range 來完成功能</h2><p><code>range</code> 顧名思義就是依照一個範圍內的數列資料建立 <code>Observable</code>，包含兩個參數：<br><code>start</code>: 從哪個數值開始<br><code>count</code>: 建立多少個數值的數列</p>\n<p>簡易範例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; range &#125; <span class=\"keyword\">from</span> <span class=\"string\">\"rxjs\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">range(<span class=\"number\">3</span>, <span class=\"number\">4</span>).subscribe(<span class=\"function\">(<span class=\"params\">data</span>) =&gt;</span> <span class=\"built_in\">console</span>.log(<span class=\"string\">`range 範例: <span class=\"subst\">$&#123;data&#125;</span>`</span>));</span><br><span class=\"line\"><span class=\"comment\">// range 範例: 3</span></span><br><span class=\"line\"><span class=\"comment\">// range 範例: 4</span></span><br><span class=\"line\"><span class=\"comment\">// range 範例: 5</span></span><br><span class=\"line\"><span class=\"comment\">// range 範例: 6</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>tip: range 參數只能放 number。</p>\n</blockquote>\n<p>透過以上範例我可以自訂一個數列的範圍，那月份跟年份就有解了，因為都有範圍：</p>\n<ol>\n<li>月份：1~12 月份，並且我在個位數前面加個 0 ，使資料看起來有一致性。</li>\n<li>年份：信用卡有效期限基本上在 3 到 5 年左右，所以也不會無限上綱。</li>\n</ol>\n<p>想法是我今天只要訂出月份 1 到 12 月，並且建立一個陣列把 1 到 12 月份去模板上跑迴圈，並且使用 <code>click</code> 事件把選到的值重新渲染在畫面上即可。然後我就可以這樣做：</p>\n<blockquote>\n<p>程式碼不長也很簡單。</p>\n</blockquote>\n<h3 id=\"取得年份與月份\"><a href=\"#取得年份與月份\" class=\"headerlink\" title=\"取得年份與月份\"></a>取得年份與月份</h3><p>透過 range 建立年份與月份的陣列資料，並透過 click 事件把選到的值渲染在模板上，細節寫在註解中。<br><strong>app.component.ts</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">ngOnInit(): <span class=\"keyword\">void</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.validMonth(); <span class=\"comment\">//務必呼叫方法，才能跑出陣列資料</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//*有效月份</span></span><br><span class=\"line\">creditMonth: string[] = [];</span><br><span class=\"line\">monthValue: string;</span><br><span class=\"line\"></span><br><span class=\"line\">validMonth() &#123;</span><br><span class=\"line\">  range(<span class=\"number\">1</span>, <span class=\"number\">12</span>)</span><br><span class=\"line\">    .pipe(</span><br><span class=\"line\">      map(<span class=\"function\">(<span class=\"params\">x</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (<span class=\"string\">'0'</span> + x.toString()).slice(<span class=\"number\">-2</span>);</span><br><span class=\"line\">        <span class=\"comment\">//因為我只要取最後兩位數，所以要先轉成字串再去處理</span></span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    )</span><br><span class=\"line\">    .subscribe(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.creditMonth.push(res); <span class=\"comment\">//將每一月份依序放到陣列中</span></span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">checkMonth(month: string) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.monthValue = month; <span class=\"comment\">//選到的月份顯示於下拉選單主選擇框內</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>app.component.html</strong><br>修改模板語法，加上 <code>ngFor</code> 指令以及 <code>click</code> 方法。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span>信用卡有效期限：<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"creditCard\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"drop\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"dropOption\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>&#123;&#123; monthValue ? monthValue : \"有效月份\" &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"dropdown\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">ng-container</span> *<span class=\"attr\">ngFor</span>=<span class=\"string\">\"let item of creditMonth\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span> (<span class=\"attr\">click</span>)=<span class=\"string\">\"checkMonth(item)\"</span>&gt;</span>&#123;&#123; item &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">ng-container</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>/<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"drop\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"dropOption\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>&#123;&#123; yearValue ? yearValue : \"有效年份\" &#125;&#125; <span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"dropdown\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">ng-container</span> *<span class=\"attr\">ngFor</span>=<span class=\"string\">\"let item of creditYear\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span> (<span class=\"attr\">click</span>)=<span class=\"string\">\"checkYear(item)\"</span>&gt;</span>&#123;&#123; item &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">ng-container</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"小結\"><a href=\"#小結\" class=\"headerlink\" title=\"小結\"></a>小結</h2><p>善用 RxJS 的 <code>range</code> 事件可以建立有範圍的資料，這次的應用就覺得很有意思，不僅好管理也提升效率，非常推薦喔！</p>\n<h2 id=\"DEMO\"><a href=\"#DEMO\" class=\"headerlink\" title=\"DEMO\"></a>DEMO</h2><p>連結：<a href=\"https://stackblitz.com/edit/angular-ivy-ppxopm?embed=1&amp;file=src/app/app.component.ts\" target=\"_blank\" rel=\"noopener\">https://stackblitz.com/edit/angular-ivy-ppxopm?embed=1&amp;file=src/app/app.component.ts</a></p>\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><ul>\n<li><a href=\"https://ithelp.ithome.com.tw/articles/10246196\" target=\"_blank\" rel=\"noopener\">RxJS 建立類型 Operators (1) - EMPTY / of / range / iif / throwError / ajax</a></li>\n</ul>\n","categories":["Angular"],"tags":["Angular","JavaScript"]},{"title":"CSS 筆記 - 使用 ul li 製作互動式下拉選單","url":"/css/20220123/2596783176/","content":"<p><img src=\"https://i.imgur.com/fCzyaxr.png\" alt=\"dropdown\"></p>\n<p>在專案中看到一個使用 <code>ul</code> <code>li</code> 設計的 dropdown，覺得不錯，做個紀錄以後或許用得上。</p>\n<h2 id=\"建立-ul-li\"><a href=\"#建立-ul-li\" class=\"headerlink\" title=\"建立 ul li\"></a>建立 ul li</h2><p>先把架構寫好如下，並在要使用樣式的地方加上 class：</p>\n<p><strong>HTML</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span>使用 ul li 製作下拉選單<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"drop\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"dropOption\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>請選擇<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"dropdown\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>選項 1<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>選項 2<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>選項 3<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>選項 4<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>選項 5<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>選項 6<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>選項 7<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>選項 8<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"選項主框與三角形圖示\"><a href=\"#選項主框與三角形圖示\" class=\"headerlink\" title=\"選項主框與三角形圖示\"></a>選項主框與三角形圖示</h2><p>先建立好基本的樣式，</p>\n<h3 id=\"drop\"><a href=\"#drop\" class=\"headerlink\" title=\"drop\"></a>drop</h3><p>首先先把 <code>.drop</code> 外框跟選項的 <code>.dropOption</code> 建立好，</p>\n<p><strong>SCSS</strong></p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.drop</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: block;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">10px</span>;</span><br><span class=\"line\">  .dropOption &#123;</span><br><span class=\"line\">   <span class=\"selector-tag\">position</span>: <span class=\"selector-tag\">relative</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">width</span>: <span class=\"selector-tag\">auto</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">color</span>: <span class=\"selector-id\">#666</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">font-size</span>: 20<span class=\"selector-tag\">px</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">background-color</span>: <span class=\"selector-id\">#fff</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">padding</span>: 10<span class=\"selector-tag\">px</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">border</span>: 1<span class=\"selector-tag\">px</span> <span class=\"selector-tag\">solid</span> <span class=\"selector-id\">#888</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">border-radius</span>: 5<span class=\"selector-tag\">px</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">box-sizing</span>: <span class=\"selector-tag\">border-box</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">cursor</span>: <span class=\"selector-tag\">pointer</span>;</span><br><span class=\"line\">    &amp;<span class=\"selector-pseudo\">::after</span> &#123;</span><br><span class=\"line\">      <span class=\"attribute\">content</span>: <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">      <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">      <span class=\"attribute\">top</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">right</span>: <span class=\"number\">12px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">border-width</span>: <span class=\"number\">8px</span> <span class=\"number\">6px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">border-style</span>: solid;</span><br><span class=\"line\">      <span class=\"attribute\">border-color</span>: <span class=\"number\">#999</span> transparent transparent transparent;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>drop</strong></p>\n<ol>\n<li>使用相對定位要給 <code>.dropOpiton</code> 使用絕對定位用。</li>\n<li>使其寬度滿版，當然要看專案需求可再做調整。</li>\n</ol>\n<p><strong>dropOption</strong></p>\n<ol>\n<li>此元素與 <code>.drop</code> 在相同位置，一樣先使用相對定位，要給此元素做一個下拉三角形的圖示。</li>\n<li>在設定好相對的樣式後，要來做下拉的三角形圖示。</li>\n<li>使用偽元素來製作圖示，並用絕對定位在下拉選項的右側。</li>\n<li>設定線條上下與左右寬度，線條樣式為實心、線條顏色只設定上方有色彩，右下左方為透明。</li>\n</ol>\n<p>完成後會變如下圖。</p>\n<p><img src=\"https://i.imgur.com/xh6pXdq.png\" alt=\"dropOption\"></p>\n<h2 id=\"下拉選項\"><a href=\"#下拉選項\" class=\"headerlink\" title=\"下拉選項\"></a>下拉選項</h2><p>為此篇的重頭戲！</p>\n<p>要製作下拉選項內容以及右側自定義卷軸，先來看下拉選項，也就是這一區塊的 <code>ul</code> <code>li</code>，</p>\n<p><strong>HTML</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"dropdown\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>選項 1<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>選項 2<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>選項 3<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>選項 4<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>選項 5<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>選項 6<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>選項 7<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>選項 8<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>SCSS</strong></p>\n<p>ul 的樣式：細節寫在註解。</p>\n<figure class=\"highlight\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.dropdown</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: none;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">    max-height: 350px; //最大高度</span><br><span class=\"line\">    <span class=\"selector-tag\">position</span>: <span class=\"selector-tag\">absolute</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">color</span>: <span class=\"selector-id\">#333</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">padding</span>: 0;</span><br><span class=\"line\">    <span class=\"selector-tag\">margin</span>: 0;</span><br><span class=\"line\">    <span class=\"selector-tag\">background-color</span>: <span class=\"selector-id\">#f9f9f9</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">box-shadow</span>: 0<span class=\"selector-tag\">px</span> 2<span class=\"selector-tag\">px</span> 3<span class=\"selector-tag\">px</span> 0<span class=\"selector-tag\">px</span> <span class=\"selector-id\">#ccc</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">border-radius</span>: 6<span class=\"selector-tag\">px</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">box-sizing</span>: <span class=\"selector-tag\">border-box</span>;</span><br><span class=\"line\">    overflow: auto; // x y 軸自適應</span><br><span class=\"line\">    z-index: 10; // 確保可以在其他元素上方</span><br></pre></td></tr></table></figure>\n\n<p>li 下拉選項樣式：細節寫在註解。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\">&gt; <span class=\"selector-tag\">li</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: block;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"number\">#000</span>;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">12px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> <span class=\"number\">10px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">cursor</span>: pointer;</span><br><span class=\"line\">  &amp;:first-child &#123;</span><br><span class=\"line\">    //第一個 li 往上推的間格</span><br><span class=\"line\">    <span class=\"selector-tag\">margin</span>: 10<span class=\"selector-tag\">px</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  &amp;<span class=\"selector-pseudo\">:last-child</span> &#123;</span><br><span class=\"line\">    //最後一個 li 往下推的間格</span><br><span class=\"line\">    <span class=\"selector-tag\">margin-bottom</span>: 10<span class=\"selector-tag\">px</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  &amp;<span class=\"selector-pseudo\">:hover</span> &#123;</span><br><span class=\"line\">    background-color: orange; // hover 選項底色</span><br><span class=\"line\">    <span class=\"selector-tag\">border-radius</span>: 6<span class=\"selector-tag\">px</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>捲軸樣式設定：細節寫在註解。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.dropdown</span> &#123;</span><br><span class=\"line\">  &gt; li &#123;</span><br><span class=\"line\">    ...略...;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  &amp;<span class=\"selector-pseudo\">::-webkit-scrollbar</span> &#123;</span><br><span class=\"line\">    width: 15px; // 捲軸寬度</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  &amp;<span class=\"selector-pseudo\">::-webkit-scrollbar-track</span> &#123;</span><br><span class=\"line\">    background-color: #eee; //捲軸軌道顏色</span><br><span class=\"line\">    <span class=\"selector-tag\">border-radius</span>: 6<span class=\"selector-tag\">px</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  &amp;<span class=\"selector-pseudo\">::-webkit-scrollbar-thumb</span> &#123;</span><br><span class=\"line\">    background-color: orange; // 捲軸滑塊顏色</span><br><span class=\"line\">    <span class=\"selector-tag\">border-radius</span>: 15<span class=\"selector-tag\">px</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  &amp;<span class=\"selector-pseudo\">::-webkit-scrollbar-button</span> &#123;</span><br><span class=\"line\">    background-color: #f9f9f9; // 捲軸上下的按鈕</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>以上就完成使用 ul li 自定義的按鈕囉！</p>\n<h2 id=\"結語\"><a href=\"#結語\" class=\"headerlink\" title=\"結語\"></a>結語</h2><p>善用 CSS 選取器除了減少 HTML 上的 class 名稱外，還可以讓 HTML 變得很乾淨，並且使用 scrollbar 特性，可以客製出好看的捲軸喔！</p>\n<p>DEMO:</p>\n<iframe height=\"600\" style=\"width: 100%;\" scrolling=\"no\" title=\"line\" src=\"https://codepen.io/hnzxewqw/embed/VwzOzNz?default-tab=html%2Cresult\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n</iframe>\n\n<blockquote>\n<p>tip: <code>::-webkit-scrollbar</code> 目前僅支援 webkit 瀏覽器，例如：Chrome 與 Safari，故如果要使用此屬性，請註明推薦的瀏覽器喔！</p>\n</blockquote>\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><ul>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/::-webkit-scrollbar\" target=\"_blank\" rel=\"noopener\">::-webkit-scrollbar</a></li>\n</ul>\n","categories":["CSS"],"tags":["CSS"]},{"title":"Angular 筆記 - 使用 Pipe 轉千分位共用管道","url":"/angular/20220119/1380020379/","content":"<p><img src=\"https://i.imgur.com/87pBpoJ.jpg\" alt=\"angular\"></p>\n<p>在工作上有一個需要轉千分位的需求，做個紀錄，專案使用 Angular 開發。</p>\n<h2 id=\"需求\"><a href=\"#需求\" class=\"headerlink\" title=\"需求\"></a>需求</h2><p>規格書文件中提到以下需求：</p>\n<ol>\n<li>有一筆資料有字串有數字，如下：</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">data = [</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    name: <span class=\"string\">\"iphone\"</span>,</span><br><span class=\"line\">    price: <span class=\"number\">35000</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    name: <span class=\"string\">\"phone case\"</span>,</span><br><span class=\"line\">    price: <span class=\"number\">880</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    name: <span class=\"string\">\"battery\"</span>,</span><br><span class=\"line\">    price: <span class=\"number\">990</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    name: <span class=\"string\">\"Macbook pro\"</span>,</span><br><span class=\"line\">    price: <span class=\"number\">41500</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">];</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>當超過 1000 的價格要使用千分位顯示，若不到 1000 就顯示原本的數字。</li>\n</ol>\n<h2 id=\"解決方式\"><a href=\"#解決方式\" class=\"headerlink\" title=\"解決方式\"></a>解決方式</h2><p>因後端有多筆資料，故可以使用 Pipe 做一個共用管道，當數值丟進來時，可以去做轉換顯示。</p>\n<h3 id=\"先把資料渲染出來確認無誤\"><a href=\"#先把資料渲染出來確認無誤\" class=\"headerlink\" title=\"先把資料渲染出來確認無誤\"></a>先把資料渲染出來確認無誤</h3><p>這邊使用 table 當作資料呈現方式，樣式則使用 TailwindCSS 來製作。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"p-3\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">class</span>=<span class=\"string\">\"py-2 text-purple-500 tracking-wide\"</span>&gt;</span></span><br><span class=\"line\">    使用 Pipe 成為共用管道轉成「千分位數」</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>當超過 1000 就加上逗號區隔，若沒有就顯示原本的數值<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">class</span>=<span class=\"string\">\" border-2 border-purple-700 w-full\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">thead</span> <span class=\"attr\">class</span>=<span class=\"string\">\" bg-purple-700 text-white\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">th</span> <span class=\"attr\">class</span>=<span class=\"string\">\"py-2 px-4 text-center\"</span>&gt;</span>品項<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">th</span> <span class=\"attr\">class</span>=<span class=\"string\">\"py-2 px-4 text-center\"</span>&gt;</span>價格<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">th</span> <span class=\"attr\">class</span>=<span class=\"string\">\"py-2 px-4 text-center\"</span>&gt;</span>品項<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">th</span> <span class=\"attr\">class</span>=<span class=\"string\">\"py-2 px-4 text-center\"</span>&gt;</span>價格<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">th</span> <span class=\"attr\">class</span>=<span class=\"string\">\"py-2 px-4 text-center\"</span>&gt;</span>品項<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">th</span> <span class=\"attr\">class</span>=<span class=\"string\">\"py-2 px-4 text-center\"</span>&gt;</span>價格<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">th</span> <span class=\"attr\">class</span>=<span class=\"string\">\"py-2 px-4 text-center\"</span>&gt;</span>品項<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">th</span> <span class=\"attr\">class</span>=<span class=\"string\">\"py-2 px-4 text-center\"</span>&gt;</span>價格<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">thead</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">ng-container</span> *<span class=\"attr\">ngFor</span>=<span class=\"string\">\"let item of data\"</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span> <span class=\"attr\">class</span>=<span class=\"string\">\"py-2 px-4 text-center border-purple-700 border-2 \"</span>&gt;</span></span><br><span class=\"line\">            &#123;&#123;item.name&#125;&#125;</span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span> <span class=\"attr\">class</span>=<span class=\"string\">\"px-4 py-2 text-center border-purple-700 border-2\"</span>&gt;</span></span><br><span class=\"line\">            &#123;&#123;item.price&#125;&#125;</span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">ng-container</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>利用 ng-container 標籤中使用 ngFor 把資料渲染在 td 上，這樣比較不會破壞網頁架構。</p>\n<h3 id=\"建立-pipe-管道\"><a href=\"#建立-pipe-管道\" class=\"headerlink\" title=\"建立 pipe 管道\"></a>建立 pipe 管道</h3><p>新增一個 pipe 檔案，這邊我使用 <code>toThousand.pipe.ts</code>，並在裡面寫上要處理的功能。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; Pipe, PipeTransform &#125; <span class=\"keyword\">from</span> <span class=\"string\">\"@angular/core\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">@Pipe(&#123;</span><br><span class=\"line\">  name: <span class=\"string\">\"toThousandPipe\"</span>,</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">toThousandPipe</span> <span class=\"title\">implements</span> <span class=\"title\">PipeTransform</span> </span>&#123;</span><br><span class=\"line\">  transform(value: number) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.toThousandNumber(value);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  toThousandNumber(param: number) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> paramStr = param.toString();</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (paramStr.length &gt; <span class=\"number\">3</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> paramStr.replace(<span class=\"regexp\">/\\B(?&lt;!\\.\\d*)(?=(\\d&#123;3&#125;)+(?!\\d))/g</span>, <span class=\"string\">\",\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> paramStr;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>說明：</p>\n<ol>\n<li>先輸入 @Pipe，便會自動引入元件，並在此方法裡面建立一個物件為 <code>{name:&#39;customPipeName}&#39;</code>，那這邊我自定義為 <code>toThousandPipe</code>。</li>\n<li>要把這個 pipe 匯出(export)使用，並且用 <code>PipeTransform</code> 實作介面。</li>\n<li>要先建立一個 <code>transform(value)</code>的方法，裡面的參數在建立時會自己帶出，裡面要把等等要實作的方法 return 出來給 <code>transform</code> 這個函式使用，才會把值輸出。</li>\n<li>建立我要轉千分位的函式。</li>\n<li>因為資料傳進來的是 number，所以我要先做一次轉型，為的是要判斷字串長度。</li>\n<li>並用 replace 的陣列方法，替換成正則表達式，並於每三個中間加入逗號做區隔，變成千分位數的顯示方式，只要超過 3 個字串，也就是 1000 的時候，就會自行在千位數後面加上逗號。</li>\n<li>若小於 3 個字串，則顯示原本的字串。</li>\n</ol>\n<p>滿簡單確實用的小功能。</p>\n<h3 id=\"放入要使用的-module-ts-中並且在模板中引入\"><a href=\"#放入要使用的-module-ts-中並且在模板中引入\" class=\"headerlink\" title=\"放入要使用的 module.ts 中並且在模板中引入\"></a>放入要使用的 module.ts 中並且在模板中引入</h3><p>每次寫完 pipe 都很開心想直接用，但卻忘了引入在會使用到的 module 內，範例式引入在 app.module.ts，實際上要看專案引入。</p>\n<p>最後記得要在模板上使用喔！</p>\n<p><strong>pipe.component.html</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"p-3\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">class</span>=<span class=\"string\">\"py-2 text-purple-500 tracking-wide\"</span>&gt;</span></span><br><span class=\"line\">    使用 Pipe 成為共用管道轉成「千分位數」</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>當超過 1000 就加上逗號區隔，若沒有就顯示原本的數值<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">class</span>=<span class=\"string\">\" border-2 border-purple-700 w-full\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">thead</span> <span class=\"attr\">class</span>=<span class=\"string\">\" bg-purple-700 text-white\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">th</span> <span class=\"attr\">class</span>=<span class=\"string\">\"py-2 px-4 text-center\"</span>&gt;</span>品項<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">th</span> <span class=\"attr\">class</span>=<span class=\"string\">\"py-2 px-4 text-center\"</span>&gt;</span>價格<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">th</span> <span class=\"attr\">class</span>=<span class=\"string\">\"py-2 px-4 text-center\"</span>&gt;</span>品項<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">th</span> <span class=\"attr\">class</span>=<span class=\"string\">\"py-2 px-4 text-center\"</span>&gt;</span>價格<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">th</span> <span class=\"attr\">class</span>=<span class=\"string\">\"py-2 px-4 text-center\"</span>&gt;</span>品項<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">th</span> <span class=\"attr\">class</span>=<span class=\"string\">\"py-2 px-4 text-center\"</span>&gt;</span>價格<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">th</span> <span class=\"attr\">class</span>=<span class=\"string\">\"py-2 px-4 text-center\"</span>&gt;</span>品項<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">th</span> <span class=\"attr\">class</span>=<span class=\"string\">\"py-2 px-4 text-center\"</span>&gt;</span>價格<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">thead</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">ng-container</span> *<span class=\"attr\">ngFor</span>=<span class=\"string\">\"let item of data\"</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span> <span class=\"attr\">class</span>=<span class=\"string\">\"py-2 px-4 text-center border-purple-700 border-2 \"</span>&gt;</span></span><br><span class=\"line\">            &#123;&#123;item.name&#125;&#125;</span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span> <span class=\"attr\">class</span>=<span class=\"string\">\"px-4 py-2 text-center border-purple-700 border-2\"</span>&gt;</span></span><br><span class=\"line\">            &#123;&#123;item.price | toThousandPipe&#125;&#125;</span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">          //這裡使用</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">ng-container</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Demo\"><a href=\"#Demo\" class=\"headerlink\" title=\"Demo\"></a>Demo</h2><p>連結：<a href=\"https://github.com/hsuchihting/angular_demo/blob/main/src/app/page/pipe/pipe.component.html\" target=\"_blank\" rel=\"noopener\">https://github.com/hsuchihting/angular_demo/blob/main/src/app/page/pipe/pipe.component.html</a></p>\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><ul>\n<li><a href=\"http://slashview.com/archive2020/20200712.html\" target=\"_blank\" rel=\"noopener\">Javascript 之數值千分位符號（Comma）的顯示</a></li>\n</ul>\n","categories":["Angular"],"tags":["Angular","JavaScript"]},{"title":"Angular 筆記 - 不同元件傳遞資料實作","url":"/angular/20220111/3638792186/","content":"<p><img src=\"https://i.imgur.com/87pBpoJ.jpg\" alt=\"angular\"></p>\n<p>這次專案有一個需求是完全不相干的元件，但要呈現相同的資料內容，使用 Angular8 開發，以此記錄流程。</p>\n<h2 id=\"資料\"><a href=\"#資料\" class=\"headerlink\" title=\"資料\"></a>資料</h2><p>這次我用 db.json 作為假資料呈現，順便練習串接 API。相關操作可看<a href=\"https://hsuchihting.github.io/javascript/20201030/52463831/\">這篇</a>。</p>\n<p>資料長這樣：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  \"data\": [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      \"name\": \"Tim\",</span><br><span class=\"line\">      \"age\": \"<span class=\"number\">18</span>\",</span><br><span class=\"line\">      \"gender\": \"male\",</span><br><span class=\"line\">      \"<span class=\"built_in\">title</span>\": \"Dad\"</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      \"name\": \"Min\",</span><br><span class=\"line\">      \"age\": \"<span class=\"number\">18</span>\",</span><br><span class=\"line\">      \"gender\": \"Female\",</span><br><span class=\"line\">      \"<span class=\"built_in\">title</span>\": \"Mom\"</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      \"name\": \"Joshua\",</span><br><span class=\"line\">      \"age\": \"<span class=\"number\">2</span>\",</span><br><span class=\"line\">      \"gender\": \"male\",</span><br><span class=\"line\">      \"<span class=\"built_in\">title</span>\": \"Son\"</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      \"name\": \"Carol\",</span><br><span class=\"line\">      \"age\": \"<span class=\"number\">0</span>\",</span><br><span class=\"line\">      \"gender\": \"Female\",</span><br><span class=\"line\">      \"<span class=\"built_in\">title</span>\": \"Daughter\"</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"建立兩個元件\"><a href=\"#建立兩個元件\" class=\"headerlink\" title=\"建立兩個元件\"></a>建立兩個元件</h2><p>建立兩個不同的元件，沒有父子層關係。</p>\n<p><img src=\"https://i.imgur.com/TVGPOaA.png\" alt=\"components\"></p>\n<h3 id=\"實際需求\"><a href=\"#實際需求\" class=\"headerlink\" title=\"實際需求\"></a>實際需求</h3><p>在點擊按鈕時呼叫 API 取得資料後傳到 <code>second.component</code>。</p>\n<h2 id=\"建立-service\"><a href=\"#建立-service\" class=\"headerlink\" title=\"建立 service\"></a>建立 service</h2><p>在呼叫 API 前要先搭傳資料的橋樑，在 Angular 中可以使用 service 來搭建此方法。並分別在兩個元件中引入 service 取得 dataService 服務元件。</p>\n<p><img src=\"https://i.imgur.com/A058hoA.png\" alt=\"service\"></p>\n<h3 id=\"使用-get-跟-set\"><a href=\"#使用-get-跟-set\" class=\"headerlink\" title=\"使用 get 跟 set\"></a>使用 get 跟 set</h3><p>透過 <code>getter</code> 跟 <code>setter</code> 的特性，將值取得後 set 到 <code>_dataPass</code> 陣列中，要取得就使用 get。<br><strong>dataService.servcie.ts</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">_dataPass = [];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">get</span> getData() &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>._dataPass;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">set</span> setData(val: any) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>._dataPass = val;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"把資料給-dataService\"><a href=\"#把資料給-dataService\" class=\"headerlink\" title=\"把資料給 dataService\"></a>把資料給 dataService</h2><p>設定完成後就可以來先在 <code>first.component.ts</code> 寫下取得資料個過程。</p>\n<ol>\n<li>按下按鈕觸發事件，呼叫 API，並把資料賦值在 <code>this.family</code> 陣列。</li>\n<li>使用 <code>setter</code> 的取得 <code>this.family</code> 的資料。</li>\n<li>跳轉路由到 second 頁面。</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">click() &#123;</span><br><span class=\"line\">   <span class=\"keyword\">this</span>._apiService.data().subscribe(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">     <span class=\"keyword\">this</span>.family = res;</span><br><span class=\"line\">     <span class=\"keyword\">this</span>._dataSvc.setData = <span class=\"keyword\">this</span>.family;</span><br><span class=\"line\">     <span class=\"keyword\">this</span>._router.navigate([<span class=\"string\">'/second'</span>]);</span><br><span class=\"line\">   &#125;);</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"從-dataService-取得資料\"><a href=\"#從-dataService-取得資料\" class=\"headerlink\" title=\"從 dataService 取得資料\"></a>從 dataService 取得資料</h2><ol>\n<li>引入 dataService 後，取得 first 元件傳過來的資料，並賦值在 this.getFirstData 陣列中。</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">getData() &#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.getFirstData = <span class=\"keyword\">this</span>._datSvc.getData;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"小結\"><a href=\"#小結\" class=\"headerlink\" title=\"小結\"></a>小結</h2><p>善用 service 的注入配合 <code>getter</code> 與 <code>setter</code>，可以完成更多資料傳遞的實作，以上就完成兩個不相干元件的資料傳遞。</p>\n<p><a href=\"https://github.com/hsuchihting/dataService\" target=\"_blank\" rel=\"noopener\">原始程式碼</a>。</p>\n","categories":["Angular"],"tags":["Angular","JavaScript"]},{"title":"JS 筆記－不同陣列長度處理，並顯示於畫面","url":"/javascript/20220111/1558317778/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/JavaScript%20note-01.jpg?alt=media&token=7bee0261-72ac-4de4-9f5a-f39d58735b7d\" alt=\"JavaScript Note\"></p>\n<p>專案中遇到一個陣列方法綜合運用的情境，紀錄一下。<br>資料有兩個陣列，一個是 info、一個是 node，可以看到兩個是不同的長度。</p>\n<h2 id=\"情境\"><a href=\"#情境\" class=\"headerlink\" title=\"情境\"></a>情境</h2><p>使用 Angular8 開發，因要用 D3.js 繪製流程圖，需求主要為 node 作為繪製流程的節點，並且使用 info 呈現目前節點狀態，若 info 沒有資料代表流程上為跑到，但節點要先顯示，有點像購物網站進度條的概念。</p>\n<p>因有許多頁面需要使用到此資料處理邏輯，所以拉出來做共用元件，讓資料丟進來後可以傳給 D3.js 正確顯示。</p>\n<h2 id=\"資料\"><a href=\"#資料\" class=\"headerlink\" title=\"資料\"></a>資料</h2><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">info = [</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    now_node: <span class=\"string\">\"T01\"</span>,</span><br><span class=\"line\">    node_action: <span class=\"string\">\"OK\"</span>,</span><br><span class=\"line\">    action_date: <span class=\"string\">\"2021-12-10\"</span>,</span><br><span class=\"line\">    memo: <span class=\"string\">\"test\"</span>,</span><br><span class=\"line\">    userName: <span class=\"string\">\"Tom\"</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    now_node: <span class=\"string\">\"T02\"</span>,</span><br><span class=\"line\">    node_action: <span class=\"string\">\"OK\"</span>,</span><br><span class=\"line\">    action_date: <span class=\"string\">\"2021-12-10\"</span>,</span><br><span class=\"line\">    memo: <span class=\"string\">\"test\"</span>,</span><br><span class=\"line\">    userName: <span class=\"string\">\"Mary\"</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">];</span><br><span class=\"line\"></span><br><span class=\"line\">node = [</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    node: <span class=\"string\">\"T01\"</span>,</span><br><span class=\"line\">    children: [<span class=\"string\">\"T02\"</span>],</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    node: <span class=\"string\">\"T02\"</span>,</span><br><span class=\"line\">    children: [<span class=\"string\">\"T03\"</span>],</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    node: <span class=\"string\">\"T03\"</span>,</span><br><span class=\"line\">    children: [<span class=\"string\">\"T04\"</span>],</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    node: <span class=\"string\">\"T04\"</span>,</span><br><span class=\"line\">    children: [<span class=\"string\">\"T05\"</span>],</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    node: <span class=\"string\">\"T05\"</span>,</span><br><span class=\"line\">    children: [<span class=\"string\">\"T06\"</span>],</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    node: <span class=\"string\">\"T06\"</span>,</span><br><span class=\"line\">    children: [<span class=\"string\">\"T07\"</span>],</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    node: <span class=\"string\">\"T07\"</span>,</span><br><span class=\"line\">    children: [<span class=\"string\">\"T08\"</span>],</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    node: <span class=\"string\">\"T08\"</span>,</span><br><span class=\"line\">    children: [<span class=\"string\">\"T09\"</span>],</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    node: <span class=\"string\">\"T09\"</span>,</span><br><span class=\"line\">    children: [<span class=\"string\">\"T10\"</span>],</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    node: <span class=\"string\">\"T10\"</span>,</span><br><span class=\"line\">    children: [<span class=\"string\">\"\"</span>],</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">];</span><br></pre></td></tr></table></figure>\n\n<ol>\n<li>命名兩個變數，分別取得資料內容(當作已經打 API 回來的狀態)</li>\n<li>newArr 是等等重組完要用的空陣列。</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> node = <span class=\"keyword\">this</span>.node;</span><br><span class=\"line\"><span class=\"keyword\">let</span> info = <span class=\"keyword\">this</span>.info;</span><br><span class=\"line\"><span class=\"keyword\">let</span> newArr: any[] = [];</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"使用-find-找到屬性欄位\"><a href=\"#使用-find-找到屬性欄位\" class=\"headerlink\" title=\"使用 find 找到屬性欄位\"></a>使用 find 找到屬性欄位</h2><ol>\n<li><p>有提到 node 為主要節點，所以先用這個資料用 <code>forEach</code> 遍歷每一筆資料。</p>\n</li>\n<li><p>先找子節點，建立一個子節點的陣列，要來放等等子節點的資料。</p>\n<blockquote>\n<p>原因是陣列資料主節點為主要狀態節點，Children 屬性為下一個節點要去的值，這樣流程才會正確呈現。</p>\n</blockquote>\n</li>\n<li><p>子節點 item.children 跑 forEach 去找出所有的子節點屬性的值。</p>\n</li>\n<li><p>宣告一個 currentChild 子節點結果去儲存 <code>find</code> 的結果，使用 <code>find</code> 去找到 info 的節點 now_node 欄位是否有跟子節點 childrenNameNode 的值一樣，有的話就回傳 true。</p>\n</li>\n</ol>\n<blockquote>\n<p><code>find</code> 方法會找到第一筆相符的條件後，回傳 true，透過 <code>console.log()</code> 去看會發現是一個物件型態。</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">node.forEach(<span class=\"function\">(<span class=\"params\">item</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> childrenList: &#123; <span class=\"attr\">node</span>: string, <span class=\"attr\">status</span>: string &#125;[] = [];</span><br><span class=\"line\"></span><br><span class=\"line\">  item.children.forEach(<span class=\"function\">(<span class=\"params\">childrenNodeName</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//*子節點</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> currentChild = info.find(<span class=\"function\">(<span class=\"params\">list</span>) =&gt;</span> list.now_node === childrenNodeName);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<ol start=\"5\">\n<li>宣告一個 childStatus 子節點狀態的變數，並且判斷 currentChild 是 <code>truthy</code> 或是 <code>falsy</code>。若為 <code>truthy</code>，就使用 <code>push</code> 把資料放到 childrenList 的陣列中。</li>\n<li>最後需求有規定一個物件格式，所以重新宣告一個 childNode 變數去儲存新的物件格式。</li>\n</ol>\n<blockquote>\n<p><code>!!</code> 兩個驚嘆號是快速讓變數變成布林值的寫法，等價於 <code>new Boolean()。</code></p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> childStatus = !!currentChild ? currentChild.node_action : <span class=\"literal\">undefined</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> childNode = &#123;</span><br><span class=\"line\">  node: childrenNodeName,</span><br><span class=\"line\">  status: childStatus ? childStatus : <span class=\"string\">\"\"</span>,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">childrenList.push(childNode);</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>以上使用了 <code>forEach</code>、<code>find</code>、<code>push</code> 三種方法以及 <code>boolean</code> 值轉換的方式。</p>\n</blockquote>\n<ol start=\"7\">\n<li>主節點的資料整理方式與子節點相同。</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> currentMain = info.find(<span class=\"function\">(<span class=\"params\">main</span>) =&gt;</span> main.now_node === item.node);</span><br><span class=\"line\"><span class=\"keyword\">let</span> mainStatus = !!currentMain ? currentMain.node_action : <span class=\"literal\">undefined</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (childrenList.length) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> mainNode = &#123;</span><br><span class=\"line\">    node: item.node,</span><br><span class=\"line\">    status: mainStatus ? mainStatus : <span class=\"string\">\"\"</span>,</span><br><span class=\"line\">    children: childrenList,</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  newArr.push(mainNode);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>最後宣告一個要傳資料到 D3.js 的全域變數 nodeArr，其屬性為空陣列。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">nodeArr: any[] = [];</span><br></pre></td></tr></table></figure>\n\n<p>並把剛剛組好的 newArr 賦值給 nodeArr，下面為節點取值的完整程式碼。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> node = <span class=\"keyword\">this</span>.node;</span><br><span class=\"line\"><span class=\"keyword\">let</span> info = <span class=\"keyword\">this</span>.info;</span><br><span class=\"line\"><span class=\"keyword\">let</span> newArr: any[] = [];</span><br><span class=\"line\">node.forEach(<span class=\"function\">(<span class=\"params\">item</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> childrenList: &#123; <span class=\"attr\">node</span>: string, <span class=\"attr\">status</span>: string &#125;[] = [];</span><br><span class=\"line\"></span><br><span class=\"line\">  item.children.forEach(<span class=\"function\">(<span class=\"params\">childrenNodeName</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//*子節點</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> currentChild = info.find(<span class=\"function\">(<span class=\"params\">list</span>) =&gt;</span> list.now_node === childrenNodeName);</span><br><span class=\"line\">    <span class=\"keyword\">let</span> childStatus = !!currentChild ? currentChild.node_action : <span class=\"literal\">undefined</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">let</span> childNode = &#123;</span><br><span class=\"line\">      node: childrenNodeName,</span><br><span class=\"line\">      status: childStatus ? childStatus : <span class=\"string\">\"\"</span>,</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    childrenList.push(childNode);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//*主節點</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> currentMain = info.find(<span class=\"function\">(<span class=\"params\">main</span>) =&gt;</span> main.now_node === item.node);</span><br><span class=\"line\">  <span class=\"keyword\">let</span> mainStatus = !!currentMain ? currentMain.node_action : <span class=\"literal\">undefined</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (childrenList.length) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> mainNode = &#123;</span><br><span class=\"line\">      node: item.node,</span><br><span class=\"line\">      status: mainStatus ? mainStatus : <span class=\"string\">\"\"</span>,</span><br><span class=\"line\">      children: childrenList,</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    newArr.push(mainNode);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"keyword\">this</span>.nodeArr = newArr;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"組出已審核節點資訊\"><a href=\"#組出已審核節點資訊\" class=\"headerlink\" title=\"組出已審核節點資訊\"></a>組出已審核節點資訊</h2><p>節點資訊有分成兩種，一種是流程已經跑到會出現資訊，另一個是流程還沒到，雖然有節點，但不會有節點資訊，有點像是購物車狀態，還沒進行到的部分會顯示該筆狀態，但不會有進度資訊。</p>\n<ol>\n<li>宣告一個空陣列變數 infoList，並且用原本資料的 info 去跑 <code>forEach</code>，把每一筆資料的內容抓出來。</li>\n<li>因需求也是要重組一個資訊內容，這邊在宣告一個空陣列 mainInfo，要放入得值可以看到是名稱與日期，所以我需要從 info 資料中取出這兩個資料，使用 <code>push</code> 方法放到 info 陣列中</li>\n<li>宣告一個 nodeName 放節點名稱。</li>\n<li>最後把 nodeInfo 的內容換成新組成的值。</li>\n<li>使用 <code>push</code> 把 nodeInfo 物件依序放入 infoList 的陣列中。</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//* 主節點資訊</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> infoList: any[] = [];</span><br><span class=\"line\">info.forEach(<span class=\"function\">(<span class=\"params\">item</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> mainInfo = [];</span><br><span class=\"line\">  info.push(item.userName);</span><br><span class=\"line\">  info.push(item.action_date);</span><br><span class=\"line\">  <span class=\"keyword\">let</span> nodeName = item.now_node;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">this</span>.nodeInfo = &#123;</span><br><span class=\"line\">    node: item.now_node,</span><br><span class=\"line\">    node_name: nodeName ? nodeName : <span class=\"string\">\"\"</span>,</span><br><span class=\"line\">    info: info,</span><br><span class=\"line\">    memo: item.memo ? item.memo : <span class=\"string\">\"\"</span>,</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  infoList.push(<span class=\"keyword\">this</span>.nodeInfo);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"組出未審核的節點資訊\"><a href=\"#組出未審核的節點資訊\" class=\"headerlink\" title=\"組出未審核的節點資訊\"></a>組出未審核的節點資訊</h2><ol>\n<li><p>宣告一個空陣列 nodeApplication 存放未審核的節點資訊。</p>\n</li>\n<li><p>因為我已經知道有部分節點是有資訊的，所以我用 <code>filter</code> 去過濾有節點的資料。</p>\n</li>\n<li><p>在宣告一個 infoList 變數去找出節點資訊如果跟過濾後的節點名稱一樣的時候就回傳 true。</p>\n<blockquote>\n<p>這邊發現如果沒有找到節點就會回傳 <code>undefined</code>。</p>\n</blockquote>\n</li>\n<li><p>所以我就判斷當 infoList 是 <code>undefined</code> 的時候，就去組新的資訊內容。</p>\n</li>\n<li><p>最後再把資訊內容 <code>push</code> 到 nodeApplication 陣列中，這樣不管審核流程節點進行到哪裡都會有值。</p>\n</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> nodeApplication: any[] = [];</span><br><span class=\"line\"><span class=\"keyword\">this</span>.node.filter(<span class=\"function\">(<span class=\"params\">item</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> infoList = <span class=\"keyword\">this</span>.info.find(<span class=\"function\">(<span class=\"params\">info</span>) =&gt;</span> info.now_node === item.node);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (infoList === <span class=\"literal\">undefined</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> nodeInfo = &#123;</span><br><span class=\"line\">      node: item.node,</span><br><span class=\"line\">      node_name: item.node,</span><br><span class=\"line\">      info: [],</span><br><span class=\"line\">      memo: <span class=\"string\">\"\"</span>,</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    nodeApplication.push(nodeInfo);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"合併陣列\"><a href=\"#合併陣列\" class=\"headerlink\" title=\"合併陣列\"></a>合併陣列</h2><p>最後將已審核跟未審核的節點資訊使用 <code>concat</code> 的方法(這邊使用解構賦值的寫法)，去賦值在全域的 info 的陣列中。</p>\n<p><strong>concat</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">this</span>.info = infoList.concat(nodeApplication);</span><br></pre></td></tr></table></figure>\n\n<p><strong>ES6</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">this</span>.info = [...infoList, ...nodeApplication];</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"小結\"><a href=\"#小結\" class=\"headerlink\" title=\"小結\"></a>小結</h2><p>以上就是使用陣列不同的方法整理資料，使用到 <code>forEach</code>、<code>push</code>、<code>filter</code>、<code>find</code>、<code>concat</code> 以及 ES6 解構賦值的寫法。算是透過此專案練習與更熟悉陣列與物件的操作方法。</p>\n<p><a href=\"https://github.com/hsuchihting/ng_inputOutput\" target=\"_blank\" rel=\"noopener\">完整程式碼</a></p>\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><ul>\n<li><a href=\"https://wcc723.github.io/javascript/2017/06/29/es6-native-array/\" target=\"_blank\" rel=\"noopener\">JavaScript 陣列處理方法 filter(), find(), forEach(), map(), every(), some(), reduce()</a></li>\n</ul>\n","categories":["JavaScript"],"tags":["Angular","JavaScript"]},{"title":"TailwindCSS 筆記 - 翻轉卡片實戰：TailwindCSS feat CSS","url":"/TailwindCSS/20211003/944679405/","content":"<p><img src=\"https://i.imgur.com/h9hJWPH.png\" alt=\"鬼滅之刃\"></p>\n<h2 id=\"實作內容\"><a href=\"#實作內容\" class=\"headerlink\" title=\"實作內容\"></a>實作內容</h2><p>此次會透過 TailwindCSS 與 CSS 共同使用來完成此頁面，並透過 CSS 的屬性做出翻轉卡片的效果。</p>\n<h2 id=\"卡片版面實作\"><a href=\"#卡片版面實作\" class=\"headerlink\" title=\"卡片版面實作\"></a>卡片版面實作</h2><p>因要做翻轉卡片，所以要先建立兩面卡片的樣式。</p>\n<h3 id=\"透過配置檔定義卡片寬高\"><a href=\"#透過配置檔定義卡片寬高\" class=\"headerlink\" title=\"透過配置檔定義卡片寬高\"></a>透過配置檔定義卡片寬高</h3><p>為了不需要再卡片寬高重工，在配置檔先把卡片的寬高定義好。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  mode: <span class=\"string\">\"jit\"</span>,</span><br><span class=\"line\">  purge: [<span class=\"string\">\"./**/*.html\"</span>, <span class=\"string\">\"./src/**/*.css\"</span>, <span class=\"string\">\"./js/**/*.js\"</span>],</span><br><span class=\"line\">  darkMode: <span class=\"literal\">false</span>, <span class=\"comment\">// or 'media' or 'class'</span></span><br><span class=\"line\">  theme: &#123;</span><br><span class=\"line\">    extend: &#123;</span><br><span class=\"line\">      height: &#123;</span><br><span class=\"line\">        md: <span class=\"string\">\"240px\"</span>,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      width: &#123;</span><br><span class=\"line\">        md: <span class=\"string\">\"160px\"</span>,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  variants: &#123;</span><br><span class=\"line\">    extend: &#123;&#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  plugins: [],</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p>並且寫入背景與卡片的樣式，</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span> <span class=\"attr\">class</span>=<span class=\"string\">\" bg-gray-800\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\" w-full min-h-screen\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"h-md w-md\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">class</span>=<span class=\"string\">\"h-full w-full rounded-2xl shadow-xl transform cursor-pointer  bg-yellow-500\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      &gt;</span></span><br><span class=\"line\">        正面</span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"h-full w-full rounded-2xl shadow-xl bg-white\"</span>&gt;</span>背面<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/PKklDgs.png\" alt=\"card\"></p>\n<blockquote>\n<p>進度可參考看目前<a href=\"https://play.tailwindcss.com/JvXpeTCUxO\" target=\"_blank\" rel=\"noopener\">程式碼</a></p>\n</blockquote>\n<h2 id=\"加入卡片背面圖案\"><a href=\"#加入卡片背面圖案\" class=\"headerlink\" title=\"加入卡片背面圖案\"></a>加入卡片背面圖案</h2><p>寫到這裡相信會發現卡片可以把同樣的樣式元件化，並且透過傳統 CSS 加入背景圖片。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"bg-gray-800 w-full min-h-screen\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"h-md w-md\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"card cardBack  bg-yellow-500\"</span>&gt;</span>正面<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"card bg-white\"</span>&gt;</span>背面<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>把卡片共同樣式用 card 包裝起來。</li>\n<li>卡片背面另外用一個 class 包裝起來。</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.cardBack</span> &#123;</span><br><span class=\"line\">  @apply cursor-pointer;</span><br><span class=\"line\">  background-image: url(https://cdn.hk01.com/di/media/images/dw/20201109/402473894201528320460173.jpeg/OXglr-kbvM04_6gksS3P-SxlWYsZn_N_T48RUU-PEVE?v=w1920);</span><br><span class=\"line\">  <span class=\"selector-tag\">background-position</span>: <span class=\"selector-tag\">center</span> <span class=\"selector-tag\">center</span>;</span><br><span class=\"line\">  <span class=\"selector-tag\">background-size</span>: <span class=\"selector-tag\">cover</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.card</span> &#123;</span><br><span class=\"line\">  @apply h-full w-full rounded-2xl shadow-xl transform;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>這樣即完成卡片正反面的樣式設定。</p>\n<p><img src=\"https://i.imgur.com/o4DxGwq.png\" alt=\"pic\"></p>\n<blockquote>\n<p>進度可參考目前<a href=\"https://play.tailwindcss.com/GmL5NRAWRV\" target=\"_blank\" rel=\"noopener\">程式碼</a></p>\n</blockquote>\n<h2 id=\"合併卡片\"><a href=\"#合併卡片\" class=\"headerlink\" title=\"合併卡片\"></a>合併卡片</h2><h3 id=\"卡片重疊\"><a href=\"#卡片重疊\" class=\"headerlink\" title=\"卡片重疊\"></a>卡片重疊</h3><p><strong>HTML</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"h-md w-md relative\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"card cardBack bg-yellow-500\"</span>&gt;</span>正面<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"card bg-white\"</span>&gt;</span>背面<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>現在已經完成兩張卡片，要把正反面合併成一張，這邊使用的是絕對定位，讓正面與背面的重疊在一起。</p>\n<p><strong>CSS</strong></p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.card</span> &#123;</span><br><span class=\"line\">  @apply h-full w-full rounded-2xl shadow-xl transform absolute;</span><br><span class=\"line\">  <span class=\"selector-tag\">backface-visibility</span>: <span class=\"selector-tag\">hidden</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>因我要兩張卡片屆時會有翻轉的效果，我在包裝後的 card 的樣式中加上 <code>absolute</code> 屬性以及之後要做翻轉的 <code>transform</code> 屬性。雖說 TailwindCSS 有高彈性的 Utility 可以使用，但還是有些效果需要手刻，例如 CSS 3d 效果以及這次範例使用到的 <code>backface-visibility</code> 屬性(<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/backface-visibility\" target=\"_blank\" rel=\"noopener\">MDN</a>)。</p>\n<h3 id=\"翻轉效果\"><a href=\"#翻轉效果\" class=\"headerlink\" title=\"翻轉效果\"></a>翻轉效果</h3><p>如前面所提到，翻轉效果要自己加上去，故在 CSS 上再加上要翻轉的 3D 效果屬性。</p>\n<p><strong>CSS</strong></p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@tailwind</span> base;</span><br><span class=\"line\"><span class=\"keyword\">@tailwind</span> components;</span><br><span class=\"line\"><span class=\"keyword\">@tailwind</span> utilities;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.cardBack</span> &#123;</span><br><span class=\"line\">  @apply cursor-pointer;</span><br><span class=\"line\">  background-image: url(https://cdn.hk01.com/di/media/images/dw/20201109/402473894201528320460173.jpeg/OXglr-kbvM04_6gksS3P-SxlWYsZn_N_T48RUU-PEVE?v=w1920);</span><br><span class=\"line\">  <span class=\"selector-tag\">background-position</span>: <span class=\"selector-tag\">center</span> <span class=\"selector-tag\">center</span>;</span><br><span class=\"line\">  <span class=\"selector-tag\">background-size</span>: <span class=\"selector-tag\">cover</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.card</span> &#123;</span><br><span class=\"line\">  @apply h-full w-full rounded-2xl shadow-xl transform absolute;</span><br><span class=\"line\">  <span class=\"selector-tag\">backface-visibility</span>: <span class=\"selector-tag\">hidden</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*翻轉屬性*/</span></span><br><span class=\"line\"><span class=\"selector-class\">.transform-style-3d</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transform-style</span>: preserve-<span class=\"number\">3</span>d;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.transform-style-3d</span><span class=\"selector-pseudo\">:active</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transform</span>: <span class=\"built_in\">rotateY</span>(<span class=\"number\">180deg</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.transform-rotateY-180</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transform</span>: <span class=\"built_in\">rotateY</span>(<span class=\"number\">180deg</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>在 HTML 上也將要卡片翻轉的效果加上去。</p>\n<p><strong>HTML</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"bg-gray-800 w-full min-h-screen\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"h-md w-md relative transform-style-3d duration-300\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"card cardBack  bg-yellow-500\"</span>&gt;</span>正面<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"card bg-white transform-rotateY-180 \"</span>&gt;</span>背面<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>這時就會發現卡片會翻轉了！</p>\n<p>demo: <a href=\"https://play.tailwindcss.com/9A9UHaSsaM\" target=\"_blank\" rel=\"noopener\">https://play.tailwindcss.com/9A9UHaSsaM</a></p>\n<h2 id=\"完成卡片內容\"><a href=\"#完成卡片內容\" class=\"headerlink\" title=\"完成卡片內容\"></a>完成卡片內容</h2><p>最後在調成想要的大小跟把背面放入想要的圖片，即完成一個翻轉卡片的效果囉！</p>\n<p><strong>HTML</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">class</span>=<span class=\"string\">\"bg-gray-800 w-full min-h-screen sm:flex sm:justify-center sm:items-center\"</span></span></span><br><span class=\"line\"><span class=\"tag\">&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"h-md w-md relative transform-style-3d duration-300  \"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"card cardBack  bg-yellow-500 \"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"card bg-white transform-rotateY-180 \"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">img</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">src</span>=<span class=\"string\">\"https://live.staticflickr.com/65535/50493221951_2f110d9c75_b.jpg\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">alt</span>=<span class=\"string\">\"煉獄杏壽郎\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      /&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">class</span>=<span class=\"string\">\" text-center text-gray-700 pt-3 font-bold text-3xl\"</span>&gt;</span></span><br><span class=\"line\">        炎柱 - 煉獄杏壽郎</span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>tailwind.config.js</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  mode: <span class=\"string\">\"jit\"</span>,</span><br><span class=\"line\">  purge: [<span class=\"string\">\"./**/*.html\"</span>, <span class=\"string\">\"./src/**/*.css\"</span>, <span class=\"string\">\"./js/**/*.js\"</span>],</span><br><span class=\"line\">  darkMode: <span class=\"literal\">false</span>, <span class=\"comment\">// or 'media' or 'class'</span></span><br><span class=\"line\">  theme: &#123;</span><br><span class=\"line\">    extend: &#123;</span><br><span class=\"line\">      height: &#123;</span><br><span class=\"line\">        md: <span class=\"string\">\"550px\"</span>,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      width: &#123;</span><br><span class=\"line\">        md: <span class=\"string\">\"330px\"</span>,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  variants: &#123;</span><br><span class=\"line\">    extend: &#123;&#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  plugins: [],</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p>demo: <a href=\"https://play.tailwindcss.com/qwY2qWGrub?file=config\" target=\"_blank\" rel=\"noopener\">https://play.tailwindcss.com/qwY2qWGrub?file=config</a></p>\n<h2 id=\"JIT-模式\"><a href=\"#JIT-模式\" class=\"headerlink\" title=\"JIT 模式\"></a>JIT 模式</h2><p>如果使用 JIT 模式，配置檔都不用特別設定，只要直接設定寬高即可，<code>w-[330px]</code> 以及 <code>h-[550px]</code>，</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">class</span>=<span class=\"string\">\"bg-gray-800 w-full min-h-screen sm:flex sm:justify-center sm:items-center\"</span></span></span><br><span class=\"line\"><span class=\"tag\">&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"h-[550px] w-[330px] relative transform-style-3d duration-300  \"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"card cardBack  bg-yellow-500 \"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"card bg-white transform-rotateY-180 \"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">img</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">src</span>=<span class=\"string\">\"https://live.staticflickr.com/65535/50493221951_2f110d9c75_b.jpg\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">alt</span>=<span class=\"string\">\"煉獄杏壽郎\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      /&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">class</span>=<span class=\"string\">\" text-center text-gray-700 pt-3 font-bold text-3xl\"</span>&gt;</span></span><br><span class=\"line\">        炎柱 - 煉獄杏壽郎</span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>GitHub： <a href=\"https://github.com/hsuchihting/transform_card\" target=\"_blank\" rel=\"noopener\">https://github.com/hsuchihting/transform_card</a></p>\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><ul>\n<li><a href=\"https://www.tpisoftware.com/tpu/articleDetails/2238\" target=\"_blank\" rel=\"noopener\">Tailwind CSS 介紹及應用</a></li>\n<li><a href=\"https://www.oxxostudio.tw/articles/201506/css-3d.html\" target=\"_blank\" rel=\"noopener\">玩轉 CSS 3D - 原理篇</a></li>\n<li><a href=\"https://eyesofkids.gitbooks.io/css3/content/contents/transform3d.html\" target=\"_blank\" rel=\"noopener\">變形(transform) 3D 基本使用</a></li>\n</ul>\n","categories":["TailwindCSS"],"tags":["TailwindCSS"]},{"title":"TailwindCSS 筆記 - 價目表卡片實戰 - 使用官方套件實作登入表單","url":"/TailwindCSS/20210914/4089643736/","content":"<p><img src=\"https://i.imgur.com/guWysM9.png\" alt=\"login\"></p>\n<p>這次使用官方 form 套件來完成登入表單實作。</p>\n<h2 id=\"為什麼要使用官方-form-套件\"><a href=\"#為什麼要使用官方-form-套件\" class=\"headerlink\" title=\"為什麼要使用官方 form 套件\"></a>為什麼要使用官方 form 套件</h2><p>雖然可以透過 TailwindCSS 高客製化的特性來完成樣式，但還是有點限制，像是下拉選單。</p>\n<iframe height=\"300\" style=\"width: 100%;\" scrolling=\"no\" title=\"tailwindcss dark\" src=\"https://codepen.io/hnzxewqw/embed/jOwyKZo?default-tab=html%2Cresult\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href=\"https://codepen.io/hnzxewqw/pen/jOwyKZo\" target=\"_blank\" rel=\"noopener\">\n  tailwindcss dark</a> by TimHsu (<a href=\"https://codepen.io/hnzxewqw\" target=\"_blank\" rel=\"noopener\">@hnzxewqw</a>)\n  on <a href=\"https://codepen.io\" target=\"_blank\" rel=\"noopener\">CodePen</a>.\n</iframe>\n\n<p>可以看見下拉選單右側的下拉圖標很貼近邊框，而且這個很難修正，並且樣式就算可以客製，也是需要花點時間。</p>\n<h2 id=\"來安裝並使用-form-的官方套件\"><a href=\"#來安裝並使用-form-的官方套件\" class=\"headerlink\" title=\"來安裝並使用 form 的官方套件\"></a>來安裝並使用 form 的官方套件</h2><p>官方提供 form 的套件，並且很貼心的也好很多樣式，可以看 <a href=\"https://tailwindcss-forms.vercel.app/\" target=\"_blank\" rel=\"noopener\">demo</a>。</p>\n<h3 id=\"安裝-form-套件\"><a href=\"#安裝-form-套件\" class=\"headerlink\" title=\"安裝 form 套件\"></a>安裝 form 套件</h3><p>使用 npm 安裝</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm install @tailwindcss/forms</span><br></pre></td></tr></table></figure>\n\n<p>安裝完畢後再配置檔的 plugins 加入這行。</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">require('@tailwindcss/forms'),</span><br></pre></td></tr></table></figure>\n\n<p><strong>tailwind.config.js</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  mode: <span class=\"string\">\"jit\"</span>,</span><br><span class=\"line\">  purge: [<span class=\"string\">\"./**/*.html\"</span>, <span class=\"string\">\"./src/**/*.css\"</span>, <span class=\"string\">\"./js/**/*.js\"</span>],</span><br><span class=\"line\">  darkMode: <span class=\"literal\">false</span>, <span class=\"comment\">// or 'media' or 'class'</span></span><br><span class=\"line\">  theme: &#123;</span><br><span class=\"line\">    extend: &#123;&#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  variants: &#123;</span><br><span class=\"line\">    extend: &#123;&#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  plugins: [</span><br><span class=\"line\">    <span class=\"built_in\">require</span>(<span class=\"string\">\"@tailwindcss/forms\"</span>), <span class=\"comment\">//加在這裡</span></span><br><span class=\"line\">  ],</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p>這樣 input 就有效果了！(我把原本切好的樣式先拿掉，目前是套件的預設效果)</p>\n<p><img src=\"https://i.imgur.com/DF7Rgqb.png\" alt=\"origin\"></p>\n<p>再來我把我想要的樣式加上去。</p>\n<p>目前沒有加任何樣式的 input，以其中一個為例。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"email\"</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>增加樣式後。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">type</span>=<span class=\"string\">\"password\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">class</span>=<span class=\"string\">\"focus:ring-purple-400 focus:border-purple-400 w-full p-2 rounded-md\"</span></span></span><br><span class=\"line\"><span class=\"tag\">/&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/eMNu2ce.png\" alt=\"after\"></p>\n<p>最後再把寫好的樣式也複製一個到其他 input 就可以了！</p>\n<h3 id=\"只需要專注在自訂效果\"><a href=\"#只需要專注在自訂效果\" class=\"headerlink\" title=\"只需要專注在自訂效果\"></a>只需要專注在自訂效果</h3><p>因為 form 套件已經把基本的樣式寫好，所以只要專注在其他像 focus 或是 active 以及其他想要客製的類別即可。</p>\n<p>最後我把 <code>select</code> 與 <code>checkbox</code> 的欄位加上去，讓表單看起來更完整。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">class</span>=<span class=\"string\">\"mb-2\"</span>&gt;</span>電子信箱<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">type</span>=<span class=\"string\">\"email\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">class</span>=<span class=\"string\">\"focus:ring-purple-400 focus:border-purple-400 w-full p-2 rounded-md\"</span></span></span><br><span class=\"line\"><span class=\"tag\">/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">class</span>=<span class=\"string\">\"mt-4 mb-2\"</span>&gt;</span>密碼<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">type</span>=<span class=\"string\">\"password\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">class</span>=<span class=\"string\">\"focus:ring-purple-400 focus:border-purple-400 w-full p-2 rounded-md\"</span></span></span><br><span class=\"line\"><span class=\"tag\">/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"javascript:void(0)\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"block mt-2 text-blue-400\"</span>&gt;</span>忘記密碼<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"mt-4\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">select</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">class</span>=<span class=\"string\">\"focus:ring-purple-400 focus:border-purple-400 w-full p-2 rounded-md\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  &gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"\"</span>&gt;</span>---請選擇語言---<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"1\"</span>&gt;</span>繁體中文<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"2\"</span>&gt;</span>English<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"mt-4 flex items-center\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">class</span>=<span class=\"string\">\"mr-2 focus:ring-purple-400 text-purple-400\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">name</span>=<span class=\"string\">\"checkbox\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">id</span>=<span class=\"string\">\"\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">\"checkbox\"</span>&gt;</span>記住密碼<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/8r9l0eA.png\" alt=\"final\"></p>\n<p>本次實作程式碼：<a href=\"https://github.com/hsuchihting/tailwindcss\" target=\"_blank\" rel=\"noopener\">https://github.com/hsuchihting/tailwindcss</a></p>\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><ul>\n<li><a href=\"https://github.com/tailwindlabs/tailwindcss-forms\" target=\"_blank\" rel=\"noopener\">tailwindlabs/tailwindcss-forms</a></li>\n</ul>\n","categories":["TailwindCSS"],"tags":["TailwindCSS"]},{"title":"TailwindCSS 筆記 - 價目表卡片實戰 - 登入彈窗開發","url":"/TailwindCSS/20210914/4098207222/","content":"<p><img src=\"https://images.unsplash.com/photo-1593532847202-e818146e134a?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1050&q=80\" alt=\"pop\"></p>\n<p>這次要來實作一個登入的彈窗效果，以前做彈窗大多是使用 Bootstrap 的彈窗元件或是 lightbox 的套件。這次就用 TailwindCSS 直接來刻一個！</p>\n<h2 id=\"建立彈窗背景\"><a href=\"#建立彈窗背景\" class=\"headerlink\" title=\"建立彈窗背景\"></a>建立彈窗背景</h2><p>因要將彈窗固定在畫面上，所以使用絕對定位的方式來寫，並且先把遮罩背景設定成深灰色。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span> <span class=\"attr\">class</span>=<span class=\"string\">\"bg-[#eee] relative\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"absolute top-0 left-0 right-0 w-full h-full bg-gray-900\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>畫面就會是一片黑…就是代表你成功了。</p>\n<p><img src=\"https://i.imgur.com/yTy9n0j.png\" alt=\"bg\"></p>\n<p>在顏色後面加一個 <code>bg-color/透明度數值</code>，那設定透明度使用 70% 效果。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"absolute top-0 left-0 right-0 w-full h-full bg-gray-900/70\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/1ml9YvI.png\" alt=\"opacity\"></p>\n<h2 id=\"登入介面\"><a href=\"#登入介面\" class=\"headerlink\" title=\"登入介面\"></a>登入介面</h2><p>在寫好的彈窗範圍內先建立一個簡單的登入表單內容，按鈕就沿用之前開發好的元件拿來使用。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"w-[90%] p-4 mt-20 bg-white rounded-md shadow-md\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h2</span> <span class=\"attr\">class</span>=<span class=\"string\">\"text-center text-purple-500 font-bold mb-10 text-3xl\"</span>&gt;</span></span><br><span class=\"line\">    登入您的帳號</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">class</span>=<span class=\"string\">\"mb-2\"</span>&gt;</span>電子信箱<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">type</span>=<span class=\"string\">\"email\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">class</span>=<span class=\"string\">\"border-2 border-gray-400 focus:ring-2 w-full p-2 rounded-md\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">class</span>=<span class=\"string\">\"mt-4 mb-2\"</span>&gt;</span>密碼<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">type</span>=<span class=\"string\">\"password\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">class</span>=<span class=\"string\">\"border-2 border-gray-400 focus:ring-2 w-full p-2 rounded-md\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"javascript:void(0)\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"block mt-2 text-blue-400\"</span>&gt;</span>忘記密碼<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">button</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">class</span>=<span class=\"string\">\"</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">    w-full bg-purple-500 hover:bg-purple-600</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">    active:bg-purple-900 active:ring-2</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">    duration-200 py-3 text-lg text-white</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">    tracking-wide rounded-lg mt-4</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">    \"</span></span></span><br><span class=\"line\"><span class=\"tag\">  &gt;</span></span><br><span class=\"line\">    登入</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/shG9Jui.png\" alt=\"login\"></p>\n<h2 id=\"隱藏登入介面與可點到登入按鈕\"><a href=\"#隱藏登入介面與可點到登入按鈕\" class=\"headerlink\" title=\"隱藏登入介面與可點到登入按鈕\"></a>隱藏登入介面與可點到登入按鈕</h2><p>在彈窗的部份加上透明度為 <code>0</code> 的樣式，但這樣會有一個問題，因為目前是用絕對定位的方式蓋在主要的畫面上，雖然登入介面看不到了，但實質上卻還是有一個 div 區塊元素，所以無法點擊到登入按鈕。</p>\n<p>這時可以用 <code>pointer-events-none</code> 忽略 <code>pointer-events</code> 事件，並且可以點擊到下方元素。</p>\n<p><strong>彈窗</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">class</span>=<span class=\"string\">\"absolute top-0 left-0 right-0 w-full h-full bg-gray-900/70 flex justify-center items-start opacity-0 pointer-events-none\"</span></span></span><br><span class=\"line\"><span class=\"tag\">&gt;</span></span><br><span class=\"line\">  ...</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"加上-JS-做出彈窗效果\"><a href=\"#加上-JS-做出彈窗效果\" class=\"headerlink\" title=\"加上 JS 做出彈窗效果\"></a>加上 JS 做出彈窗效果</h3><p>在原本登入、彈窗與關閉的地方，都個別加上 <code>id</code>，<code>login</code>, <code>modal</code>,<code>close</code> 等名稱，然後再透過綁定 <code>id</code> 的方式用變數儲存起來。</p>\n<p>並且在登入的地方加上監聽事件，並且觸發後把 modal 的 class 列表中移除 <code>opacity-0</code> 與 <code>pointer-events-none</code>，這樣就可以把彈窗打開；反之就是增加 <code>opacity-0</code> 與 <code>pointer-events-none</code>。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> loginBtn = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"login\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">let</span> modal = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"modal\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">let</span> closeBtn = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"close\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">loginBtn.addEventListener(<span class=\"string\">\"click\"</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  modal.classList.remove(<span class=\"string\">\"opacity-0\"</span>, <span class=\"string\">\"pointer-events-none\"</span>);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">closeBtn.addEventListener(<span class=\"string\">\"click\"</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  modal.classList.add(<span class=\"string\">\"opacity-0\"</span>, <span class=\"string\">\"pointer-events-none\"</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p><strong>操作方法</strong></p>\n<iframe width=\"800\" height=\"600\" src=\"https://www.youtube.com/embed/XkyO6fTX9cM\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n","categories":["TailwindCSS"],"tags":["TailwindCSS"]},{"title":"TailwindCSS 筆記 - 價目表卡片實戰 - 進階卡片樣式","url":"/TailwindCSS/20210913/854832424/","content":"<p><img src=\"https://i.imgur.com/nxwdr4q.png\" alt=\"card\"></p>\n<p>前篇已經將基本的卡片樣式完成，要繼續完成幾個互動效果，會有以下內容：</p>\n<ol>\n<li>滑鼠經過卡片會有放大效果。</li>\n<li>RWD 效果，PC 版卡片為三欄。</li>\n<li>透過 JS 迴圈方式產生新的卡片。</li>\n</ol>\n<h2 id=\"增加-hover-的互動效果\"><a href=\"#增加-hover-的互動效果\" class=\"headerlink\" title=\"增加 hover 的互動效果\"></a>增加 hover 的互動效果</h2><p>在卡片外層加上以下 class，卡片的程式碼可以參考上一篇內容。<br>因為我要在滑鼠過時卡片有放大效果，所以要使用 hover，並且使用 transition 屬性底下的 scale 縮放效果，這邊選擇 110，也就是 110%，並且加上效果時間，這樣就完成了。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hover:scale-110 duration-300 \"</span>&gt;</span>...card code...<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>原本樣式：可以看到左右有明顯間距。</p>\n<p><img src=\"https://i.imgur.com/huPXw2D.png\" alt=\"before hover\"></p>\n<p>滑鼠經過後：間距變小了。</p>\n<p><img src=\"https://i.imgur.com/8Oszqzw.png\" alt=\"hover card\"></p>\n<h2 id=\"RWD-三欄效果\"><a href=\"#RWD-三欄效果\" class=\"headerlink\" title=\"RWD 三欄效果\"></a>RWD 三欄效果</h2><p>TailwindCSS 是單一斷點的手機優先 CSS 框架，所以一開始建構就是手機版，而今天要在 PC 版本實呈現三欄的內容，這時就要在卡片的最外層加上 lg 的尺寸來定義各種 RWD 的效果樣式。</p>\n<p>也就是這邊要往後加上 PC 版樣式的內容。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"mt-8\"</span>&gt;</span>... card code...<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>加上以下 class，前面都要加上 lg 的尺寸樣式喔！</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">class</span>=<span class=\"string\">\"mt-8 lg:grid lg:grid-cols-3 lg:justify-evenly lg:gap-8 lg:w-[1280px] lg:mx-auto\"</span></span></span><br><span class=\"line\"><span class=\"tag\">&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>grid：值得一提的是這個 class，也就是使用網格系統，透過官網介紹可以透過網格系統的方式直接定義樣式，省去計算的時間。這邊是使用 <a href=\"https://tailwindcss.com/docs/grid-template-columns\" target=\"_blank\" rel=\"noopener\">Grid Template Columns</a> 的樣式去定義三欄效果。</li>\n</ul>\n<p>用法很簡單，官方文件示範如下：</p>\n<p><img src=\"https://i.imgur.com/iPTBB41.png\" alt=\"grid\"></p>\n<p>使用這個語法 <code>grid-cols-{n}</code>，放入想要分幾欄即可，非常簡單且易懂。</p>\n<blockquote>\n<p>前面要先定義 grid 的樣式才能使用。</p>\n</blockquote>\n<ul>\n<li>justify-evenly：讓卡片等距。</li>\n<li>gap-8：間隔有 2rem。</li>\n</ul>\n<p><img src=\"https://i.imgur.com/Z7a0GPi.png\" alt=\"gap\"></p>\n<p>最後限制寬度為 1280px，並且置中對齊。</p>\n<h2 id=\"透過-JS-迴圈來跑出複數卡片\"><a href=\"#透過-JS-迴圈來跑出複數卡片\" class=\"headerlink\" title=\"透過 JS 迴圈來跑出複數卡片\"></a>透過 JS 迴圈來跑出複數卡片</h2><p>這次透過一個簡單的迴圈方式來渲染可用內容的列表內容，因正式卡片的內容可能數量有多有少，如果少的話做苦工就算了，但如果資料量很大，就不是手工可以解決的事情。</p>\n<h3 id=\"引入-js-檔案\"><a href=\"#引入-js-檔案\" class=\"headerlink\" title=\"引入 js 檔案\"></a>引入 js 檔案</h3><p>這應該不用在贅述。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  ...code...</span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"js/all.js\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>js</strong></p>\n<p>建立一個函式，並且先預設呼叫有三個參數，分別是列表一到三，</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">renderList</span>(<span class=\"params\"></span>) </span>&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">renderList(<span class=\"string\">\"list1\"</span>);</span><br><span class=\"line\">renderList(<span class=\"string\">\"list2\"</span>);</span><br><span class=\"line\">renderList(<span class=\"string\">\"list3\"</span>);</span><br></pre></td></tr></table></figure>\n\n<p>此時也在 template 的 <code>ul</code> 上各加上 <code>id</code>，分別為 <code>list1</code>， <code>list2</code> 和 <code>list3</code>。</p>\n<p><strong>html</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">id</span>=<span class=\"string\">\"list1\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"...\"</span>&gt;</span></span><br><span class=\"line\">  ...</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"再把要執行的內容寫在函式內\"><a href=\"#再把要執行的內容寫在函式內\" class=\"headerlink\" title=\"再把要執行的內容寫在函式內\"></a>再把要執行的內容寫在函式內</h3><ol>\n<li>因執行函式已經有指定其參數，而這個參數為 id 的值，故透過 getElementById 的方式接收參數。</li>\n<li>再用一個變數來存模板語法，就是把 li 的內容複製到這裡來。</li>\n<li>最後再用迴圈組字串。</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">renderList</span>(<span class=\"params\">id</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> listUl = <span class=\"built_in\">document</span>.getElementById(id);</span><br><span class=\"line\">  <span class=\"keyword\">const</span> templateLi = <span class=\"string\">`</span></span><br><span class=\"line\"><span class=\"string\">      &lt;li class=\"flex items-center mt-4\"&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;i class=\"far fa-check-circle text-green-400\"&gt;&lt;/i&gt;</span></span><br><span class=\"line\"><span class=\"string\">         &lt;span</span></span><br><span class=\"line\"><span class=\"string\">             class=\" pl-3 text-gray-800 tracking-wide\"&gt;免費使用&lt;/span&gt;</span></span><br><span class=\"line\"><span class=\"string\">      &lt;/li&gt;</span></span><br><span class=\"line\"><span class=\"string\">  `</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">let</span> str = <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">    str = str + templateLi;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  listUl.innerHTML = str;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">renderList(<span class=\"string\">\"list1\"</span>);</span><br><span class=\"line\">renderList(<span class=\"string\">\"list2\"</span>);</span><br><span class=\"line\">renderList(<span class=\"string\">\"list3\"</span>);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"在配置檔加上-js-路徑\"><a href=\"#在配置檔加上-js-路徑\" class=\"headerlink\" title=\"在配置檔加上 js 路徑\"></a>在配置檔加上 js 路徑</h3><p>因為有寫模板語法在 js 檔案裡，所以要記得加上 js 檔案在配置檔。</p>\n<p><strong>tailwind.config.js</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  mode: <span class=\"string\">\"jit\"</span>,</span><br><span class=\"line\">  purge: [<span class=\"string\">\"./**/*.html\"</span>, <span class=\"string\">\"./src/**/*.css\"</span>, <span class=\"string\">\"./js/**/*.js\"</span>], <span class=\"comment\">//要加上 JS 的路徑</span></span><br><span class=\"line\">  darkMode: <span class=\"literal\">false</span>, <span class=\"comment\">// or 'media' or 'class'</span></span><br><span class=\"line\">  theme: &#123;</span><br><span class=\"line\">    extend: &#123;&#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  variants: &#123;</span><br><span class=\"line\">    extend: &#123;&#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  plugins: [],</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/UqGmrau.png\" alt=\"render\"></p>\n<p>這樣就可以跑出列表了。</p>\n<h3 id=\"加入判斷微調畫面\"><a href=\"#加入判斷微調畫面\" class=\"headerlink\" title=\"加入判斷微調畫面\"></a>加入判斷微調畫面</h3><p>但有發現背景為紫色的卡片中的列表文字是黑色的，這樣看不清楚，所以要加一個判斷讓其變成白色，可以加在模板語法上方。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">renderList</span>(<span class=\"params\">id</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> listUl = <span class=\"built_in\">document</span>.getElementById(id);</span><br><span class=\"line\">  <span class=\"keyword\">let</span> originColor = <span class=\"string\">\"text-green-400\"</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (id === <span class=\"string\">\"list2\"</span>) &#123;</span><br><span class=\"line\">    originColor = <span class=\"string\">\"text-white\"</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> templateLi = <span class=\"string\">`</span></span><br><span class=\"line\"><span class=\"string\">      &lt;li class=\"flex items-center mt-4\"&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;i class=\"far fa-check-circle <span class=\"subst\">$&#123;originColor&#125;</span>\"&gt;&lt;/i&gt;</span></span><br><span class=\"line\"><span class=\"string\">         &lt;span</span></span><br><span class=\"line\"><span class=\"string\">             class=\" pl-3 <span class=\"subst\">$&#123;originColor&#125;</span> tracking-wide\"&gt;免費使用&lt;/span&gt;</span></span><br><span class=\"line\"><span class=\"string\">      &lt;/li&gt;</span></span><br><span class=\"line\"><span class=\"string\">  `</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">let</span> str = <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">    str = str + templateLi;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  listUl.innerHTML = str;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>設定一個變數存取原本的顏色。</li>\n<li>在寫入判斷當 <code>id</code> 等於 <code>list2</code> 的時候，顏色就改變為白色。</li>\n<li>透過模板語法中帶變數的方式 <code>${param}</code> 的方式帶入原本顏色的位置。</li>\n</ul>\n<p>這樣就完成透過判斷來改變列表內容的文字囉！</p>\n<p><img src=\"https://i.imgur.com/yDstLla.png\" alt=\"js\"></p>\n","categories":["TailwindCSS"],"tags":["TailwindCSS"]},{"title":"TailwindCSS 筆記 - 價目表卡片實戰 - 基礎卡片樣式","url":"/TailwindCSS/20210912/32829572/","content":"<p><img src=\"https://i.imgur.com/7ScXkQV.png\" alt=\"basic\"></p>\n<p>上一篇完成了基礎設置，這次就來建立一個基礎卡片。</p>\n<h2 id=\"設定基礎卡片樣式外觀\"><a href=\"#設定基礎卡片樣式外觀\" class=\"headerlink\" title=\"設定基礎卡片樣式外觀\"></a>設定基礎卡片樣式外觀</h2><blockquote>\n<p>標題部分因為了整個內容更完整，故有修改一下架構，但是很簡單的調整，是用一個 div 區塊元素包住 h1 與 p 標籤，使之可以上下呈現。</p>\n</blockquote>\n<p>主要要練習的是卡片樣式，在標題下方建立一個卡片外觀，使用 <code>w-full</code> 呈現滿版，並用 <code>shadow-md</code> 設定陰影樣式。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span> <span class=\"attr\">class</span>=<span class=\"string\">\" bg-[#eee]\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"p-4 h-screen lg:p-8\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"flex justify-between items-start lg:max-w-[1280px] lg:mx-auto\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">class</span>=<span class=\"string\">\"text-gray-800 text-4xl tracking-wide font-black\"</span>&gt;</span></span><br><span class=\"line\">          價目表卡片實戰</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">          用 TailwindCSS 做一個簡單的卡片吧！<span class=\"tag\">&lt;<span class=\"name\">span</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">class</span>=<span class=\"string\">\" text-purple-500 font-bold\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            &gt;</span>使用 JIT 模式<span class=\"tag\">&lt;/<span class=\"name\">span</span></span></span><br><span class=\"line\"><span class=\"tag\">          &gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">button</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">id</span>=<span class=\"string\">\"login\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">class</span>=<span class=\"string\">\" bg-purple-500 text-white py-2 px-4 rounded-md hover:bg-purple-600 tracking-wide active:bg-purple-900 active:ring-2 duration-200\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      &gt;</span></span><br><span class=\"line\">        login</span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- card --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"mt-8\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"w-full p-8 mt-8 bg-white rounded-2xl shadow-md\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- &lt;script src=\"js/all.js\"&gt;&lt;/script&gt; --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/kjX5Mlm.png\" alt=\"card\"></p>\n<h2 id=\"寫入卡片內容\"><a href=\"#寫入卡片內容\" class=\"headerlink\" title=\"寫入卡片內容\"></a>寫入卡片內容</h2><h3 id=\"卡片標題\"><a href=\"#卡片標題\" class=\"headerlink\" title=\"卡片標題\"></a>卡片標題</h3><ul>\n<li>寫入卡片的標題，這邊使用 p 與 span 兩個元素建立卡片標題，其中 span 有使用到一個 <code>text-base</code> 的類別，原因是在 p 中有使用 <code>font-bold</code> 樣式，為了讓主標與副標有區別，不然 span 內的樣式會統一吃到 <code>font-bold</code>。</li>\n<li>下方用區塊元素做一個底線作為卡片標題與內容的區隔。</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- card --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"mt-8\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"w-full p-8 mt-8 bg-white rounded-2xl shadow-md\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">class</span>=<span class=\"string\">\" text-3xl font-bold pb-3\"</span>&gt;</span></span><br><span class=\"line\">      免費版 $0</span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\" text-base text-gray-600 font-medium\"</span>&gt;</span>per month<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"w-[30px] h-[3px] bg-purple-600\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/fGP4UjH.png\" alt=\"card title\"></p>\n<h3 id=\"卡片項目內容\"><a href=\"#卡片項目內容\" class=\"headerlink\" title=\"卡片項目內容\"></a>卡片項目內容</h3><p>內容大多會使用列表的方式做呈現，故列表會直接想到 <code>ul li</code> 標籤，所以可以這樣寫：</p>\n<ul>\n<li>在 <code>ul</code> 上方我給一個文字作為內容的標題。</li>\n<li>希望在 <code>ul</code> 裡面的字體大小都吃到一樣的字級與字體粗細度。</li>\n<li><code>li</code> 中有兩個元素，一個打勾的圖示以及文字，為了讓其橫向對齊，故在 <code>li</code> 也要加上 <code>flex</code> 與 <code>items-center</code> 做水平置中。</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">class</span>=<span class=\"string\">\" font-bold mt-8 text-lg\"</span>&gt;</span>可用內容<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\" text-lg mb-20\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"flex items-center mt-4\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"far fa-check-circle text-green-400\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\" pl-3 text-gray-800 tracking-wide\"</span>&gt;</span>免費使用<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"flex items-center mt-4\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"far fa-check-circle text-green-400\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\" pl-3 text-gray-800 tracking-wide\"</span>&gt;</span>免費使用<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"flex items-center mt-4\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"far fa-check-circle text-green-400\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\" pl-3 text-gray-800 tracking-wide\"</span>&gt;</span>免費使用<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"flex items-center mt-4\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"far fa-check-circle text-green-400\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\" pl-3 text-gray-800 tracking-wide\"</span>&gt;</span>免費使用<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/r5dT9ps.png\" alt=\"list\"></p>\n<h3 id=\"更多內容文字與按鈕\"><a href=\"#更多內容文字與按鈕\" class=\"headerlink\" title=\"更多內容文字與按鈕\"></a>更多內容文字與按鈕</h3><p>最後寫入卡片最後兩個項目，更多內容與按鈕。</p>\n<h4 id=\"更多內容的樣式\"><a href=\"#更多內容的樣式\" class=\"headerlink\" title=\"更多內容的樣式\"></a>更多內容的樣式</h4><p>這邊更多內容的使用 <code>a</code> 連結來呈現，這邊需要注意的地方是 a 連結是行內元素，無法直接做文字的對齊效果，所以要使用 <code>block</code> 屬性，才可以使用 <code>text-center</code> 的樣式。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">href</span>=<span class=\"string\">\"javascript:void(0)\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">class</span>=<span class=\"string\">\" w-full mb-8 font-bold text-blue-500 block text-center\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  &gt;</span>更多內容...<span class=\"tag\">&lt;/<span class=\"name\">a</span></span></span><br><span class=\"line\"><span class=\"tag\">&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"按鈕樣式\"><a href=\"#按鈕樣式\" class=\"headerlink\" title=\"按鈕樣式\"></a>按鈕樣式</h4><p>先前已經在登入按鈕有寫過重複的樣式，故內容就直接拿來使用。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">class</span>=<span class=\"string\">\" w-full bg-purple-500 hover:bg-purple-600 active:bg-purple-900 active:ring-2 duration-200 py-3 text-lg text-white tracking-wide rounded-lg\"</span></span></span><br><span class=\"line\"><span class=\"tag\">&gt;</span></span><br><span class=\"line\">  立即使用</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>最後就完成了基礎卡片的樣式囉！</p>\n<p><img src=\"https://i.imgur.com/HVLxvGu.png\" alt=\"final\"></p>\n","categories":["TailwindCSS"],"tags":["TailwindCSS"]},{"title":"TailwindCSS 筆記 - 價目表卡片實戰 - 首頁標題樣式","url":"/TailwindCSS/20210912/1037863192/","content":"<p><img src=\"https://i.imgur.com/sexi49o.png\" alt=\"title\"></p>\n<p>前面講了這麼多簡單的觀念與使用方法，接下來的幾篇都會是搭配 JIT 模式的實作練習，就來做一個簡易的價目表卡片吧！</p>\n<h2 id=\"建立專案架構\"><a href=\"#建立專案架構\" class=\"headerlink\" title=\"建立專案架構\"></a>建立專案架構</h2><ul>\n<li>設定 <code>body</code> 背景色，使用自定義的方式來寫，<code>bg-[#colorCode]</code>。</li>\n<li>在 <code>body</code> 的下層使用一個區塊元素定義整個標題的架構。</li>\n<li>使用 <code>flex</code> 屬性包住標題與按鈕，使其橫向並排，用 <code>justify-between</code> 與 <code>item-start</code> 屬性使其兩個元素向上又左右對齊。</li>\n<li>在 <code>1280px</code> 以上螢幕使用最大寬度為 <code>1280px</code>，原因是人眼的角度為 120 度，若頁面太寬，是不好瀏覽的。</li>\n<li>並且 h1 的樣式給了一個 <code>letter spacing</code> 的屬性，讓標題文字寬度可以變寬，顯得更顯眼也好比較好閱讀。</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span> <span class=\"attr\">class</span>=<span class=\"string\">\" bg-[#eee]\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"p-4 h-screen lg:p-8\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"flex justify-between items-start lg:max-w-[1280px] lg:mx-auto\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">class</span>=<span class=\"string\">\"text-gray-800 text-4xl tracking-wide\"</span>&gt;</span>this is title<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span>login<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>這時就會得到以下結果，</p>\n<p><img src=\"https://i.imgur.com/Rj9zg83.png\" alt=\"h1\"></p>\n<blockquote>\n<p>有發現到 <code>button</code> 在 TailwindCSS 樣式跟傳統 CSS 的樣式不太一樣，是沒有預設樣式的。</p>\n</blockquote>\n<h2 id=\"按鈕樣式\"><a href=\"#按鈕樣式\" class=\"headerlink\" title=\"按鈕樣式\"></a>按鈕樣式</h2><p>前面有提到 JIT 模式的好處，不需要看額外配置檔的預設樣式有哪些偽類或偽元素沒有新增，而是直接加上去就可以了。</p>\n<p>除了最簡單的背景基本樣式以及 <code>active</code> 樣式外，這邊比較特別的是有加上一個 <code>duration</code> 的樣式，如果沒有 JIT 的話，前面要加上 <code>transition</code> 這個屬性，才會知道要用此樣式，但在 JIT 模式後，就會知道要使用 <code>transition</code> 這個效果，不需要另外寫。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">id</span>=<span class=\"string\">\"login\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">class</span>=<span class=\"string\">\" bg-purple-500 text-white py-2 px-4 rounded-md hover:bg-purple-600 tracking-wide active:bg-purple-900 active:ring-2 duration-200\"</span></span></span><br><span class=\"line\"><span class=\"tag\">&gt;</span></span><br><span class=\"line\">  login</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/gBuKlb5.png\" alt=\"button\"></p>\n","categories":["TailwindCSS"],"tags":["TailwindCSS"]},{"title":"TailwindCSS 筆記 - dark 深色模式","url":"/TailwindCSS/20210908/2562966958/","content":"<p><img src=\"https://images.unsplash.com/photo-1475070929565-c985b496cb9f?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1050&q=80\" alt=\"dark\"></p>\n<h2 id=\"深色模式的原理\"><a href=\"#深色模式的原理\" class=\"headerlink\" title=\"深色模式的原理\"></a>深色模式的原理</h2><p>TailwindCSS 有趣的還有深色模式，可以透過 media 與 class 的方式啟動深色模式。<br>可以在配置檔 <code>tailwind.config.js</code> 中自行設定。</p>\n<ul>\n<li>media：讓裝置在深色模式的時候自動轉換。</li>\n<li>class：手動切換深色模式。</li>\n</ul>\n<p><strong>tailwind.config.js</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  mode: <span class=\"string\">\"jit\"</span>, <span class=\"comment\">//加在這裡</span></span><br><span class=\"line\">  purge: [<span class=\"string\">\"./**/*.html\"</span>, <span class=\"string\">\"./src/**/*.css\"</span>],</span><br><span class=\"line\">  darkMode: <span class=\"literal\">false</span>, <span class=\"comment\">// or 'media' or 'class'</span></span><br><span class=\"line\">  theme: &#123;</span><br><span class=\"line\">    extend: &#123;&#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  variants: &#123;</span><br><span class=\"line\">    extend: &#123;</span><br><span class=\"line\">      <span class=\"comment\">// ringWidth: [\"active\"], //加在這裡</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  plugins: [],</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p>裝置切換這邊就不需要特別說明，不管是電腦、平板或手機現在都能設定在某個時間就切換成深色模式。</p>\n<p>這邊主要是介紹手動切換的練習。</p>\n<h2 id=\"起手式\"><a href=\"#起手式\" class=\"headerlink\" title=\"起手式\"></a>起手式</h2><p>首先先把深色模式設定成 class 的狀態。</p>\n<p><strong>tailwind.config.js</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  mode: <span class=\"string\">\"jit\"</span>,</span><br><span class=\"line\">  purge: [<span class=\"string\">\"./**/*.html\"</span>, <span class=\"string\">\"./src/**/*.css\"</span>],</span><br><span class=\"line\">  darkMode: <span class=\"string\">\"class\"</span>, <span class=\"comment\">//記得要是字串</span></span><br><span class=\"line\">  theme: &#123;</span><br><span class=\"line\">    extend: &#123;&#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  variants: &#123;</span><br><span class=\"line\">    extend: &#123;&#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  plugins: [],</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"實作背景切換深色模式\"><a href=\"#實作背景切換深色模式\" class=\"headerlink\" title=\"實作背景切換深色模式\"></a>實作背景切換深色模式</h2><p>我這邊寫兩個按鈕，分別要去切換日間模式與夜間模式。</p>\n<h3 id=\"Step-1-寫兩個按鈕\"><a href=\"#Step-1-寫兩個按鈕\" class=\"headerlink\" title=\"Step 1 - 寫兩個按鈕\"></a>Step 1 - 寫兩個按鈕</h3><p><strong>HTML</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">id</span>=<span class=\"string\">\"light\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">class</span>=<span class=\"string\">\"px-4 py-2 rounded-full bg-white border-gray-400 border-2\"</span></span></span><br><span class=\"line\"><span class=\"tag\">&gt;</span></span><br><span class=\"line\">  日間模式 <span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fas fa-sun text-yellow-500\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">id</span>=<span class=\"string\">\"dark\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">class</span>=<span class=\"string\">\"px-4 py-2 rounded-full bg-gray-700 border-gray-700 border-2 text-white\"</span></span></span><br><span class=\"line\"><span class=\"tag\">&gt;</span></span><br><span class=\"line\">  夜間模式<span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fas fa-moon text-yellow-500\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>會得到下方畫面：</p>\n<p><img src=\"https://i.imgur.com/6J1hQWP.png\" alt=\"button\"></p>\n<h3 id=\"Step-2-在-CSS-修改-base-的-body-樣式\"><a href=\"#Step-2-在-CSS-修改-base-的-body-樣式\" class=\"headerlink\" title=\"Step 2 - 在 CSS 修改 base 的 body 樣式\"></a>Step 2 - 在 CSS 修改 base 的 body 樣式</h3><figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@tailwind</span> base;</span><br><span class=\"line\"><span class=\"keyword\">@tailwind</span> components;</span><br><span class=\"line\"><span class=\"keyword\">@tailwind</span> utilities;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@layer</span> base &#123;</span><br><span class=\"line\">  <span class=\"selector-tag\">body</span> &#123;</span><br><span class=\"line\">    @apply dark:bg-black;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>務必記得一定要在配置檔改成 class 或 media 狀態，不然 CSS 其實看不懂什麼是 <code>dark:bg-black</code> 的樣式。</p>\n<h3 id=\"Step-3-寫入事件\"><a href=\"#Step-3-寫入事件\" class=\"headerlink\" title=\"Step 3 - 寫入事件\"></a>Step 3 - 寫入事件</h3><p>引入 JS 於 <code>&lt;body&gt;</code> 之前，這應該不用贅述。</p>\n<p><strong>HTML</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  ...</span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"js/all.js\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>JavaScript</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> light = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"light\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">let</span> dark = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"dark\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">light.addEventListener(<span class=\"string\">\"click\"</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">document</span>.documentElement.classList.remove(<span class=\"string\">\"dark\"</span>);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">dark.addEventListener(<span class=\"string\">\"click\"</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">document</span>.documentElement.classList.add(<span class=\"string\">\"dark\"</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>我綁定兩個按鈕後，分別寫入在日間模式時就移除 <code>.dark</code> ，反之，在夜間模式就新增 <code>.dark</code> 啟動深色模式。</p>\n<h3 id=\"完成\"><a href=\"#完成\" class=\"headerlink\" title=\"完成\"></a>完成</h3><p><strong>日間模式</strong></p>\n<p><img src=\"https://i.imgur.com/DbIEBhT.png\" alt=\"light\"></p>\n<p><strong>夜間模式</strong></p>\n<p><img src=\"https://i.imgur.com/3GZQf2i.png\" alt=\"dark\"></p>\n","categories":["TailwindCSS"],"tags":["TailwindCSS"]},{"title":"TailwindCSS 筆記 - Just In Time 模式的有趣功能","url":"/TailwindCSS/20210908/3644739138/","content":"<p><img src=\"https://tools.wingzero.tw/assets/upload/1611643654838_0.jpg\" alt=\"tailwindcss\"></p>\n<h2 id=\"未來更新趨勢\"><a href=\"#未來更新趨勢\" class=\"headerlink\" title=\"未來更新趨勢\"></a>未來更新趨勢</h2><p>從官方文件可以看到在 JIT 模式中的 CSS 寫法可以非常的多樣且直覺，而未來 TailwindCSS 更新的核心與發展都會圍繞著 JIT 模式來開發。</p>\n<h2 id=\"在-JIT-底下有趣的功能\"><a href=\"#在-JIT-底下有趣的功能\" class=\"headerlink\" title=\"在 JIT 底下有趣的功能\"></a>在 JIT 底下有趣的功能</h2><p>除了上篇說到的改尺寸跟顏色的寫法外，還有支持很多種原本要另外自己制定樣式的樣式，但在 TailwindCSS 中可以透過幾個 class 就能達成。</p>\n<h3 id=\"對於偽元素的支持\"><a href=\"#對於偽元素的支持\" class=\"headerlink\" title=\"對於偽元素的支持\"></a>對於偽元素的支持</h3><p>在傳統寫 CSS 使用偽元素可以完成許多樣式的設定，例如：</p>\n<iframe height=\"300\" style=\"width: 100%;\" scrolling=\"no\" title=\"偽元素 CSS\" src=\"https://codepen.io/hnzxewqw/embed/WNOoRrw?default-tab=html%2Cresult\" frameborder=\"no\">\n</iframe>\n\n<p>使用 TailwindCSS 可以這樣寫：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">class</span>=<span class=\"string\">\"</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">                    text-gray-700</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">                    before:text-white</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">                    after:text-white</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">                    before:p-2</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">                    after:p-2</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">                    before:content-['before'] before:block before:bg-blue-500</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">                    after:flex after:bg-pink-300 after:content-['after']</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">                \"</span></span></span><br><span class=\"line\"><span class=\"tag\">&gt;</span></span><br><span class=\"line\">  ----</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>畫面呈現會是：</p>\n<p><img src=\"https://i.imgur.com/RHX8j5T.png\" alt=\"fake\"></p>\n<p>而官方文件也提供以下偽元素可以使用的 variants</p>\n<p><img src=\"https://i.imgur.com/LCCinHY.png\" alt=\"pseudo variants\"></p>\n<h2 id=\"透明度\"><a href=\"#透明度\" class=\"headerlink\" title=\"透明度\"></a>透明度</h2><p>在沒有使用 JIT 模式下，如果要設定一個背景透明度要這樣寫，</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">class</span>=<span class=\"string\">\"bg-red-500 bg-opacity-25 w-20 h-20 flex justify-center items-center\"</span></span></span><br><span class=\"line\"><span class=\"tag\">&gt;</span></span><br><span class=\"line\">  透明度</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>但如果有使用 JIT 模式的話，可以這樣寫，效果也相同，直接在顏色上算數學，把設定的顏色直接去除想要的透明度數值，這點真是超方便的。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"bg-red-500/25 w-20 h-20 flex justify-center items-center\"</span>&gt;</span></span><br><span class=\"line\">  透明度</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/t5ATx50.png\" alt=\"opacity\"></p>\n<h2 id=\"使用變數來變更字體、顏色或是任何屬性值\"><a href=\"#使用變數來變更字體、顏色或是任何屬性值\" class=\"headerlink\" title=\"使用變數來變更字體、顏色或是任何屬性值\"></a>使用變數來變更字體、顏色或是任何屬性值</h2><p>這邊很有趣，有點像是 SCSS 可以命名變數的方式，但又更加彈性，有兩種可以改變樣式的方法。</p>\n<h3 id=\"定義變數並直接使用在-template-上\"><a href=\"#定義變數並直接使用在-template-上\" class=\"headerlink\" title=\"定義變數並直接使用在 template 上\"></a>定義變數並直接使用在 template 上</h3><p>在 <code>tailwind.css</code> 的 base 上方，先給一個 <code>:root{}</code> 的區塊，並且可以自訂義樣式名稱與值，比如說我要自訂字體大小、背景與顏色，可以這樣寫。</p>\n<p><strong>tailwind.css</strong></p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-pseudo\">:root</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">--color</span>: <span class=\"number\">#fff</span>;</span><br><span class=\"line\">  <span class=\"attribute\">--bgc</span>: <span class=\"number\">#3e3e3e</span>;</span><br><span class=\"line\">  <span class=\"attribute\">--fontSize</span>: <span class=\"number\">24px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@tailwind</span> base;</span><br><span class=\"line\"><span class=\"keyword\">@tailwind</span> components;</span><br><span class=\"line\"><span class=\"keyword\">@tailwind</span> utilities;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.title</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"built_in\">var</span>(--color);</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"built_in\">var</span>(--bgc);</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"built_in\">var</span>(--fontSize);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>html</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h2</span> <span class=\"attr\">class</span>=<span class=\"string\">\"title\"</span>&gt;</span>使用變數<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>變數前面要使用 <code>--</code>，沒辦法使用 <code>$</code> 或是 <code>_</code> 等符號，會無法成功命名變數。</p>\n</blockquote>\n<p>完成效果：</p>\n<p><img src=\"https://i.imgur.com/QVBMVjq.png\" alt=\"var\"></p>\n<h3 id=\"直接在-template-上使用變數\"><a href=\"#直接在-template-上使用變數\" class=\"headerlink\" title=\"直接在 template 上使用變數\"></a>直接在 template 上使用變數</h3><p>還有另一個方式是使用定義好的變數，因為 template 無法直接知道變數是什麼東西，所以在不同屬性的變數前面，要加上以下的類型。</p>\n<p><img src=\"https://i.imgur.com/c19Ivry.png\" alt=\"type\"></p>\n<p>以原本的變數為例，直接使用在 template 上可以這樣寫，</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h2</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">class</span>=<span class=\"string\">\"bg-[color:var(--bgc)] text-[color:var(--color)] text-[length:var(--fontSize)]\"</span></span></span><br><span class=\"line\"><span class=\"tag\">&gt;</span></span><br><span class=\"line\">  使用變數2</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>如同前面有提到可以自訂樣式的寫法，但這邊是使用 color 的類型去指定顏色相關的樣式，文字就要使用 length 的類型，並且後面再加上定義好的變數樣式，就可以直接使用了。</p>\n<p>得到的效果會與第一個相同。</p>\n<p><img src=\"https://i.imgur.com/RoaFGcf.png\" alt=\"var2\"></p>\n<p>雖然看起來比較麻煩，但好處是，當今天接手前人專案，當今天專案又大樣式又深的時候，沒時間研究的話，可以使用第二種方式達到修改樣式的效果喔！</p>\n<p>至於哪一種比較好用就見仁見智了。</p>\n<h2 id=\"修改-input-游標\"><a href=\"#修改-input-游標\" class=\"headerlink\" title=\"修改 input 游標\"></a>修改 input 游標</h2><p><code>&lt;input&gt;</code> 標籤不管在前後台都會頻繁使用的標籤，預設就是萬年不變的黑色閃爍游標</p>\n<iframe height=\"300\" style=\"width: 100%;\" scrolling=\"no\" title=\"input\" src=\"https://codepen.io/hnzxewqw/embed/mdwOWEO?default-tab=html%2Cresult\" >\n</iframe>\n\n<p>而 TailwindCSS 可以透過 JIT 模式去修改其游標樣式。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">class</span>=<span class=\"string\">\"caret-red-400 p-2 border-2 focus:border-blue-300 focus:outline-none\"</span></span></span><br><span class=\"line\"><span class=\"tag\">/&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/XcLz5eT.png\" alt=\"input\"></p>\n<h2 id=\"小結\"><a href=\"#小結\" class=\"headerlink\" title=\"小結\"></a>小結</h2><p>本篇就是紀錄一些在 JIT 模式中新增以及有趣的功能，跟著官方的示範跟練習，真的覺得 JIT 模式相當強大，也節省非常多的時間，真是太厲害了！</p>\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><ul>\n<li><a href=\"https://tailwindcss.com/docs/just-in-time-mode\" target=\"_blank\" rel=\"noopener\">Just-in-Time Mode</a></li>\n</ul>\n","categories":["TailwindCSS"],"tags":["TailwindCSS"]},{"title":"TailwindCSS 筆記 - 初探 Just in Time 模式 v2.2","url":"/TailwindCSS/20210908/2074616694/","content":"<p><img src=\"https://tools.wingzero.tw/assets/upload/1611643654838_0.jpg\" alt=\"tailwindcss\"></p>\n<h2 id=\"關於-JIT-模式\"><a href=\"#關於-JIT-模式\" class=\"headerlink\" title=\"關於 JIT 模式\"></a>關於 JIT 模式</h2><p>JIT(Just in Time Mode) 是在 TailwindCSS v2.1 以後才出現的功能，未來此框架開發也會圍繞在這個功能上，如果有試玩的朋友就會發現這個功能真是相當酷炫，所以如果專案沒有特別要求要支援 IE 的話，建議都直接更新到最新版本，因為有用跟沒有差非常多，v2.1 以前的版本是沒有支援 JIT 模式，所以開發時這一點非常需要注意！</p>\n<h2 id=\"為什麼要使用-JIT-模式\"><a href=\"#為什麼要使用-JIT-模式\" class=\"headerlink\" title=\"為什麼要使用 JIT 模式\"></a>為什麼要使用 JIT 模式</h2><p>練習至今有發現如果我修改很多 template 的東西，就會需要重新編譯專案，如果專案一大，編譯的時間就會很久，而在開發專案的過程必定會不斷地修改切版的內容，如果每次修改後都會因為編譯時間長而降低開發的效率，導致產出量能不佳，這樣原本這麼好用的切版框架，反而就變成不好用了。</p>\n<h2 id=\"使用-JIT-模式起手式\"><a href=\"#使用-JIT-模式起手式\" class=\"headerlink\" title=\"使用 JIT 模式起手式\"></a>使用 JIT 模式起手式</h2><p>打開 <code>tailwind.config.js</code> 檔案，然後加上 <code>mode:&#39;jit&#39;</code>，這樣就可以了。</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">module.exports = &#123;</span><br><span class=\"line\"><span class=\"function\">    purge: &#123;</span></span><br><span class=\"line\"><span class=\"function\">        <span class=\"title\">enabled</span>: <span class=\"title\">true</span>,</span></span><br><span class=\"line\"><span class=\"function\">        <span class=\"title\">content</span>: [\"./**/*.<span class=\"title\">html</span>\"],</span></span><br><span class=\"line\"><span class=\"function\">    &#125;,</span></span><br><span class=\"line\"><span class=\"function\">    <span class=\"title\">mode</span>:'<span class=\"title\">jit</span>', //加在這裡</span></span><br><span class=\"line\"><span class=\"function\">    <span class=\"title\">darkMode</span>: <span class=\"title\">false</span>, // <span class=\"title\">or</span> '<span class=\"title\">media</span>' <span class=\"title\">or</span> '<span class=\"title\">class</span>'</span></span><br><span class=\"line\"><span class=\"function\">    <span class=\"title\">theme</span>: &#123;</span></span><br><span class=\"line\"><span class=\"function\">        <span class=\"title\">extend</span>: &#123;&#125;,</span></span><br><span class=\"line\"><span class=\"function\">    &#125;,</span></span><br><span class=\"line\"><span class=\"function\">    <span class=\"title\">variants</span>: &#123;</span></span><br><span class=\"line\"><span class=\"function\">        <span class=\"title\">extend</span>: &#123;</span></span><br><span class=\"line\"><span class=\"function\">            <span class=\"title\">ringWidth</span>: [\"<span class=\"title\">active</span>\"],</span></span><br><span class=\"line\"><span class=\"function\">        &#125;,</span></span><br><span class=\"line\"><span class=\"function\">    &#125;,</span></span><br><span class=\"line\"><span class=\"function\">    <span class=\"title\">plugins</span>: [],</span></span><br><span class=\"line\"><span class=\"function\">&#125;;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"直接看編譯速度\"><a href=\"#直接看編譯速度\" class=\"headerlink\" title=\"直接看編譯速度\"></a>直接看編譯速度</h3><p>最有感覺就是在編譯的時候，這是沒有用 JIT 的編譯時間，共花了 2.6 秒左右。</p>\n<p><img src=\"https://i.imgur.com/0Al5Q2V.png\" alt=\"before jit\"></p>\n<p>這是使用 JIT 之後，瞬間不到 1 秒就編譯完了！哇喔！</p>\n<p><img src=\"https://i.imgur.com/JgRo4ze.png\" alt=\"used jit\"></p>\n<h3 id=\"默認加入所有的狀態\"><a href=\"#默認加入所有的狀態\" class=\"headerlink\" title=\"默認加入所有的狀態\"></a>默認加入所有的狀態</h3><p>使用 JIT 的好處其二，之前有看到有些樣式的狀態需要另外透過擴充的方式增加，但這樣變成再開發的時候，還要去確認哪一個有加上狀態，哪一個沒有加上狀態，以之前的練習為例，我在 <code>variants</code> 中擴充了一個 <code>ringWidth</code> 有 <code>active</code> 的狀態，但使用 JIT 模式後，這一段就不用加了，因為在此模式會默認所有狀態都加上去。</p>\n<p><strong>tailwind.config.js</strong></p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">module.exports = &#123;</span><br><span class=\"line\"><span class=\"function\">    mode: \"<span class=\"title\">jit</span>\", //加在這裡</span></span><br><span class=\"line\"><span class=\"function\">    <span class=\"title\">purge</span>: [\"./**/*.<span class=\"title\">html</span>\", \"./<span class=\"title\">src</span>/**/*.<span class=\"title\">css</span>\"],</span></span><br><span class=\"line\"><span class=\"function\">    <span class=\"title\">darkMode</span>: <span class=\"title\">false</span>, // <span class=\"title\">or</span> '<span class=\"title\">media</span>' <span class=\"title\">or</span> '<span class=\"title\">class</span>'</span></span><br><span class=\"line\"><span class=\"function\">    <span class=\"title\">theme</span>: &#123;</span></span><br><span class=\"line\"><span class=\"function\">        <span class=\"title\">extend</span>: &#123;&#125;,</span></span><br><span class=\"line\"><span class=\"function\">    &#125;,</span></span><br><span class=\"line\"><span class=\"function\">    <span class=\"title\">variants</span>: &#123;</span></span><br><span class=\"line\"><span class=\"function\">        <span class=\"title\">extend</span>: &#123;</span></span><br><span class=\"line\"><span class=\"function\"></span></span><br><span class=\"line\"><span class=\"function\">        &#125;,</span></span><br><span class=\"line\"><span class=\"function\">    &#125;,</span></span><br><span class=\"line\"><span class=\"function\">    <span class=\"title\">plugins</span>: [],</span></span><br><span class=\"line\"><span class=\"function\">&#125;;</span></span><br></pre></td></tr></table></figure>\n\n<p>雖然我已經把擴充的 ringWidth 刪除了，但我在 click 的時候依然會有 active 效果。</p>\n<p><img src=\"https://i.imgur.com/28I60l1.png\" alt=\"active\"></p>\n<h3 id=\"客製化樣式超省力\"><a href=\"#客製化樣式超省力\" class=\"headerlink\" title=\"客製化樣式超省力\"></a>客製化樣式超省力</h3><p>之前如果要客製化樣式，要回到配置檔的 theme 的內容去做客製，但如果在開發中會不斷需要增減樣式，其實是一件非常麻煩的事情，而且客製的內容只能使用 TailwindCSS 設定好的數值，如果要特別客製，可能就要寫成元件的方式，一兩頁可能還好，但當專案頁數一多，相依性也多的時候，就會非常的麻煩，但 JIT 幫我們解決這樣的問題。</p>\n<p>以下方為例：</p>\n<p>做一個寬高都相同為 <code>w-20</code> 的方形，</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"container mx-auto mt-3\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"w-20 h-20 bg-blue-500 mt-4\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/jXaWS3I.png\" alt=\"box\"></p>\n<p>如果使用 JIT 模式，我可以直接透過 <code>w-[...]</code> 的方式修改，就不用透過擴充的方式更改樣式囉！</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"container mx-auto mt-3\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"w-[20px] h-20 bg-blue-500\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/WVGCN0n.png\" alt=\"box fix\"></p>\n<p>打開開發人員工具也可以看到樣式的確被修改了。</p>\n<p><img src=\"https://i.imgur.com/snMKec7.png\" alt=\"console\"></p>\n<p>當然顏色也可以這樣處理，方式也與剛剛修改寬度的方式相同，只要給予一個色票號碼即可。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"w-[20px] h-20 bg-[#f0f]\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/0BnzDUv.png\" alt=\"pink\"></p>\n<p><img src=\"https://i.imgur.com/1Fi07bu.png\" alt=\"bg\"></p>\n<p>透過以上兩個簡單的練習，已經可以體驗到除了大幅降低編譯時間外，更重要的是可以客製化的彈性更大，當然還有很多內容可以參考官方文件。</p>\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><ul>\n<li><a href=\"https://tailwindcss.tw/docs/just-in-time-mode#troubleshooting\" target=\"_blank\" rel=\"noopener\">Just-in-Time ModeTailwind CSS version</a></li>\n</ul>\n","categories":["TailwindCSS"],"tags":["TailwindCSS"]},{"title":"TailwindCSS 筆記 - 切一個響應式留言按鈕畫面","url":"/TailwindCSS/20210908/1511158673/","content":"<p><img src=\"https://i.imgur.com/WgHixfe.png\" alt=\"rwd button\"></p>\n<p>前面了解基礎的使用後，來實戰一個簡單的留言按鈕與如何變成響應式的呈現。</p>\n<h2 id=\"基礎架構\"><a href=\"#基礎架構\" class=\"headerlink\" title=\"基礎架構\"></a>基礎架構</h2><ul>\n<li>有大頭照</li>\n<li>有留言區按鈕</li>\n</ul>\n<h2 id=\"進行切版\"><a href=\"#進行切版\" class=\"headerlink\" title=\"進行切版\"></a>進行切版</h2><ol>\n<li>跟 Bootstrap 有點像，最外層使用 <code>.container</code> 訂調介面為滿版。</li>\n<li>制定灰色底色區塊，並且要符合整個頁面寬，使用 <code>.w-full</code> 語法，透過提示工具可以看到 <code>.w-full = width:100%</code>，為了要讓大頭照跟留言按鈕橫向呈現，在給予一個 <code>.flex</code> 語法。</li>\n<li>大頭照部分使用 <a href=\"https://picsum.photos/\" target=\"_blank\" rel=\"noopener\">picsum</a> 的隨機圖片，並且設定外層有白框，使用 <code>.border-white .border-2</code> 兩個語法。</li>\n<li>按鈕部分使用 <code>.flex-1</code>，其作用是讓按鈕自適應縮放，不受初始大小影響。</li>\n<li>按鈕加上當有 hover 時，背景色可以變換，只要寫上 <code>hover:bg-gray-300</code> 就可以囉！</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"container mx-auto mt-3\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">class</span>=<span class=\"string\">\"block text-gray-800 text-xl py-5 font-bold\"</span>&gt;</span>寫一個留言按鈕<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"w-full px-4 py-3 flex box-border rounded-lg bg-gray-400\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">class</span>=<span class=\"string\">\"w-12 mr-3 flex-shrink-0 rounded-full border-white border-2 overflow-hidden\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    &gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"https://picsum.photos/200/200?random=1\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"flex-1 bg-gray-200 rounded-full hover:bg-gray-300\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">class</span>=<span class=\"string\">\"text-left pl-3 text-gray-600  text-md\"</span>&gt;</span>在想些什麼...<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>這樣就切完了，滿單純也簡單，而且可以快速的達到想要的效果。</p>\n<h2 id=\"加上自訂義的屬性\"><a href=\"#加上自訂義的屬性\" class=\"headerlink\" title=\"加上自訂義的屬性\"></a>加上自訂義的屬性</h2><p>雖然 TailwindCSS 已經有預設一些樣式的狀態，但並不是每個都有支援，假設現在 PM 說：客戶想要在按鈕外面加上外框，並且要在點擊時出現。</p>\n<p>這時候我就要去找 <code>variants</code> 預設中這個 <code>ringWidth</code> 的 Utility，然後發現初始設定並沒有 active 這個屬性。</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">ringWidth: ['<span class=\"title\">responsive</span>', '<span class=\"title\">focus</span>-<span class=\"title\">within</span>', '<span class=\"title\">focus</span>'],</span></span><br></pre></td></tr></table></figure>\n\n<p>這時候就可以自行擴增其屬性，可以到 tailwind.config.js 中的 extends，加上這個屬性，</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  purge: [<span class=\"string\">\"./**/*.html\"</span>],</span><br><span class=\"line\">  darkMode: <span class=\"literal\">false</span>, <span class=\"comment\">// or 'media' or 'class'</span></span><br><span class=\"line\">  theme: &#123;</span><br><span class=\"line\">    extend: &#123;&#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  variants: &#123;</span><br><span class=\"line\">    extend: &#123;</span><br><span class=\"line\">      ringWidth: [<span class=\"string\">\"active\"</span>], <span class=\"comment\">//加在這裡</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  plugins: [],</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p>加好之後記得要重新編譯 TailwindCSS。</p>\n<p>此時，就會看到我只有打 ac，就會出現對應的選項。</p>\n<p><img src=\"https://i.imgur.com/XLlMqaq.png\" alt=\"active\"></p>\n<p>再來就只要加上 active 後，ring 的寬度即可。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"flex-1 bg-gray-200 rounded-full hover:bg-gray-300 active:ring-4\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">class</span>=<span class=\"string\">\"text-left pl-3 text-gray-600  text-md\"</span>&gt;</span>在想些什麼...<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>然後加好之後，在滑鼠點擊時，就會出現外框了。</p>\n<p><img src=\"https://i.imgur.com/fw4DY7X.png\" alt=\"ring\"></p>\n<h2 id=\"加上響應式\"><a href=\"#加上響應式\" class=\"headerlink\" title=\"加上響應式\"></a>加上響應式</h2><p>前面有提到 TailwindCSS 任何的 Utility 都可以加上響應式。假設我在不同斷點要呈現外框都是不同顏色，可以這樣寫</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"container mx-auto mt-3\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">class</span>=<span class=\"string\">\"block text-gray-800 text-xl py-5 font-bold\"</span>&gt;</span>寫一個留言按鈕<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">class</span>=<span class=\"string\">\"w-full px-4 py-3 flex box-border rounded-lg bg-gray-400 sm:bg-red-400 md:bg-yellow-400 lg:bg-green-400 xl:bg-blue-400\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  &gt;</span></span><br><span class=\"line\">    ...</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>然後就會看到當解析度不同的時候會呈現不同的顏色。</p>\n<h3 id=\"screen-lt-sm-640px\"><a href=\"#screen-lt-sm-640px\" class=\"headerlink\" title=\"screen &lt; sm(640px)\"></a>screen &lt; sm(640px)</h3><p><img src=\"https://i.imgur.com/5To5HI2.png\" alt=\"phone\"></p>\n<h3 id=\"screen-gt-sm-640px\"><a href=\"#screen-gt-sm-640px\" class=\"headerlink\" title=\"screen &gt; sm(640px)\"></a>screen &gt; sm(640px)</h3><p><img src=\"https://i.imgur.com/D7bi6sy.png\" alt=\"sm\"></p>\n<h3 id=\"screen-gt-md-768px\"><a href=\"#screen-gt-md-768px\" class=\"headerlink\" title=\"screen &gt; md(768px)\"></a>screen &gt; md(768px)</h3><p><img src=\"https://i.imgur.com/u29R6Kt.png\" alt=\"md\"></p>\n<h3 id=\"screen-gt-lg-1024px\"><a href=\"#screen-gt-lg-1024px\" class=\"headerlink\" title=\"screen &gt; lg(1024px)\"></a>screen &gt; lg(1024px)</h3><p><img src=\"https://i.imgur.com/XQ8LVS6.png\" alt=\"lg\"></p>\n<h3 id=\"screen-gt-xl-1280px\"><a href=\"#screen-gt-xl-1280px\" class=\"headerlink\" title=\"screen &gt; xl(1280px)\"></a>screen &gt; xl(1280px)</h3><p><img src=\"https://i.imgur.com/9vaScav.png\" alt=\"xl\"></p>\n<p>寫到這邊完全沒有寫到任何一行 CSS，但卻可以實現樣式與響應式功能，真是非常棒呢！</p>\n","categories":["TailwindCSS"],"tags":["TailwindCSS"]},{"title":"TailwindCSS 筆記 - 認識 PostCSS","url":"/TailwindCSS/20210908/1114276106/","content":"<p><img src=\"https://cythilya.github.io/assets/css/postcss-cover-small.png\" alt=\"postcss\"></p>\n<p>前面有提到安裝 TailwindCSS 推薦使用 PostCSS，前面練習的都是沒有相依 PostCSS 來練習，但該面對的總是要面對，先來認識一下關於 CSS 的處理，就以一般前端常用的 SCSS 為例。</p>\n<h2 id=\"關於預處理器與後處理器\"><a href=\"#關於預處理器與後處理器\" class=\"headerlink\" title=\"關於預處理器與後處理器\"></a>關於預處理器與後處理器</h2><p>從字面上可以得知，CSS 的處理可以分為預處理跟後處理 <del>(廢話)</del>，相信有切版一段時間的前端工程師都享受到預處理器的方便之處，可以統一命名變數整理關於字型顏色、大小或是各種共用的屬性，避免不斷輸入一樣的色碼，甚至在大幅修改的時候，可以透過變數免去修改的時間。</p>\n<h3 id=\"預處理器\"><a href=\"#預處理器\" class=\"headerlink\" title=\"預處理器\"></a>預處理器</h3><blockquote>\n<p>寫的內容瀏覽器並看不懂，但透過 build 之後編譯成瀏覽器看得懂的 CSS 語法。</p>\n</blockquote>\n<p>像是今天要寫一個圓角，可以透過變數撰寫顏色，並且可以用 &amp; 延續要做 <code>:hover</code> 效果，不必重新寫一次 class 的動作。</p>\n<iframe height=\"300\" style=\"width: 100%;\" scrolling=\"no\" title=\"scss\" src=\"https://codepen.io/hnzxewqw/embed/YzQXvVq?default-tab=html%2Cresult\">\n</iframe>\n\n<p><strong>SCSS</strong></p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\">$bg-primary: red;</span><br><span class=\"line\">$bg-hover: orange;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.box</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: $bg-primary;</span><br><span class=\"line\">  &amp;:hover &#123;</span><br><span class=\"line\">    background-color: $bg-hover;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>編譯成 CSS 後</p>\n<p><strong>CSS</strong></p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.box</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: red;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.box</span><span class=\"selector-pseudo\">:hover</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: orange;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>是不是超方便，但 SCSS 有一個要注意的地方，如果要使用預處理器，就要使用他所有的包含的內容，不能自行刪減，就算你這個專案用不到，但還是需要整個使用。</p>\n<h2 id=\"後處理器\"><a href=\"#後處理器\" class=\"headerlink\" title=\"後處理器\"></a>後處理器</h2><p>既然能預處理也可以後處理，而 PostCSS 就是屬於後處理器，其中方便之處是可以自行增減自己需要的編譯的部分，最常用的就是個瀏覽器的前綴詞。套件是這個 <a href=\"https://www.npmjs.com/package/autoprefixer\" target=\"_blank\" rel=\"noopener\">autoprefixer</a></p>\n<h3 id=\"後處理器-1\"><a href=\"#後處理器-1\" class=\"headerlink\" title=\"後處理器\"></a>後處理器</h3><p>直接先看官方範例，下方是要寫的樣式，</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.my-class</span>,</span><br><span class=\"line\"><span class=\"selector-id\">#my-id</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">1em</span>;</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: all <span class=\"number\">1s</span> ease;</span><br><span class=\"line\">  <span class=\"attribute\">box-shadow</span>: <span class=\"number\">#123456</span> <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">10px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>但如果要自行加上各瀏覽器的前綴詞會變這樣，</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.my-class</span>,</span><br><span class=\"line\"><span class=\"selector-id\">#my-id</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">-moz-border-radius</span>: <span class=\"number\">1em</span>;</span><br><span class=\"line\">  <span class=\"attribute\">-webkit-border-radius</span>: <span class=\"number\">1em</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">1em</span>;</span><br><span class=\"line\">  <span class=\"attribute\">-moz-transition</span>: all <span class=\"number\">1s</span> ease;</span><br><span class=\"line\">  <span class=\"attribute\">-o-transition</span>: all <span class=\"number\">1s</span> ease;</span><br><span class=\"line\">  <span class=\"attribute\">-webkit-transition</span>: all <span class=\"number\">1s</span> ease;</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: all <span class=\"number\">1s</span> ease;</span><br><span class=\"line\">  <span class=\"attribute\">-moz-box-shadow</span>: <span class=\"number\">#123456</span> <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">10px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">-webkit-box-shadow</span>: <span class=\"number\">#123456</span> <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">10px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">box-shadow</span>: <span class=\"number\">#123456</span> <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">10px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>光是去找相符的瀏覽器就搞死自己，但是透過後處理器編譯後，就可以直接這樣了，當然預處理器也可以辦到。</p>\n<h3 id=\"那幹嘛用後處理器\"><a href=\"#那幹嘛用後處理器\" class=\"headerlink\" title=\"那幹嘛用後處理器\"></a>那幹嘛用後處理器</h3><ol>\n<li>可以建立自己的套件(plugins)。</li>\n<li>使用標準的 CSS 語法。</li>\n</ol>\n<h2 id=\"PostCSS-起手式\"><a href=\"#PostCSS-起手式\" class=\"headerlink\" title=\"PostCSS 起手式\"></a>PostCSS 起手式</h2><ul>\n<li>安裝 PostCSS 與其插件。</li>\n</ul>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm install postcss postcss-loader autoprefixer precss --save-dev</span><br></pre></td></tr></table></figure>\n\n<p>這邊有安裝剛剛提到的前綴詞插件 <code>autoprefixer</code>。</p>\n<ul>\n<li>安裝完後會有一個 <code>postcss.config.js</code> 檔案，加入需要用到的 press 與 autoprefixer 套件即可。<blockquote>\n<p>所有想要用的擴充套件都要在 <code>postcss.config.js</code> 設定檔才行。當然用在 <code>tailwind</code> 的時候就是要在 <code>tailwind.config.js</code> 裡面設定。</p>\n</blockquote>\n</li>\n</ul>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">module.exports = &#123;</span><br><span class=\"line\"><span class=\"function\">  plugins: &#123;</span></span><br><span class=\"line\"><span class=\"function\">    <span class=\"title\">precss</span>: &#123;&#125;, // 使用類似 <span class=\"title\">SASS</span> 的功能，例如：變數</span></span><br><span class=\"line\"><span class=\"function\">    <span class=\"title\">autoprefixer</span>: &#123;</span></span><br><span class=\"line\"><span class=\"function\">      // 加入各家瀏覽器的前綴詞</span></span><br><span class=\"line\"><span class=\"function\">      <span class=\"title\">browsers</span>: [</span></span><br><span class=\"line\"><span class=\"function\">        // 指定支援的瀏覽器版本</span></span><br><span class=\"line\"><span class=\"function\">        '<span class=\"title\">Chrome</span> &gt;= 52',</span></span><br><span class=\"line\"><span class=\"function\">        '<span class=\"title\">FireFox</span> &gt;= 44',</span></span><br><span class=\"line\"><span class=\"function\">        '<span class=\"title\">Safari</span> &gt;= 7',</span></span><br><span class=\"line\"><span class=\"function\">        '<span class=\"title\">Explorer</span> &gt;= 11',</span></span><br><span class=\"line\"><span class=\"function\">        '<span class=\"title\">last</span> 2 <span class=\"title\">Edge</span> <span class=\"title\">versions</span>',</span></span><br><span class=\"line\"><span class=\"function\">      ],</span></span><br><span class=\"line\"><span class=\"function\">    &#125;,</span></span><br><span class=\"line\"><span class=\"function\">  &#125;,</span></span><br><span class=\"line\"><span class=\"function\">&#125;;</span></span><br></pre></td></tr></table></figure>\n\n<p>這樣就可以使用 <code>autoprefixer</code> 的套件了。</p>\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><ul>\n<li><a href=\"https://cythilya.github.io/2018/08/10/postcss/\" target=\"_blank\" rel=\"noopener\">PostCSS</a></li>\n<li><a href=\"http://huli.logdown.com/posts/262723-experiences-what-is-postcss\" target=\"_blank\" rel=\"noopener\">[心得] 什麼是 postcss?</a></li>\n<li><a href=\"https://ithelp.ithome.com.tw/articles/10245594\" target=\"_blank\" rel=\"noopener\">DAY13 - Postprocessor - PostCss 基本介紹</a></li>\n</ul>\n","categories":["TailwindCSS"],"tags":["TailwindCSS"]},{"title":"Angular 筆記 - 控制 details 裡面的元素不被觸發","url":"/angular/20210827/946158258/","content":"<p><img src=\"https://i.imgur.com/87pBpoJ.jpg\" alt=\"angular\"></p>\n<p>紀錄本次專案一個需求解法。</p>\n<h2 id=\"需求\"><a href=\"#需求\" class=\"headerlink\" title=\"需求\"></a>需求</h2><ul>\n<li>本次使用到 details 手風琴坐收闔的功能，並且裡面有放三個 input。</li>\n<li>當 details 開啟時須帶出 input 的值。</li>\n<li>當 details 收闔時要清空 input 的值，送出時為空值。</li>\n</ul>\n<h2 id=\"建立-HTML\"><a href=\"#建立-HTML\" class=\"headerlink\" title=\"建立 HTML\"></a>建立 HTML</h2><p>因有多個 <code>input</code> ，故使用 <code>formGroup</code> 建立整份表單。</p>\n<p><strong>app.component.html</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> [<span class=\"attr\">formGroup</span>]=<span class=\"string\">\"form\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">details</span> <span class=\"attr\">class</span>=<span class=\"string\">\"details\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">summary</span>&gt;</span>詳細資料<span class=\"tag\">&lt;/<span class=\"name\">summary</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">formControlName</span>=<span class=\"string\">\"firstInput\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">formControlName</span>=<span class=\"string\">\"secondInput\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">formControlName</span>=<span class=\"string\">\"thirdInput\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">details</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>app.component.ts</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">form: FormGroup;</span><br><span class=\"line\"> ngOnInit() &#123;</span><br><span class=\"line\">   <span class=\"keyword\">this</span>.createForm();</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"> createForm() &#123;</span><br><span class=\"line\">   <span class=\"keyword\">this</span>.form = <span class=\"keyword\">this</span>._fb.group(&#123;</span><br><span class=\"line\">     firstInput: <span class=\"string\">''</span>,</span><br><span class=\"line\">     secondInput: <span class=\"string\">''</span>,</span><br><span class=\"line\">     thirdInput: <span class=\"string\">''</span></span><br><span class=\"line\">   &#125;);</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n\n<p>建立完成後，就要來看一下 details 怎麼用。</p>\n<h2 id=\"details-屬性\"><a href=\"#details-屬性\" class=\"headerlink\" title=\"details 屬性\"></a>details 屬性</h2><p><code>details</code> 預設打開為 <code>true</code>，關閉為 <code>false</code>，一開始我就想，不然我就用一個變數 <code>isOpen</code> 的變數來記錄 <code>details</code> 開關的狀態，但當我點擊 <code>input</code> 時，狀態會從 <code>true</code> 變成 <code>false</code>，結果會把其他輸入好的欄位清空。</p>\n<p>因為是第一次使用 <code>details</code> 標籤，發現 <code>details</code> 裡面的元素，會點擊一次就更改 <code>details</code> 的狀態，導致無法正確將值送出。</p>\n<h2 id=\"控制-details-狀態\"><a href=\"#控制-details-狀態\" class=\"headerlink\" title=\"控制 details 狀態\"></a>控制 details 狀態</h2><p>經過一番查找後，發現 <code>details</code> 有一個屬性為 <code>open</code>，所以就直接使用此屬性作為判斷，當 <code>details</code> 的屬性不是 open 的時候才清空 input 的值，在 <code>details</code> 上加上一個點擊事件。</p>\n<p><strong>app.component.html</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> [<span class=\"attr\">formGroup</span>]=<span class=\"string\">\"form\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">details</span> <span class=\"attr\">class</span>=<span class=\"string\">\"details\"</span> (<span class=\"attr\">click</span>)=<span class=\"string\">\"detailsClick($event)\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">summary</span>&gt;</span>詳細資料<span class=\"tag\">&lt;/<span class=\"name\">summary</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">formControlName</span>=<span class=\"string\">\"firstInput\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span>  <span class=\"attr\">formControlName</span>=<span class=\"string\">\"secondInput\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span>  <span class=\"attr\">formControlName</span>=<span class=\"string\">\"thirdInput\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">details</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>在寫入判斷：</p>\n<p><strong>app.component.ts</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">detailsClick(e: any) &#123;</span><br><span class=\"line\">  <span class=\"comment\">//取得 details DOM 元素</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> details = <span class=\"keyword\">this</span>._el.nativeElement.querySelector(<span class=\"string\">'details'</span>);</span><br><span class=\"line\">  <span class=\"comment\">//判斷 details 屬性不是 open 的時候清空 input</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!details.open) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.form.get(<span class=\"string\">'firstInput'</span>).setValue(<span class=\"string\">''</span>);</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.form.get(<span class=\"string\">'secondInput'</span>).setValue(<span class=\"string\">''</span>);</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.form.get(<span class=\"string\">'thirdInput'</span>).setValue(<span class=\"string\">''</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"使用停止冒泡事件\"><a href=\"#使用停止冒泡事件\" class=\"headerlink\" title=\"使用停止冒泡事件\"></a>使用停止冒泡事件</h2><p>經同事建議，還有另一個解法，就是直接阻止 <code>input</code> 的點擊冒泡事件。</p>\n<p>只要在 <code>input</code> 上加上<strong>停止冒泡事件</strong>的方法，也可達到此效果。</p>\n<p><strong>app.componnet.html</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> [<span class=\"attr\">formGroup</span>]=<span class=\"string\">\"form\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">details</span> <span class=\"attr\">class</span>=<span class=\"string\">\"details\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">summary</span>&gt;</span>詳細資料<span class=\"tag\">&lt;/<span class=\"name\">summary</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">input</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">formControlName</span>=<span class=\"string\">\"firstInput\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        (<span class=\"attr\">click</span>)=<span class=\"string\">\"stopDetailEvent($event)\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">input</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">formControlName</span>=<span class=\"string\">\"secondInput\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        (<span class=\"attr\">click</span>)=<span class=\"string\">\"stopDetailEvent($event)\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">input</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">formControlName</span>=<span class=\"string\">\"thirdInput\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        (<span class=\"attr\">click</span>)=<span class=\"string\">\"stopDetailEvent($event)\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">details</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>使用 <code>stopPropagation()</code> 方法。</p>\n<p><strong>app.component.ts</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">stopDetailEvent(e: any) &#123;</span><br><span class=\"line\">  e.stopPropagation();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Demo\"><a href=\"#Demo\" class=\"headerlink\" title=\"Demo\"></a>Demo</h2><p><a href=\"https://stackblitz.com/edit/angular-ivy-xpfs5w?file=src/app/app.component.ts\" target=\"_blank\" rel=\"noopener\">連結</a></p>\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><ul>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/details\" target=\"_blank\" rel=\"noopener\"><code>&lt;details&gt;</code>: The Details disclosure element</a></li>\n</ul>\n","categories":["Angular"],"tags":["Angular","JavaScript"]},{"title":"Angular 筆記 - 取得下拉選單的 value 並渲染在網頁上","url":"/angular/20210827/2357473237/","content":"<p><img src=\"https://i.imgur.com/87pBpoJ.jpg\" alt=\"angular\"></p>\n<p>本次紀錄如何從下拉選單將選取到的 value 渲染在畫面上。</p>\n<h2 id=\"情境\"><a href=\"#情境\" class=\"headerlink\" title=\"情境\"></a>情境</h2><p>本次需求為當我選擇到下拉選單後，按下按鈕後要把所選到的 value 值渲染在畫面上，如下圖。</p>\n<p><img src=\"https://i.imgur.com/dVHlNNP.png\" alt=\"select\"></p>\n<h2 id=\"演示資料\"><a href=\"#演示資料\" class=\"headerlink\" title=\"演示資料\"></a>演示資料</h2><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">data = [</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    key: <span class=\"string\">\"101\"</span>,</span><br><span class=\"line\">    value: <span class=\"string\">\"項目一\"</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    key: <span class=\"string\">\"102\"</span>,</span><br><span class=\"line\">    value: <span class=\"string\">\"項目二\"</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    key: <span class=\"string\">\"103\"</span>,</span><br><span class=\"line\">    value: <span class=\"string\">\"項目三\"</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">];</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"實作一：直接取-DOM\"><a href=\"#實作一：直接取-DOM\" class=\"headerlink\" title=\"實作一：直接取 DOM\"></a>實作一：直接取 DOM</h2><p>起初我想到的是使用 <code>ElementRef</code> 的方法，直接去控制 DOM 元素，我使用 formControlName 的方式去取得下拉選單的內容。</p>\n<p><strong>app.component.html</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> [<span class=\"attr\">formGroup</span>]=<span class=\"string\">\"selectForm\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">class</span>=<span class=\"string\">\"select\"</span> <span class=\"attr\">formControlName</span>=<span class=\"string\">\"select\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">class</span>=<span class=\"string\">\"option\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"\"</span> <span class=\"attr\">disabled</span>&gt;</span>請選擇項目<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">class</span>=<span class=\"string\">\"option\"</span> [<span class=\"attr\">value</span>]=<span class=\"string\">\"item.key\"</span> *<span class=\"attr\">ngFor</span>=<span class=\"string\">\"let item of data\"</span>&gt;</span></span><br><span class=\"line\">      &#123;&#123;item.value&#125;&#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">\"button\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn btn-primary\"</span> (<span class=\"attr\">click</span>)=<span class=\"string\">\"clickBtn()\"</span>&gt;</span></span><br><span class=\"line\">    按我看選到的值</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>app.component.ts</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">clickBtn() &#123;</span><br><span class=\"line\">   <span class=\"keyword\">this</span>.selectKey = <span class=\"keyword\">this</span>.selectForm.get(<span class=\"string\">'select'</span>).value;</span><br><span class=\"line\">   <span class=\"keyword\">this</span>.selectValue = <span class=\"keyword\">this</span>._el.nativeElement.querySelector(</span><br><span class=\"line\">     <span class=\"string\">'.option'</span></span><br><span class=\"line\">   ).innerText;</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n\n<p>這樣的確可以取到下拉選單的 value，但是<a href=\"https://angular.tw/api/core/ElementRef\" target=\"_blank\" rel=\"noopener\">官方文件</a>表示不建議直接控制 DOM 元素取值，會容易導致 XSS 攻擊。</p>\n<h2 id=\"實作二：使用-filter\"><a href=\"#實作二：使用-filter\" class=\"headerlink\" title=\"實作二：使用 filter\"></a>實作二：使用 filter</h2><p>這邊改用 filter 方法取值，概念是當我選到的下拉選單去跟我的 item 去比對，如果取到一樣的 key，我就把該筆 key 值的 value 渲染到網頁上。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">clickBtn() &#123;</span><br><span class=\"line\">   <span class=\"keyword\">this</span>.selectKey = <span class=\"keyword\">this</span>.selectForm.get(<span class=\"string\">'select'</span>).value;</span><br><span class=\"line\">   <span class=\"keyword\">this</span>.data.filter(<span class=\"function\"><span class=\"params\">item</span>=&gt;</span>&#123;</span><br><span class=\"line\">     <span class=\"built_in\">console</span>.log(item)</span><br><span class=\"line\">   &#125;)</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n\n<p><code>console.log</code> 出的內容會是 data 資料。</p>\n<p><img src=\"https://i.imgur.com/EQyScMe.png\" alt=\"data\"></p>\n<p>那我就按照剛剛的想法時作此內容。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">clickBtn() &#123;</span><br><span class=\"line\">   <span class=\"keyword\">this</span>.selectKey = <span class=\"keyword\">this</span>.selectForm.get(<span class=\"string\">'select'</span>).value;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//取得下拉選單的值</span></span><br><span class=\"line\">   <span class=\"keyword\">this</span>.data.filter(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> &#123;</span><br><span class=\"line\">     <span class=\"keyword\">if</span> (item.key === <span class=\"keyword\">this</span>.selectKey) &#123;</span><br><span class=\"line\">       <span class=\"keyword\">this</span>.selectValue = item.value;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">   &#125;);</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n\n<p>可以得到跟第一個實作相同的結果，但安全就差很多。</p>\n<p><img src=\"https://i.imgur.com/BzHPlnv.png\" alt=\"filter\"></p>\n<h2 id=\"Demo\"><a href=\"#Demo\" class=\"headerlink\" title=\"Demo\"></a>Demo</h2><p><a href=\"https://stackblitz.com/edit/angular-ivy-xmffcg?embed=1&file=src/app/app.component.ts\" target=\"_blank\" rel=\"noopener\">連結</a></p>\n","categories":["Angular"],"tags":["Angular","JavaScript"]},{"title":"npm 筆記 - npm 基礎認識","url":"/npm/20210811/2865500697/","content":"<p><img src=\"https://i.imgur.com/fuNDhRt.jpg\" alt=\"npm\"></p>\n<h2 id=\"何謂-npm\"><a href=\"#何謂-npm\" class=\"headerlink\" title=\"何謂 npm\"></a>何謂 npm</h2><p>npm 全名是 Node Package Manager 的縮寫，是 Node.js 預設的 node 套件管理平台，簡單來說可以當作是一個建立跟管理專案的好用套件，也可以下載好用的工具。</p>\n<p>npm 傳送門 <a href=\"https://www.npmjs.com/\" target=\"_blank\" rel=\"noopener\">https://www.npmjs.com/</a></p>\n<p><img src=\"https://i.imgur.com/z9vhaZ0.jpg\" alt=\"npm\"></p>\n<h2 id=\"安裝套件\"><a href=\"#安裝套件\" class=\"headerlink\" title=\"安裝套件\"></a>安裝套件</h2><p>假設要找一個再戰十年的 jQuery，就不用到官網下載，直接在搜尋列輸入 <code>jquery</code>，就會呈現出下方結果。</p>\n<p><img src=\"https://i.imgur.com/TUM35fx.png\" alt=\"jquery\"></p>\n<p>點進去就可以看到有一個安裝指令(背景反綠色的地方)，以及說明。</p>\n<p><img src=\"https://i.imgur.com/0WX1Lp8.png\" alt=\"jquery detail\"></p>\n<p>再複製安裝指令到終端機貼上，就會安裝 jQuery 囉！</p>\n<p><img src=\"https://i.imgur.com/OfqzsNk.png\" alt=\"install\"></p>\n<blockquote>\n<p>也可以輸入完整指令 npm install jquery，但通常會將 install 縮寫成 i。</p>\n</blockquote>\n<h2 id=\"透過-nvm-安裝-Node-js\"><a href=\"#透過-nvm-安裝-Node-js\" class=\"headerlink\" title=\"透過 nvm 安裝 Node.js\"></a>透過 nvm 安裝 Node.js</h2><p>上方已經知道可以使用 npm 安裝套件了，也知道 npm 是一個 Node.js 預設的管理平台，所以要使用 npm 之前要先安裝 Node.js。</p>\n<h3 id=\"為什麼要用-nvm-安裝\"><a href=\"#為什麼要用-nvm-安裝\" class=\"headerlink\" title=\"為什麼要用 nvm 安裝\"></a>為什麼要用 nvm 安裝</h3><p>這是之前專案踩過的雷點，原本一開始都是透過 node.js 官網下載軟體，但是剛好專案就是遇到 node 版本不同的狀況，所以要去切換版本，但如果是透過官網下載的版本無法直接切換，經前輩指導建議我透過 nvm 下載 Node.js，這樣就可以去切換版本，不管是協作或是未來維護專案都非常好用。</p>\n<blockquote>\n<p>安裝方法可以參考 <a href=\"https://ithelp.ithome.com.tw/articles/10207177\" target=\"_blank\" rel=\"noopener\">nvm - 版本隨你切</a>，此篇就不贅述。</p>\n</blockquote>\n<h2 id=\"初始化-npm\"><a href=\"#初始化-npm\" class=\"headerlink\" title=\"初始化 npm\"></a>初始化 npm</h2><p>安裝 node 後，就可以在終端機輸入 npm init，然後就會需要一連串的確認，最後會問是否確定。</p>\n<p><img src=\"https://i.imgur.com/xROvSnb.png\" alt=\"init\"></p>\n<p>完成後就會出現一個 package.json 檔案。</p>\n<p><img src=\"https://i.imgur.com/9e4gY19.png\" alt=\"package\"></p>\n<h3 id=\"script-指令\"><a href=\"#script-指令\" class=\"headerlink\" title=\"script 指令\"></a>script 指令</h3><p>這個屬性內是可以自訂義想要使用的指令，並且透過 npm run xxxx，並且裡面會 echo 出要的內容。例如我把指令改成 <code>dev</code>，並且 echo 的內容改成 <code>this is tim&#39;s project</code></p>\n<p><img src=\"https://i.imgur.com/L8EfZDU.png\" alt=\"dev\"></p>\n<p>執行指令後，終端機會看到剛剛更改的內容。</p>\n<p><img src=\"https://i.imgur.com/AytYtZK.png\" alt=\"echo\"></p>\n<h2 id=\"什麼是-package-json\"><a href=\"#什麼是-package-json\" class=\"headerlink\" title=\"什麼是 package.json\"></a>什麼是 package.json</h2><p>簡單說就是這整個專案的說明，設定了什麼指令，安裝了什麼專案，都會呈現在這邊，像 dependencies<br>說明此專案安裝了 <code>tailwindcss</code>，如果我要多安裝一個 jQuery，就參考上方安裝的指令，就會看到我安裝完成了 jQuery，並且所有安裝的套件都會儲存在 node_modules 的資料夾內。</p>\n<p><img src=\"https://i.imgur.com/F8jPsm0.png\" alt=\"jquery\"></p>\n<p>那有安裝，就有移除，所以只要輸入移除的指令即可 <code>npm uninstall xxxx</code>，所以我要移除 jquery，就只要輸入 <code>npm uninstall jquery</code>，jQuery 就被移除了，很方便吧！</p>\n<p><img src=\"https://i.imgur.com/7FY1Foe.png\" alt=\"uninstall\"></p>\n<p>然後再看到 package.json 檔案就會發現 jQuery 不見了。</p>\n<p><img src=\"https://i.imgur.com/h9of504.png\" alt=\"clear jquery\"></p>\n<p>在版本控制的時候，並不會把 <code>node_modules</code> 的資料夾也上傳，因為如果專案很大，安裝的套件多，檔案容量就會很大，光是上傳下載就浪費很多時間，所以這隻檔案就有它的用途了，拿到這隻專案的同事或是自己，只要 <code>package.json</code> 中有紀錄安裝的套件，這時只要輸入 <code>npm i</code>，就會把裡面所有的套件一起安裝完畢，超方便的啦！</p>\n<h3 id=\"package-lock-json-是什麼\"><a href=\"#package-lock-json-是什麼\" class=\"headerlink\" title=\"package-lock.json 是什麼\"></a>package-lock.json 是什麼</h3><p>主要是可以確定協作開發團隊的各套件版本的共同性，不會因為 package.json 的關係，導致不同的人套件版本號不同，在合併分支的時候而產生衝突，所以如果要控管團隊開發套件的版本號，也要把這支檔案合併到版本控制中。</p>\n<p>簡單說就是如果想要大家的套件都安裝最新版本，這支檔案就不需要傳給團隊，反之，如果要限定版本號，就要把支檔案傳給團隊。</p>\n","categories":["npm"],"tags":["Angular","JavaScript","npm"]},{"title":"Angular 筆記 - 下載功能開發","url":"/angular/20210811/2384415938/","content":"<p><img src=\"https://i.imgur.com/muuG8RA.jpg\" alt=\"download\"></p>\n<p>這次記錄一下用 Angular 開發的下載檔案功能，流程是這樣：</p>\n<h2 id=\"操作流程\"><a href=\"#操作流程\" class=\"headerlink\" title=\"操作流程\"></a>操作流程</h2><ul>\n<li>從 API 渲染按鈕，並且點擊後會得到該按鈕的 key 與 value。</li>\n<li>出現列表。</li>\n<li>點擊列表後會接收到該列表的檔名。</li>\n<li>把列表的檔名去呼叫下載檔案的 API。</li>\n<li>產生下載檔案。</li>\n</ul>\n<h2 id=\"實作過程\"><a href=\"#實作過程\" class=\"headerlink\" title=\"實作過程\"></a>實作過程</h2><h3 id=\"建立下載的方法\"><a href=\"#建立下載的方法\" class=\"headerlink\" title=\"建立下載的方法\"></a>建立下載的方法</h3><p><strong>http.service.ts</strong></p>\n<p>下載檔案要傳三個參數：</p>\n<ul>\n<li><code>url</code>: api 的連結，是一個字串。</li>\n<li><code>body</code>: post API 時，request 的參數，會是一個物件。</li>\n<li><code>option</code>: blob 的物件。</li>\n</ul>\n<p>其中最重要的就是這一行：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> option = &#123; <span class=\"attr\">responseType</span>: <span class=\"string\">\"blob\"</span> <span class=\"keyword\">as</span> <span class=\"string\">\"json\"</span> &#125;;</span><br></pre></td></tr></table></figure>\n\n<p>因為是用 Angular 的 HttpClient 透過瀏覽器下載檔案，所以需要先指定回傳的型別(responseType)為 Blob 格式。</p>\n<blockquote>\n<p>因為 HttpClient 預設回傳的格式為 json，要轉成 Blob 格式才能下載。</p>\n</blockquote>\n<p>因為這次傳案要下載的是 PDF 檔案，電腦並無法直接下載 PDF，所以要轉成 Blob 格式，並把 option 物件在呼叫時放在第三個參數用。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">download&lt;T&gt;(paramUrl: string, <span class=\"attr\">paramBody</span>: object, paramOption?: object): Observable&lt;T&gt; &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> option = &#123; <span class=\"attr\">responseType</span>: <span class=\"string\">\"blob\"</span> <span class=\"keyword\">as</span> <span class=\"string\">\"json\"</span> &#125;;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>._http.post&lt;T&gt;(paramUrl, paramBody, option).pipe(</span><br><span class=\"line\">            catchError(<span class=\"function\">(<span class=\"params\">err</span>) =&gt;</span> &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (err <span class=\"keyword\">instanceof</span> HttpErrorResponse) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> throwError(<span class=\"keyword\">this</span>.error(err));</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">        );</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>download.service.ts</strong></p>\n<p>專案中另外建一個給下載檔案專用的 service，因為下載檔案的觀察者物件的型態無法預期，所以使用 any 型別，可以接受任意的型別。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">fileDownload(param: fileDownload): Observable&lt;any&gt; &#123;</span><br><span class=\"line\">       <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>._http.download&lt;any&gt;(<span class=\"string\">`<span class=\"subst\">$&#123;environment.apiUrl&#125;</span>/File/DownloadFile`</span>, param);</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>download.component.ts</strong></p>\n<ul>\n<li>建立一個 <code>download</code> 函式作為按鈕點擊事件用。</li>\n<li>帶入要傳的參數 <code>this.fileName</code>。</li>\n<li>呼叫 API。</li>\n<li>給一個區域變數，型別為 Blob，並產生新的 <code>Blob</code> 物件，把回傳的 <code>res</code> 資料放在第一個參數，並用一個大括號接收，原因是之前已經轉成 <code>json</code> 格式，後面的參數要放一個物件裡面是 <code>type</code>，其值為要下載的檔案格式。</li>\n<li>定義一個 <code>downloadUrl</code>，要去產生一個 <code>createObjectURL</code> 的靜態方法。<a href=\"https://developer.mozilla.org/zh-TW/docs/Web/API/URL/createObjectURL\" target=\"_blank\" rel=\"noopener\">MDN 解釋</a>，再把剛剛產生的 <code>blob</code> 物件放在這個方法內。</li>\n<li>並且動態產生一個 <code>a</code> 連結。</li>\n<li>定義連結的 <code>href</code> 是 <code>downloadURL</code> 這個物件。</li>\n<li>使用 a 連結的 download 屬性，並將下載檔名用 api 給個參數名稱。</li>\n<li>並增加一個 <code>click</code> 點擊事件。</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">download() &#123;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> req: fileDownload = &#123;</span><br><span class=\"line\">          FILENM: <span class=\"keyword\">this</span>.fileName,</span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">this</span>._fileDownload.fileDownload(req).subscribe(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">          <span class=\"keyword\">let</span> blob: Blob = <span class=\"keyword\">new</span> Blob([res], &#123; <span class=\"attr\">type</span>: <span class=\"string\">\"application/pdf\"</span> &#125;);</span><br><span class=\"line\">          <span class=\"keyword\">let</span> downloadUrl = <span class=\"built_in\">window</span>.URL.createObjectURL(blob);</span><br><span class=\"line\">          <span class=\"keyword\">let</span> link = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">\"a\"</span>);</span><br><span class=\"line\">          link.href = downloadUrl;</span><br><span class=\"line\">          link.download = <span class=\"keyword\">this</span>.fileName;</span><br><span class=\"line\">          link.click();</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n\n<p>如此，就完成了一個下載檔案的功能。</p>\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><ul>\n<li><a href=\"https://dotblogs.com.tw/Leo_CodeSpace/2019/11/29/135746\" target=\"_blank\" rel=\"noopener\">Angular 實作檔案下載(瀏覽器自動下載)</a></li>\n</ul>\n","categories":["Angular"],"tags":["Angular","JavaScript"]},{"title":"Angular 筆記 - 如何透過 groupby 建立檔案與應用","url":"/angular/20210804/2286373608/","content":"<p><img src=\"https://i.imgur.com/20QoJwt.png\" alt=\"image\"></p>\n<h3 id=\"本次情境\"><a href=\"#本次情境\" class=\"headerlink\" title=\"本次情境\"></a>本次情境</h3><p>本次需求是要將同一個客戶的資料重新組合在一起，並將有相同的資料要跨欄在 table 呈現，不要問我為什麼後端不處理…就記錄一下這次專案上遇到的問題…</p>\n<h3 id=\"資料範例如下\"><a href=\"#資料範例如下\" class=\"headerlink\" title=\"資料範例如下\"></a>資料範例如下</h3><figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">data=[</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"function\">            BRANCH: \"台北營業所\",</span></span><br><span class=\"line\"><span class=\"function\">            <span class=\"title\">CARMDL</span>: \"<span class=\"title\">car</span>\",</span></span><br><span class=\"line\"><span class=\"function\">            <span class=\"title\">CFID</span>: \"11111111\",</span></span><br><span class=\"line\"><span class=\"function\">            <span class=\"title\">INTIME</span>: \"2016-08-08 10:11:22\",</span></span><br><span class=\"line\"><span class=\"function\">            <span class=\"title\">ORDERFLAG</span>: \"1\",</span></span><br><span class=\"line\"><span class=\"function\">            <span class=\"title\">SALESNM</span>: \"業務<span class=\"title\">A</span>\",</span></span><br><span class=\"line\"><span class=\"function\">            <span class=\"title\">SORTFLAG</span>: \"1\",</span></span><br><span class=\"line\"><span class=\"function\">            <span class=\"title\">USERID</span>: \"\",</span></span><br><span class=\"line\"><span class=\"function\">            <span class=\"title\">USERNM</span>: \"客戶<span class=\"title\">A</span>\",</span></span><br><span class=\"line\"><span class=\"function\">        &#125;,</span></span><br><span class=\"line\"><span class=\"function\">        &#123;</span></span><br><span class=\"line\"><span class=\"function\">            <span class=\"title\">BRANCH</span>: \"桃園營業所\",</span></span><br><span class=\"line\"><span class=\"function\">            <span class=\"title\">CARMDL</span>: \"<span class=\"title\">truck</span>\",</span></span><br><span class=\"line\"><span class=\"function\">            <span class=\"title\">CFID</span>: \"11111111\",</span></span><br><span class=\"line\"><span class=\"function\">            <span class=\"title\">INTIME</span>: \"2016-08-08 10:09:55\",</span></span><br><span class=\"line\"><span class=\"function\">            <span class=\"title\">ORDERFLAG</span>: \"1\",</span></span><br><span class=\"line\"><span class=\"function\">            <span class=\"title\">SALESNM</span>: \"業務<span class=\"title\">B</span>\",</span></span><br><span class=\"line\"><span class=\"function\">            <span class=\"title\">SORTFLAG</span>: \"2\",</span></span><br><span class=\"line\"><span class=\"function\">            <span class=\"title\">USERID</span>: \"\",</span></span><br><span class=\"line\"><span class=\"function\">            <span class=\"title\">USERNM</span>: \"客戶<span class=\"title\">A</span>\",</span></span><br><span class=\"line\"><span class=\"function\">        &#125;,</span></span><br><span class=\"line\"><span class=\"function\">        &#123;</span></span><br><span class=\"line\"><span class=\"function\">            <span class=\"title\">BRANCH</span>: \"新莊營業所\",</span></span><br><span class=\"line\"><span class=\"function\">            <span class=\"title\">CARMDL</span>: \"<span class=\"title\">train</span>\",</span></span><br><span class=\"line\"><span class=\"function\">            <span class=\"title\">CFID</span>: \"22222222\",</span></span><br><span class=\"line\"><span class=\"function\">            <span class=\"title\">INTIME</span>: \"2016-06-08 15:28:55\",</span></span><br><span class=\"line\"><span class=\"function\">            <span class=\"title\">ORDERFLAG</span>: \"2\",</span></span><br><span class=\"line\"><span class=\"function\">            <span class=\"title\">SALESNM</span>: \"業務<span class=\"title\">C</span>\",</span></span><br><span class=\"line\"><span class=\"function\">            <span class=\"title\">SORTFLAG</span>: \"1\",</span></span><br><span class=\"line\"><span class=\"function\">            <span class=\"title\">USERID</span>: \"\",</span></span><br><span class=\"line\"><span class=\"function\">            <span class=\"title\">USERNM</span>: \"客戶<span class=\"title\">B</span>\",</span></span><br><span class=\"line\"><span class=\"function\">        &#125;,</span></span><br><span class=\"line\"><span class=\"function\">        &#123;</span></span><br><span class=\"line\"><span class=\"function\">            <span class=\"title\">BRANCH</span>: \"台北營業所\",</span></span><br><span class=\"line\"><span class=\"function\">            <span class=\"title\">CARMDL</span>: \"<span class=\"title\">bike</span>\",</span></span><br><span class=\"line\"><span class=\"function\">            <span class=\"title\">CFID</span>: \"22222222\",</span></span><br><span class=\"line\"><span class=\"function\">            <span class=\"title\">INTIME</span>: \"2016-07-07 09:59:00\",</span></span><br><span class=\"line\"><span class=\"function\">            <span class=\"title\">ORDERFLAG</span>: \"2\",</span></span><br><span class=\"line\"><span class=\"function\">            <span class=\"title\">SALESNM</span>: \"業務<span class=\"title\">D</span>\",</span></span><br><span class=\"line\"><span class=\"function\">            <span class=\"title\">SORTFLAG</span>: \"2\",</span></span><br><span class=\"line\"><span class=\"function\">            <span class=\"title\">USERID</span>: \"\",</span></span><br><span class=\"line\"><span class=\"function\">            <span class=\"title\">USERNM</span>: \"客戶<span class=\"title\">B</span>\",</span></span><br><span class=\"line\"><span class=\"function\">        &#125;,</span></span><br><span class=\"line\"><span class=\"function\">]</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"觀察相同點\"><a href=\"#觀察相同點\" class=\"headerlink\" title=\"觀察相同點\"></a>觀察相同點</h3><p>以前兩筆資料為例，可以看到有 <code>CFID</code>、<code>ORDERFLAG</code>、<code>USERNM</code> 這三個欄位相同，CFID 看起來就是這筆資料的唯一代碼，所以我想說要從這裡下手。</p>\n<h2 id=\"groupby\"><a href=\"#groupby\" class=\"headerlink\" title=\"groupby\"></a>groupby</h2><p>首先在 <code>util.service</code> 建立一個 groupby 方法。</p>\n<blockquote>\n<p>service 可自訂義，只是剛好專案把很多功能類的方法寫在此 service 內</p>\n</blockquote>\n<p><strong>util.service.ts</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">groupBy&lt;T&gt;(array: <span class=\"built_in\">Array</span>&lt;T&gt;, <span class=\"attr\">key</span>: any): any &#123;</span><br><span class=\"line\">     <span class=\"keyword\">return</span> array.reduce(<span class=\"function\">(<span class=\"params\">group, item</span>) =&gt;</span> &#123;</span><br><span class=\"line\">         <span class=\"keyword\">const</span> val = item[key];</span><br><span class=\"line\">         group[val] = group[val] || [];</span><br><span class=\"line\">         group[val].push(item);</span><br><span class=\"line\">         <span class=\"keyword\">return</span> group;</span><br><span class=\"line\">     &#125;, &#123;&#125;);</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"使用-groupby-轉資料\"><a href=\"#使用-groupby-轉資料\" class=\"headerlink\" title=\"使用 groupby 轉資料\"></a>使用 groupby 轉資料</h2><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">getData() &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>._util.loadingShow();</span><br><span class=\"line\">        <span class=\"keyword\">let</span> req: B006Q01Request = &#123;</span><br><span class=\"line\">            DLRCD: <span class=\"keyword\">this</span>.user.DLRCD,</span><br><span class=\"line\">            BRNHCD: <span class=\"keyword\">this</span>.user.BRNHCD,</span><br><span class=\"line\">            SECTCD: <span class=\"keyword\">this</span>.user.SECTCD,</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">this</span>._serviceB06</span><br><span class=\"line\">            .getMVE2B006Q01(req)</span><br><span class=\"line\">            .pipe(</span><br><span class=\"line\">                map(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> res.ResultData.MVE2MVE2B006_Q01),</span><br><span class=\"line\">                finalize(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">this</span>._util.loadingHide();</span><br><span class=\"line\">                &#125;)</span><br><span class=\"line\">            )</span><br><span class=\"line\">            .subscribe(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">                <span class=\"keyword\">this</span>.mveB06Q1Data = res;</span><br><span class=\"line\">                <span class=\"keyword\">this</span>.groupData = <span class=\"keyword\">this</span>._util.groupBy(<span class=\"keyword\">this</span>.mveB06Q1Data, <span class=\"string\">\"CFID\"</span>); <span class=\"comment\">//*這段是重點</span></span><br><span class=\"line\">                <span class=\"keyword\">this</span>.mveB06Q1Data = <span class=\"keyword\">this</span>.groupData; <span class=\"comment\">//*替換原本的陣列</span></span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n<p>使用 groupby 方法重組資料，第一個參數要帶目前的資料陣列，第二個參數要帶以什麼為基準的 key。<br>console 出來會看到資料變成這樣</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">11111111</span>:(<span class=\"number\">2</span>)[(...),(...)],</span><br><span class=\"line\"><span class=\"number\">22222222</span>:(<span class=\"number\">2</span>)[(...),(...)]</span><br></pre></td></tr></table></figure>\n\n<p>然後到這邊我就卡住了，因為沒接過這樣的資料，後來查詢一些資料後才知道，前面是我得到的 key 值，透過 groupby 的方法已經幫我把同類型的資料內容分類好了，所以我已經得到了資料。</p>\n<h3 id=\"重點是怎麼渲染在畫面上\"><a href=\"#重點是怎麼渲染在畫面上\" class=\"headerlink\" title=\"重點是怎麼渲染在畫面上\"></a>重點是怎麼渲染在畫面上</h3><p>網路上找了許多方法，大部分都是告訴我怎麼用 groupby 重組資料，但比較少渲染在資料上，有找到的也無法完全符合我目前的情境。</p>\n<p>後來觀察表格發現我要把目前同一個 key 的資料，有共同的內容要用 <code>rowspan</code> 的方式渲染在畫面上，不同的要維持原本的 table 呈現(如一開始畫面所示)。</p>\n<h2 id=\"跑雙迴圈\"><a href=\"#跑雙迴圈\" class=\"headerlink\" title=\"跑雙迴圈\"></a>跑雙迴圈</h2><h3 id=\"Object-keys\"><a href=\"#Object-keys\" class=\"headerlink\" title=\"Object.keys()\"></a>Object.keys()</h3><ul>\n<li>得到重組資料後，一開始會得到一個物件裡面又包著我重組的陣列資料，想說去查一下物件怎麼轉成陣列的方法，後來去查，找不到，再換一個想法，就是如何取到物件中陣列的值，後來發現有一個 ES5 的語法是 <a href=\"https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Object/keys\" target=\"_blank\" rel=\"noopener\">Object.keys()</a> 的方法，有成功取到值，但後來又卡住不知道怎麼渲染在畫面上，再去找資料。</li>\n</ul>\n<h3 id=\"keyValue\"><a href=\"#keyValue\" class=\"headerlink\" title=\"keyValue\"></a>keyValue</h3><ul>\n<li>因為我知道要把資料渲染在畫面上，可以用 <code>ngfor</code> 來渲染資料，後來找到<a href=\"https://stackoverflow.com/questions/35534959/access-key-and-value-of-object-using-ngfor\" target=\"_blank\" rel=\"noopener\">這篇</a>，我把原本接 API 的內容替換成重組資料。並使用 Angular 的 pipe 方法，<a href=\"https://angular.tw/api/common/KeyValue\" target=\"_blank\" rel=\"noopener\">keyvalue</a>，讓其跑迴圈時會遍歷資料所有的 key 跟 value。</li>\n</ul>\n<p>後來才發現 <code>groupby</code> 組回來的資料外面是一個物件，因為物件沒有 <code>forEach</code> 可以用，但因透過 <code>keyValue</code> 的方式可以去找出物件的 <code>key</code> 跟 <code>value</code>。</p>\n<p>那 <code>key</code> 就是我的 <code>CFID</code>，<code>value</code> 就是陣列。</p>\n<h2 id=\"來渲染網頁吧\"><a href=\"#來渲染網頁吧\" class=\"headerlink\" title=\"來渲染網頁吧\"></a>來渲染網頁吧</h2><blockquote>\n<p>僅記錄 <code>tbody</code> 的部分。</p>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">ng-container</span> *<span class=\"attr\">ngFor</span>=<span class=\"string\">\"let row of mveB06Q1Data | keyvalue; let i = index\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tr</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">class</span>=<span class=\"string\">\"Nb-bg\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      [<span class=\"attr\">id</span>]=<span class=\"string\">\"item.CFID\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      *<span class=\"attr\">ngFor</span>=<span class=\"string\">\"let item of row.value; let j = index\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    &gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">ng-container</span> *<span class=\"attr\">ngIf</span>=<span class=\"string\">\"j == 0\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span> [<span class=\"attr\">attr.rowspan</span>]=<span class=\"string\">\"row.value.length\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"none\"</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">input</span></span></span><br><span class=\"line\"><span class=\"tag\">              <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span></span></span><br><span class=\"line\"><span class=\"tag\">              <span class=\"attr\">class</span>=<span class=\"string\">\"checkbox\"</span></span></span><br><span class=\"line\"><span class=\"tag\">              [<span class=\"attr\">checked</span>]=<span class=\"string\">\"isCheck(item.CFID)\"</span></span></span><br><span class=\"line\"><span class=\"tag\">              (<span class=\"attr\">click</span>)=<span class=\"string\">\"clickChecked(item.CFID, $event)\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            /&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"check-icon\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span> [<span class=\"attr\">attr.rowspan</span>]=<span class=\"string\">\"row.value.length\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"NB\"</span>&gt;</span>&#123;&#123; i + 1 &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span> <span class=\"attr\">class</span>=<span class=\"string\">\"name\"</span> [<span class=\"attr\">attr.rowspan</span>]=<span class=\"string\">\"row.value.length\"</span>&gt;</span></span><br><span class=\"line\">          &#123;&#123; item.USERNM &#125;&#125;</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span> <span class=\"attr\">class</span>=<span class=\"string\">\"name\"</span> [<span class=\"attr\">attr.rowspan</span>]=<span class=\"string\">\"row.value.length\"</span> <span class=\"attr\">data-title</span>=<span class=\"string\">\"統編：\"</span>&gt;</span></span><br><span class=\"line\">          &#123;&#123; item.USERID &#125;&#125;</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">ng-container</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">td</span> <span class=\"attr\">data-title</span>=<span class=\"string\">\"車<span class=\"symbol\">&amp;emsp;</span><span class=\"symbol\">&amp;emsp;</span>型：\"</span>&gt;</span>&#123;&#123; item.CARMDL &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">td</span> <span class=\"attr\">data-title</span>=<span class=\"string\">\"營業所 ：\"</span>&gt;</span>&#123;&#123; item.BRANCH &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">td</span> <span class=\"attr\">data-title</span>=<span class=\"string\">\"業<span class=\"symbol\">&amp;emsp;</span><span class=\"symbol\">&amp;emsp;</span>代：\"</span>&gt;</span>&#123;&#123; item.SALESNM &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">td</span> <span class=\"attr\">data-title</span>=<span class=\"string\">\"輸入時間：\"</span>&gt;</span>&#123;&#123; item.INTIME &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">ng-container</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">tbody</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>我把要共同顯示的部分用一個 <code>ng-container</code> 包起來，然後讓它跑第一層迴圈，並且後面使用 <code>keyvalue</code> 這個 pipe 方法，讓我可以取到 <code>key</code> 跟 <code>value</code>。這邊的 key 不用特別寫的原因是因為我在 groupby 的時候已經取出來了，所以使用 <code>keyvalue</code> 時，會自己去抓到 key。</li>\n<li>在 <code>tr</code> 上跑第二個迴圈，因為 <code>value</code> 才是陣列資料本身的欄位，所以第二層迴圈是 <code>row.value</code>，這邊是小細節，必須注意，後來我也有用 <code>json pipe</code> 的去檢查我取到的內容，才發現有 <code>value</code> 這個欄位，在 <code>console</code> 時不會看到。</li>\n<li>在共同要顯示成一個欄位的 <code>td</code>，我外層再使用一個 <code>ng-container</code> 包起來，是要下判斷只取第二層迴圈的第一筆資料，原因是內容都一樣，只要選一個出來顯示即可，第二層迴圈才是真正的陣列資料。</li>\n<li>在要上下合併的欄位使用 <code>[attr.rowspan]=&quot;row.value.length&quot;</code> 去自訂義 <code>rowspan</code> 的數值，期數值為該陣列資料的長度。</li>\n</ul>\n<p>其他就讓它自己跑迴圈渲染，這樣就得到我要的畫面呈現了。</p>\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><ul>\n<li><a href=\"https://stackoverflow.com/questions/14446511/most-efficient-method-to-groupby-on-an-array-of-objects\" target=\"_blank\" rel=\"noopener\">Most efficient method to groupby on an array of objects</a></li>\n</ul>\n","categories":["Angular"],"tags":["Angular","JavaScript"]},{"title":"Angular 筆記 - 自訂 Pipe 修改現成日期字串切割與轉換文字內容","url":"/angular/20210702/113573135/","content":"<p><img src=\"https://i.imgur.com/87pBpoJ.jpg\" alt=\"angular\"></p>\n<p>本篇記錄透過使用套件接回來的日期修改流程。</p>\n<h2 id=\"開發環境與實作內容\"><a href=\"#開發環境與實作內容\" class=\"headerlink\" title=\"開發環境與實作內容\"></a>開發環境與實作內容</h2><ul>\n<li>Angular11</li>\n<li><a href=\"https://angular-calendar.com/#/kitchen-sink\" target=\"_blank\" rel=\"noopener\">angular-calendar 套件使用</a></li>\n<li>自訂 Pipe 修改日期內容</li>\n</ul>\n<h2 id=\"需求\"><a href=\"#需求\" class=\"headerlink\" title=\"需求\"></a>需求</h2><p>目前套件的日期當我選到一週的時候，會顯示如下圖。</p>\n<p><img src=\"https://i.imgur.com/l86JdZa.png\" alt=\"week\"></p>\n<p>但專案需求要改成 <code>2021, 6/27 - 7/3</code>。</p>\n<h2 id=\"處理流程\"><a href=\"#處理流程\" class=\"headerlink\" title=\"處理流程\"></a>處理流程</h2><p>首先這是套件已經封裝好的日期格式，再透過觀察發現只有在 week 的時候會顯示日期範圍的呈現，所以變成我要改成自訂義的方式，這時前輩的提點說可以使用 Pipe 來轉換顯示。</p>\n<h3 id=\"建立-Pipe\"><a href=\"#建立-Pipe\" class=\"headerlink\" title=\"建立 Pipe\"></a>建立 Pipe</h3><p>基本的 date pipe 可以看 <a href=\"https://hsuchihting.github.io/angular/20200913/2198414702/\">Angular 筆記 - Pipe 管線元件：date</a></p>\n<p>那這邊要自訂義的 Pipe 才能轉換日期格式，起手式為建立一個 pipe 的 ts 檔案，這邊我就自定名稱為 <code>weekRange.pipe.ts</code>。</p>\n<ul>\n<li>先輸入 <code>@Pipe</code> 透過智能提示，會出現選項，然後它是一個 function，裡面放一個物件，<code>key</code> 是 <code>name</code>，<code>value</code> 是這個 <code>pipe</code> 在 HTML 要使用的名字，是字串型別。</li>\n<li>要 export 這個 pipe，class 是跟剛剛自訂義的 name 一樣，這邊是 <code>test</code>(大小寫也要相同)，並且要用 <code>PipeTransform</code> 來實作它。</li>\n<li>裡面要用一個 tranform 的方法，參數這邊是帶套件的 <code>date</code>。</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; Pipe, PipeTransform &#125; <span class=\"keyword\">from</span> <span class=\"string\">\"@angular/core\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">@Pipe(&#123;</span><br><span class=\"line\">  name: <span class=\"string\">\"test\"</span>,</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">test</span> <span class=\"title\">implements</span> <span class=\"title\">PipeTransform</span> </span>&#123;</span><br><span class=\"line\">  transform(date: string) &#123;&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>到目前為止已經完成基礎設置。</p>\n<p>最後記得要去 <code>app.module.ts</code> 的 declaration 陣列中引入 pipe。</p>\n<blockquote>\n<p>引入的地方看專案而定。</p>\n</blockquote>\n<h2 id=\"取得日期並開始切割它\"><a href=\"#取得日期並開始切割它\" class=\"headerlink\" title=\"取得日期並開始切割它\"></a>取得日期並開始切割它</h2><p>我先把 date 取出來看看格式是什麼?</p>\n<p><strong>console.log</strong></p>\n<p><img src=\"https://i.imgur.com/kmr6kf1.png\" alt=\"date\"></p>\n<p>確認取到跟內容相符的字串後，就開始來處理吧！</p>\n<h3 id=\"使用-split-分割\"><a href=\"#使用-split-分割\" class=\"headerlink\" title=\"使用 split 分割\"></a>使用 split 分割</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> time = date.split(<span class=\"string\">\",\"</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"time:\"</span>, time); <span class=\"comment\">// 會取到一個陣列</span></span><br></pre></td></tr></table></figure>\n\n<p>我會得到一個陣列，如下圖。</p>\n<p><img src=\"https://i.imgur.com/nuV0N2A.png\" alt=\"dateArr\"></p>\n<p>這時候我已經取到年份了，再來我要處理月跟日。所以我先把年先存起來。然後剛剛可以觀察到兩個日期中間有一個 dash 作為連接，所以要把這個拿掉。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> year = time[<span class=\"number\">1</span>]; <span class=\"comment\">//年</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> firstDay = time[<span class=\"number\">0</span>].split(<span class=\"string\">\"-\"</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"firstDay:\"</span>, firstDay);</span><br></pre></td></tr></table></figure>\n\n<p>一樣使用 <code>split()</code> 將 dash 兩邊的字串取出，又會得到一個陣列。</p>\n<p><img src=\"https://i.imgur.com/VMwzcDQ.png\" alt=\"dateArr2\"></p>\n<p>會發現月跟日中間有一個空白，也是用 <code>split()</code> 去分割字串，並且用變數將其存取。這樣我就有<strong>起始月</strong>跟<strong>結束月</strong>以及<strong>起始日</strong>跟<strong>結束日</strong>。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> getStartDay = firstDay[<span class=\"number\">0</span>].split(<span class=\"string\">\" \"</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> getEndDay = firstDay[<span class=\"number\">1</span>].split(<span class=\"string\">\" \"</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"getStartDay:\"</span>, getStartDay, <span class=\"string\">\"getEndDay:\"</span>, getEndDay);</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/kL8ZCKp.png\" alt=\"getDate\"></p>\n<h3 id=\"取得需要的字串\"><a href=\"#取得需要的字串\" class=\"headerlink\" title=\"取得需要的字串\"></a>取得需要的字串</h3><p>已經將字串處理好之後，剩下的就是組合了，所以我依序按照陣列的排序取得我要的字串內容。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//* 取得字串</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> startMonth = getStartDay[<span class=\"number\">0</span>];</span><br><span class=\"line\"><span class=\"keyword\">const</span> startDay = getStartDay[<span class=\"number\">1</span>]; <span class=\"comment\">//6</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> endDay = getEndDay[<span class=\"number\">2</span>];</span><br><span class=\"line\"><span class=\"keyword\">const</span> endMonth = getEndDay[<span class=\"number\">1</span>]; <span class=\"comment\">//6 or 7</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"將英文的月份轉成數字\"><a href=\"#將英文的月份轉成數字\" class=\"headerlink\" title=\"將英文的月份轉成數字\"></a>將英文的月份轉成數字</h2><p>使用兩個函式，並且用 <code>switch</code> 去轉換起訖月的格式。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">getStartMonth(startMonth: string) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> month = <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">        <span class=\"keyword\">switch</span> (startMonth) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">\"Jan\"</span>:</span><br><span class=\"line\">                <span class=\"keyword\">return</span> (month = <span class=\"string\">\"1\"</span>);</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">\"Feb\"</span>:</span><br><span class=\"line\">                <span class=\"keyword\">return</span> (month = <span class=\"string\">\"2\"</span>);</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">\"Mar\"</span>:</span><br><span class=\"line\">                <span class=\"keyword\">return</span> (month = <span class=\"string\">\"3\"</span>);</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">\"Apr\"</span>:</span><br><span class=\"line\">                <span class=\"keyword\">return</span> (month = <span class=\"string\">\"4\"</span>);</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">\"May\"</span>:</span><br><span class=\"line\">                <span class=\"keyword\">return</span> (month = <span class=\"string\">\"5\"</span>);</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">\"Jun\"</span>:</span><br><span class=\"line\">                <span class=\"keyword\">return</span> (month = <span class=\"string\">\"6\"</span>);</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">\"Jul\"</span>:</span><br><span class=\"line\">                <span class=\"keyword\">return</span> (month = <span class=\"string\">\"7\"</span>);</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">\"Aug\"</span>:</span><br><span class=\"line\">                <span class=\"keyword\">return</span> (month = <span class=\"string\">\"8\"</span>);</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">\"Sep\"</span>:</span><br><span class=\"line\">                <span class=\"keyword\">return</span> (month = <span class=\"string\">\"9\"</span>);</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">\"Oct\"</span>:</span><br><span class=\"line\">                <span class=\"keyword\">return</span> (month = <span class=\"string\">\"10\"</span>);</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">\"Nov\"</span>:</span><br><span class=\"line\">                <span class=\"keyword\">return</span> (month = <span class=\"string\">\"11\"</span>);</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">\"Dec\"</span>:</span><br><span class=\"line\">                <span class=\"keyword\">return</span> (month = <span class=\"string\">\"12\"</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    getEndMonth(endMonth: string) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> month = <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">        <span class=\"keyword\">switch</span> (endMonth) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">\"Jan\"</span>:</span><br><span class=\"line\">                <span class=\"keyword\">return</span> (month = <span class=\"string\">\"1\"</span>);</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">\"Feb\"</span>:</span><br><span class=\"line\">                <span class=\"keyword\">return</span> (month = <span class=\"string\">\"2\"</span>);</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">\"Mar\"</span>:</span><br><span class=\"line\">                <span class=\"keyword\">return</span> (month = <span class=\"string\">\"3\"</span>);</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">\"Apr\"</span>:</span><br><span class=\"line\">                <span class=\"keyword\">return</span> (month = <span class=\"string\">\"4\"</span>);</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">\"May\"</span>:</span><br><span class=\"line\">                <span class=\"keyword\">return</span> (month = <span class=\"string\">\"5\"</span>);</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">\"Jun\"</span>:</span><br><span class=\"line\">                <span class=\"keyword\">return</span> (month = <span class=\"string\">\"6\"</span>);</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">\"Jul\"</span>:</span><br><span class=\"line\">                <span class=\"keyword\">return</span> (month = <span class=\"string\">\"7\"</span>);</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">\"Aug\"</span>:</span><br><span class=\"line\">                <span class=\"keyword\">return</span> (month = <span class=\"string\">\"8\"</span>);</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">\"Sep\"</span>:</span><br><span class=\"line\">                <span class=\"keyword\">return</span> (month = <span class=\"string\">\"9\"</span>);</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">\"Oct\"</span>:</span><br><span class=\"line\">                <span class=\"keyword\">return</span> (month = <span class=\"string\">\"10\"</span>);</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">\"Nov\"</span>:</span><br><span class=\"line\">                <span class=\"keyword\">return</span> (month = <span class=\"string\">\"11\"</span>);</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">\"Dec\"</span>:</span><br><span class=\"line\">                <span class=\"keyword\">return</span> (month = <span class=\"string\">\"12\"</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"組合成需求要的顯示格式\"><a href=\"#組合成需求要的顯示格式\" class=\"headerlink\" title=\"組合成需求要的顯示格式\"></a>組合成需求要的顯示格式</h2><p>使用模板語法呈現此時間格式。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"string\">`<span class=\"subst\">$&#123;year&#125;</span>, <span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.getStartMonth(</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\">  startMonth</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\">)&#125;</span>/<span class=\"subst\">$&#123;startDay&#125;</span> - <span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.getEndMonth(endMonth)&#125;</span>/<span class=\"subst\">$&#123;endDay&#125;</span>`</span>;</span><br></pre></td></tr></table></figure>\n\n<p>然後就完成囉~~</p>\n<h2 id=\"Demo\"><a href=\"#Demo\" class=\"headerlink\" title=\"Demo\"></a>Demo</h2><p>Demo: <a href=\"https://stackblitz.com/edit/angular-ivy-d2cxqi?file=src%2Fapp%2Fapp.component.html\" target=\"_blank\" rel=\"noopener\">https://stackblitz.com/edit/angular-ivy-d2cxqi?file=src%2Fapp%2Fapp.component.html</a></p>\n<blockquote>\n<p>因 Demo 沒有使用行事曆套件，所以僅示意處理流程的概念。</p>\n</blockquote>\n","categories":["Angular"],"tags":["Angular","JavaScript"]},{"title":"Tailwind CSS - 如何在 Angular 中使用 TailwindCSS","url":"/TailwindCSS/20210702/3640682418/","content":"<p><img src=\"https://miro.medium.com/max/1400/1*5H42UPUpAiZZiKakeGVB8g.png\" alt=\"TA\"></p>\n<h2 id=\"安裝說明\"><a href=\"#安裝說明\" class=\"headerlink\" title=\"安裝說明\"></a>安裝說明</h2><h3 id=\"安裝環境\"><a href=\"#安裝環境\" class=\"headerlink\" title=\"安裝環境\"></a>安裝環境</h3><ul>\n<li>Angualr 11.2.6</li>\n<li>node.js v14.17.0</li>\n</ul>\n<h3 id=\"建立一個-Angular-CLI\"><a href=\"#建立一個-Angular-CLI\" class=\"headerlink\" title=\"建立一個 Angular CLI\"></a>建立一個 Angular CLI</h3><p>可以參考這一篇 <a href=\"https://hsuchihting.github.io/angular/20200818/419544592/\">Angular 筆記 - Angular CLI 安裝與基本認識</a>，這裡就不在說明。</p>\n<h3 id=\"安裝-TailwindCSS\"><a href=\"#安裝-TailwindCSS\" class=\"headerlink\" title=\"安裝 TailwindCSS\"></a>安裝 TailwindCSS</h3><p>輸入指令就會自動安裝 TailwindCSS 最新版本，PostCSS 以及 autoprefixer，詳細說明可以看<a href=\"https://hsuchihting.github.io/TailwindCSS/20210605/3452359063/\">此篇</a>或<a href=\"https://tailwindcss.tw/docs/installation\" target=\"_blank\" rel=\"noopener\">中文版官方文件</a>。</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm install -D tailwindcss@latest postcss@latest autoprefixer@latest</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"產生-TailwindCSS-配置檔\"><a href=\"#產生-TailwindCSS-配置檔\" class=\"headerlink\" title=\"產生 TailwindCSS 配置檔\"></a>產生 TailwindCSS 配置檔</h3><p>輸入指令：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">npx tailwindcss init</span><br></pre></td></tr></table></figure>\n\n<p>安裝完成就會看到跟目錄有一個 <code>tailwind.config.js</code> 的設定檔案，點開內容如下：</p>\n<p><strong>tailwind.config.js</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  purge: [],</span><br><span class=\"line\">  darkMode: <span class=\"literal\">false</span>, <span class=\"comment\">// or 'media' or 'class'</span></span><br><span class=\"line\">  theme: &#123;</span><br><span class=\"line\">    extend: &#123;&#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  variants: &#123;</span><br><span class=\"line\">    extend: &#123;&#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  plugins: [],</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"引入基礎樣式\"><a href=\"#引入基礎樣式\" class=\"headerlink\" title=\"引入基礎樣式\"></a>引入基礎樣式</h3><h4 id=\"CSS\"><a href=\"#CSS\" class=\"headerlink\" title=\"CSS\"></a>CSS</h4><p>如果是用 CSS 格式，引入的話要這樣，並且每次都要編譯。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@tailwind</span> base;</span><br><span class=\"line\"><span class=\"keyword\">@tailwind</span> components;</span><br><span class=\"line\"><span class=\"keyword\">@tailwind</span> utilities;</span><br></pre></td></tr></table></figure>\n\n<p>編譯指令：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">npx tailwindcss build style.css -o tailwind.css</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"SCSS\"><a href=\"#SCSS\" class=\"headerlink\" title=\"SCSS\"></a>SCSS</h4><p>如果是 SCSS 的話，引入要用 @import，因為有裝 PostCSS 所以不用每次都編譯。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@import</span> <span class=\"string\">\"tailwindcss/base\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">@import</span> <span class=\"string\">\"tailwindcss/components\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">@import</span> <span class=\"string\">\"tailwindcss/utilities\"</span>;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"移除不必要的樣式\"><a href=\"#移除不必要的樣式\" class=\"headerlink\" title=\"移除不必要的樣式\"></a>移除不必要的樣式</h2><p>因為 TailwindCSS 是 Utility-First，就是一大包檔案，為了避免有太多無用的樣式導致專案肥大，所以可以設定什麼檔案才要留樣式，像是 Angular 設定大概就是 <code>.html</code> 跟 <code>.scss</code> 以及 <code>.ts</code> 檔案了，在 purge 中設定如下：</p>\n<p><strong>tailwind.config.js</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  purge: &#123;</span><br><span class=\"line\">    enabled: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    content: [<span class=\"string\">\"./src/**/*.html\"</span>, <span class=\"string\">\"./src/**/*.scss\"</span>],</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  darkMode: <span class=\"literal\">false</span>, <span class=\"comment\">// or 'media' or 'class'</span></span><br><span class=\"line\">  theme: &#123;</span><br><span class=\"line\">    extend: &#123;&#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  variants: &#123;</span><br><span class=\"line\">    extend: &#123;&#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  plugins: [],</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"安裝智能套件-Tailwind-CSS-IntelliSense\"><a href=\"#安裝智能套件-Tailwind-CSS-IntelliSense\" class=\"headerlink\" title=\"安裝智能套件 Tailwind CSS IntelliSense\"></a>安裝智能套件 Tailwind CSS IntelliSense</h2><p><img src=\"https://i.imgur.com/gfdWdEz.png\" alt=\"tailwind plugin\"></p>\n<p>一定要安裝智能套件，<a href=\"https://marketplace.visualstudio.com/items?itemName=bradlc.vscode-tailwindcss\" target=\"_blank\" rel=\"noopener\">套件傳送門</a>，使用說明可參照<a href=\"https://hsuchihting.github.io/TailwindCSS/20210607/2331513775/\">這裡</a>。</p>\n<h2 id=\"智能套件故障排除\"><a href=\"#智能套件故障排除\" class=\"headerlink\" title=\"智能套件故障排除\"></a>智能套件故障排除</h2><p><img src=\"https://i.imgur.com/XLaC4n0.png\" alt=\"stylelint\"></p>\n<p>要安裝 stylelint 智能套件故障排除的套件，因為 VSCode 看不懂 <code>@tailwindcss</code> 的標籤，並且要取消<strong>工作區</strong>的 CSS 與 SCSS Validate 的設定。</p>\n<p><strong>CSS Validate</strong></p>\n<p><img src=\"https://i.imgur.com/AZUoSmu.png\" alt=\"css validate\"></p>\n<p><strong>SCSS Validate</strong></p>\n<p><img src=\"https://i.imgur.com/OaojgS5.png\" alt=\"scss\"></p>\n<p>最後在設定檔 <code>setting.json</code> 裡面貼上這一段</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  \"stylelint.config\": &#123;</span><br><span class=\"line\">    \"rules\": &#123;</span><br><span class=\"line\">      \"<span class=\"built_in\">at</span>-rule-no-unknown\": [true, &#123;</span><br><span class=\"line\">        \"ignoreAtRules\": [</span><br><span class=\"line\">          \"tailwind\",</span><br><span class=\"line\">          \"apply\",</span><br><span class=\"line\">          \"layer\",</span><br><span class=\"line\">          \"variants\",</span><br><span class=\"line\">          \"responsive\",</span><br><span class=\"line\">          \"screen\"</span><br><span class=\"line\">        ]</span><br><span class=\"line\">      &#125;],</span><br><span class=\"line\">      \"declaration-block-trailing-semicolon\": null,</span><br><span class=\"line\">      \"no-descending-specificity\": null</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  \"css.validate\": false,</span><br><span class=\"line\">  \"scss.validate\": false</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"做一張簡單的圖文介紹卡片\"><a href=\"#做一張簡單的圖文介紹卡片\" class=\"headerlink\" title=\"做一張簡單的圖文介紹卡片\"></a>做一張簡單的圖文介紹卡片</h2><iframe height=\"700\" style=\"width: 100%;\" scrolling=\"no\" title=\"TailwindCSS reponsive card\" src=\"https://codepen.io/hnzxewqw/embed/OJmVpyE?defaultTab=html%2Cresult\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\"></iframe>\n\n<h2 id=\"在-Angular-使用-TailwindCSS-JIT-模式\"><a href=\"#在-Angular-使用-TailwindCSS-JIT-模式\" class=\"headerlink\" title=\"在 Angular 使用 TailwindCSS JIT 模式\"></a>在 Angular 使用 TailwindCSS JIT 模式</h2><p>從 Angular12 有完整支援 TailwindCSS JIT 模式，所以專案若沒有向下兼容的需要，建議可以升級到 v.12 以上喔！</p>\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><ul>\n<li><a href=\"https://javascript.plainenglish.io/install-tailwind-css-in-an-angular-project-54a189b53db2\" target=\"_blank\" rel=\"noopener\">Install Tailwind CSS in an Angular project</a></li>\n<li><a href=\"https://ithelp.ithome.com.tw/articles/10243291\" target=\"_blank\" rel=\"noopener\">安裝 IntelliSense 套件故障排除</a></li>\n<li><a href=\"https://tailwindcss.tw/docs/installation\" target=\"_blank\" rel=\"noopener\">TailwindCSS - Install</a></li>\n<li><a href=\"https://dev.to/bitovi/tailwind-css-with-angular-v12-what-you-need-to-know-2h9b\" target=\"_blank\" rel=\"noopener\">Tailwind CSS with Angular V12- What You Need to Know</a></li>\n</ul>\n","categories":["TailwindCSS"],"tags":["Angular","TailwindCSS"]},{"title":"JS 筆記 - 字串切割 substring()","url":"/javascript/20210629/3397311018/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/JavaScript%20note-01.jpg?alt=media&token=7bee0261-72ac-4de4-9f5a-f39d58735b7d\" alt=\"JavaScript Note\"></p>\n<p>這次遇到的字串切割問題，紀錄一下。</p>\n<h2 id=\"要解決的問題\"><a href=\"#要解決的問題\" class=\"headerlink\" title=\"要解決的問題\"></a>要解決的問題</h2><p>從 API 　取回一筆資料是日期字串，如：<code>20210629</code>，開出的需求是要符合設計稿的 <code>2021/06/29</code>，頓時不知道要用什麼方法，後來得知有一個字串分割的 <code>substring()</code>，查了一下 MDN。</p>\n<h2 id=\"substring\"><a href=\"#substring\" class=\"headerlink\" title=\"substring()\"></a>substring()</h2><p>語法如下:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">substring(indexStart, indexEnd);</span><br></pre></td></tr></table></figure>\n\n<p>也就是針對字串直接使用，並且帶入兩個參數，序列是起始跟結束的地方，並且不能傳負數。</p>\n<h3 id=\"官方範例\"><a href=\"#官方範例\" class=\"headerlink\" title=\"官方範例\"></a>官方範例</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> str = <span class=\"string\">\"Mozilla\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(str.substring(<span class=\"number\">1</span>, <span class=\"number\">3</span>));</span><br><span class=\"line\"><span class=\"comment\">// expected output: \"oz\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(str.substring(<span class=\"number\">2</span>));</span><br><span class=\"line\"><span class=\"comment\">// expected output: \"zilla\"</span></span><br></pre></td></tr></table></figure>\n\n<ol>\n<li>從第二個開始取，結束到第四個字串，得到 <code>oz</code>，代表第四個不會取到。</li>\n<li>從第三個開始取，結果得到 <code>zilla</code>。</li>\n</ol>\n<p>由上方範例我得知，會取得起始字母，並會在結束前一個序列終止於結束字符。</p>\n<h2 id=\"解決問題\"><a href=\"#解決問題\" class=\"headerlink\" title=\"解決問題\"></a>解決問題</h2><p>我要將目前字串 <code>20210629</code> 要先切成 <code>2021</code>、<code>06</code>、<code>29</code> 三個字串，然後中間加上 /，並重新組合。</p>\n<h3 id=\"第一種寫法\"><a href=\"#第一種寫法\" class=\"headerlink\" title=\"第一種寫法\"></a>第一種寫法</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> dateOrigin = <span class=\"string\">\"20210629\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> year = dateOrigin.substring(<span class=\"number\">0</span>, <span class=\"number\">4</span>); <span class=\"comment\">//2021</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> month = dateOrigin.substring(<span class=\"number\">4</span>, <span class=\"number\">6</span>); <span class=\"comment\">//06</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> day = dateOrigin.substring(<span class=\"number\">6</span>, <span class=\"number\">8</span>); <span class=\"comment\">//29</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> result = <span class=\"string\">`<span class=\"subst\">$&#123;year&#125;</span>/<span class=\"subst\">$&#123;month&#125;</span>/<span class=\"subst\">$&#123;day&#125;</span>`</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"result:\"</span>, result); <span class=\"comment\">//2021/06/29</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"第二種寫法\"><a href=\"#第二種寫法\" class=\"headerlink\" title=\"第二種寫法\"></a>第二種寫法</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> dateOrigin = <span class=\"string\">\"20210629\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> newdate = <span class=\"string\">`<span class=\"subst\">$&#123;dateOrigin.substring(<span class=\"number\">0</span>, <span class=\"number\">4</span>)&#125;</span>/<span class=\"subst\">$&#123;dateOrigin.substring(</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\">  <span class=\"number\">4</span>, <span class=\"number\">6</span>)&#125;</span>/<span class=\"subst\">$&#123;dateOrigin.substring(<span class=\"number\">6</span>, <span class=\"number\">8</span>)&#125;</span>`</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"newdate:\"</span>, newdate); <span class=\"comment\">//2021/06/29</span></span><br></pre></td></tr></table></figure>\n\n<iframe height=\"400\" style=\"width: 100%;\" scrolling=\"no\" title=\"js substring()\" src=\"https://codepen.io/hnzxewqw/embed/JjNjePo?defaultTab=html%2Cresult\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\"></iframe>\n\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><ul>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/substring\" target=\"_blank\" rel=\"noopener\">String.prototype.substring()</a></li>\n</ul>\n","categories":["JavaScript"],"tags":["JavaScript"]},{"title":"Tailwind CSS - 自訂 addBase 套件","url":"/TailwindCSS/20210629/1430341820/","content":"<p><img src=\"https://tools.wingzero.tw/assets/upload/1611643654838_0.jpg\" alt=\"tailwindcss\"></p>\n<h3 id=\"修改基底樣式-addBase\"><a href=\"#修改基底樣式-addBase\" class=\"headerlink\" title=\"修改基底樣式 addBase\"></a>修改基底樣式 addBase</h3><p>專案會使用到很多的標題樣式，在不同的頁面都會出現，那我就可以訂一個套件專門給標題使用。<br>此時就可以使用修改基底樣式的函式 <code>addBase()</code> 做修改，參照起手式的方式，我給三個標題不同的字體大小。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> plugin = <span class=\"built_in\">require</span>(<span class=\"string\">\"tailwindcss/plugin\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  purge: &#123;</span><br><span class=\"line\">    enabled: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    content: [<span class=\"string\">\"./*.html\"</span>],</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  darkMode: <span class=\"literal\">false</span>, <span class=\"comment\">// or 'media' or 'class'</span></span><br><span class=\"line\">  theme: &#123;</span><br><span class=\"line\">    extend: &#123;&#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  variants: &#123;</span><br><span class=\"line\">    extend: &#123;&#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  plugins: [</span><br><span class=\"line\">    plugin(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">&#123; addBase, theme &#125;</span>) </span>&#123;</span><br><span class=\"line\">      addBase(&#123;</span><br><span class=\"line\">        h1: &#123; <span class=\"attr\">fontSize</span>: theme(<span class=\"string\">\"fontSize.2xl\"</span>) &#125;,</span><br><span class=\"line\">        h2: &#123; <span class=\"attr\">fontSize</span>: theme(<span class=\"string\">\"fontSize.xl\"</span>) &#125;,</span><br><span class=\"line\">        h3: &#123; <span class=\"attr\">fontSize</span>: theme(<span class=\"string\">\"fontSize.lg\"</span>) &#125;,</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">    &#125;),</span><br><span class=\"line\">  ],</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p>在 <code>plugin</code> 的函式中帶入第一個參數是使用的方法，第二個參數是要修改的是什麼，我這邊要更換的是 <code>theme</code> 裡面的字體大小。</p>\n<p>值得注意的地方是，要使用小數點作為連接，不是用連接符號（dash）喔！</p>\n<p>重新編譯後可以得到下方結果。</p>\n<p><img src=\"https://i.imgur.com/zy7Y6s3.png\" alt=\"fontChange\"></p>\n<p>打開開發人員工具可以看到，透過套件我已經把預設值改掉了。</p>\n<p><strong>h1</strong></p>\n<p><img src=\"https://i.imgur.com/rCpQoOu.png\" alt=\"h1\"></p>\n<p><strong>h2</strong></p>\n<p><img src=\"https://i.imgur.com/6GuL7Ph.png\" alt=\"h2\"></p>\n<p><strong>h3</strong></p>\n<p><img src=\"https://i.imgur.com/yIyXxXb.png\" alt=\"h3\"></p>\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><ul>\n<li><a href=\"https://tailwindcss.com/docs/plugins#adding-base-styles\" target=\"_blank\" rel=\"noopener\">TailwindCSS - Adding base styles</a></li>\n</ul>\n","categories":["TailwindCSS"],"tags":["TailwindCSS"]},{"title":"Tailwind CSS - 使用官方套件，以 typography 為例","url":"/TailwindCSS/20210629/1327952700/","content":"<p><img src=\"https://tools.wingzero.tw/assets/upload/1611643654838_0.jpg\" alt=\"tailwindcss\"></p>\n<p>除了可以把樣式元件化，功能模組化外，Tailwind 也提供自定義套件的方式給開發者使用，看個人習慣怎麼用，就怎麼用，不過我自己覺得是自定義套件比較會用在框架之中，如何使用就看個人囉！</p>\n<h2 id=\"自訂樣式套件起手式\"><a href=\"#自訂樣式套件起手式\" class=\"headerlink\" title=\"自訂樣式套件起手式\"></a>自訂樣式套件起手式</h2><p>自定義套件是寫在 <code>tailwind.config.js</code> 這支檔案中，並且要指定引入哪一個自定義套件，在 <code>plugins</code> 的陣列中使用函式來設定，函式用一個物件給與數個函式名稱，我自己常用的分別為：</p>\n<ul>\n<li><code>addUtilities()</code>： 註冊新的功能樣式。</li>\n<li><code>addComponents()</code>： 註冊新的元件樣式。</li>\n<li><code>addBase()</code>： 註冊新的基本樣式。</li>\n<li><code>addVariant()</code>： 註冊自定義變體。</li>\n<li><code>theme()</code>： 找尋使用者在主題已配置的值。</li>\n<li><code>variants()</code>： 找尋使用者在變體中已配置的值。</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> plugin = <span class=\"built_in\">require</span>(<span class=\"string\">\"tailwindcss/plugin\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  plugins: [</span><br><span class=\"line\">    plugin(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">&#123; addUtilities, addComponents, e, prefix, config &#125;</span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"comment\">// Add your custom styles here</span></span><br><span class=\"line\">    &#125;),</span><br><span class=\"line\">  ],</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p>以上就針對我自己最近常用的幾個來做介紹。</p>\n<h2 id=\"使用官方套件\"><a href=\"#使用官方套件\" class=\"headerlink\" title=\"使用官方套件\"></a>使用官方套件</h2><p>在介紹自定義套件之前，先介紹官方也有提供的套件與使用，官方文件表示：直接使用。只要在 <code>tailwind.config.js</code> 的 <code>plugins</code> 屬性中放入官方提供的套件，並且安裝其指令就可以使用。</p>\n<h2 id=\"typography-排版\"><a href=\"#typography-排版\" class=\"headerlink\" title=\"typography 排版\"></a>typography 排版</h2><p>安裝指令：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm install @tailwindcss/typography</span><br></pre></td></tr></table></figure>\n\n<p><strong>tailwind.config.js</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">  plugins: [<span class=\"built_in\">require</span>(<span class=\"string\">\"@tailwindcss/typography\"</span>)],</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p><strong>HTML</strong></p>\n<p>使用時，要先輸入 <code>prose</code> 後面再繼續給 <code>prose-xl</code> 的樣式才吃得到喔！如下方所示，這個套件有支援響應式。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">article</span> <span class=\"attr\">class</span>=<span class=\"string\">\"prose sm:prose-xl\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>This is Title<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    Lorem ipsum dolor sit amet consectetur adipisicing elit. Impedit obcaecati</span><br><span class=\"line\">    temporibus delectus et eaque non enim, consequatur illum velit sapiente</span><br><span class=\"line\">    molestiae soluta voluptatibus omnis quasi dolores maxime officiis at vero!</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    Lorem ipsum, dolor sit amet consectetur adipisicing elit. Aut dignissimos</span><br><span class=\"line\">    quasi pariatur nobis ipsa ullam! Commodi modi, saepe eveniet soluta numquam</span><br><span class=\"line\">    quasi ducimus, corrupti architecto distinctio dignissimos alias nesciunt</span><br><span class=\"line\">    doloribus?</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- ... --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">article</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>再打開瀏覽器就會看到套件設定的排版樣式。</p>\n<p><img src=\"https://i.imgur.com/OBIBMK2.png\" alt=\"typography\"></p>\n<p>除了預設樣式外，也提供五種不同的排版樣式設定：</p>\n<p><img src=\"https://i.imgur.com/vAFQ1CV.png\" alt=\"prose\"></p>\n<p>並且還提供七種顏色可以選擇，</p>\n<p><img src=\"https://i.imgur.com/VkGRa2t.png\" alt=\"color\"></p>\n<h2 id=\"自訂顏色與排版內容\"><a href=\"#自訂顏色與排版內容\" class=\"headerlink\" title=\"自訂顏色與排版內容\"></a>自訂顏色與排版內容</h2><p>官方提供一個範例，若想要自訂自己的排版內容，可以依照範本去設定自己喜歡的內容，兩種設定方式：</p>\n<h3 id=\"extends-加入樣式\"><a href=\"#extends-加入樣式\" class=\"headerlink\" title=\"extends 加入樣式\"></a>extends 加入樣式</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// tailwind.config.js</span></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  theme: &#123;</span><br><span class=\"line\">    extend: &#123;</span><br><span class=\"line\">      typography: &#123;</span><br><span class=\"line\">        DEFAULT: &#123;</span><br><span class=\"line\">          css: &#123;</span><br><span class=\"line\">            color: <span class=\"string\">\"#333\"</span>,</span><br><span class=\"line\">            a: &#123;</span><br><span class=\"line\">              color: <span class=\"string\">\"#3182ce\"</span>,</span><br><span class=\"line\">              <span class=\"string\">\"&amp;:hover\"</span>: &#123;</span><br><span class=\"line\">                color: <span class=\"string\">\"#2c5282\"</span>,</span><br><span class=\"line\">              &#125;,</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  plugins: [</span><br><span class=\"line\">    <span class=\"built_in\">require</span>(<span class=\"string\">\"@tailwindcss/typography\"</span>),</span><br><span class=\"line\">    <span class=\"comment\">// ...</span></span><br><span class=\"line\">  ],</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"包裝成函式\"><a href=\"#包裝成函式\" class=\"headerlink\" title=\"包裝成函式\"></a>包裝成函式</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// tailwind.config.js</span></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  theme: &#123;</span><br><span class=\"line\">    extend: &#123;</span><br><span class=\"line\">      typography: <span class=\"function\">(<span class=\"params\">theme</span>) =&gt;</span> (&#123;</span><br><span class=\"line\">        DEFAULT: &#123;</span><br><span class=\"line\">          css: &#123;</span><br><span class=\"line\">            color: theme(<span class=\"string\">\"colors.gray.800\"</span>),</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// ...</span></span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">      &#125;),</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  plugins: [</span><br><span class=\"line\">    <span class=\"built_in\">require</span>(<span class=\"string\">\"@tailwindcss/typography\"</span>),</span><br><span class=\"line\">    <span class=\"comment\">// ...</span></span><br><span class=\"line\">  ],</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p>還有更多設定方式可以參考<a href=\"https://github.com/tailwindlabs/tailwindcss-typography\" target=\"_blank\" rel=\"noopener\">官方文件</a>，</p>\n<p>其他官方套件如下：</p>\n<ul>\n<li><a href=\"https://github.com/tailwindlabs/tailwindcss-forms\" target=\"_blank\" rel=\"noopener\">Form</a></li>\n<li><a href=\"https://github.com/tailwindlabs/tailwindcss-line-clamp\" target=\"_blank\" rel=\"noopener\">Line-clamp</a></li>\n<li><a href=\"https://github.com/tailwindlabs/tailwindcss-aspect-ratio\" target=\"_blank\" rel=\"noopener\">Aspect ratio</a></li>\n</ul>\n<h2 id=\"小結\"><a href=\"#小結\" class=\"headerlink\" title=\"小結\"></a>小結</h2><p>透過使用官方套件知道一件事情，就是要先安裝套件，然後引入套件，並且可自行做設定。</p>\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><ul>\n<li><a href=\"https://tailwindcss.com/docs/plugins#official-plugins\" target=\"_blank\" rel=\"noopener\">TailwindCSS - Plugins</a></li>\n</ul>\n","categories":["TailwindCSS"],"tags":["TailwindCSS"]},{"title":"Tailwind CSS - 新增自己的 Utility","url":"/TailwindCSS/20210627/2881787623/","content":"<p><img src=\"https://tools.wingzero.tw/assets/upload/1611643654838_0.jpg\" alt=\"tailwindcss\"></p>\n<p>除了可以新增元件外，也可以增加自訂義的功能。</p>\n<p>雖然 TailwindCSS 已經提供非常多好用的 class，但還是會遇到需要自定義功能的情況，以下就介紹怎麼自訂義功能吧！</p>\n<h2 id=\"新增功能起手式\"><a href=\"#新增功能起手式\" class=\"headerlink\" title=\"新增功能起手式\"></a>新增功能起手式</h2><p>使用官方範例，可以看到跟新增元件的概念相似，告訴 <code>style.css</code> 要新增或覆寫哪一個圖層的內容，然後在裡面再撰寫想要的樣式內容。</p>\n<p><strong>style.css</strong></p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@tailwind</span> base;</span><br><span class=\"line\"><span class=\"keyword\">@tailwind</span> components;</span><br><span class=\"line\"><span class=\"keyword\">@tailwind</span> utilities;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@layer</span> utilities &#123;</span><br><span class=\"line\">    <span class=\"selector-class\">.scroll-snap-none</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">scroll-snap-type</span>: none;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.scroll-snap-x</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">scroll-snap-type</span>: x;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.scroll-snap-y</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">scroll-snap-type</span>: y;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>寫完後記得編譯，然後看一下 <code>tailwind.css</code> 是否有編譯成功。</p>\n<p><strong>tailwind.css</strong></p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@tailwind</span> base;</span><br><span class=\"line\"><span class=\"keyword\">@tailwind</span> components;</span><br><span class=\"line\"><span class=\"keyword\">@tailwind</span> utilities;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@layer</span> utilities &#123;</span><br><span class=\"line\">    <span class=\"selector-class\">.scroll-snap-none</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">scroll-snap-type</span>: none;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.scroll-snap-x</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">scroll-snap-type</span>: x;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.scroll-snap-y</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">scroll-snap-type</span>: y;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>這邊發現一個 bug，就是我在 HTML 沒有寫出對應的 class 時，似乎沒有辦法編譯成功在 <code>style.css</code> 自訂義的功能內容於 <code>tailwind.css</code> 的檔案中，所以要在 HTML 加上寫上此樣式的 class 名稱才能解決。</p>\n</blockquote>\n<h2 id=\"新增響應式功能\"><a href=\"#新增響應式功能\" class=\"headerlink\" title=\"新增響應式功能\"></a>新增響應式功能</h2><p>想要自響應式功能也非常方便，只要在圖層中加上 <code>@responsive</code> 就完成各種斷點，真是太狂了，如下方範例。</p>\n<p><strong>style.css</strong></p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@tailwind</span> base;</span><br><span class=\"line\"><span class=\"keyword\">@tailwind</span> components;</span><br><span class=\"line\"><span class=\"keyword\">@tailwind</span> utilities;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@layer</span> utilities &#123;</span><br><span class=\"line\">    <span class=\"keyword\">@variants</span> responsive &#123; <span class=\"comment\">/*加在這邊*/</span></span><br><span class=\"line\">      <span class=\"selector-class\">.scroll-snap-none</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">scroll-snap-type</span>: none;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"selector-class\">.scroll-snap-x</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">scroll-snap-type</span>: x;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"selector-class\">.scroll-snap-y</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">scroll-snap-type</span>: y;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n\n<p>在 HTML 也要寫上要使用的響應式斷點才能成功編譯，</p>\n<p><strong>HTML</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"scroll-snap-none sm:scroll-snap-x\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>tailwind.css</strong></p>\n<p>編譯後才會成功出現自訂義的內容，並且可以看到註解也會呈現在預設斷點的後方，代表有編譯成功。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.scroll-snap-none</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">-ms-scroll-snap-type</span>: none;</span><br><span class=\"line\">      <span class=\"attribute\">scroll-snap-type</span>: none;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@media</span> (<span class=\"attribute\">min-width:</span> <span class=\"number\">640px</span>) &#123; <span class=\"comment\">/*加在這邊*/</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"selector-class\">.sm</span>\\<span class=\"selector-pseudo\">:scroll-snap-x</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">-ms-scroll-snap-type</span>: x;</span><br><span class=\"line\">        <span class=\"attribute\">scroll-snap-type</span>: x;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@media</span> (<span class=\"attribute\">min-width:</span> <span class=\"number\">768px</span>) &#123; <span class=\"comment\">/*加在這邊*/</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@media</span> (<span class=\"attribute\">min-width:</span> <span class=\"number\">1024px</span>) &#123; <span class=\"comment\">/*加在這邊*/</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@media</span> (<span class=\"attribute\">min-width:</span> <span class=\"number\">1280px</span>) &#123; <span class=\"comment\">/*加在這邊*/</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@media</span> (<span class=\"attribute\">min-width:</span> <span class=\"number\">1536px</span>) &#123; <span class=\"comment\">/*加在這邊*/</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"新增偽類效果\"><a href=\"#新增偽類效果\" class=\"headerlink\" title=\"新增偽類效果\"></a>新增偽類效果</h2><p>之前有練習到可以在元件中建立偽類效果，那功能也會需要偽類效果，只要在 Utilites 裡面加上  <code>@variants hover, focus</code> 就可以了。</p>\n<p>網頁最常出現就是按鈕滑鼠經過時會有個顏色轉換提示，下方練習為一個按鈕當我滑鼠經過時，會從紅色變為更深的紅色。</p>\n<p><strong>HTML</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn btn-red\"</span>&gt;</span>click<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>把想要新增的樣式寫在響應式裡面！讓我於響應式也可以吃到其效果。</p>\n<p><strong>style.css</strong></p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@tailwind</span> base;</span><br><span class=\"line\"><span class=\"keyword\">@tailwind</span> components;</span><br><span class=\"line\"><span class=\"keyword\">@tailwind</span> utilities;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@layer</span> utilities &#123;</span><br><span class=\"line\">    <span class=\"keyword\">@variants</span> responsive &#123;</span><br><span class=\"line\">        <span class=\"comment\">/*加在這邊*/</span></span><br><span class=\"line\">        <span class=\"keyword\">@variants</span> hover, focus &#123;</span><br><span class=\"line\">            <span class=\"selector-class\">.btn</span> &#123;</span><br><span class=\"line\">                @apply px-4 py-2 rounded border-transparent text-white;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"selector-class\">.btn-red</span> &#123;</span><br><span class=\"line\">                @apply bg-red-500 border-red-600 border-2;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"selector-class\">.btn-hover</span> &#123;</span><br><span class=\"line\">                @apply bg-red-700;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"selector-class\">.btn-focus</span> &#123;</span><br><span class=\"line\">                @apply border-red-400 border-2;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>編譯後就會看到 <code>tailwind.css</code> 也會有自訂義的樣式囉！</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.btn</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border-color</span>: transparent;</span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">0.25rem</span>;</span><br><span class=\"line\">  <span class=\"attribute\">padding-top</span>: <span class=\"number\">0.5rem</span>;</span><br><span class=\"line\">  <span class=\"attribute\">padding-bottom</span>: <span class=\"number\">0.5rem</span>;</span><br><span class=\"line\">  <span class=\"attribute\">padding-left</span>: <span class=\"number\">1rem</span>;</span><br><span class=\"line\">  <span class=\"attribute\">padding-right</span>: <span class=\"number\">1rem</span>;</span><br><span class=\"line\">  <span class=\"attribute\">--tw-text-opacity</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"built_in\">rgba</span>(<span class=\"number\">255</span>, <span class=\"number\">255</span>, <span class=\"number\">255</span>, var(--tw-text-opacity));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.btn-red</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">--tw-bg-opacity</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"built_in\">rgba</span>(<span class=\"number\">239</span>, <span class=\"number\">68</span>, <span class=\"number\">68</span>, var(--tw-bg-opacity));</span><br><span class=\"line\">  <span class=\"attribute\">--tw-border-opacity</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-color</span>: <span class=\"built_in\">rgba</span>(<span class=\"number\">220</span>, <span class=\"number\">38</span>, <span class=\"number\">38</span>, var(--tw-border-opacity));</span><br><span class=\"line\">  <span class=\"attribute\">border-width</span>: <span class=\"number\">2px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.hover</span>\\<span class=\"selector-pseudo\">:btn-hover</span><span class=\"selector-pseudo\">:hover</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">--tw-bg-opacity</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"built_in\">rgba</span>(<span class=\"number\">185</span>, <span class=\"number\">28</span>, <span class=\"number\">28</span>, var(--tw-bg-opacity));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.focus</span>\\<span class=\"selector-pseudo\">:btn-focus</span><span class=\"selector-pseudo\">:focus</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">--tw-border-opacity</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-color</span>: <span class=\"built_in\">rgba</span>(<span class=\"number\">248</span>, <span class=\"number\">113</span>, <span class=\"number\">113</span>, var(--tw-border-opacity));</span><br><span class=\"line\">  <span class=\"attribute\">border-width</span>: <span class=\"number\">2px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>最後記得要把效果加回到按鈕的樣式中喔！</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn btn-red sm:hover:btn-hover focus:btn-focus\"</span>&gt;</span></span><br><span class=\"line\">           click</span><br><span class=\"line\">       <span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>before hover</strong></p>\n<p><img src=\"https://i.imgur.com/T6cik6m.png\" alt=\"no hover\"></p>\n<p><strong>after hover</strong></p>\n<p><img src=\"https://i.imgur.com/V182y9G.png\" alt=\"after hover\"></p>\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><ul>\n<li><p><a href=\"https://tailwindcss.com/docs/adding-new-utilities\" target=\"_blank\" rel=\"noopener\">TailwindCSS Adding New Utilities</a></p>\n</li>\n<li><p><a href=\"https://ithelp.ithome.com.tw/articles/10246240\" target=\"_blank\" rel=\"noopener\">【Tailwind CSS 教學 - 11】新增 Utilities 方式，讓您不缺各種 util CSS Class！</a></p>\n</li>\n</ul>\n","categories":["TailwindCSS"],"tags":["TailwindCSS"]},{"title":"Tailwind CSS - 元件相同時，把共同樣式拉出來","url":"/TailwindCSS/20210627/3362003898/","content":"<p><img src=\"https://tools.wingzero.tw/assets/upload/1611643654838_0.jpg\" alt=\"tailwindcss\"></p>\n<h2 id=\"單一按鈕樣式元件\"><a href=\"#單一按鈕樣式元件\" class=\"headerlink\" title=\"單一按鈕樣式元件\"></a>單一按鈕樣式元件</h2><p><a href=\"https://hsuchihting.github.io/TailwindCSS/20210627/2585108082/\">前篇</a>有寫到單一按鈕，可以把樣式拆成元件來使用。如下：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@layer</span> components&#123;</span><br><span class=\"line\">  <span class=\"selector-class\">.btn-green</span> &#123;</span><br><span class=\"line\">    @apply py-2 px-4 bg-green-500 text-white font-semibold rounded-lg shadow-md;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"selector-class\">.btn-green</span><span class=\"selector-pseudo\">:hover</span> &#123;</span><br><span class=\"line\">    @apply bg-green-700;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"selector-class\">.btn-green</span><span class=\"selector-pseudo\">:focus</span> &#123;</span><br><span class=\"line\">    @apply outline-none ring-2 ring-green-400 ring-opacity-75;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>如果今天我有兩個按鈕，一個綠色一個藍色，依照上述概念，似乎要寫成這樣：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@layer</span> components&#123;</span><br><span class=\"line\">  <span class=\"selector-class\">.btn-green</span> &#123;</span><br><span class=\"line\">    @apply py-2 px-4 bg-green-500 text-white font-semibold rounded-lg shadow-md;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"selector-class\">.btn-green</span><span class=\"selector-pseudo\">:hover</span> &#123;</span><br><span class=\"line\">    @apply bg-green-700;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"selector-class\">.btn-green</span><span class=\"selector-pseudo\">:focus</span> &#123;</span><br><span class=\"line\">    @apply outline-none ring-2 ring-green-400 ring-opacity-75;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"selector-class\">.btn-blue</span> &#123;</span><br><span class=\"line\">    @apply py-2 px-4 bg-blue-500 text-white font-semibold rounded-lg shadow-md;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"selector-class\">.btn-blue</span><span class=\"selector-pseudo\">:hover</span> &#123;</span><br><span class=\"line\">    @apply bg-blue-700;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"selector-class\">.btn-blue</span><span class=\"selector-pseudo\">:focus</span> &#123;</span><br><span class=\"line\">    @apply outline-none ring-2 ring-blue-400 ring-opacity-75;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>其實我就是複製同一串樣式，然後把顏色改掉，如此而已，當然畫面也是會有同樣效果啦…</p>\n<p><img src=\"https://i.imgur.com/zVLhF42.png\" alt=\"btn\"></p>\n<p>可是如果今天畫面有五顆按鈕，那我顏色就要改五次，同樣的程式碼要複製五次，這樣如果樣式越來越多就越來越難維護跟閱讀。</p>\n<h2 id=\"元件中再抽共用元件\"><a href=\"#元件中再抽共用元件\" class=\"headerlink\" title=\"元件中再抽共用元件\"></a>元件中再抽共用元件</h2><p>後來觀察，這跟 Bootstrap 有一點點異曲同工之妙，也就是可以再把按鈕的共同樣式拆出來，變成 <code>.btn</code> 去單獨處理按鈕，顏色之後再填上。</p>\n<p><strong>template</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn btn-green\"</span>&gt;</span>Click me<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn btn-blue\"</span>&gt;</span>Click me<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>style.css</strong></p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@layer</span> components &#123;</span><br><span class=\"line\">    <span class=\"selector-class\">.btn</span> &#123;</span><br><span class=\"line\">        @apply py-2 px-4 text-white font-semibold rounded-lg shadow-md;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.btn</span><span class=\"selector-pseudo\">:focus</span> &#123;</span><br><span class=\"line\">        @apply outline-none ring-2 ring-opacity-75;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.btn-green</span> &#123;</span><br><span class=\"line\">        @apply bg-green-500;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.btn-green</span><span class=\"selector-pseudo\">:hover</span> &#123;</span><br><span class=\"line\">        @apply bg-green-700;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.btn-green</span><span class=\"selector-pseudo\">:focus</span> &#123;</span><br><span class=\"line\">        @apply ring-green-400;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"selector-class\">.btn-blue</span> &#123;</span><br><span class=\"line\">        @apply bg-blue-500;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.btn-blue</span><span class=\"selector-pseudo\">:hover</span> &#123;</span><br><span class=\"line\">        @apply bg-blue-700;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.btn-blue</span><span class=\"selector-pseudo\">:focus</span> &#123;</span><br><span class=\"line\">        @apply ring-blue-400;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>雖然看起來樣式變多了，可是細看會發現每個都單純管理自己的內容，這樣要修正相對好變動，不用擔心改錯了，其他也被影響到！</p>\n<p>也順便檢查 <code>tailwind.css</code> 編譯後的 CSS 有沒有成功，看來是有成功編譯囉！</p>\n<p><strong>tailwind.css</strong></p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.btn</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">0.5rem</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-weight</span>: <span class=\"number\">600</span>;</span><br><span class=\"line\">  <span class=\"attribute\">padding-top</span>: <span class=\"number\">0.5rem</span>;</span><br><span class=\"line\">  <span class=\"attribute\">padding-bottom</span>: <span class=\"number\">0.5rem</span>;</span><br><span class=\"line\">  <span class=\"attribute\">padding-left</span>: <span class=\"number\">1rem</span>;</span><br><span class=\"line\">  <span class=\"attribute\">padding-right</span>: <span class=\"number\">1rem</span>;</span><br><span class=\"line\">  <span class=\"attribute\">--tw-shadow</span>: <span class=\"number\">0</span> <span class=\"number\">4px</span> <span class=\"number\">6px</span> -<span class=\"number\">1px</span> <span class=\"built_in\">rgba</span>(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0.1</span>), <span class=\"number\">0</span> <span class=\"number\">2px</span> <span class=\"number\">4px</span> -<span class=\"number\">1px</span> <span class=\"built_in\">rgba</span>(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0.06</span>);</span><br><span class=\"line\">  <span class=\"attribute\">box-shadow</span>: <span class=\"built_in\">var</span>(--tw-ring-offset-shadow, <span class=\"number\">0</span> <span class=\"number\">0</span> #<span class=\"number\">0000</span>), <span class=\"built_in\">var</span>(--tw-ring-shadow, <span class=\"number\">0</span> <span class=\"number\">0</span> #<span class=\"number\">0000</span>), <span class=\"built_in\">var</span>(--tw-shadow);</span><br><span class=\"line\">  <span class=\"attribute\">--tw-text-opacity</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"built_in\">rgba</span>(<span class=\"number\">255</span>, <span class=\"number\">255</span>, <span class=\"number\">255</span>, var(--tw-text-opacity));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.btn</span><span class=\"selector-pseudo\">:focus</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">outline</span>: <span class=\"number\">2px</span> solid transparent;</span><br><span class=\"line\">  <span class=\"attribute\">outline-offset</span>: <span class=\"number\">2px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">--tw-ring-offset-shadow</span>: <span class=\"built_in\">var</span>(--tw-ring-inset) <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"built_in\">var</span>(--tw-ring-offset-width) <span class=\"built_in\">var</span>(--tw-ring-offset-color);</span><br><span class=\"line\">  <span class=\"attribute\">--tw-ring-shadow</span>: <span class=\"built_in\">var</span>(--tw-ring-inset) <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"built_in\">calc</span>(<span class=\"number\">2px</span> + var(--tw-ring-offset-width)) <span class=\"built_in\">var</span>(--tw-ring-color);</span><br><span class=\"line\">  <span class=\"attribute\">box-shadow</span>: <span class=\"built_in\">var</span>(--tw-ring-offset-shadow), <span class=\"built_in\">var</span>(--tw-ring-shadow), <span class=\"built_in\">var</span>(--tw-shadow, <span class=\"number\">0</span> <span class=\"number\">0</span> #<span class=\"number\">0000</span>);</span><br><span class=\"line\">  <span class=\"attribute\">--tw-ring-opacity</span>: <span class=\"number\">0.75</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.btn-green</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">--tw-bg-opacity</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"built_in\">rgba</span>(<span class=\"number\">16</span>, <span class=\"number\">185</span>, <span class=\"number\">129</span>, var(--tw-bg-opacity));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.btn-green</span><span class=\"selector-pseudo\">:hover</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">--tw-bg-opacity</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"built_in\">rgba</span>(<span class=\"number\">4</span>, <span class=\"number\">120</span>, <span class=\"number\">87</span>, var(--tw-bg-opacity));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.btn-green</span><span class=\"selector-pseudo\">:focus</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">--tw-ring-opacity</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"attribute\">--tw-ring-color</span>: <span class=\"built_in\">rgba</span>(<span class=\"number\">52</span>, <span class=\"number\">211</span>, <span class=\"number\">153</span>, var(--tw-ring-opacity));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.btn-blue</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">--tw-bg-opacity</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"built_in\">rgba</span>(<span class=\"number\">59</span>, <span class=\"number\">130</span>, <span class=\"number\">246</span>, var(--tw-bg-opacity));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.btn-blue</span><span class=\"selector-pseudo\">:hover</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">--tw-bg-opacity</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"built_in\">rgba</span>(<span class=\"number\">29</span>, <span class=\"number\">78</span>, <span class=\"number\">216</span>, var(--tw-bg-opacity));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.btn-blue</span><span class=\"selector-pseudo\">:focus</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">--tw-ring-opacity</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"attribute\">--tw-ring-color</span>: <span class=\"built_in\">rgba</span>(<span class=\"number\">96</span>, <span class=\"number\">165</span>, <span class=\"number\">250</span>, var(--tw-ring-opacity));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>畫面也有成功渲染！</p>\n<p><img src=\"https://i.imgur.com/eIX75nR.png\" alt=\"buttons\"></p>\n","categories":["TailwindCSS"],"tags":["TailwindCSS"]},{"title":"Tailwind CSS - 把重複使用的功能變成元件","url":"/TailwindCSS/20210627/2585108082/","content":"<p><img src=\"https://tools.wingzero.tw/assets/upload/1611643654838_0.jpg\" alt=\"tailwindcss\"></p>\n<p>Utility-first 固然方便，也是有缺點的，雖然免除了定義 class 名稱的困擾，但換來的是滿滿的樣式名稱，像是如果要做一張圖文卡片，就會變成這樣。</p>\n<iframe height=\"550\" style=\"width: 100%;\" scrolling=\"no\" title=\"TailwindCSS card\" src=\"https://codepen.io/hnzxewqw/embed/gOmNGVB?defaultTab=html%2Cresult\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\"></iframe>\n\n<p>說實在要維護起來真的滿困難的，如果剛好接手的又對 TailwindCSS 不熟，那就會花費很多時間。</p>\n<h2 id=\"包裝成元件\"><a href=\"#包裝成元件\" class=\"headerlink\" title=\"包裝成元件\"></a>包裝成元件</h2><p>雖然 Utility-first 的特性就是會有滿滿的樣式名稱，的確是令人詬病的，但 TailwindCSS 貼心的讓開發者可以對於重複使用的元件同一功能且可重複使用的方法。</p>\n<p>例如：我今天開發了一個按鈕樣式</p>\n<iframe height=\"300\" style=\"width: 100%;\" scrolling=\"no\" title=\"TailwindCSS button\" src=\"https://codepen.io/hnzxewqw/embed/wvJLPBZ?defaultTab=html%2Cresult\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\"></iframe>\n\n<p>但一個網頁一定不只一顆按鈕，總不能每次做按鈕，都要打這麼多 class 吧? 就算是複製，也是會花滿多時間，而且可能貼錯。</p>\n<h3 id=\"使用-apply-語法組成匯重複使用的-class\"><a href=\"#使用-apply-語法組成匯重複使用的-class\" class=\"headerlink\" title=\"使用 @apply 語法組成匯重複使用的 class\"></a>使用 @apply 語法組成匯重複使用的 class</h3><p>像這個按鈕可能會很多頁面都會用到，如果一開始接觸 TailwindCSS，光是要找按鈕在哪裡，就會花點時間，官方建議使用 <code>@layer</code> 圖層的屬性，去告訴框架，我是要在 component 的裡面去更新或覆寫預設樣式，再來可以把原本按鈕的樣式名稱用 <code>@apply</code> 包裝，寫在 TailwindCSS 預設的 <code>style.css</code> 裡面。</p>\n<blockquote>\n<p>如果也是跟我一樣是平面設計轉職的朋友，相信用圖層的方式去理解應該滿快速的。</p>\n</blockquote>\n<p><strong>style.css</strong></p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* ./your-css-folder/styles.css */</span></span><br><span class=\"line\"><span class=\"keyword\">@tailwind</span> base;</span><br><span class=\"line\"><span class=\"keyword\">@tailwind</span> components;</span><br><span class=\"line\"><span class=\"keyword\">@tailwind</span> utilities;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@layer</span> components&#123;</span><br><span class=\"line\">  <span class=\"selector-class\">.btn-green</span> &#123;</span><br><span class=\"line\">    @apply py-2 px-4 bg-green-500 text-white font-semibold rounded-lg shadow-md;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"selector-class\">.btn-green</span><span class=\"selector-pseudo\">:hover</span> &#123;</span><br><span class=\"line\">    @apply bg-green-700;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"selector-class\">.btn-green</span><span class=\"selector-pseudo\">:focus</span> &#123;</span><br><span class=\"line\">    @apply outline-none ring-2 ring-green-400 ring-opacity-75;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>再來把 HTML 的按鈕樣式改成包裝好的樣式名稱 <code>btn-green</code>，</p>\n<p><strong>template</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn-green\"</span>&gt;</span>Click me<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>完成後，進行編譯，編譯完後就可以出現效果。</p>\n<p>如果還不放心，可以到 <code>tailwindcss.css</code> 檔案中找一下剛剛內容做重複的檢查，就會看到編譯過後的樣式囉！</p>\n<p><strong>tailwindcss.css</strong></p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.btn-green</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">--tw-bg-opacity</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"built_in\">rgba</span>(<span class=\"number\">16</span>, <span class=\"number\">185</span>, <span class=\"number\">129</span>, var(--tw-bg-opacity));</span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">0.5rem</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-weight</span>: <span class=\"number\">600</span>;</span><br><span class=\"line\">  <span class=\"attribute\">padding-top</span>: <span class=\"number\">0.5rem</span>;</span><br><span class=\"line\">  <span class=\"attribute\">padding-bottom</span>: <span class=\"number\">0.5rem</span>;</span><br><span class=\"line\">  <span class=\"attribute\">padding-left</span>: <span class=\"number\">1rem</span>;</span><br><span class=\"line\">  <span class=\"attribute\">padding-right</span>: <span class=\"number\">1rem</span>;</span><br><span class=\"line\">  <span class=\"attribute\">--tw-shadow</span>: <span class=\"number\">0</span> <span class=\"number\">4px</span> <span class=\"number\">6px</span> -<span class=\"number\">1px</span> <span class=\"built_in\">rgba</span>(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0.1</span>), <span class=\"number\">0</span> <span class=\"number\">2px</span> <span class=\"number\">4px</span> -<span class=\"number\">1px</span> <span class=\"built_in\">rgba</span>(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0.06</span>);</span><br><span class=\"line\">  <span class=\"attribute\">box-shadow</span>: <span class=\"built_in\">var</span>(--tw-ring-offset-shadow, <span class=\"number\">0</span> <span class=\"number\">0</span> #<span class=\"number\">0000</span>), <span class=\"built_in\">var</span>(--tw-ring-shadow, <span class=\"number\">0</span> <span class=\"number\">0</span> #<span class=\"number\">0000</span>), <span class=\"built_in\">var</span>(--tw-shadow);</span><br><span class=\"line\">  <span class=\"attribute\">--tw-text-opacity</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"built_in\">rgba</span>(<span class=\"number\">255</span>, <span class=\"number\">255</span>, <span class=\"number\">255</span>, var(--tw-text-opacity));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.btn-green</span><span class=\"selector-pseudo\">:hover</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">--tw-bg-opacity</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"built_in\">rgba</span>(<span class=\"number\">4</span>, <span class=\"number\">120</span>, <span class=\"number\">87</span>, var(--tw-bg-opacity));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.btn-green</span><span class=\"selector-pseudo\">:focus</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">outline</span>: <span class=\"number\">2px</span> solid transparent;</span><br><span class=\"line\">  <span class=\"attribute\">outline-offset</span>: <span class=\"number\">2px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">--tw-ring-offset-shadow</span>: <span class=\"built_in\">var</span>(--tw-ring-inset) <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"built_in\">var</span>(--tw-ring-offset-width) <span class=\"built_in\">var</span>(--tw-ring-offset-color);</span><br><span class=\"line\">  <span class=\"attribute\">--tw-ring-shadow</span>: <span class=\"built_in\">var</span>(--tw-ring-inset) <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"built_in\">calc</span>(<span class=\"number\">2px</span> + var(--tw-ring-offset-width)) <span class=\"built_in\">var</span>(--tw-ring-color);</span><br><span class=\"line\">  <span class=\"attribute\">box-shadow</span>: <span class=\"built_in\">var</span>(--tw-ring-offset-shadow), <span class=\"built_in\">var</span>(--tw-ring-shadow), <span class=\"built_in\">var</span>(--tw-shadow, <span class=\"number\">0</span> <span class=\"number\">0</span> #<span class=\"number\">0000</span>);</span><br><span class=\"line\">  <span class=\"attribute\">--tw-ring-opacity</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"attribute\">--tw-ring-color</span>: <span class=\"built_in\">rgba</span>(<span class=\"number\">52</span>, <span class=\"number\">211</span>, <span class=\"number\">153</span>, var(--tw-ring-opacity));</span><br><span class=\"line\">  <span class=\"attribute\">--tw-ring-opacity</span>: <span class=\"number\">0.75</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>如此就可以完成跟上方寫的按鈕相同的樣式囉！</p>\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><ul>\n<li><a href=\"https://tailwindcss.com/docs/extracting-components\" target=\"_blank\" rel=\"noopener\">TailwindCSS - Extracting Components</a></li>\n</ul>\n","categories":["TailwindCSS"],"tags":["TailwindCSS"]},{"title":"Tailwind CSS - 讓 Variants 成為偽類的強大神器","url":"/TailwindCSS/20210622/2922303441/","content":"<p><img src=\"https://tools.wingzero.tw/assets/upload/1611643654838_0.jpg\" alt=\"tailwindcss\"></p>\n<p>除了 <a href=\"https://hsuchihting.github.io/TailwindCSS/20210620/961026179/\">Tailwind CSS - 設定自己想要的 TailwindCSS 樣式 Variant</a> 提到可以自訂 <code>hover</code> 在想要的樣式裡外，此框架的作者還很貼心的寫了一個效果， <a href=\"https://tailwindcss.com/docs/hover-focus-and-other-states#group-hover\" target=\"_blank\" rel=\"noopener\">Group-hover</a></p>\n<h2 id=\"Group-hover\"><a href=\"#Group-hover\" class=\"headerlink\" title=\"Group-hover\"></a>Group-hover</h2><p>在介紹 Group-hover 前，先講一下，如果是傳統寫 CSS 的話是什麼狀況。</p>\n<p>先給個情境，規格書來個需求說：</p>\n<ol>\n<li>要有張卡片。</li>\n<li>滑鼠經過時，卡片背景色與卡片標題要變色。</li>\n</ol>\n<p>所以傳統的 CSS 就會變成：</p>\n<iframe height=\"300\" style=\"width: 100%;\" scrolling=\"no\" title=\"tradition CSS\" src=\"https://codepen.io/hnzxewqw/embed/bGqyORr?height=265&theme-id=light&default-tab=html,result\"></iframe>\n\n<p>當然對於切版熟手或許這個沒什麼問題，但還是回到原本的困擾，要想命名，要分層去寫效果進去，如果今天拆分元件，可能也無法所有的樣式都共用。</p>\n<p>如果遇到會有群組型的 <code>hover</code> 樣式，透過 TailwindCSS 可以這樣寫：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">class</span>=<span class=\"string\">\"</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">      group</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">      px-6</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">      py-5</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">      w-72</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">      rounded</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">      space-y-1</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">      bg-gray-200</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">      hover:bg-yellow-200</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">      \"</span></span></span><br><span class=\"line\"><span class=\"tag\">&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">class</span>=<span class=\"string\">\"</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">      text-2xl text-gray-700</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">      group-hover:text-blue-800 group-hover:text-4xl</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">      \"</span></span></span><br><span class=\"line\"><span class=\"tag\">  &gt;</span></span><br><span class=\"line\">    Card Title</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    Lorem ipsum dolor, sit amet consectetur adipisicing elit. Quisquam</span><br><span class=\"line\">    repellendus error, qui natus ea quas, aut, ipsa illo cupiditate corrupti in</span><br><span class=\"line\">    quaerat enim. Iusto, impedit? Est saepe ratione dolorum officiis?</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>只要加上想要呈現的 class，一行 CSS 都不用寫，而且也不用想命名，真是太方便了！</p>\n<p>但是發現一件事情，為什麼改用 TailwindCSS 寫完後文字不會再 hover 的時候改變樣式呢?</p>\n<iframe height=\"265\" style=\"width: 100%;\" scrolling=\"no\" title=\"TailwindCSS-card\" src=\"https://codepen.io/hnzxewqw/embed/LYWoMgp?height=265&theme-id=light&default-tab=html,result\"></iframe>\n\n<p>原因是預設設定檔，沒有加入 <code>group-hover</code> 的樣式，所以要手動加入，在 <code>tailwindcss.config.js</code> 設定檔更新如下：</p>\n<p><strong>tailwindcss.config.js</strong></p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">module.exports = &#123;</span><br><span class=\"line\"><span class=\"function\">    purge: &#123;</span></span><br><span class=\"line\"><span class=\"function\">        <span class=\"title\">enabled</span>: <span class=\"title\">true</span>,</span></span><br><span class=\"line\"><span class=\"function\">        <span class=\"title\">content</span>: [\"./*.<span class=\"title\">html</span>\"],</span></span><br><span class=\"line\"><span class=\"function\">    &#125;,</span></span><br><span class=\"line\"><span class=\"function\">    <span class=\"title\">darkMode</span>: <span class=\"title\">false</span>, // <span class=\"title\">or</span> '<span class=\"title\">media</span>' <span class=\"title\">or</span> '<span class=\"title\">class</span>'</span></span><br><span class=\"line\"><span class=\"function\">    <span class=\"title\">theme</span>: &#123;</span></span><br><span class=\"line\"><span class=\"function\">        <span class=\"title\">extend</span>: &#123;&#125;,</span></span><br><span class=\"line\"><span class=\"function\">    &#125;,</span></span><br><span class=\"line\"><span class=\"function\">    <span class=\"title\">variants</span>: &#123;</span></span><br><span class=\"line\"><span class=\"function\">        <span class=\"title\">extend</span>: &#123;</span></span><br><span class=\"line\"><span class=\"function\">            <span class=\"title\">borderStyle</span>: [\"<span class=\"title\">responsive</span>\", \"<span class=\"title\">hover</span>\"],</span></span><br><span class=\"line\"><span class=\"function\">            <span class=\"title\">fontSize</span>: ['<span class=\"title\">responsive</span>',\"<span class=\"title\">group</span>-<span class=\"title\">hover</span>\"], //加入 <span class=\"title\">group</span>-<span class=\"title\">hover</span></span></span><br><span class=\"line\"><span class=\"function\">        &#125;,</span></span><br><span class=\"line\"><span class=\"function\">    &#125;,</span></span><br><span class=\"line\"><span class=\"function\">    <span class=\"title\">plugins</span>: [],</span></span><br><span class=\"line\"><span class=\"function\">&#125;;</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>hover</strong></p>\n<p><img src=\"https://i.imgur.com/P1juNTL.png\" alt=\"hover\"></p>\n<blockquote>\n<p>因為 CodePen 無法載入 <code>tailwind.config.js</code> 的內容，所以要在本地端時做才會有效果喔！</p>\n</blockquote>\n<h2 id=\"還有更多偽類變體可以使用\"><a href=\"#還有更多偽類變體可以使用\" class=\"headerlink\" title=\"還有更多偽類變體可以使用\"></a>還有更多偽類變體可以使用</h2><p>除了 <code>Group-hover</code> 外，還有其他效果，可以看 <a href=\"https://hsuchihting.github.io/TailwindCSS/20210614/1717980556/\">Tailwind CSS - 偽類變體 Pseudo-Class Variants</a> 有介紹與響應式的合體技喔！</p>\n<h2 id=\"客製化自己的-Variants\"><a href=\"#客製化自己的-Variants\" class=\"headerlink\" title=\"客製化自己的 Variants\"></a>客製化自己的 Variants</h2><p>如果覺得每次要去改預設設定檔很麻煩，那就自己弄一個專屬此案件的 <code>variants</code> 吧！</p>\n<p>首先我想設定一個香蕉的 <code>variants</code> 來用，就在一開始預設的 <code>style.css</code> 檔案中加入我要的樣式。</p>\n<p><img src=\"https://i.imgur.com/p3VDp97.png\" alt=\"style\"></p>\n<p>記得儲存加編譯，我知道你也忘記了，編譯指令如下：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">npx tailwindcss -i ./src/tailwind.css -o ./dist/tailwind.css</span><br></pre></td></tr></table></figure>\n\n<p>編譯結束後怎麼知道有沒有成功？</p>\n<p>這時就可以到編譯後的 <code>tailwind.css</code> 搜尋 <code>banana</code>，然後就會看到自定義的 <code>banana</code> 樣式出現在裡面囉！</p>\n<p><img src=\"https://i.imgur.com/SIZB6AI.png\" alt=\"banana\"></p>\n<p>寫到這邊真的覺得 TailwindCSS 真的很便利於開發呢！</p>\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><ul>\n<li><a href=\"https://ithelp.ithome.com.tw/articles/10246237\" target=\"_blank\" rel=\"noopener\">【Tailwind CSS 教學 - 9】強大 Variant 讓你寫 CSS 偽元素不卡卡</a></li>\n<li><a href=\"https://tailwindcss.com/docs/hover-focus-and-other-states#group-hover\" target=\"_blank\" rel=\"noopener\">TailwindCSS - Group-hover</a></li>\n</ul>\n","categories":["TailwindCSS"],"tags":["TailwindCSS"]},{"title":"Tailwind CSS - 設定自己想要的 TailwindCSS 樣式 Variant","url":"/TailwindCSS/20210620/961026179/","content":"<p><img src=\"https://tools.wingzero.tw/assets/upload/1611643654838_0.jpg\" alt=\"tailwindcss\"></p>\n<p>前面有提到 TailwindCSS 在所有的 DOM 元素前面幾乎都可以使用偽類變體來控制，但幾乎也就代表了沒有全部的元素都可以這樣做，那如果專案需要設定效果，但 TailwindCSS 沒有支援怎麼辦。</p>\n<blockquote>\n<p><del>那就自己用 CSS 刻阿！然後這篇就到這裡結束了(被揍)</del></p>\n</blockquote>\n<p>貼心的 TailwindCSS 也提供可以客製化的方式給開發者。</p>\n<h2 id=\"使用-Variant-來設定自己想要的樣式\"><a href=\"#使用-Variant-來設定自己想要的樣式\" class=\"headerlink\" title=\"使用 Variant 來設定自己想要的樣式\"></a>使用 Variant 來設定自己想要的樣式</h2><p>基本上許多常用的效果 TailwindCSS 都已經幫開發者設定好，那為什麼要可以自訂呢?</p>\n<p>因為還是有許多較少使用的樣式，沒有被設定。因為較少使用，所以要用到的時候，會發現我打了樣式，卻沒有出現效果…</p>\n<p>例如：</p>\n<p>我想在 <code>hover</code> 效果的時候使用 <code>border-dashed</code> 虛線效果，可是沒有出現。</p>\n<iframe height=\"265\" style=\"width: 100%;\" scrolling=\"no\" title=\"TailwindCSS no border-dashed style\" src=\"https://codepen.io/hnzxewqw/embed/poeBpoK?height=265&theme-id=light&default-tab=html,result\"></iframe>\n\n<p>雖然我也可以每次要用的時候再去翻文件就好，但就是每次要寫就要去找一次，有點麻煩。</p>\n<blockquote>\n<p>可能常寫也會記得啦！<del>但如果可以都不要寫不是更好(誤)</del>…</p>\n</blockquote>\n<h2 id=\"建構屬於自己的設定檔\"><a href=\"#建構屬於自己的設定檔\" class=\"headerlink\" title=\"建構屬於自己的設定檔\"></a>建構屬於自己的設定檔</h2><h3 id=\"預設設定檔\"><a href=\"#預設設定檔\" class=\"headerlink\" title=\"預設設定檔\"></a>預設設定檔</h3><p>在文件中有一個指令</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">npx tailwindcss init</span><br></pre></td></tr></table></figure>\n\n<p>會將專案根目錄建立一個最基本的 <code>tailwind.config.js</code> 檔案，也就是一開始安裝的時候出現的那支，會看到內容都是空的。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// tailwind.config.js</span></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  purge: [],</span><br><span class=\"line\">  darkMode: <span class=\"literal\">false</span>, <span class=\"comment\">// 或 'media' 或 'class'</span></span><br><span class=\"line\">  theme: &#123;</span><br><span class=\"line\">    extend: &#123;&#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  variants: &#123;</span><br><span class=\"line\">    extend: &#123;&#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  plugins: [],</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"完整的設定檔\"><a href=\"#完整的設定檔\" class=\"headerlink\" title=\"完整的設定檔\"></a>完整的設定檔</h2><p>如果想看到 TailwindCSS 完整的設定檔，可以輸入指令</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">npx tailwindcss init --full</span><br></pre></td></tr></table></figure>\n\n<p>這時候就會看到 TailwindCSS 完整的<a href=\"[https://](https://unpkg.com/browse/tailwindcss@2.2.2/stubs/defaultConfig.stub.js)\">預設配置檔</a>，因礙於篇幅關係就不再放到文章中，可點選連結查看。</p>\n<h3 id=\"建議覆蓋預設配置檔的內容\"><a href=\"#建議覆蓋預設配置檔的內容\" class=\"headerlink\" title=\"建議覆蓋預設配置檔的內容\"></a>建議覆蓋預設配置檔的內容</h3><p>雖然得到完整的預設配置檔，可以改成專案需求的樣式，但官方文件建議只在需要客製化地方，使用覆蓋的方式去取代原本預設的樣式，會是比較推薦的做法，避免一次引入太多沒使用到的樣式，讓 CSS 變得很肥。</p>\n<p>官方有給一個使用覆蓋預設樣式的範例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// `tailwind.config.js` 範例檔案</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> colors = <span class=\"built_in\">require</span>(<span class=\"string\">\"tailwindcss/colors\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  theme: &#123;</span><br><span class=\"line\">    colors: &#123;</span><br><span class=\"line\">      gray: colors.coolGray,</span><br><span class=\"line\">      blue: colors.lightBlue,</span><br><span class=\"line\">      red: colors.rose,</span><br><span class=\"line\">      pink: colors.fuchsia,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    fontFamily: &#123;</span><br><span class=\"line\">      sans: [<span class=\"string\">\"Graphik\"</span>, <span class=\"string\">\"sans-serif\"</span>],</span><br><span class=\"line\">      serif: [<span class=\"string\">\"Merriweather\"</span>, <span class=\"string\">\"serif\"</span>],</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    extend: &#123;</span><br><span class=\"line\">      spacing: &#123;</span><br><span class=\"line\">        <span class=\"number\">128</span>: <span class=\"string\">\"32rem\"</span>,</span><br><span class=\"line\">        <span class=\"number\">144</span>: <span class=\"string\">\"36rem\"</span>,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      borderRadius: &#123;</span><br><span class=\"line\">        <span class=\"string\">\"4xl\"</span>: <span class=\"string\">\"2rem\"</span>,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  variants: &#123;</span><br><span class=\"line\">    extend: &#123;</span><br><span class=\"line\">      borderColor: [<span class=\"string\">\"focus-visible\"</span>],</span><br><span class=\"line\">      opacity: [<span class=\"string\">\"disabled\"</span>],</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p>可以看見此範例覆蓋了以下幾個內容：</p>\n<ol>\n<li>主題 <code>theme</code> 下有兩個子項目：字型 <code>fontFamily</code> 與延伸區塊 <code>extend</code> 改變 <strong>間距 <code>spacing</code></strong> 以及 <strong>邊框弧度 <code>borderRadius</code></strong>。</li>\n<li>變化模式 <strong>variants</strong> 的項目：<strong>邊框線條 <code>borderColor</code></strong> 與 <strong>透明度 <code>opacity</code></strong>。</li>\n</ol>\n<h2 id=\"更改-tailwind-config-js-的-Variants-內容\"><a href=\"#更改-tailwind-config-js-的-Variants-內容\" class=\"headerlink\" title=\"更改 tailwind.config.js 的 Variants 內容\"></a>更改 tailwind.config.js 的 Variants 內容</h2><p>本篇重點在 <code>variants</code> 區塊，超級多屬性!!</p>\n<p><strong>tailwind.config.js</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">variants: &#123;</span><br><span class=\"line\">    accessibility: [<span class=\"string\">'responsive'</span>, <span class=\"string\">'focus-within'</span>, <span class=\"string\">'focus'</span>],</span><br><span class=\"line\">    alignContent: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    alignItems: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    alignSelf: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    animation: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    appearance: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    backdropBlur: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    backdropBrightness: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    backdropContrast: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    backdropDropShadow: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    backdropFilter: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    backdropGrayscale: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    backdropHueRotate: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    backdropInvert: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    backdropSaturate: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    backdropSepia: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    backgroundAttachment: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    backgroundBlendMode: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    backgroundClip: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    backgroundColor: [<span class=\"string\">'responsive'</span>, <span class=\"string\">'dark'</span>, <span class=\"string\">'group-hover'</span>, <span class=\"string\">'focus-within'</span>, <span class=\"string\">'hover'</span>, <span class=\"string\">'focus'</span>],</span><br><span class=\"line\">    backgroundImage: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    backgroundOpacity: [<span class=\"string\">'responsive'</span>, <span class=\"string\">'dark'</span>, <span class=\"string\">'group-hover'</span>, <span class=\"string\">'focus-within'</span>, <span class=\"string\">'hover'</span>, <span class=\"string\">'focus'</span>],</span><br><span class=\"line\">    backgroundPosition: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    backgroundRepeat: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    backgroundSize: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    blur: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    borderCollapse: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    borderColor: [<span class=\"string\">'responsive'</span>, <span class=\"string\">'dark'</span>, <span class=\"string\">'group-hover'</span>, <span class=\"string\">'focus-within'</span>, <span class=\"string\">'hover'</span>, <span class=\"string\">'focus'</span>],</span><br><span class=\"line\">    borderOpacity: [<span class=\"string\">'responsive'</span>, <span class=\"string\">'dark'</span>, <span class=\"string\">'group-hover'</span>, <span class=\"string\">'focus-within'</span>, <span class=\"string\">'hover'</span>, <span class=\"string\">'focus'</span>],</span><br><span class=\"line\">    borderRadius: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    borderStyle: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    borderWidth: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    boxDecorationBreak: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    boxShadow: [<span class=\"string\">'responsive'</span>, <span class=\"string\">'group-hover'</span>, <span class=\"string\">'focus-within'</span>, <span class=\"string\">'hover'</span>, <span class=\"string\">'focus'</span>],</span><br><span class=\"line\">    boxSizing: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    brightness: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    clear: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    container: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    contrast: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    cursor: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    display: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    divideColor: [<span class=\"string\">'responsive'</span>, <span class=\"string\">'dark'</span>],</span><br><span class=\"line\">    divideOpacity: [<span class=\"string\">'responsive'</span>, <span class=\"string\">'dark'</span>],</span><br><span class=\"line\">    divideStyle: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    divideWidth: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    dropShadow: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    fill: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    filter: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    flex: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    flexDirection: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    flexGrow: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    flexShrink: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    flexWrap: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    float: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    fontFamily: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    fontSize: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    fontSmoothing: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    fontStyle: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    fontVariantNumeric: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    fontWeight: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    gap: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    gradientColorStops: [<span class=\"string\">'responsive'</span>, <span class=\"string\">'dark'</span>, <span class=\"string\">'hover'</span>, <span class=\"string\">'focus'</span>],</span><br><span class=\"line\">    grayscale: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    gridAutoColumns: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    gridAutoFlow: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    gridAutoRows: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    gridColumn: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    gridColumnEnd: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    gridColumnStart: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    gridRow: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    gridRowEnd: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    gridRowStart: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    gridTemplateColumns: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    gridTemplateRows: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    height: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    hueRotate: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    inset: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    invert: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    isolation: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    justifyContent: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    justifyItems: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    justifySelf: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    letterSpacing: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    lineHeight: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    listStylePosition: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    listStyleType: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    margin: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    maxHeight: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    maxWidth: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    minHeight: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    minWidth: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    mixBlendMode: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    objectFit: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    objectPosition: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    opacity: [<span class=\"string\">'responsive'</span>, <span class=\"string\">'group-hover'</span>, <span class=\"string\">'focus-within'</span>, <span class=\"string\">'hover'</span>, <span class=\"string\">'focus'</span>],</span><br><span class=\"line\">    order: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    outline: [<span class=\"string\">'responsive'</span>, <span class=\"string\">'focus-within'</span>, <span class=\"string\">'focus'</span>],</span><br><span class=\"line\">    overflow: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    overscrollBehavior: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    padding: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    placeContent: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    placeItems: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    placeSelf: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    placeholderColor: [<span class=\"string\">'responsive'</span>, <span class=\"string\">'dark'</span>, <span class=\"string\">'focus'</span>],</span><br><span class=\"line\">    placeholderOpacity: [<span class=\"string\">'responsive'</span>, <span class=\"string\">'dark'</span>, <span class=\"string\">'focus'</span>],</span><br><span class=\"line\">    pointerEvents: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    position: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    resize: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    ringColor: [<span class=\"string\">'responsive'</span>, <span class=\"string\">'dark'</span>, <span class=\"string\">'focus-within'</span>, <span class=\"string\">'focus'</span>],</span><br><span class=\"line\">    ringOffsetColor: [<span class=\"string\">'responsive'</span>, <span class=\"string\">'dark'</span>, <span class=\"string\">'focus-within'</span>, <span class=\"string\">'focus'</span>],</span><br><span class=\"line\">    ringOffsetWidth: [<span class=\"string\">'responsive'</span>, <span class=\"string\">'focus-within'</span>, <span class=\"string\">'focus'</span>],</span><br><span class=\"line\">    ringOpacity: [<span class=\"string\">'responsive'</span>, <span class=\"string\">'dark'</span>, <span class=\"string\">'focus-within'</span>, <span class=\"string\">'focus'</span>],</span><br><span class=\"line\">    ringWidth: [<span class=\"string\">'responsive'</span>, <span class=\"string\">'focus-within'</span>, <span class=\"string\">'focus'</span>],</span><br><span class=\"line\">    rotate: [<span class=\"string\">'responsive'</span>, <span class=\"string\">'hover'</span>, <span class=\"string\">'focus'</span>],</span><br><span class=\"line\">    saturate: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    scale: [<span class=\"string\">'responsive'</span>, <span class=\"string\">'hover'</span>, <span class=\"string\">'focus'</span>],</span><br><span class=\"line\">    sepia: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    skew: [<span class=\"string\">'responsive'</span>, <span class=\"string\">'hover'</span>, <span class=\"string\">'focus'</span>],</span><br><span class=\"line\">    space: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    stroke: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    strokeWidth: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    tableLayout: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    textAlign: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    textColor: [<span class=\"string\">'responsive'</span>, <span class=\"string\">'dark'</span>, <span class=\"string\">'group-hover'</span>, <span class=\"string\">'focus-within'</span>, <span class=\"string\">'hover'</span>, <span class=\"string\">'focus'</span>],</span><br><span class=\"line\">    textDecoration: [<span class=\"string\">'responsive'</span>, <span class=\"string\">'group-hover'</span>, <span class=\"string\">'focus-within'</span>, <span class=\"string\">'hover'</span>, <span class=\"string\">'focus'</span>],</span><br><span class=\"line\">    textOpacity: [<span class=\"string\">'responsive'</span>, <span class=\"string\">'dark'</span>, <span class=\"string\">'group-hover'</span>, <span class=\"string\">'focus-within'</span>, <span class=\"string\">'hover'</span>, <span class=\"string\">'focus'</span>],</span><br><span class=\"line\">    textOverflow: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    textTransform: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    transform: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    transformOrigin: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    transitionDelay: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    transitionDuration: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    transitionProperty: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    transitionTimingFunction: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    translate: [<span class=\"string\">'responsive'</span>, <span class=\"string\">'hover'</span>, <span class=\"string\">'focus'</span>],</span><br><span class=\"line\">    userSelect: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    verticalAlign: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    visibility: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    whitespace: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    width: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    wordBreak: [<span class=\"string\">'responsive'</span>],</span><br><span class=\"line\">    zIndex: [<span class=\"string\">'responsive'</span>, <span class=\"string\">'focus-within'</span>, <span class=\"string\">'focus'</span>],</span><br><span class=\"line\">  &#125;,</span><br></pre></td></tr></table></figure>\n\n<p>找到 <code>borderStyle</code> 屬性，因為剛剛我想在 <code>hover</code> 時使用 <code>border-dashed</code>，但此屬性預設，沒有這 <code>hover</code> 效果。預設如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">borderStyle: [<span class=\"string\">'responsive'</span>],</span><br></pre></td></tr></table></figure>\n\n<p>又看到其他屬性有加上 <code>hover</code> 與 <code>focus</code> 的偽類值，所以我也照樣照句，把 <code>hover</code> 加入到 <code>borderStyle</code> 中。</p>\n<p>新增後會變這樣：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">borderStyle: [<span class=\"string\">'responsive'</span>,<span class=\"string\">'hover'</span>],</span><br></pre></td></tr></table></figure>\n\n<p>這時候再回到 HTML 上就會發現智能提示會出現之前想要設定的 <code>border-dashed</code> 樣式！</p>\n<p><img src=\"https://i.imgur.com/P7CoauK.png\" alt=\"html\"></p>\n<p><strong>HTML</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"container sm:mx-auto\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">button</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">class</span>=<span class=\"string\">\"</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">        flex</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">        sm:mx-auto</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">        rounded</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">        py-2</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">        px-3</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">        m-2</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">        bg-yellow-300</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">        text-black</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">        hover:text-white</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">        hover:bg-green-500</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">        focus:outline-none</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">        border-black border-2</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">        hover:border-red-900 hover:border-dashed hover:border-8</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">        \"</span></span></span><br><span class=\"line\"><span class=\"tag\">  &gt;</span></span><br><span class=\"line\">    Click Me</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">class</span>=<span class=\"string\">\"text-center\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">code</span> <span class=\"attr\">class</span>=<span class=\"string\">\"bg-pink-200 p-2 text-red-500\"</span>&gt;</span>border-dashed<span class=\"tag\">&lt;/<span class=\"name\">code</span>&gt;</span>沒有效果</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>重新編譯後，滑鼠移動到畫面上，也會出現一樣的效果。</p>\n<p><strong>no hover</strong></p>\n<p><img src=\"https://i.imgur.com/D9fGXNk.png\" alt=\"before\"></p>\n<p><strong>hover</strong></p>\n<p><img src=\"https://i.imgur.com/V5avGUd.png\" alt=\"after\"></p>\n<p>如果要用覆蓋的方式，可以寫在 <code>variants</code> 屬性內，也會達到一樣的效果。</p>\n<p><strong>tailwind.config.js</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  purge: &#123;</span><br><span class=\"line\">    enabled: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    content: [<span class=\"string\">\"./*.html\"</span>],</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  darkMode: <span class=\"literal\">false</span>, <span class=\"comment\">// or 'media' or 'class'</span></span><br><span class=\"line\">  theme: &#123;</span><br><span class=\"line\">    extend: &#123;&#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  variants: &#123;</span><br><span class=\"line\">    extend: &#123;</span><br><span class=\"line\">      borderStyle: [<span class=\"string\">\"responsive\"</span>, <span class=\"string\">\"hover\"</span>],</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  plugins: [],</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p>以上筆記客製化 <code>variants</code> 變化模式如何新增效果在預設設定檔中，或是覆蓋想要改變的樣式，自己一開始用會全部展開修改，因為太多屬性，還要去翻找文件有時候滿麻煩的，但相信未來熟稔之後，應該就可以用覆蓋的方式來寫了。</p>\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><ul>\n<li><a href=\"https://tailwindcss.com/docs/configuration\" target=\"_blank\" rel=\"noopener\">TailwindCSS - Configuration</a></li>\n<li><a href=\"https://ithelp.ithome.com.tw/articles/10246236\" target=\"_blank\" rel=\"noopener\">【Tailwind CSS 教學 - 8】詳解 Variant Tailwind config 設定方式</a></li>\n</ul>\n","categories":["TailwindCSS"],"tags":["TailwindCSS"]},{"title":"Tailwind CSS - 偽類變體 Pseudo-Class Variants","url":"/TailwindCSS/20210614/1717980556/","content":"<p><img src=\"https://tools.wingzero.tw/assets/upload/1611643654838_0.jpg\" alt=\"tailwindcss\"></p>\n<h2 id=\"什麼是偽類變體\"><a href=\"#什麼是偽類變體\" class=\"headerlink\" title=\"什麼是偽類變體\"></a>什麼是偽類變體</h2><p>又來一個專有名詞，還沒學就心慌慌…</p>\n<p>但是發現有一個熟悉名詞：<strong>偽類</strong>(看到這個我就放一半的心了)。在傳統 CSS 中，常常會使用偽元素，像是 <code>:hover</code>, <code>:active</code>, <code>:focus</code>…等等。以前如果要寫一個 <code>a</code> 連結，然後要 <code>hover</code> 效果會變色的話會寫：</p>\n<iframe height=\"265\" style=\"width: 100%;\" scrolling=\"no\" title=\"css3 a href - TailwindCSS\" src=\"https://codepen.io/hnzxewqw/embed/RwpqOzm?height=265&theme-id=light&default-tab=css,result\"></iframe>\n\n<p>但使用 Tailwind 之後只要在想使用偽類效果的地方加上想用的偽類，就可以達到預期的效果，像是我我把上方範例改寫成 Tailwind 的方式的話，會是：</p>\n<iframe height=\"265\" style=\"width: 100%;\" scrolling=\"no\" title=\"Tailwind a hover\" src=\"https://codepen.io/hnzxewqw/embed/VwpVOwR?height=265&theme-id=light&default-tab=html,result\"></iframe>\n\n<p>但其實 Tailwind 規劃偽類變體的方法跟傳統的 CSS 是不同的，當我滑鼠移到 <code>hover:text-red-500</code>，會出現提示訊息：</p>\n<p><img src=\"https://i.imgur.com/ZNC02Xq.png\" alt=\"tip\"></p>\n<p>原來它是把 <code>hover</code> 包裝成一個 class，然後再去執行文字變色的效果有 <code>hover</code> 的偽類。</p>\n<h2 id=\"智能提示的方便之處\"><a href=\"#智能提示的方便之處\" class=\"headerlink\" title=\"智能提示的方便之處\"></a>智能提示的方便之處</h2><p>順便提一下智能提示有一個很方便的地方，也就是當我在打想要使用的 class 時，旁邊會跳出提示訊息，告訴我此 class 在編譯成 CSS 後會是什麼設定，這樣就不用一直去測試 Tailwind 的 class 效果是什麼囉！</p>\n<p><img src=\"https://i.imgur.com/7H8u3ji.png\" alt=\"tips\"></p>\n<h2 id=\"還有更多偽類變體可以使用\"><a href=\"#還有更多偽類變體可以使用\" class=\"headerlink\" title=\"還有更多偽類變體可以使用\"></a>還有更多偽類變體可以使用</h2><p>除了上方介紹的 hover 外，還有以下可以使用的偽類變體，都可以到<a href=\"https://tailwindcss.tw/docs/hover-focus-and-other-states\" target=\"_blank\" rel=\"noopener\">官方文件</a>複製下來玩玩看。</p>\n<ul>\n<li>Hover</li>\n<li>Focus</li>\n<li>Active</li>\n<li>Group-hover</li>\n<li>Group-focus</li>\n<li>Focus-within</li>\n<li>Focus-visible</li>\n<li>Motion-safe</li>\n<li>Motion-reduce</li>\n<li>Disabled</li>\n<li>Visited</li>\n<li>Checked</li>\n<li>First-child</li>\n<li>Last-child</li>\n<li>Odd-child</li>\n<li>Even-child</li>\n</ul>\n<h2 id=\"偽類變體與響應式的合體技\"><a href=\"#偽類變體與響應式的合體技\" class=\"headerlink\" title=\"偽類變體與響應式的合體技\"></a>偽類變體與響應式的合體技</h2><p><a href=\"https://hsuchihting.github.io/TailwindCSS/20210612/1338142949/\">Tailwind CSS - 手機到桌上螢幕，所有的元素都能自適應</a>有介紹過 Tailwind 自適應的強大之處，與偽類變體結合更是超強合體技！如下方範例，在解析度 375px 與超過 375px 時，可以讓按鈕在不同的解析度下有不同的 hover 效果喔！</p>\n<iframe height=\"265\" style=\"width: 100%;\" scrolling=\"no\" title=\"Tailwind - pseudo x responsive\" src=\"https://codepen.io/hnzxewqw/embed/yLMQWwq?height=265&theme-id=light&default-tab=html,result\"></iframe>\n\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><ul>\n<li><a href=\"https://tailwindcss.tw/docs/hover-focus-and-other-states\" target=\"_blank\" rel=\"noopener\">TailwindCSS - Hover, Focus, &amp; Other States</a></li>\n<li><a href=\"https://ithelp.ithome.com.tw/articles/10246163\" target=\"_blank\" rel=\"noopener\">【Tailwind CSS 教學 - 7】Pseudo-Class Variants 是 CSS \b屆的偉大發明</a></li>\n</ul>\n","categories":["TailwindCSS"],"tags":["TailwindCSS"]},{"title":"Tailwind CSS - 增加 Base 樣式","url":"/TailwindCSS/20210614/1455247132/","content":"<p><img src=\"https://tools.wingzero.tw/assets/upload/1611643654838_0.jpg\" alt=\"tailwindcss\"></p>\n<h2 id=\"什麼是-Base-樣式\"><a href=\"#什麼是-Base-樣式\" class=\"headerlink\" title=\"什麼是 Base 樣式\"></a>什麼是 Base 樣式</h2><p>概念有點像是 CSSreset，現在網頁基本上都會使用 CSS reset，有寫過網頁一段時間都不陌生，而 Tailwind 有提供一組基底樣式，稱為 <a href=\"https://tailwindcss.tw/docs/preflight\" target=\"_blank\" rel=\"noopener\">Preflight</a>，基本上就是採用 <a href=\"https://github.com/sindresorhus/modern-normalize\" target=\"_blank\" rel=\"noopener\">modern-normalize</a> 啦！</p>\n<p>以前一開始學網頁是用 <a href=\"https://meyerweb.com/eric/tools/css/reset/\" target=\"_blank\" rel=\"noopener\">CSS reset</a> ，後來就都用 <a href=\"https://necolas.github.io/normalize.css/\" target=\"_blank\" rel=\"noopener\">Nomalize</a> 了。</p>\n<blockquote>\n<p>延伸閱讀：<a href=\"https://ithelp.ithome.com.tw/articles/10196528\" target=\"_blank\" rel=\"noopener\">Day21：小事之 CSS Reset 與 CSS normalize</a>。</p>\n</blockquote>\n<p>然後官網有說到基底預設樣式為 <a href=\"https://www.paulirish.com/2012/box-sizing-border-box-ftw/\" target=\"_blank\" rel=\"noopener\">box-sizing-reset</a>，為什麼特別提這個呢？</p>\n<p>因為預設其實是 <code>box-sizing:content-box</code>，那 <code>border-box</code> 跟 <code>content-box</code> 的差別是什麼?</p>\n<p>簡單來說，<code>border-box</code> 就是我指定的寬度或高度是多少，網頁就會呈現該數值，但如果是 <code>content-box</code> 就會另外加上 border(邊框) 的寬度，結果跟預期的結果不同。</p>\n<p>從範例可以看到兩者不同的在尺寸上不同的變化。</p>\n<iframe height=\"265\" style=\"width: 100%;\" scrolling=\"no\" title=\"Tailwind base\" src=\"https://codepen.io/hnzxewqw/embed/dyvgrbO?height=265&theme-id=light&default-tab=css,result\" ></iframe>\n\n<p>Tailwind 跟 Bootstrap 5 都有加上這個屬性。</p>\n<h2 id=\"覆蓋原本-base-的設定\"><a href=\"#覆蓋原本-base-的設定\" class=\"headerlink\" title=\"覆蓋原本 base 的設定\"></a>覆蓋原本 base 的設定</h2><p>在一開始安裝 Tailwind 的時候有一個主要的 CSS 檔案 <code>style.css</code>，裡面會放 Tailwind 三個基本設定內容</p>\n<p><strong>style.css</strong></p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@tailwind</span> base;</span><br><span class=\"line\"><span class=\"keyword\">@tailwind</span> components;</span><br><span class=\"line\"><span class=\"keyword\">@tailwind</span> utilities;</span><br></pre></td></tr></table></figure>\n\n<p>如果專案的需求是改變 h1 的預設大小，那可以把要改變的內容直接寫在 <code>style.css</code> 這隻檔案內，然後使用 <code>@layer base</code>，再把要更改的屬性與值寫在裡面。如下方範例：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@tailwind</span> base;</span><br><span class=\"line\"><span class=\"keyword\">@tailwind</span> components;</span><br><span class=\"line\"><span class=\"keyword\">@tailwind</span> utilities;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@layer</span> base &#123;</span><br><span class=\"line\">  <span class=\"selector-tag\">h1</span> &#123;</span><br><span class=\"line\">    @apply text-6xl text-red-500 my-5;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>這段意思是，我使用 <code>@layer</code> 圖層的語法，把 base 的 <code>h1</code> 樣式改掉，並且使用 <code>@apply</code> 允許修改整個 <code>h1</code> 的內容， <code>@apply</code> 有點像是把想要的樣式合併起來，類似拆模組的概念。</p>\n<p>下圖為原本的 <code>h1</code> 樣式，</p>\n<p><img src=\"https://i.imgur.com/poFwTnK.png\" alt=\"origin\"></p>\n<p>此圖為修改後的樣式，改變樣式後記得要重新編譯。</p>\n<p><img src=\"https://i.imgur.com/EXHx13W.png\" alt=\"change\"></p>\n<h2 id=\"覆蓋預設文字樣式\"><a href=\"#覆蓋預設文字樣式\" class=\"headerlink\" title=\"覆蓋預設文字樣式\"></a>覆蓋預設文字樣式</h2><p>跟覆蓋 base 樣式的方法一樣，專案需求如果要覆蓋樣式，官網也提供範例可以參考，而覆蓋字體是使用 <code>@font-face</code> 語法，並把相關內容寫在其中。</p>\n<p><strong>style.css</strong></p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@tailwind</span> base;</span><br><span class=\"line\"><span class=\"keyword\">@tailwind</span> components;</span><br><span class=\"line\"><span class=\"keyword\">@tailwind</span> utilities;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@layer</span> base &#123;</span><br><span class=\"line\">  <span class=\"selector-tag\">h1</span> &#123;</span><br><span class=\"line\">    @apply text-6xl text-red-500 my-5;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">@font-face</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">font-family</span>: Proxima Nova;</span><br><span class=\"line\">    <span class=\"attribute\">font-weight</span>: <span class=\"number\">400</span>;</span><br><span class=\"line\">    <span class=\"attribute\">src</span>: <span class=\"built_in\">url</span>(/fonts/proxima-nova/<span class=\"number\">400</span>-regular.woff) <span class=\"built_in\">format</span>(<span class=\"string\">\"woff\"</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">@font-face</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">font-family</span>: Proxima Nova;</span><br><span class=\"line\">    <span class=\"attribute\">font-weight</span>: <span class=\"number\">500</span>;</span><br><span class=\"line\">    <span class=\"attribute\">src</span>: <span class=\"built_in\">url</span>(/fonts/proxima-nova/<span class=\"number\">500</span>-medium.woff) <span class=\"built_in\">format</span>(<span class=\"string\">\"woff\"</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>如此我就新增了一種字型的粗細度。</p>\n<h2 id=\"使用套件新增字型\"><a href=\"#使用套件新增字型\" class=\"headerlink\" title=\"使用套件新增字型\"></a>使用套件新增字型</h2><p>官方也提供了另一種方法，如同之前響應式一樣，可以直接寫在 <code>tailwind.config.js</code> 裡面，當作套件來新增。</p>\n<p>如果要自訂義套件使用，要使用 <code>addBase</code> 這個方法，才能做使用喔！並且所有有使用 <code>addBase</code> 產生的樣式，都會被加到 <code>base</code> 的樣式中。下方範例就是將自訂義 <code>h1</code>~<code>h3</code> 字體大小。</p>\n<p>使用方法：</p>\n<ul>\n<li>在 plugins 的陣列中加上套件的方法，此範例稱作 <code>plugin()</code>，此名稱可自訂義。</li>\n<li>裡面使用一個函式，並給予一個物件，兩個屬性， <code>addBase</code>,<code>theme</code>。</li>\n<li>函式裡面需用 <code>addBase()</code> 這個方法，並且塞入物件，此物件就是要修改的文字屬性內容。</li>\n</ul>\n<p><strong>tailwind.config.js</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//引入剛剛新增的字型 plugin</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> plugin = <span class=\"built_in\">require</span>(<span class=\"string\">\"tailwindcss/plugin\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  purge: &#123;</span><br><span class=\"line\">    enabled: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    content: [<span class=\"string\">\"./*.html\"</span>],</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  darkMode: <span class=\"literal\">false</span>, <span class=\"comment\">// or 'media' or 'class'</span></span><br><span class=\"line\">  theme: &#123;</span><br><span class=\"line\">    extend: &#123;&#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  variants: &#123;</span><br><span class=\"line\">    extend: &#123;&#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  plugins: [</span><br><span class=\"line\">    plugin(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">&#123; addBase, theme &#125;</span>) </span>&#123;</span><br><span class=\"line\">      addBase(&#123;</span><br><span class=\"line\">        h1: &#123; <span class=\"attr\">fontSize</span>: theme(<span class=\"string\">\"fontSize.2xl\"</span>) &#125;,</span><br><span class=\"line\">        h2: &#123; <span class=\"attr\">fontSize</span>: theme(<span class=\"string\">\"fontSize.xl\"</span>) &#125;,</span><br><span class=\"line\">        h3: &#123; <span class=\"attr\">fontSize</span>: theme(<span class=\"string\">\"fontSize.lg\"</span>) &#125;,</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">    &#125;),</span><br><span class=\"line\">  ],</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p>完成後，就設定好文字的套件囉！</p>\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><ul>\n<li><a href=\"https://tailwindcss.com/docs/adding-base-styles\" target=\"_blank\" rel=\"noopener\">Tailwind CSS - Adding Base Styles</a></li>\n<li><a href=\"https://ithelp.ithome.com.tw/articles/10244972\" target=\"_blank\" rel=\"noopener\">【Tailwind CSS 教學 - 6】我知道你懂 CSS Reset，但你懂 base 全站樣式設定嗎？</a></li>\n</ul>\n","categories":["TailwindCSS"],"tags":["TailwindCSS"]},{"title":"Tailwind CSS - 手機到桌上螢幕，所有的元素都能自適應","url":"/TailwindCSS/20210612/1338142949/","content":"<p><img src=\"https://tools.wingzero.tw/assets/upload/1611643654838_0.jpg\" alt=\"tailwindcss\"></p>\n<p>跟 Bootstrap 一樣也是手機優先的響應式斷點設計，官方文件也提供尺寸對照：</p>\n<p><img src=\"https://i.imgur.com/R0sWHIH.png\" alt=\"rwd\"></p>\n<p>讓前端在開發輕鬆在 HTML 上寫斷點，不用特別去 CSS 撰寫了。</p>\n<h2 id=\"直觀又好懂的斷點寫法\"><a href=\"#直觀又好懂的斷點寫法\" class=\"headerlink\" title=\"直觀又好懂的斷點寫法\"></a>直觀又好懂的斷點寫法</h2><p>我可以透過 <code>斷點:條件</code> 的方式來撰寫斷點，例如：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">class</span>=<span class=\"string\">\"w-16 md:w-32 lg:w-48\"</span> <span class=\"attr\">src</span>=<span class=\"string\">\"...\"</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>這一段是表示：</p>\n<ul>\n<li>手機圖片寬度為 <code>16px</code></li>\n<li>平板圖片寬度為 <code>32px</code></li>\n<li>桌機圖片寬度為 <code>48px</code></li>\n</ul>\n<iframe height=\"265\" style=\"width: 100%;\" scrolling=\"no\" title=\"Tailwind breakpoint\" src=\"https://codepen.io/hnzxewqw/embed/XWMPEZp?height=265&theme-id=light&default-tab=html,result\" ></iframe>\n\n<p>官方推薦是從小到大的斷點依序撰寫，好讀又直觀，當然想要隨意換順序也可以，但為了以後維護，還是有順序的寫會比較好。</p>\n<h2 id=\"不只單元素，合體技也可以\"><a href=\"#不只單元素，合體技也可以\" class=\"headerlink\" title=\"不只單元素，合體技也可以\"></a>不只單元素，合體技也可以</h2><iframe height=\"600\" style=\"width: 100%;\" scrolling=\"no\" title=\"tailwind breapoint2\" src=\"https://codepen.io/hnzxewqw/embed/WNpgzgb?height=265&theme-id=light&default-tab=html,result\"></iframe>\n\n<p>Tailwind 因為可以自由控制元素達到響應式的效果，所以上方範例手機板看起來是一張卡片，但手機板以上就會成橫幅的排版，這時候就可以看得出來此彈性的優勢別於元件型框架的差別。可以自由地做成任何想要的排版，我覺得這部份真的非常棒，不用受限於元件庫的限制了。</p>\n<p>想要做卡片、彈窗，還是其他常見的元件，似乎都可以透過 Utility-First 來完成。</p>\n<h2 id=\"不需要針對手機板使用斷點\"><a href=\"#不需要針對手機板使用斷點\" class=\"headerlink\" title=\"不需要針對手機板使用斷點\"></a>不需要針對手機板使用斷點</h2><p>有提到 Tailwind 是手機優先開始撰寫，所以手機板不需要使用前綴詞，不要誤用 sm 是手機螢幕大小，sm 的預設斷點為 640px 喔！官方範例為：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"sm:text-center\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>正確的寫法為：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"text-center sm:text-left\"</span>&gt;</span>這是一段文字<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>上方的寫法意思是，在手機板的時候文字居中，解析度 <code>640px</code> 以上時，文字靠左。</p>\n<iframe height=\"265\" style=\"width: 100%;\" scrolling=\"no\" title=\"Tailwind breakpoint3\" src=\"https://codepen.io/hnzxewqw/embed/PopdRvr?height=265&theme-id=light&default-tab=html,result\"></iframe>\n\n<h2 id=\"單一斷點導向\"><a href=\"#單一斷點導向\" class=\"headerlink\" title=\"單一斷點導向\"></a>單一斷點導向</h2><p>Tailwind 的斷點只有 <code>min-width</code>，沒有 <code>max-width</code> ，這代表我都是要從手機板出發來寫斷點，如果我只想在某個元素使用斷點，我只需要在更大的斷點上寫我要的內容，就會覆蓋前一個斷點的內容，比如說下方範例：</p>\n<iframe height=\"265\" style=\"width: 100%;\" scrolling=\"no\" title=\"Tailwind breakpoint4\" src=\"https://codepen.io/hnzxewqw/embed/QWpVmeN?height=265&theme-id=light&default-tab=html,result\" ></iframe>\n\n<p>我有一個方塊，在手機板的時候要靠左，並且是蜜桃色的，但隨著螢幕尺寸的變化，會慢慢變成不同的顏色，甚至到最大的斷點時，可以設定讓方塊靠右對齊。</p>\n<p>透過斷點達到想呈現的效果就是這麼容易。</p>\n<h2 id=\"客製化斷點\"><a href=\"#客製化斷點\" class=\"headerlink\" title=\"客製化斷點\"></a>客製化斷點</h2><p>Tailwind 的優點就是可以自由的客製化，假如預設的斷點比較不符專案使用，也可以透過 <code>tailwind.config.js</code> 去設定想要的斷點喔！斷點的前綴詞可以自訂義。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// tailwind.config.js</span></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  theme: &#123;</span><br><span class=\"line\">    screens: &#123;</span><br><span class=\"line\">      <span class=\"string\">'tablet'</span>: <span class=\"string\">'640px'</span>,</span><br><span class=\"line\">      <span class=\"comment\">// =&gt; @media (min-width: 640px) &#123; ... &#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"string\">'laptop'</span>: <span class=\"string\">'1024px'</span>,</span><br><span class=\"line\">      <span class=\"comment\">// =&gt; @media (min-width: 1024px) &#123; ... &#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"string\">'desktop'</span>: <span class=\"string\">'1280px'</span>,</span><br><span class=\"line\">      <span class=\"comment\">// =&gt; @media (min-width: 1280px) &#123; ... &#125;</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><ul>\n<li><a href=\"https://tailwindcss.tw/docs/breakpoints\" target=\"_blank\" rel=\"noopener\">Tailwind CSS - Breakpoints</a></li>\n</ul>\n","categories":["TailwindCSS"],"tags":["TailwindCSS"]},{"title":"Tailwind CSS - 每個 Utility class 都支援響應式與偽類","url":"/TailwindCSS/20210607/2095338064/","content":"<p><img src=\"https://tools.wingzero.tw/assets/upload/1611643654838_0.jpg\" alt=\"tailwindcss\"></p>\n<p>手刻響應式網站，對我來說其實沒有到很困難，但如果頁面一多，時程又趕，就會很麻煩，而 Tailwind 有一個令人心動的特點就是，所有的 Utility class 都支援響應式。</p>\n<h2 id=\"怎麼寫響應式斷點\"><a href=\"#怎麼寫響應式斷點\" class=\"headerlink\" title=\"怎麼寫響應式斷點\"></a>怎麼寫響應式斷點</h2><p>手刻響應式會使用下面的方式撰寫：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">@media query(max-width:XXXpx)&#123;</span><br><span class=\"line\">/** 響應式內容 */</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>甚至後來學 SCSS 的時候因為懶惰就另外寫了一個元件，每次只要引入元件，在使用 <code>@include</code> 想要的尺寸就好，可是前端的世界沒這麼好過，看看現在手機已經都快不像手機，都跟小電視一樣，尺寸亂七八糟什麼都有，各家手機也都規則不一。</p>\n<h3 id=\"使用-Bootstrap-設定響應式\"><a href=\"#使用-Bootstrap-設定響應式\" class=\"headerlink\" title=\"使用 Bootstrap 設定響應式\"></a>使用 Bootstrap 設定響應式</h3><p>後來學了 Bootstrap 後，算是在響應式有得到一點救贖，只在響應式不用去想斷點，只要專心切板就好，我最常用的就是惱人的 <a href=\"https://bootstrap5.hexschool.com/docs/5.0/content/tables/\" target=\"_blank\" rel=\"noopener\">table</a> 了。</p>\n<iframe height=\"265\" style=\"width: 100%;\" scrolling=\"no\" title=\"Tailwind CSS example BS table\" src=\"https://codepen.io/hnzxewqw/embed/oNZyWKd?height=265&theme-id=light&default-tab=html,result\"></iframe>\n\n<p>個人覺得 <code>table</code> 的部分算是已經夠好用了，也算是清楚，但還是要相依在該規範中。</p>\n<p>其他元件就要整個元件程式碼完整架構，如：卡片</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"card\"</span> <span class=\"attr\">style</span>=<span class=\"string\">\"width: 18rem;\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"...\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"card-img-top\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"...\"</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"card-body\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h5</span> <span class=\"attr\">class</span>=<span class=\"string\">\"card-title\"</span>&gt;</span>Card title<span class=\"tag\">&lt;/<span class=\"name\">h5</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">class</span>=<span class=\"string\">\"card-text\"</span>&gt;</span></span><br><span class=\"line\">      Some quick example text to build on the card title and make up the bulk of</span><br><span class=\"line\">      the card's content.</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn btn-primary\"</span>&gt;</span>Go somewhere<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<iframe height=\"265\" style=\"width: 100%;\" scrolling=\"no\" title=\"BS card\" src=\"https://codepen.io/hnzxewqw/embed/jOBKwPW?height=265&theme-id=light&default-tab=html,result\"></iframe>\n\n<p>可以看到又出現跟之前說明的狀況一樣，因為 Bootstrap 是以定義好的元件方式載入畫面，所以會需要依賴該框架的元件定義，才能完整呈現想要的畫面。</p>\n<p>如果要多張卡片呈現在畫面的時候，就變成要外面再包更多的標籤。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"row\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"col-md-3\"</span>&gt;</span>...<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>如果畫面單純就還好，可是如果今天畫面越來越複雜的時候，在維護時光是找標籤收尾可能都滿難找到的。</p>\n<h2 id=\"Tailwind-是手機優先斷點寫法\"><a href=\"#Tailwind-是手機優先斷點寫法\" class=\"headerlink\" title=\"Tailwind 是手機優先斷點寫法\"></a>Tailwind 是手機優先斷點寫法</h2><p>跟 Bootstrap 一樣是從手機優先來規劃斷點的，以卡片為例，今天透過 Utility-first 的方式來撰寫三張卡片並排且加入斷點。Tailwind 不需要相依在元件之下，就可以寫出卡片效果以及斷點。</p>\n<p><img src=\"https://i.imgur.com/9RtP50g.png\" alt=\"rwd\"></p>\n<p>官方也提供明確的斷點寫法，只要在想要做斷點的前面加上斷點縮寫即可，例如：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">class</span>=<span class=\"string\">\"w-16 md:w-32 lg:w-48\"</span> <span class=\"attr\">src</span>=<span class=\"string\">\"...\"</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>是不是跟 Bootstrap 有異曲同工之妙，但是我只要加在想要的 <code>element</code> 上面就好了，也不用加了很多 <code>.row</code> 跟 <code>.col</code>。</p>\n<h2 id=\"偽類也是一樣的方法\"><a href=\"#偽類也是一樣的方法\" class=\"headerlink\" title=\"偽類也是一樣的方法\"></a>偽類也是一樣的方法</h2><p>通常我們想要按鈕有點互動效果，一般 CSS 也會寫成：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">h1</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: red;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">h1</span><span class=\"selector-pseudo\">:hover</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: blue;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>但我使用 Tailwind 就只要寫成</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">class</span>=<span class=\"string\">\"text-red-500 hover:text-blue-500\"</span>&gt;</span>this is title<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>DEMO</strong></p>\n<iframe height=\"265\" style=\"width: 100%;\" scrolling=\"no\" title=\"Tailwind CSS hover\" src=\"https://codepen.io/hnzxewqw/embed/VwpdzYw?height=265&theme-id=light&default-tab=html,result\"></iframe>\n\n<p>直觀又好理解！</p>\n<h2 id=\"最後綜合一個響應式卡片與有偽類效果的練習\"><a href=\"#最後綜合一個響應式卡片與有偽類效果的練習\" class=\"headerlink\" title=\"最後綜合一個響應式卡片與有偽類效果的練習\"></a>最後綜合一個響應式卡片與有偽類效果的練習</h2><p>點選右側的 CodePen 可以看見響應式的效果喔！</p>\n<iframe height=\"800\" style=\"width: 100%;\" scrolling=\"no\" title=\"Tailwind RWD &amp; hover\" src=\"https://codepen.io/hnzxewqw/embed/dyvKzMy?height=265&theme-id=light&default-tab=html,result\"></iframe>\n\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><ul>\n<li><a href=\"https://tailwindcss.com/docs/hover-focus-and-other-states\" target=\"_blank\" rel=\"noopener\">TailwindCSS - Hover, Focus, &amp; Other States </a></li>\n</ul>\n","categories":["TailwindCSS"],"tags":["TailwindCSS"]},{"title":"Tailwind CSS - CSS 傳統撰寫方式與功能優先的差異","url":"/TailwindCSS/20210607/1535452451/","content":"<p><img src=\"https://tools.wingzero.tw/assets/upload/1611643654838_0.jpg\" alt=\"tailwindcss\"></p>\n<h2 id=\"Utility-First-功能優先\"><a href=\"#Utility-First-功能優先\" class=\"headerlink\" title=\"Utility First 功能優先\"></a>Utility First 功能優先</h2><p>官方文件給的定義</p>\n<blockquote>\n<p>從組合過的原生功能，來建立起複雜的元件。</p>\n</blockquote>\n<h3 id=\"傳統的-CSS-撰寫方式\"><a href=\"#傳統的-CSS-撰寫方式\" class=\"headerlink\" title=\"傳統的 CSS 撰寫方式\"></a>傳統的 CSS 撰寫方式</h3><p>在介紹 Utility First 之前，先來看一下傳統 CSS 怎麼寫。</p>\n<p>假設我今天要切一個下方畫面：</p>\n<p><img src=\"https://i.imgur.com/ruqeK9M.png\" alt=\"chat\"></p>\n<p>相信一開始沒有任何網頁前端背景的人，應該是跟我一樣，從 HTML + CSS 寫出一個所見即所得的靜態網頁，而一開始寫 CSS 會建議使用語意化來命名 <code>class name</code>，然後就會向下方的範例程式碼一樣，</p>\n<p><strong>HTML</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"chat-notification\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"chat-notification-logo-wrapper\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">img</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">class</span>=<span class=\"string\">\"chat-notification-logo\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">src</span>=<span class=\"string\">\"/img/logo.svg\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">alt</span>=<span class=\"string\">\"ChitChat Logo\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"chat-notification-content\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h4</span> <span class=\"attr\">class</span>=<span class=\"string\">\"chat-notification-title\"</span>&gt;</span>ChitChat<span class=\"tag\">&lt;/<span class=\"name\">h4</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">class</span>=<span class=\"string\">\"chat-notification-message\"</span>&gt;</span>你有一則新訊息<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>CSS</strong></p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.chat-notification</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">  <span class=\"attribute\">max-width</span>: <span class=\"number\">24rem</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> auto;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">1.5rem</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">0.5rem</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#fff</span>;</span><br><span class=\"line\">  <span class=\"attribute\">box-shadow</span>: <span class=\"number\">0</span> <span class=\"number\">20px</span> <span class=\"number\">25px</span> -<span class=\"number\">5px</span> <span class=\"built_in\">rgba</span>(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0.1</span>), <span class=\"number\">0</span> <span class=\"number\">10px</span> <span class=\"number\">10px</span> -<span class=\"number\">5px</span> <span class=\"built_in\">rgba</span>(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0.04</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.chat-notification-logo-wrapper</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">flex-shrink</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.chat-notification-logo</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">3rem</span>;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">3rem</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.chat-notification-content</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">margin-left</span>: <span class=\"number\">1.5rem</span>;</span><br><span class=\"line\">  <span class=\"attribute\">padding-top</span>: <span class=\"number\">0.25rem</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.chat-notification-title</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"number\">#1a202c</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">1.25rem</span>;</span><br><span class=\"line\">  <span class=\"attribute\">line-height</span>: <span class=\"number\">1.25</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.chat-notification-message</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"number\">#718096</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">1rem</span>;</span><br><span class=\"line\">  <span class=\"attribute\">line-height</span>: <span class=\"number\">1.5</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>看得出來所有的東西都跟 chat 有關，但是只要階層一多， class 的名稱就會越來越長，慢慢的第一時間也越來越難分辨這段是什麼?</p>\n<p>另外，要想命名也是非常頭痛的事情，如果用 Tailwind 改寫會變成如何？</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">class</span>=<span class=\"string\">\"p-6 max-w-sm mx-auto bg-white rounded-xl shadow-md flex items-center space-x-4\"</span></span></span><br><span class=\"line\"><span class=\"tag\">&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"flex-shrink-0\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">class</span>=<span class=\"string\">\"h-12 w-12\"</span> <span class=\"attr\">src</span>=<span class=\"string\">\"/img/logo.svg\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"ChitChat Logo\"</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"text-xl font-medium text-black\"</span>&gt;</span>ChitChat<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">class</span>=<span class=\"string\">\"text-gray-500\"</span>&gt;</span>你有一則新訊息<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>看起來的確有精簡一點，雖然最外層的 class 好像變得更長了，可是我卻一行 CSS 都不用寫！原本要在 CSS 的定義的內容，全部透過 Tailwind 的 Utility-First 的方式呈現在畫面上了！</p>\n<p>當我第一次接觸 Tailwind 的時候，也覺得這樣也沒有比較好啊！而且變得更繁瑣，的確是這樣沒錯，但開始寫了以後會發現以下優點：</p>\n<ul>\n<li><strong>我不必為了命名 class 而傷腦筋</strong>，不需要只是要添加某些樣式就硬要寫類似 <code>.side-wrap</code> 這種為了命名而命名的 class name。</li>\n<li><strong>CSS 檔案不會再變多了</strong>，傳統撰寫方式，是每當新增功能的時候，CSS 樣式都會變多，使用 Utility- First 的方式，都是可以重用的 class name，幾乎不用編寫新的 CSS，而且因為共用了 class，就算頁面非常多，但因為 class 內容相同，所以 CSS 檔案也不會變肥，渲染畫面效果更好！</li>\n<li><strong>不用擔心更改後畫面壞掉</strong>，因為 CSS 是全域的，每次要改一些樣式，都會怕整個畫面壞掉，因為我修改的地方是 HTML，所以只要專注在我要修改的部分，不用擔心會影響到其他樣式。</li>\n</ul>\n<p><strong>Demo</strong></p>\n<iframe height=\"265\" style=\"width: 100%;\" scrolling=\"no\" title=\"Tailwind CSS example chat\" src=\"https://codepen.io/hnzxewqw/embed/RwpJGwW?height=265&theme-id=light&default-tab=html,result\"></iframe>\n\n<blockquote>\n<p>官方文件是用絕對路徑引入圖片，因我沒有該圖片，所以就直接去複製網頁中的 SVG 檔案。</p>\n</blockquote>\n<h2 id=\"寫這麼多-class，為什麼不寫-inline-style\"><a href=\"#寫這麼多-class，為什麼不寫-inline-style\" class=\"headerlink\" title=\"寫這麼多 class，為什麼不寫 inline style\"></a>寫這麼多 class，為什麼不寫 inline style</h2><p>inline style 就是在 HTML 上面寫上樣式，</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">style</span>=<span class=\"string\">\"color: red;font-size: 24px; padding: 10px 0;\"</span>&gt;</span>title<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>但這樣會有一個問題，這只有針對這個 tag 就是 inline style 的權重較高，未來若要修改樣式，則需要找到該 tag，而使用 Tailwind 可以透過 class 定義的關係，能夠 <code>tailwind.config.js</code> 輕易修改多個樣式。</p>\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><ul>\n<li><a href=\"https://tailwindcss.com/docs/utility-first\" target=\"_blank\" rel=\"noopener\">Tailwind CSS - Utility-First</a></li>\n</ul>\n","categories":["TailwindCSS"],"tags":["TailwindCSS"]},{"title":"Tailwind CSS - 壓縮 Utility 檔案大小 、安裝知能提示與最新版本須知","url":"/TailwindCSS/20210607/2331513775/","content":"<p><img src=\"https://tools.wingzero.tw/assets/upload/1611643654838_0.jpg\" alt=\"tailwindcss\"></p>\n<h2 id=\"為什麼要壓縮-CSS\"><a href=\"#為什麼要壓縮-CSS\" class=\"headerlink\" title=\"為什麼要壓縮 CSS\"></a>為什麼要壓縮 CSS</h2><p>Utility CSS 整包 CSS 整包檔案容量很大，會降低網頁效能，也是令人詬病的地方。<br>官方文件也表示 Tailwind CSS 為壓縮前的大小為 3566.2KB，但壓縮後就可以變成 289.2KB，也說雖然在開發者模式很肥大，但這是原先設計此框架的設計概念。是為了提升更有效率的開發體驗，共有上千種功能的 class，只是有可能一大部分根本不會使用到。</p>\n<p>也可以把 Tailwind 想像成一大箱樂高，把這箱樂高「倒」出來後，再把需要的部分拿來組裝，組完後再把沒用到的樂高放回箱子裡。</p>\n<p>所以 Tailwind 是可以壓縮的，可以去偵測到哪些 class 有被用到，把沒用到的移除，整體檔案容量就會減少很多喔！</p>\n<p>這是初步匯出 Tailwind 的檔案大小，<code>3.46MB</code>。</p>\n<p><img src=\"https://i.imgur.com/GGkHtc0.png\" alt=\"tailwind\"></p>\n<p>官方建議可以使用 <code>taiwind.config.js</code> 中的 <code>purge</code> 把專案中要編譯的檔案放進來，就只會去編譯我們指定的檔案，這樣就不會整包 CSS 匯出喔！超棒的！</p>\n<p>基本用法：</p>\n<p>首先在 purge 的選系下以陣列規範所有樣板檔案的路徑。</p>\n<p><img src=\"https://i.imgur.com/rZFJX6K.png\" alt=\"purge\"></p>\n<p>那本篇範例我希望都可以一直被監測是壓縮，所以這裡使用手動模式：</p>\n<p><img src=\"https://i.imgur.com/V2mFSJm.png\" alt=\"purge\"></p>\n<p>上面這個意思就是預設都是 enabled 狀態去做壓縮，然後要加縮的內容就是目前專案所有的 HTML 檔案。</p>\n<h3 id=\"舉例\"><a href=\"#舉例\" class=\"headerlink\" title=\"舉例\"></a>舉例</h3><p>我目前的 HTML 檔案只有一個。</p>\n<p><img src=\"https://i.imgur.com/QOreTNn.png\" alt=\"linkCSS\"></p>\n<p>有使用到的 class 就只有這些，所以 Tailwind 會發現說我這支 HTML 裡面使用到的樣式只有這些，在我編譯的時候就會把其他的樣式刪除。</p>\n<p>編譯可以輸入下方指令：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">npx tailwindcss -i ./src/tailwind.css -o ./dist/tailwind.css</span><br></pre></td></tr></table></figure>\n\n<p>編譯後就會看到 CSS 被壓縮到只剩下 10.58KB，是不是超棒的！</p>\n<p><img src=\"https://i.imgur.com/a6toAah.png\" alt=\"complie\"></p>\n<p>使用此指令的話就是代表在 <code>production</code> 設定下才會做編譯，目前為了快速可以看到編譯效果，所以使用這段指令喔！更多設定指令的方式可以參考官方文件。</p>\n<h2 id=\"Tailwind-CSS-智能提示\"><a href=\"#Tailwind-CSS-智能提示\" class=\"headerlink\" title=\"Tailwind CSS 智能提示\"></a>Tailwind CSS 智能提示</h2><p>官方有推薦 Visual Studio Code 套件可以使用，在套件區搜尋 Tailwind，就會找到此套件喔！</p>\n<p>這樣就可以在打 class 名稱時使用智能提示，真的超級方便。</p>\n<p><img src=\"https://i.imgur.com/UBTMvLK.png\" alt=\"\"></p>\n<p>如果無法使用 Tailwind 智能提示的話，資料夾裡面一定要要有 <code>tailwing.config.js</code> 以及在 <code>head</code> 裡面要放入編譯過後的 CSS 檔案喔！</p>\n<h2 id=\"Tailwind-CSS-升級須知\"><a href=\"#Tailwind-CSS-升級須知\" class=\"headerlink\" title=\"Tailwind CSS 升級須知\"></a>Tailwind CSS 升級須知</h2><p>官方文件表示：不再支援 IE11 <del>(眾望所歸)</del></p>\n<p><img src=\"https://i.imgur.com/FbkAIrd.png\" alt=\"\"></p>\n<p>中文的簡易意思就是說，之前官方為了維護 Tailwind 在 IE11 上可以運作，成本太高，所以只好放棄，但如果不幸專案上需要支援到 IE11，推薦使用 V1.9 版本，直到脫離 IE 後，就可以使用 V2.0 囉！</p>\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><ul>\n<li><a href=\"https://tailwindcss.com/docs/installation\" target=\"_blank\" rel=\"noopener\">Taiwind CSS 官方文件</a></li>\n<li><a href=\"https://ithelp.ithome.com.tw/articles/10243291\" target=\"_blank\" rel=\"noopener\">【Tailwind CSS 教學 - 3 】別說 utility CSS 肥，壓縮起來連我自己都怕</a></li>\n</ul>\n","categories":["TailwindCSS"],"tags":["TailwindCSS"]},{"title":"Tailwind CSS - 起手式","url":"/TailwindCSS/20210605/3452359063/","content":"<p><img src=\"https://tools.wingzero.tw/assets/upload/1611643654838_0.jpg\" alt=\"tailwindcss\"></p>\n<h2 id=\"使用-CDN-載入-Tailwind-CSS\"><a href=\"#使用-CDN-載入-Tailwind-CSS\" class=\"headerlink\" title=\"使用 CDN 載入 Tailwind CSS\"></a>使用 CDN 載入 Tailwind CSS</h2><p>如果想快速使用與把玩一下 Tailwind CSS，官方有提供一個 CDN，直接放到 <code>link</code> 就可以了。</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;link href=\"https://unpkg.com/tailwindcss@^<span class=\"number\">2</span>/dist/tailwind.min.css\" rel=\"stylesheet\"&gt;</span><br></pre></td></tr></table></figure>\n\n<p>但官方其實不太推薦這種用法，原因如下：</p>\n<p><img src=\"https://i.imgur.com/KarsOIk.png\" alt=\"use cdn\"></p>\n<ol>\n<li>不能自訂義 Tailwind 的預設主題。</li>\n<li>不能使用任何指令，像是 <code>@apply</code>，<code>@variants</code>…等。</li>\n<li>不能啟用其他的 variants，像是 <code>group-focus</code>。</li>\n<li>不能安裝第三方套件。</li>\n<li>不能 tree-shake 未使用到的樣式。</li>\n</ol>\n<p>好的！官方都說五個不能了，如果只想匯入 CDN 這條路應該就僅限於不想客製化網站一途了，那這樣就失去使用 Tailwind 的意義。</p>\n<h2 id=\"安裝-Tailwind\"><a href=\"#安裝-Tailwind\" class=\"headerlink\" title=\"安裝 Tailwind\"></a>安裝 Tailwind</h2><p><a href=\"https://tailwindcss.com/docs/installation\" target=\"_blank\" rel=\"noopener\">官方文件</a>中在不能五大理由下方還有提到一句話：</p>\n<p><img src=\"https://i.imgur.com/lcHM6lM.png\" alt=\"\"></p>\n<p>如果要使用更多 Tailwind，應該要安裝 PostCSS 套件。</p>\n<h3 id=\"使用-NPM-安裝\"><a href=\"#使用-NPM-安裝\" class=\"headerlink\" title=\"使用 NPM 安裝\"></a>使用 NPM 安裝</h3><p>首先先進入開啟好專案的資料夾，然後點選右鍵開啟終端機，這時候會看到路徑已經在自己的資料夾中，</p>\n<p><img src=\"https://i.imgur.com/2Q2M5z4.png\" alt=\"terminal\"></p>\n<p>官方教學使用 NPM 來安裝 Tailwind CSS、PostCSS，還有 autoprefixer 這三個檔案。</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm install tailwindcss@latest postcss@latest autoprefixer@latest</span><br></pre></td></tr></table></figure>\n\n<p><strong>安裝原因：</strong></p>\n<blockquote>\n<p>Tailwind 不會自動加上瀏覽器前缀詞到產生的 CSS 中，所以瀏覽器無法讀取 CSS，要加上 autoprefixer 這個套件去處理此問題，所以一行指令就三個安裝玩了，輕鬆愉快。</p>\n</blockquote>\n<p>還有提到一個錯誤，但是 v2.0 版本的 Tailwind 依賴於 PostCSS 8，若將 Tailwind 與舊版本的 PostCSS 混合使用，可能會看到以下跳錯訊息：</p>\n<p><code>Error: PostCSS plugin tailwindcss requires PostCSS 8.</code></p>\n<p>這時請安裝 <a href=\"https://www.tailwindcss.cn/docs/installation#post-css-7\" target=\"_blank\" rel=\"noopener\">PostCSS 7</a> 版本，才能兼容。</p>\n<p><strong>安裝 PostCSS 7</strong></p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm uninstall tailwindcss</span><br><span class=\"line\">npm install tailwindcss@npm:@tailwindcss/postcss7-compat</span><br></pre></td></tr></table></figure>\n\n<p>這時候打開 IDE，會看到目錄中有一個 <code>package.json</code> 檔案，就會看到剛剛裝好的三個套件。</p>\n<p><strong>package.json</strong></p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  \"dependencies\": &#123;</span><br><span class=\"line\">    \"autoprefixer\": \"^<span class=\"number\">10</span>.<span class=\"number\">2</span>.<span class=\"number\">6</span>\",</span><br><span class=\"line\">    \"postcss\": \"^<span class=\"number\">8</span>.<span class=\"number\">3</span>.<span class=\"number\">0</span>\",</span><br><span class=\"line\">    \"tailwindcss\": \"^<span class=\"number\">2</span>.<span class=\"number\">1</span>.<span class=\"number\">4</span>\"</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"建立-tailwindcss-config-檔案\"><a href=\"#建立-tailwindcss-config-檔案\" class=\"headerlink\" title=\"建立 tailwindcss.config 檔案\"></a>建立 tailwindcss.config 檔案</h2><p>因為我想要自訂義未來 Tailwind 的安裝內容，可以使用 Tailwind 工具生成一份配置文件，此命令工具已經包含在 tailwindcss 內。</p>\n<p>在終端機輸入指令</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">npx tailwindcss init</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/WNHP5Zo.png\" alt=\"tailwindcss init\"></p>\n<p>安裝完成後就會看到有一個 tailwind.config.js 的檔案在目錄底下。</p>\n<p><img src=\"https://i.imgur.com/UXDIzZn.png\" alt=\"menu\"></p>\n<p>點進檔案後就會看到預設的配置內容。</p>\n<p><strong>tailwind.config.js</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  purge: [],</span><br><span class=\"line\">  darkMode: <span class=\"literal\">false</span>, <span class=\"comment\">// or 'media' or 'class'</span></span><br><span class=\"line\">  theme: &#123;</span><br><span class=\"line\">    extend: &#123;&#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  variants: &#123;</span><br><span class=\"line\">    extend: &#123;&#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  plugins: [],</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"新增-Tailwind-到-CSS-中\"><a href=\"#新增-Tailwind-到-CSS-中\" class=\"headerlink\" title=\"新增 Tailwind 到 CSS 中\"></a>新增 Tailwind 到 CSS 中</h2><p>在 VSCode 中新增一個 CSS 檔案，命名就如官方推薦的 <code>style.css</code>。(依照專案可自訂義此名字)</p>\n<p>再把 Tailwind 的三個核心複製貼到剛剛新建的 CSS 檔案中。</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">@tailwind base;</span><br><span class=\"line\">@tailwind components;</span><br><span class=\"line\">@tailwind utilities;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"不依賴-PostCSS-使用-Tailwind\"><a href=\"#不依賴-PostCSS-使用-Tailwind\" class=\"headerlink\" title=\"不依賴 PostCSS 使用 Tailwind\"></a>不依賴 PostCSS 使用 Tailwind</h3><p>雖然官方強力推薦要搭配 PostCSS，但因為還要去了解 PostCSS 沒有那麼容易，所以為了達到比較無障礙的使用，就不依賴 PostCSS 來使用，可以輸入下方指令，就可以將 Tailwind 編譯成瀏覽器看得懂的 CSS，完成後就可以直接使用 Tailwind 了！</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">npx tailwindcss -i ./src/tailwind.css -o ./dist/tailwind.css</span><br></pre></td></tr></table></figure>\n\n<p>看到上方畫面就代表成功囉！</p>\n<h2 id=\"幫-CSS-瘦身\"><a href=\"#幫-CSS-瘦身\" class=\"headerlink\" title=\"幫 CSS 瘦身\"></a>幫 CSS 瘦身</h2><p>承上所示，Tailwind 因為是 Utility 的關係，會把整包檔案匯入，但我可能這次專案沒有用到這麼多的 Utility，如果整包檔案要選染於網頁，效能就會低落，Tailwind 官方文件很貼心也提供可以瘦身的方法，選到 <code>tailwind.config.js</code> 檔案，將我可能會使用到的內容寫在 <code>purge</code> 屬性內，就可以去監聽我哪支檔案有使用到，只會編譯使用的檔案，真的很貼心呢！</p>\n<p><strong>tailwind.config.js</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  purge: &#123;</span><br><span class=\"line\">    enabled: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    content: [<span class=\"string\">\"./*.html\"</span>],</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  darkMode: <span class=\"literal\">false</span>, <span class=\"comment\">// or 'media' or 'class'</span></span><br><span class=\"line\">  theme: &#123;</span><br><span class=\"line\">    extend: &#123;&#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  variants: &#123;</span><br><span class=\"line\">    extend: &#123;&#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  plugins: [],</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><ul>\n<li><a href=\"https://tailwindcss.com/docs/installation\" target=\"_blank\" rel=\"noopener\">Tailwind 官方文件</a></li>\n</ul>\n","categories":["TailwindCSS"],"tags":["TailwindCSS"]},{"title":"Tailwind CSS - 選擇該框架的原因","url":"/TailwindCSS/20210605/1705808851/","content":"<p><img src=\"https://tools.wingzero.tw/assets/upload/1611643654838_0.jpg\" alt=\"tailwindcss\"></p>\n<h2 id=\"什麼是-TailWind-CSS\"><a href=\"#什麼是-TailWind-CSS\" class=\"headerlink\" title=\"什麼是 TailWind CSS\"></a>什麼是 TailWind CSS</h2><p>近年竄起的 CSS 框架，有別於老牌 Bootstrap、Material…等以元件構成的框架，是一套純粹以 Utility-First CSS，用許多的 class 就可以構成畫面，非常適合快速切版，並且因高彈性的關係，可以達到客製化的效果。</p>\n<h2 id=\"什麼是-Utility-First-CSS\"><a href=\"#什麼是-Utility-First-CSS\" class=\"headerlink\" title=\"什麼是 Utility-First CSS\"></a>什麼是 Utility-First CSS</h2><p>說到 Utility-First CSS，先回過頭介紹一般常見的 CSS framework，對於大家熟悉的 Bootstrap、Material UI…等，把 Component 都定義好，想要什麼元件就抓來用，湊起來就可以完成一個網站的 framework 不陌生。</p>\n<p>要 navbar 或是 button，甚至 table 都可以完成，實在是非常方便。</p>\n<p>不過，使用這些 framework 就會遇到一個問題，會聽到一些客戶說：「你的網站看起來好 Bootstrap 喔！」這就算了，因為已經定義好元件的內容，要客製化的話，後續會遇到維護的麻煩與困擾。</p>\n<h3 id=\"使用元件框架會遇到哪些麻煩與困擾\"><a href=\"#使用元件框架會遇到哪些麻煩與困擾\" class=\"headerlink\" title=\"使用元件框架會遇到哪些麻煩與困擾\"></a>使用元件框架會遇到哪些麻煩與困擾</h3><h4 id=\"最不好的方式：覆蓋-CSS\"><a href=\"#最不好的方式：覆蓋-CSS\" class=\"headerlink\" title=\"最不好的方式：覆蓋 CSS\"></a>最不好的方式：覆蓋 CSS</h4><p>因原本的定義好的框架比較沒有客製化的方式，或是有些網路上找到的套件很難去客製成自己的想要的樣式，只好用各種覆蓋的方式去改動 CSS，如果沒事就沒事，改完後續又要修改，就還需要花很多時間去找原本框架或套件定義的 CSS 寫在哪裡。但這種方式很容易把東西改壞。</p>\n<h4 id=\"下載定義好的程式碼\"><a href=\"#下載定義好的程式碼\" class=\"headerlink\" title=\"下載定義好的程式碼\"></a>下載定義好的程式碼</h4><p>有些框架有提供自訂義的彈性，可以把相對的地方修改後再把程式碼下載下來，一開始看起來會覺得這樣也很好耶！可是，當以後這個專案交給其他人接手，甚至是完全沒碰過這個專案的同事時，可能會發現同事怎麼改個程式碼，拳頭越來越硬了呢? 因為根本不知道哪些地方被改動了。</p>\n<h4 id=\"引入後再覆寫-Sass\"><a href=\"#引入後再覆寫-Sass\" class=\"headerlink\" title=\"引入後再覆寫 Sass\"></a>引入後再覆寫 Sass</h4><p>這是比較好的情況，可以引入框架的 Sass，但又覆寫部分的 Sass 變數，可以調整設定，也比較不容易造成後續管理以及維護的問題，Bootstrap 就是這樣。可是，如果框架已經把 UI 都定義好了，可以調整的範圍就會受到不少限制。</p>\n<h2 id=\"小結\"><a href=\"#小結\" class=\"headerlink\" title=\"小結\"></a>小結</h2><p>回過頭來說，使用 Utility-First CSS 的時候，因是使用 class 建構出來的畫面，所以要更動相對容易與方便，因為每個元件都是自己刻出來的，哪裡不滿意、不符需求，都可以在 Utility class 增減中完成，是相當具有彈性的。</p>\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><ul>\n<li><a href=\"https://5xruby.tw/posts/tailwind-css-plugin\" target=\"_blank\" rel=\"noopener\">還在跟複雜的 CSS 的設定奮鬥嗎？用 Tailwind 來幫你實現真正的高效整潔！</a></li>\n<li><a href=\"https://tailwindcss.com/\" target=\"_blank\" rel=\"noopener\">Tailwind CSS 官網</a></li>\n</ul>\n","categories":["TailwindCSS"],"tags":["TailwindCSS"]},{"title":"Angular 筆記 - 觸發 scroll 事件後可點擊 checkbox 實作","url":"/angular/20210331/3371856008/","content":"<p><img src=\"https://i.imgur.com/87pBpoJ.jpg\" alt=\"angular\"></p>\n<p>算是前面的結合實作，情境是當我下拉選單到底的時候，觸發 scroll 事件，當事件觸發後，要讓原本 disabled 狀態的 checkbox 顯示並可以點擊。</p>\n<p>來記錄一下實作過程。</p>\n<h2 id=\"取得-scroll-可視範圍\"><a href=\"#取得-scroll-可視範圍\" class=\"headerlink\" title=\"取得 scroll 可視範圍\"></a>取得 scroll 可視範圍</h2><p>參考到<a href=\"https://developer.mozilla.org/zh-TW/docs/Web/API/Element/scrollHeight\" target=\"_blank\" rel=\"noopener\">這篇</a>，有講道一個公式，也就是<strong>了解元素是否被滾輪完全滾過</strong>。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">element.scrollHeight - element.scrollTop === element.clientHeight;</span><br></pre></td></tr></table></figure>\n\n<p>如果元素被完全滾過將會回傳 <code>true</code> , 否則回傳 <code>false</code>.</p>\n<p>可改寫之前的 <code>scroll</code> 的內容：</p>\n<ol>\n<li>觸發 <code>scroll</code> 事件。</li>\n<li>元素完全滾過會執行 <code>checkbox</code> 的方法。</li>\n</ol>\n<p><strong>scrolltoCheck.ts</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">  disabled: boolean = <span class=\"literal\">true</span>; <span class=\"comment\">//自訂義不能點擊</span></span><br><span class=\"line\">  check: boolean = <span class=\"literal\">false</span>; <span class=\"comment\">//預設無法點擊</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 監聽 DOM</span></span><br><span class=\"line\">@HostListener(<span class=\"string\">'scroll'</span>, [<span class=\"string\">'$event'</span>]) onElementScroll($event: any) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// console.log($event); //有事件觸發</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> modal = <span class=\"keyword\">this</span>.el.nativeElement.querySelector(<span class=\"string\">'.scrollModal'</span>);</span><br><span class=\"line\">    <span class=\"keyword\">let</span> readPrivacy =</span><br><span class=\"line\">      modal.scrollHeight - modal.scrollTop === modal.clientHeight;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (readPrivacy) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.onCheck(); <span class=\"comment\">//讓 checkbox 改變狀態的事件</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   onCheck() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.disabled = <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.check = <span class=\"literal\">true</span>;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"結合-checkbox-顯示切換\"><a href=\"#結合-checkbox-顯示切換\" class=\"headerlink\" title=\"結合 checkbox 顯示切換\"></a>結合 checkbox 顯示切換</h2><p><strong>scrolltoCheck.html</strong></p>\n<p>這邊我使用的是 <code>ngIf</code> 來切換狀態，而不是直接改變 <code>checkbox</code> 的樣子。</p>\n<p>分成兩個 <code>checkbox</code> 來顯示：</p>\n<ul>\n<li>第一個 <code>checkbox</code> 只顯示 <code>disabled</code> 的狀態。</li>\n<li>第二個在 <code>scroll</code> 事件觸發後，讓這一組可以點擊的 <code>checkbox</code> 出現，驗證也是寫在這個 <code>element</code> 上面。</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"modal-dialog modal-dialog-scrollable privacy-box-2\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"modal-content\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"modal-body scrollModal\"</span> (<span class=\"attr\">scroll</span>)=<span class=\"string\">\"onElementScroll($event)\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">textarea</span> <span class=\"attr\">name</span>=<span class=\"string\">\"\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"\"</span> <span class=\"attr\">cols</span>=<span class=\"string\">\"30\"</span> <span class=\"attr\">rows</span>=<span class=\"string\">\"10\"</span>&gt;</span></span><br><span class=\"line\">            ...文字略...</span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">textarea</span></span></span><br><span class=\"line\"><span class=\"tag\">      &gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> [<span class=\"attr\">formGroup</span>]=<span class=\"string\">\"checkboxForm\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"form-check pri-txt\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> *<span class=\"attr\">ngIf</span>=<span class=\"string\">\"!check\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">input</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">class</span>=<span class=\"string\">\"form-check-input\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">name</span>=<span class=\"string\">\"checkbox1\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">id</span>=<span class=\"string\">\"uncheck\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">value</span>=<span class=\"string\">\"option\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        [<span class=\"attr\">attr.disabled</span>]=<span class=\"string\">\"disabled\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      /&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">class</span>=<span class=\"string\">\"form-check-label\"</span> <span class=\"attr\">for</span>=<span class=\"string\">\"uncheck\"</span>&gt;</span></span><br><span class=\"line\">        我已閱讀並同意隱私權政策</span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> *<span class=\"attr\">ngIf</span>=<span class=\"string\">\"check\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">input</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">class</span>=<span class=\"string\">\"form-check-input\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">id</span>=<span class=\"string\">\"canCheck\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">formControlName</span>=<span class=\"string\">\"checkbox1\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        (<span class=\"attr\">click</span>)=<span class=\"string\">\"onCheck()\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      /&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">\"canCheck\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"form-check-label\"</span>&gt;</span></span><br><span class=\"line\">        我已閱讀並同意隱私權政策<span class=\"tag\">&lt;/<span class=\"name\">label</span></span></span><br><span class=\"line\"><span class=\"tag\">      &gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">class</span>=<span class=\"string\">\"invalid-feedback d-block\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      *<span class=\"attr\">ngIf</span>=<span class=\"string\">\"</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">                !checkboxForm.controls['checkbox1'].pristine &amp;&amp;</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">                checkboxForm.controls['checkbox1'].errors?.required</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">              \"</span></span></span><br><span class=\"line\"><span class=\"tag\">    &gt;</span></span><br><span class=\"line\">      請先勾選隱私權政策協議</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>Demo <a href=\"https://stackblitz.com/edit/angular-ivy-qw4qvo?embed=1&amp;file=src/app/app.component.ts\" target=\"_blank\" rel=\"noopener\">https://stackblitz.com/edit/angular-ivy-qw4qvo?embed=1&amp;file=src/app/app.component.ts</a></p>\n<blockquote>\n<p>備註：<br>本地端專案有安裝 jQuery，所以才能使用 <code>$event</code> 事件，線上 Demo 沒有安裝 jQuery，所以無法呈現預期效果。</p>\n</blockquote>\n","categories":["Angular"],"tags":["Angular"]},{"title":"Angular 筆記 - 下拉 scroll 事件用法","url":"/angular/20210331/321494276/","content":"<p>在許多頁面，不管是註冊或是購買東西時，都會有落落長的授權頁，相信大部分的人都不會認真看，而有些機制就是要全部看完才能進行下一步，而這次紀錄如何知道 scroll 的觸發事件。</p>\n<h2 id=\"文字區塊\"><a href=\"#文字區塊\" class=\"headerlink\" title=\"文字區塊\"></a>文字區塊</h2><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"modal-dialog modal-dialog-scrollable privacy-box-2\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"modal-content\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"modal-body\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">textarea</span> <span class=\"attr\">cols</span>=<span class=\"string\">\"40\"</span> <span class=\"attr\">rows</span>=<span class=\"string\">\"20\"</span>&gt;</span></span><br><span class=\"line\">Lorem ipsum dolor sit amet consectetur adipisicing elit. Atque alias obcaecati eligendi magni debitis ducimus</span><br><span class=\"line\">        numquam. Omnis quia eveniet nisi praesentium asperiores dolore magni. Fugit aspernatur ipsa nulla! Rem hic, quo,</span><br><span class=\"line\">        repellat quidem eligendi, maiores molestiae laudantium asperiores magnam architecto quaerat maxime nisi eaque</span><br><span class=\"line\">        sint aliquid commodi excepturi neque voluptas. Harum ratione id iure atque voluptate natus, unde quisquam quod</span><br><span class=\"line\">        veritatis nisi maxime tempora dolore qui laudantium itaque quam velit fugiat obcaecati ex eius, debitis</span><br><span class=\"line\">        molestiae ea nemo? Repellat ratione exercitationem voluptate optio commodi voluptatem, corporis dolores, unde</span><br><span class=\"line\">        quibusdam mollitia incidunt voluptatibus quis tempora. Quas ab vero molestias itaque repellat earum pariatur</span><br><span class=\"line\">        ratione, aliquam natus qui obcaecati, praesentium ex cupiditate tempore ducimus harum voluptatem provident</span><br><span class=\"line\">        exercitationem consectetur asperiores architecto facilis officiis non. Quo architecto saepe ipsa id amet quaerat</span><br><span class=\"line\">        nam sunt dolorum, consectetur magnam commodi aperiam suscipit tempora labore libero, maiores a in quod iste?</span><br><span class=\"line\">        Magni laudantium officia amet aspernatur, cupiditate ea cumque sed ipsa dolor iste qui ratione. Nemo quod,</span><br><span class=\"line\">        officiis rerum quos facilis quae et consequuntur expedita vel quo atque ut repellat nihil ab voluptate quaerat</span><br><span class=\"line\">        excepturi dolorem dolor aperiam deserunt? Doloremque corporis accusantium exercitationem sapiente consequatur</span><br><span class=\"line\">        maiores minima nostrum fugit, consectetur illum. Amet laboriosam molestias soluta fugiat.<span class=\"tag\">&lt;/<span class=\"name\">textarea</span></span></span><br><span class=\"line\"><span class=\"tag\">      &gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"獲取事件\"><a href=\"#獲取事件\" class=\"headerlink\" title=\"獲取事件\"></a>獲取事件</h2><h3 id=\"HostListener-裝飾器\"><a href=\"#HostListener-裝飾器\" class=\"headerlink\" title=\"HostListener 裝飾器\"></a>HostListener 裝飾器</h3><p>以前在寫 jQuery 的時候可以綁定 DOM，Angular 可以透過 <code>@HostListener</code> 的裝飾器來實作用於宣告要監聽的 DOM 事件，並提供在該事件發生時要執行的處理器方法。</p>\n<p><strong>scroll.ts</strong></p>\n<p>寫於建構式上方，使用這個裝飾器去監聽 scroll 這個事件，其事件名稱為 <code>onElementScroll($event)</code></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">@HostListener(<span class=\"string\">'scroll'</span>, [<span class=\"string\">'$event'</span>]) onElementScroll($event: any) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log($event); <span class=\"comment\">//有監聽到事件</span></span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n<p>在 HTML 中加上 <code>OnElementScroll</code> 事件。</p>\n<p><strong>scroll.html</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"modal-body scrollModal\"</span> (<span class=\"attr\">scroll</span>)=<span class=\"string\">\"onElementScroll($event)\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>...<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>然後來看一下監聽到了什麼東西，在開發人員工具可以看到監聽結果。</p>\n<p><img src=\"https://i.imgur.com/KuRrQ0p.png\" alt=\"scrollEvent\"></p>\n<p>我試著去看一下裡面的內容，感覺 <code>srcElement</code> 跟 <code>target</code> 比較像是我要取得的 DOM 元素的屬性，來試著取看看。</p>\n<h2 id=\"ElementRef-取得-DOM\"><a href=\"#ElementRef-取得-DOM\" class=\"headerlink\" title=\"ElementRef 取得 DOM\"></a>ElementRef 取得 DOM</h2><p>Angular 使用 <code>ElementRef</code> 包裝器來檢視某個原生元素，要在建構式中使用這個方法。</p>\n<p><strong>scroll.ts</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">constructor</span>(</span><br><span class=\"line\">    private formBuilder: FormBuilder,</span><br><span class=\"line\">    private el: ElementRef</span><br><span class=\"line\"> ) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n\n<p>然後來抓抓看，</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">@HostListener(<span class=\"string\">'scroll'</span>, [<span class=\"string\">'$event'</span>]) onElementScroll($event: any) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log($event); <span class=\"comment\">//有監聽到事件</span></span><br><span class=\"line\">      <span class=\"keyword\">let</span> modal= <span class=\"keyword\">this</span>.el.nativeElement;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(modal);</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n<p>看一下開發人員工具顯示，似乎是抓到了整個網頁…</p>\n<p><img src=\"https://i.imgur.com/7dJFIng.png\" alt=\"printsc\"></p>\n<p>因為我只要抓到 <code>textarea</code> 的地方，所以我在這邊加上一個 <code>.scrollModal</code> 來抓取。</p>\n<p><strong>scroll.html</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"modal-body scrollModal\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">textarea</span>&gt;</span>...<span class=\"tag\">&lt;/<span class=\"name\">textarea</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>scroll.ts</strong></p>\n<p><code>querySelector</code> 抓取我要的 DOM 元素。</p>\n<blockquote>\n<p>Angular 是 JS 框架，所以原生寫法有些還是很好用的。</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">@HostListener(<span class=\"string\">'scroll'</span>, [<span class=\"string\">'$event'</span>]) onElementScroll($event: any) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log($event); <span class=\"comment\">//有監聽到事件</span></span><br><span class=\"line\">      <span class=\"keyword\">let</span> modal= <span class=\"keyword\">this</span>.el.nativeElement.querySelector(<span class=\"string\">'.scrollModal'</span>);;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(modal);</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n<p>這時候會發現我取得我指定的區塊了！</p>\n<p><img src=\"https://i.imgur.com/LyocWBz.png\" alt=\"textarea\"></p>\n<p>DEMO <a href=\"https://stackblitz.com/edit/angular-ivy-scgz2d?embed=1&amp;file=src/app/app.component.html\" target=\"_blank\" rel=\"noopener\">https://stackblitz.com/edit/angular-ivy-scgz2d?embed=1&amp;file=src/app/app.component.html</a></p>\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><ul>\n<li><a href=\"https://developer.mozilla.org/zh-TW/docs/Web/API/Element/scrollHeight\" target=\"_blank\" rel=\"noopener\">Element.scrollHeight</a></li>\n<li><a href=\"https://angular.tw/api/core/HostListener\" target=\"_blank\" rel=\"noopener\">Angular HostListener</a></li>\n<li><a href=\"https://angular.tw/api/core/ElementRef\" target=\"_blank\" rel=\"noopener\">Angular ElementRef</a></li>\n<li><a href=\"https://stackblitz.com/edit/angular-host-listener-scroll?file=app%2Fheader.component.ts\" target=\"_blank\" rel=\"noopener\">angular-host-listener-scroll</a></li>\n</ul>\n","categories":["Angular"],"tags":["Angular"]},{"title":"Angular 筆記 - radio 預設選項實作","url":"/angular/20210331/2213870343/","content":"<p><img src=\"https://i.imgur.com/87pBpoJ.jpg\" alt=\"angular\"></p>\n<p>目前遇到一個需求是在頁面渲染後，會先預設帶入 radio 的選項。</p>\n<h2 id=\"建立-input\"><a href=\"#建立-input\" class=\"headerlink\" title=\"建立 input\"></a>建立 input</h2><p><strong>radio.html</strong></p>\n<p>建立兩個 radio 選項，</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> [<span class=\"attr\">formGroup</span>]=<span class=\"string\">\"loginForm\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"form-radio-inline\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">formControlName</span>=<span class=\"string\">\"lang\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">class</span>=<span class=\"string\">\"form-check-input\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">type</span>=<span class=\"string\">\"radio\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">name</span>=<span class=\"string\">\"lang\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">id</span>=<span class=\"string\">\"lang-tc\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">value</span>=<span class=\"string\">\"zh-tw\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      [<span class=\"attr\">attr.checked</span>]=<span class=\"string\">\"checked\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      [<span class=\"attr\">checked</span>]=<span class=\"string\">\"vm.isTw\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      (<span class=\"attr\">click</span>)=<span class=\"string\">\"setLang('zh-tw')\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">class</span>=<span class=\"string\">\"form-check-label\"</span> <span class=\"attr\">for</span>=<span class=\"string\">\"lang-tc\"</span>&gt;</span> 繁體中文 <span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"form-radio-inline\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">formControlName</span>=<span class=\"string\">\"lang\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">class</span>=<span class=\"string\">\"form-check-input\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">type</span>=<span class=\"string\">\"radio\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">name</span>=<span class=\"string\">\"lang\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">id</span>=<span class=\"string\">\"lang-en\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">value</span>=<span class=\"string\">\"en\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      (<span class=\"attr\">click</span>)=<span class=\"string\">\"setLang('en')\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      [<span class=\"attr\">checked</span>]=<span class=\"string\">\"!vm.isTw\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">class</span>=<span class=\"string\">\"form-check-label\"</span> <span class=\"attr\">for</span>=<span class=\"string\">\"lang-en\"</span>&gt;</span> English <span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"設定預設選項\"><a href=\"#設定預設選項\" class=\"headerlink\" title=\"設定預設選項\"></a>設定預設選項</h2><p>因為使用 form 表單，所以就要引入相對的組件</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123;</span><br><span class=\"line\">  FormBuilder,</span><br><span class=\"line\">  FormControl,</span><br><span class=\"line\">  FormGroup,</span><br><span class=\"line\">  Validators,</span><br><span class=\"line\">&#125; <span class=\"keyword\">from</span> <span class=\"string\">\"@angular/forms\"</span>;</span><br></pre></td></tr></table></figure>\n\n<p>預設變數先寫好，</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">isTw: boolean = <span class=\"literal\">true</span>;</span><br><span class=\"line\">checked: boolean = <span class=\"literal\">true</span>;</span><br></pre></td></tr></table></figure>\n\n<p>建立 <code>Form</code> 與建構式引入 <code>FormBuilder</code> 方法。<br>預設帶入的是繁體中文的值 <code>zh-tw</code>。<br>將點擊事件的參數帶入，並且賦予語言選項的值。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">loginForm: FormGroup = <span class=\"keyword\">new</span> FormGroup(&#123;</span><br><span class=\"line\">   lang: <span class=\"keyword\">new</span> FormControl(<span class=\"string\">\"zh-tw\"</span>)</span><br><span class=\"line\"> &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"keyword\">constructor</span>(private formBuilder: FormBuilder) &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"> ngOnInit() &#123;</span><br><span class=\"line\">   <span class=\"keyword\">this</span>.createForm();</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"> createForm() &#123;</span><br><span class=\"line\">   <span class=\"keyword\">this</span>.loginForm = <span class=\"keyword\">this</span>.formBuilder.group(&#123;</span><br><span class=\"line\">     lang: [<span class=\"string\">\"zh-tw\"</span>, Validators.required]</span><br><span class=\"line\">   &#125;);</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"> setLang(lang: string) &#123;</span><br><span class=\"line\">   <span class=\"keyword\">this</span>.isTw = lang === <span class=\"string\">\"zh-tw\"</span>;</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n\n<p>Demo <a href=\"https://stackblitz.com/edit/angular-ivy-bgkczh?embed=1&amp;file=src/app/app.component.html\" target=\"_blank\" rel=\"noopener\">https://stackblitz.com/edit/angular-ivy-bgkczh?embed=1&amp;file=src/app/app.component.html</a></p>\n","categories":["Angular"],"tags":["Angular"]},{"title":"Angular 筆記 - Checkbox 的驗證實作","url":"/angular/20210331/1100746370/","content":"<p><img src=\"https://i.imgur.com/87pBpoJ.jpg\" alt=\"angular\"></p>\n<p>與<a href=\"https://hsuchihting.github.io/angular/20210313/3161083344/\">表單驗證</a>方法雷同，只是在驗證與寫法稍微不同。</p>\n<p><strong>checkbox.html</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> [<span class=\"attr\">formGroup</span>]=<span class=\"string\">\"checkboxForm\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"form-check pri-txt\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">class</span>=<span class=\"string\">\"form-check-input\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">name</span>=<span class=\"string\">\"checkbox1\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">id</span>=<span class=\"string\">\"checkbox1\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">value</span>=<span class=\"string\">\"option\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">formControlName</span>=<span class=\"string\">\"checkbox1\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">class</span>=<span class=\"string\">\"form-check-label\"</span> <span class=\"attr\">for</span>=<span class=\"string\">\"uncheck\"</span>&gt;</span></span><br><span class=\"line\">      我已閱讀並同意隱私權政策</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"驗證條件\"><a href=\"#驗證條件\" class=\"headerlink\" title=\"驗證條件\"></a>驗證條件</h2><p><strong>checkbox.ts</strong></p>\n<p>首先引入相對的組件，</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123;</span><br><span class=\"line\">  FormBuilder,</span><br><span class=\"line\">  FormControl,</span><br><span class=\"line\">  FormGroup,</span><br><span class=\"line\">  Validators,</span><br><span class=\"line\">&#125; <span class=\"keyword\">from</span> <span class=\"string\">\"@angular/forms\"</span>;</span><br></pre></td></tr></table></figure>\n\n<p>建立表單，並於建構式使用 <code>FormBuilder</code> 方法。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">checkboxForm: FormGroup = <span class=\"keyword\">new</span> FormGroup(&#123;</span><br><span class=\"line\">    checkbox1: <span class=\"keyword\">new</span> FormControl(<span class=\"string\">''</span>),</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>(</span><br><span class=\"line\">    private formBuilder: FormBuilder</span><br><span class=\"line\">  ) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n\n<p>使用 <code>createForm</code> 方法寫入建立表單的內容，並且在網頁渲染前使用其方法。</p>\n<p>特別要注意的地方是必填欄位的驗證條件是 <code>requiredTrue</code>，跟之前只寫 <code>required</code> 不同。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"> ngOnInit() &#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.createForm();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">createForm() &#123;</span><br><span class=\"line\">   <span class=\"keyword\">this</span>.checkboxForm = <span class=\"keyword\">this</span>.formBuilder.group(&#123;</span><br><span class=\"line\">     checkbox1: [<span class=\"string\">''</span>, Validators.requiredTrue],</span><br><span class=\"line\">   &#125;);</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n\n<p>驗證條件建立好之後，回到 HTML 寫驗證需求。</p>\n<h2 id=\"在-Template-寫入條件\"><a href=\"#在-Template-寫入條件\" class=\"headerlink\" title=\"在 Template 寫入條件\"></a>在 Template 寫入條件</h2><p><strong>checkbox.html</strong></p>\n<p>跟先前寫法有點不同，這次要把選擇的條件使用中括號並且用字串的方式呈現，因 <code>required</code> 這時會跳紅線，這時可以在 <code>error</code> 後方加上一個問號，就能消除紅線。</p>\n<blockquote>\n<p>官方文件解釋：原因是 TS 嚴格模式的默認情況下，TypeScript 中的所有類型都允許 <code>null</code>，非 <code>null</code> 斷言運算符 <code>!</code> 允許您斷言表達式不是 <code>null</code> 或者 <code>undefined</code> ，TypeScript 編譯器無法自動推斷出該表達式。</p>\n</blockquote>\n<p>簡單了解就是，在嚴格模式下加上問號就可以解決這個錯誤了。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">class</span>=<span class=\"string\">\"invalid-feedback d-block\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  *<span class=\"attr\">ngIf</span>=<span class=\"string\">\"</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">                !checkboxForm.controls['checkbox1'].pristine &amp;&amp;</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">                checkboxForm.controls['checkbox1'].errors?.required</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">              \"</span></span></span><br><span class=\"line\"><span class=\"tag\">&gt;</span></span><br><span class=\"line\">  請先勾選隱私權政策協議</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>Demo <a href=\"https://stackblitz.com/edit/angular-ivy-rz57hk?embed=1&amp;file=src/app/app.component.html\" target=\"_blank\" rel=\"noopener\">https://stackblitz.com/edit/angular-ivy-rz57hk?embed=1&amp;file=src/app/app.component.html</a></p>\n","categories":["Angular"],"tags":["Angular"]},{"title":"Angular 筆記 - 使用 get API 完成搜尋列表","url":"/angular/20210315/479562311/","content":"<p><img src=\"https://images.unsplash.com/photo-1490127252417-7c393f993ee4?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80\" alt=\"search\"></p>\n<p>這次紀錄使用 RxJS 的取得 API 資料欄位，並且完成指定資料的搜尋功能。</p>\n<h2 id=\"畫面架構\"><a href=\"#畫面架構\" class=\"headerlink\" title=\"畫面架構\"></a>畫面架構</h2><p><img src=\"https://i.imgur.com/0GsHnqR.png\" alt=\"main\"></p>\n<p>有三個輸入框，分別為名稱、性別、地區，並用 <code>form</code> 元件操作，下方為表格，把相對應資料相依渲染在畫面上。</p>\n<h3 id=\"輸入框欄位\"><a href=\"#輸入框欄位\" class=\"headerlink\" title=\"輸入框欄位\"></a>輸入框欄位</h3><p><strong>main.component.html</strong></p>\n<p><code>formGroup</code> 的屬性繫結裡面可以有許多 <code>input</code> 的內容，只要在每個 <code>input</code> 都加上 <code>formControlName</code> 的指令，並且給予對應的變數，再到 TS 檔建立對應的型別與初始值就可以使用了。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> [<span class=\"attr\">formGroup</span>]=<span class=\"string\">\"mainForm\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"cardGroup\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"card\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"card-body\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">h5</span> <span class=\"attr\">class</span>=<span class=\"string\">\"card-title\"</span>&gt;</span>NAME<span class=\"tag\">&lt;/<span class=\"name\">h5</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">class</span>=<span class=\"string\">\"form-control\"</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">placeholder</span>=<span class=\"string\">\"Enter your name\"</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">formControlName</span>=<span class=\"string\">\"name\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        /&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"card\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"card-body\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">h5</span> <span class=\"attr\">class</span>=<span class=\"string\">\"card-title\"</span>&gt;</span>GENDER<span class=\"tag\">&lt;/<span class=\"name\">h5</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">class</span>=<span class=\"string\">\"input\"</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">type</span>=<span class=\"string\">\"radio\"</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">id</span>=<span class=\"string\">\"male\"</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">name</span>=<span class=\"string\">\"gender\"</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">value</span>=<span class=\"string\">\"male\"</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">formControlName</span>=<span class=\"string\">\"gender\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">class</span>=<span class=\"string\">\"inputText\"</span> <span class=\"attr\">for</span>=<span class=\"string\">\"male\"</span>&gt;</span>Male<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">class</span>=<span class=\"string\">\"input\"</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">type</span>=<span class=\"string\">\"radio\"</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">id</span>=<span class=\"string\">\"female\"</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">name</span>=<span class=\"string\">\"gender\"</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">value</span>=<span class=\"string\">\"female\"</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">formControlName</span>=<span class=\"string\">\"gender\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">class</span>=<span class=\"string\">\"inputText\"</span> <span class=\"attr\">for</span>=<span class=\"string\">\"female\"</span>&gt;</span>Female<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"card\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"card-body\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">h5</span> <span class=\"attr\">class</span>=<span class=\"string\">\"card-title\"</span>&gt;</span>LOCATION<span class=\"tag\">&lt;/<span class=\"name\">h5</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"search\"</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">input</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">placeholder</span>=<span class=\"string\">\"Search name or location\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">formControlName</span>=<span class=\"string\">\"location\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            [(<span class=\"attr\">ngModel</span>)]=<span class=\"string\">\"search\"</span></span></span><br><span class=\"line\"><span class=\"tag\">          /&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn btn-warning\"</span> (<span class=\"attr\">click</span>)=<span class=\"string\">\"filterData()\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fas fa-search fa-lg\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">\"button\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn btn-success\"</span> (<span class=\"attr\">click</span>)=<span class=\"string\">\"submitData()\"</span>&gt;</span></span><br><span class=\"line\">            修改</span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"表格-table\"><a href=\"#表格-table\" class=\"headerlink\" title=\"表格 table\"></a>表格 table</h3><p><strong>main.component.html</strong></p>\n<ol>\n<li>使用 Bootstrap 的表格元件，快速完成 RWD 與一些表格的互動效果。</li>\n<li>在 <code>tbody</code> 的 <code>tr</code> 寫上 <code>ngFor</code> 把對應資料用迴圈跑出來。</li>\n<li>時間使用 <code>date</code> 的<a href=\"https://hsuchihting.github.io/angular/20200913/2198414702/\">水管元件</a>就能輕鬆得到相對應的格式。</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"table-responsive\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">class</span>=<span class=\"string\">\"table table-hover table-bordered\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">thead</span> <span class=\"attr\">class</span>=<span class=\"string\">\"table-indigo\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">th</span> <span class=\"attr\">scope</span>=<span class=\"string\">\"col\"</span>&gt;</span>#<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">th</span> <span class=\"attr\">scope</span>=<span class=\"string\">\"col\"</span>&gt;</span>NAME<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">th</span> <span class=\"attr\">scope</span>=<span class=\"string\">\"col\"</span>&gt;</span>GENDER<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">th</span> <span class=\"attr\">scope</span>=<span class=\"string\">\"col\"</span>&gt;</span>LOCATION<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">th</span> <span class=\"attr\">scope</span>=<span class=\"string\">\"col\"</span>&gt;</span>TIME<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">th</span> <span class=\"attr\">scope</span>=<span class=\"string\">\"col\"</span>&gt;</span>FEATURE<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">thead</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">tr</span> *<span class=\"attr\">ngFor</span>=<span class=\"string\">\"let item of lists\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>&#123;&#123; item.id &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>&#123;&#123; item.name &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>&#123;&#123; item.gender &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>&#123;&#123; item.location &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>&#123;&#123; today | date: \"yyyy/MM/dd hh:mm:ss\" &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span> <span class=\"attr\">class</span>=<span class=\"string\">\"feature\"</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">button</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">class</span>=<span class=\"string\">\"btn btn-secondary\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            (<span class=\"attr\">click</span>)=<span class=\"string\">\"</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">                  editData(item.id, item.name, item.gender, item.location)</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">                \"</span></span></span><br><span class=\"line\"><span class=\"tag\">          &gt;</span></span><br><span class=\"line\">            編輯</span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn btn-danger\"</span> (<span class=\"attr\">click</span>)=<span class=\"string\">\"deleteData(item.id)\"</span>&gt;</span></span><br><span class=\"line\">            刪除</span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"取得欄位初始值\"><a href=\"#取得欄位初始值\" class=\"headerlink\" title=\"取得欄位初始值\"></a>取得欄位初始值</h2><p><strong>main.component.ts</strong></p>\n<p>因為在 <code>mainForm</code> 裡面有多個欄位，一開始以為是要一個 <code>input</code> 外面就要包一個 <code>formGroup</code> 屬性繫結，結果一直跳錯，後來認真看了錯誤訊息給的提示，才知道是最外面給一個屬性繫結即可。</p>\n<p>在參考開發人員工具的範例後，修正如下：</p>\n<p>宣告 <code>mainForm</code> 的類別為 <code>FormGroup</code> 的元件，並建立一個 <code>FormGroup</code> 實體，裡面有三個屬性，並給予初始值。</p>\n<p>也把會使用到的 id，search，today 等變數給予型別與初始值。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">mainForm: FormGroup = <span class=\"keyword\">new</span> FormGroup(&#123;</span><br><span class=\"line\">  name: <span class=\"keyword\">new</span> FormControl(),</span><br><span class=\"line\">  gender: <span class=\"keyword\">new</span> FormControl(),</span><br><span class=\"line\">  location: <span class=\"keyword\">new</span> FormControl(),</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">id: number;</span><br><span class=\"line\">search: string = <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">today: <span class=\"built_in\">Date</span>;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"要用-API-搜尋的-方法\"><a href=\"#要用-API-搜尋的-方法\" class=\"headerlink\" title=\"要用 API 搜尋的 方法\"></a>要用 API 搜尋的 方法</h3><p><strong>data.service.ts</strong></p>\n<p>先到 <code>data</code> 服務元件多建立一個搜尋資料的方法，建立方法前要先做幾件事情。</p>\n<ol>\n<li>在建構式中建立一個打 API 需要的 <code>options</code> 的內容。</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">constructor</span>(private http: HttpClient) &#123;</span><br><span class=\"line\">   <span class=\"keyword\">this</span>.options = &#123;</span><br><span class=\"line\">     headers: <span class=\"keyword\">new</span> HttpHeaders(&#123;</span><br><span class=\"line\">       <span class=\"string\">'content-type'</span>: <span class=\"string\">'application/json'</span>,</span><br><span class=\"line\">     &#125;),</span><br><span class=\"line\">   &#125;;</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>滑鼠移動到其中一個 <code>get</code> 的方法上方時，會跳出一個提示視窗，告訴我以下資訊，</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">headers?:</span><br><span class=\"line\">  | HttpHeaders</span><br><span class=\"line\">  | &#123;</span><br><span class=\"line\">      [header: string]: string | string[];</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">observe?: <span class=\"string\">'body'</span>;</span><br><span class=\"line\">params?:</span><br><span class=\"line\">  | HttpParams</span><br><span class=\"line\">  | &#123;</span><br><span class=\"line\">      [param: string]: string | string[];</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">reportProgress?: boolean;</span><br><span class=\"line\">responseType?: <span class=\"string\">'json'</span>;</span><br><span class=\"line\">withCredentials?: boolean;</span><br></pre></td></tr></table></figure>\n\n<p>這就是 <code>options</code> 所需要的內容，但這樣太長了，而且可能未來其他頁面要使用這個服務，就把它封裝成 <code>interface</code>，讓未來需要使用時，只要引入就可以了。</p>\n<p><strong>OptionModal.ts</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; HttpHeaders, HttpParams &#125; <span class=\"keyword\">from</span> <span class=\"string\">\"@angular/common/http\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> interface OptionModal &#123;</span><br><span class=\"line\">  headers?:</span><br><span class=\"line\">    | HttpHeaders</span><br><span class=\"line\">    | &#123;</span><br><span class=\"line\">        [header: string]: string | string[],</span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\">  observe?: <span class=\"string\">\"body\"</span>;</span><br><span class=\"line\">  params?:</span><br><span class=\"line\">    | HttpParams</span><br><span class=\"line\">    | &#123;</span><br><span class=\"line\">        [param: string]: string | string[],</span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\">  reportProgress?: boolean;</span><br><span class=\"line\">  responseType?: <span class=\"string\">\"json\"</span>;</span><br><span class=\"line\">  withCredentials?: boolean;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>以上完成後就可以來建立搜尋資料的方法，</p>\n<p><strong>data.service.ts</strong></p>\n<ol>\n<li>建立一個參數，並實體化 <code>HttpParams()</code> 的物件。</li>\n<li>搜尋方法的參數型別給予之前建立的 <code>interface</code> 內容，也就是欄位帶有 <code>name</code>、<code>gender</code>、<code>location</code> 的資料樣式。</li>\n<li>後續在 <code>append</code> 的方法，把相對的欄位增加出來，讓參數可以對應。</li>\n<li>再取得 API 的值，看欄位的值是否與資料相符。</li>\n<li>取得 API 是一個陣列型別的資料樣式，透過<code>觀察者物件</code>來確認資料是否回傳為陣列資料的格式。</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">filterData(filterData: PersonModal): Observable&lt;PersonModal[]&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> params = <span class=\"keyword\">new</span> HttpParams();</span><br><span class=\"line\">    params = params.append(<span class=\"string\">'name'</span>, filterData.name);</span><br><span class=\"line\">    params = params.append(<span class=\"string\">'gender'</span>, filterData.gender);</span><br><span class=\"line\">    params = params.append(<span class=\"string\">'location'</span>, filterData.location);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.http.get&lt;PersonModal[]&gt;(<span class=\"string\">`<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.mainUrl&#125;</span>/posts`</span>, &#123;</span><br><span class=\"line\">      ...this.options,</span><br><span class=\"line\">      params,</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"終於要來打-API-囉\"><a href=\"#終於要來打-API-囉\" class=\"headerlink\" title=\"終於要來打 API 囉\"></a>終於要來打 API 囉</h2><ol>\n<li>此時使用剛剛建立好的 <code>filterData</code> 方法，裡面給予屬性，其值就是每個欄位所輸入的值。</li>\n<li>使用一個變數儲存回傳的值，並確認回傳值是一個陣列。</li>\n<li>將原本的資料內容替換成新得到的陣列資料，即可完成。</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">filterData() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.dataSvc</span><br><span class=\"line\">        .filterData(&#123;</span><br><span class=\"line\">          name: <span class=\"keyword\">this</span>.mainForm.value.name,</span><br><span class=\"line\">          gender: <span class=\"keyword\">this</span>.mainForm.value.gender,</span><br><span class=\"line\">          location: <span class=\"keyword\">this</span>.mainForm.value.location,</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">        .subscribe(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">          <span class=\"keyword\">let</span> params: PersonModal[] = res;</span><br><span class=\"line\">          <span class=\"built_in\">console</span>.log(params);</span><br><span class=\"line\">          <span class=\"keyword\">this</span>.lists = params;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">     &#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>完成示意圖</strong></p>\n<p><img src=\"https://i.imgur.com/jHibLza.png\" alt=\"filter\"></p>\n","categories":["Angular"],"tags":["Angular"]},{"title":"Angular 筆記 - 登入頁跳轉","url":"/angular/20210315/3117291664/","content":"<p><img src=\"https://i.imgur.com/WQUK8nU.jpg\" alt=\"login\"></p>\n<p>本次練習一個表單驗證，並登入成功後的跳轉功能紀錄。</p>\n<h2 id=\"表單驗證\"><a href=\"#表單驗證\" class=\"headerlink\" title=\"表單驗證\"></a>表單驗證</h2><p>關於表單驗證的細節可以看 <a href=\"https://hsuchihting.github.io/angular/20210313/3161083344/\">Angular 筆記 - Reactive Form 表單驗證實作</a>，此篇以跳轉頁面功能的筆記為主。</p>\n<h3 id=\"信箱驗證\"><a href=\"#信箱驗證\" class=\"headerlink\" title=\"信箱驗證\"></a>信箱驗證</h3><p><strong>login.component.html</strong></p>\n<ol>\n<li>信箱為初始不要有驗證訊息。</li>\n<li>信箱為必填欄位。</li>\n<li>驗證錯誤為電子信箱的正規表達式。</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>信箱<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"email\"</span> <span class=\"attr\">formControlName</span>=<span class=\"string\">\"email\"</span> <span class=\"attr\">pInputText</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">small</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">class</span>=<span class=\"string\">\"p-error\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    *<span class=\"attr\">ngIf</span>=<span class=\"string\">\"</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">                !loginForm.controls.email.pristine &amp;&amp;</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">                loginForm.controls.email.errors?.required</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">              \"</span></span></span><br><span class=\"line\"><span class=\"tag\">    &gt;</span>請填寫信箱<span class=\"tag\">&lt;/<span class=\"name\">small</span></span></span><br><span class=\"line\"><span class=\"tag\">  &gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">small</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">class</span>=<span class=\"string\">\"p-error\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    *<span class=\"attr\">ngIf</span>=<span class=\"string\">\"</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">                !loginForm.controls.email.pristine &amp;&amp;</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">                loginForm.controls.email.hasError('pattern')</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">              \"</span></span></span><br><span class=\"line\"><span class=\"tag\">    &gt;</span>信箱格式錯誤<span class=\"tag\">&lt;/<span class=\"name\">small</span></span></span><br><span class=\"line\"><span class=\"tag\">  &gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>login.component.ts</strong></p>\n<ol>\n<li>建立表單的初始值與驗證欄位。</li>\n<li>信箱使用的是信箱正規表達式。</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//*建立表單</span></span><br><span class=\"line\"> creatForm() &#123;</span><br><span class=\"line\">   <span class=\"keyword\">this</span>.loginForm = <span class=\"keyword\">this</span>.formBuilder.group(&#123;</span><br><span class=\"line\">     name: [<span class=\"string\">''</span>, Validators.required],</span><br><span class=\"line\">     email: [</span><br><span class=\"line\">       <span class=\"string\">''</span>,</span><br><span class=\"line\">       Validators.compose([</span><br><span class=\"line\">         Validators.required,</span><br><span class=\"line\">         Validators.pattern(</span><br><span class=\"line\">           <span class=\"string\">'^[a-zA-Z0-9.!#$%&amp;』*+/=?^_`&#123;|&#125;~-]+@[a-zA-Z0-9-]+(?:.[a-zA-Z0-9-]+)*$'</span></span><br><span class=\"line\">         ),</span><br><span class=\"line\">       ]),</span><br><span class=\"line\">     ],</span><br><span class=\"line\">   &#125;);</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"畫面跳轉\"><a href=\"#畫面跳轉\" class=\"headerlink\" title=\"畫面跳轉\"></a>畫面跳轉</h2><p><strong>login.component.html</strong></p>\n<p>於登入頁按鈕給予一個點擊事件。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">\"button\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"login-btn\"</span> (<span class=\"attr\">click</span>)=<span class=\"string\">\"toMain()\"</span>&gt;</span>登入<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>login.component.ts</strong></p>\n<ol>\n<li>給予跳轉頁面的判斷條件，如果登入表單是無效時，就給予<strong>登入失敗</strong>提示。</li>\n<li>若有效則跳轉頁面。</li>\n<li>跳轉頁面使用 <code>router</code> 的 <code>navigate</code>(導航) 方法，裡面用<strong>中括號</strong>並給予<strong>路由字串</strong>，即完成頁面跳轉。</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">toMain() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.loginForm.invalid) &#123;</span><br><span class=\"line\">      alert(<span class=\"string\">'登入失敗'</span>);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      alert(<span class=\"string\">'登入成功'</span>);</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.router.navigate([<span class=\"string\">'/main'</span>]);</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.reset();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>登入錯誤提示</strong></p>\n<p><img src=\"https://i.imgur.com/VwC73Ki.png\" alt=\"error\"></p>\n<p><img src=\"https://i.imgur.com/b0SMgap.png\" alt=\"alert\"></p>\n<p><strong>登入成功提示</strong></p>\n<p><img src=\"https://i.imgur.com/bBVIRW7.png\" alt=\"success\"></p>\n","categories":["Angular"],"tags":["Angular"]},{"title":"Angular 筆記 - Reactive Form 表單驗證實作","url":"/angular/20210313/3161083344/","content":"<p><img src=\"https://i.imgur.com/f6TVlKd.jpg\" alt=\"forms\"></p>\n<p><strong>表單驗證</strong>最常見的就是在登入或是註冊頁面會使用到，是很實用的一個練習。</p>\n<h2 id=\"需求\"><a href=\"#需求\" class=\"headerlink\" title=\"需求\"></a>需求</h2><ol>\n<li>有三個表單欄位，分別為姓名、電話、密碼。</li>\n<li>表單皆為必填。</li>\n<li>表單驗證錯誤皆會有錯誤反饋資訊。</li>\n<li>電話欄位額外條件為最大不可少於 10 碼，最小不可低於 10 碼。</li>\n<li>密碼欄位額外條件是大小寫和數字的組合，以及長度限制。</li>\n</ol>\n<h2 id=\"HTML-架構\"><a href=\"#HTML-架構\" class=\"headerlink\" title=\"HTML 架構\"></a>HTML 架構</h2><p><strong>validator.component.html</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>使用者名稱<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>使用者電話<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>使用者密碼<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"加上-Angular-的指令\"><a href=\"#加上-Angular-的指令\" class=\"headerlink\" title=\"加上 Angular 的指令\"></a>加上 Angular 的指令</h3><p>首先要使用表單，在 Angular 有內建完整的表單函式庫，只要引入方法就可以使用了。</p>\n<p>在 <code>app.module.ts</code> 引入表單方法。</p>\n<p><strong>app.module.ts</strong></p>\n<p>引入</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; FormsModule, ReactiveFormsModule &#125; <span class=\"keyword\">from</span> <span class=\"string\">\"@angular/forms\"</span>;</span><br></pre></td></tr></table></figure>\n\n<p><strong>imports:</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">FormsModule,</span><br><span class=\"line\">ReactiveFormsModule,</span><br></pre></td></tr></table></figure>\n\n<p><strong>validator.component.ts</strong></p>\n<p>先載入表單要使用的元件。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123;</span><br><span class=\"line\">  FormBuilder,</span><br><span class=\"line\">  FormControl,</span><br><span class=\"line\">  FormGroup,</span><br><span class=\"line\">  Validators,</span><br><span class=\"line\">&#125; <span class=\"keyword\">from</span> <span class=\"string\">\"@angular/forms\"</span>;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"form-使用指令-formGroup\"><a href=\"#form-使用指令-formGroup\" class=\"headerlink\" title=\"form 使用指令 formGroup\"></a>form 使用指令 formGroup</h3><ol>\n<li>在 form 標籤使用屬性繫結<code>formGroup</code> 指令，其變數為 <code>invalidForm</code>。</li>\n<li>input 中使用 <code>formControlName</code>，其變數為 <code>name</code>、<code>phone</code>、<code>password</code>。</li>\n</ol>\n<p><strong>validator.component.html</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> [<span class=\"attr\">formGroup</span>]=<span class=\"string\">\"invalidForm\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>使用者名稱<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">formControlName</span>=<span class=\"string\">\"name\"</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>使用者電話<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">formControlName</span>=<span class=\"string\">\"phone\"</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>使用者密碼<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">formControlName</span>=<span class=\"string\">\"password\"</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>validator.component.ts</strong></p>\n<ol>\n<li>因為有使用 <code>formControlName</code>，建立一個變數 <code>formName</code>，並建構一個 <code>formControl</code> 的物件，並預設為空值。</li>\n<li>自定義變數 <code>invalidForm</code> 使用 Angular 內建的 <code>FromGroup</code> 的方法。</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">formName = <span class=\"keyword\">new</span> FormControl(<span class=\"string\">\"\"</span>);</span><br><span class=\"line\">invalidForm: FormGroup;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"用-formBuilder-建構表單內容與條件\"><a href=\"#用-formBuilder-建構表單內容與條件\" class=\"headerlink\" title=\"用 formBuilder 建構表單內容與條件\"></a>用 formBuilder 建構表單內容與條件</h2><p><strong>validator.component.ts</strong></p>\n<ol>\n<li>在建構式中建立一個私有方法(<code>private</code>)，用 <code>formBuilder</code> 這個變數儲存 <code>FormBuilder</code> 的元件。</li>\n<li>使用 creatForm 函式來執行表單的建立。</li>\n<li>指 <code>invalidForm</code> 變數建立一個物件，裡面有 <code>name</code>、<code>phone</code>、<code>password</code> 的預設值。<blockquote>\n<p>建立物件是使用 <code>this.xxxx.group({...})</code>，並不像原生建立物件實字的寫法，但意思是差不多的。</p>\n</blockquote>\n</li>\n<li>因為表單要做驗證，所以有使用到 Validators 這個驗證器，後面帶驗證條件。</li>\n<li>驗證寫法先在屬性後用一個中括號，第 0 個位置是初始值，這邊是給予空值，所以給的是空字串，第 1 個欄位為驗證條件。</li>\n<li>name:[‘空值’,驗證條件為必填]。</li>\n<li>phone:[‘空值’,驗證條件為必填，最大長度為 10 字元，最小長度為 10 字元]。</li>\n<li>password:[‘空值’,驗證條件為必填，使用密碼的正規表達式]。</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">constructor</span>(private formBuilder: FormBuilder) &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//* 在網頁渲染前就呼叫 creatForm</span></span><br><span class=\"line\"> ngOnInit(): <span class=\"keyword\">void</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.creatForm();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">//*建立表單</span></span><br><span class=\"line\">  creatForm() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.invalidForm = <span class=\"keyword\">this</span>.formBuilder.group(&#123;</span><br><span class=\"line\">      name: [<span class=\"string\">''</span>, Validators.required],</span><br><span class=\"line\">      phone: [</span><br><span class=\"line\">        <span class=\"string\">''</span>,</span><br><span class=\"line\">        Validators.compose([</span><br><span class=\"line\">          Validators.required,</span><br><span class=\"line\">          Validators.maxLength(<span class=\"number\">10</span>),</span><br><span class=\"line\">          Validators.minLength(<span class=\"number\">10</span>),</span><br><span class=\"line\">        ]),</span><br><span class=\"line\">      ],</span><br><span class=\"line\">      password: [</span><br><span class=\"line\">        <span class=\"string\">''</span>,</span><br><span class=\"line\">        Validators.compose([</span><br><span class=\"line\">          Validators.required,</span><br><span class=\"line\">          Validators.pattern(<span class=\"string\">'(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z]).&#123;8,16&#125;'</span>),</span><br><span class=\"line\">        ]),</span><br><span class=\"line\">      ],</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n\n<p>這樣就達到基本的驗證功能了。</p>\n<h2 id=\"用-ngIf-將驗證提示寫在-html-中\"><a href=\"#用-ngIf-將驗證提示寫在-html-中\" class=\"headerlink\" title=\"用 ngIf 將驗證提示寫在 html 中\"></a>用 ngIf 將驗證提示寫在 html 中</h2><p>雖然完成了基本驗證功能，可是在使用者端還不會看到驗證提示，所以要來加上驗證提示，驗證提示出現在表單下方。</p>\n<p>用 <code>ngIf</code> 判斷如果有填寫才會做驗證的機制。</p>\n<h3 id=\"使用者名稱驗證提示\"><a href=\"#使用者名稱驗證提示\" class=\"headerlink\" title=\"使用者名稱驗證提示\"></a>使用者名稱驗證提示</h3><ol>\n<li>使用 Angular form 提供的 <code>controls</code> 的方法，要控制的欄位(<code>name</code>，<code>phone</code>，<code>password</code>) 的狀態如果是 <code>pristine</code> 驗證為不顯示，但有 errors 的狀態為 <code>required</code>。<blockquote>\n<p><code>pristine</code> 的意思是未被改變過的</p>\n</blockquote>\n</li>\n<li>顯示要提示的內容。</li>\n</ol>\n<p><strong>name</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>使用者名稱<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"username\"</span> <span class=\"attr\">formControlName</span>=<span class=\"string\">\"name\"</span> <span class=\"attr\">pInputText</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">small</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">class</span>=<span class=\"string\">\"p-error\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    *<span class=\"attr\">ngIf</span>=<span class=\"string\">\"</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">              !invalidForm.controls.name.pristine &amp;&amp;</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">              invalidForm.controls.name.errors?.required</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">            \"</span></span></span><br><span class=\"line\"><span class=\"tag\">    &gt;</span>請填寫姓名<span class=\"tag\">&lt;/<span class=\"name\">small</span></span></span><br><span class=\"line\"><span class=\"tag\">  &gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>phone</strong></p>\n<ol>\n<li>驗證錯誤的地方使用 <code>hasError</code> 的方法來寫，裡面只要放入剛剛在 TS 中寫好驗證條件即可，要是字串的形式才可以。</li>\n<li>因有兩個條件，所以使用兩段來呈現。<blockquote>\n<p>雖然在 TS 的 <code>maxLength</code> 與 <code>minLength</code> 是用小駝峰的方式撰寫，但在 html 是全部小寫，這部分需要注意一下。</p>\n</blockquote>\n</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>使用者電話<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">formControlName</span>=<span class=\"string\">\"phone\"</span> <span class=\"attr\">pInputText</span> /&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">small</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">class</span>=<span class=\"string\">\"p-error\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    *<span class=\"attr\">ngIf</span>=<span class=\"string\">\"</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">              !invalidForm.controls.phone.pristine &amp;&amp;</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">              invalidForm.controls.phone.errors?.required</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">            \"</span></span></span><br><span class=\"line\"><span class=\"tag\">    &gt;</span>請輸入電話<span class=\"tag\">&lt;/<span class=\"name\">small</span></span></span><br><span class=\"line\"><span class=\"tag\">  &gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">small</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">class</span>=<span class=\"string\">\"p-error\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    *<span class=\"attr\">ngIf</span>=<span class=\"string\">\"</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">              !invalidForm.controls.phone.pristine &amp;&amp;</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">              invalidForm.controls.phone.hasError('maxlength')</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">            \"</span></span></span><br><span class=\"line\"><span class=\"tag\">    &gt;</span>電話長度不可大於 10 碼<span class=\"tag\">&lt;/<span class=\"name\">small</span></span></span><br><span class=\"line\"><span class=\"tag\">  &gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">small</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">class</span>=<span class=\"string\">\"p-error\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    *<span class=\"attr\">ngIf</span>=<span class=\"string\">\"</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">              !invalidForm.controls.phone.pristine &amp;&amp;</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">              invalidForm.controls.phone.hasError('minlength')</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">            \"</span></span></span><br><span class=\"line\"><span class=\"tag\">    &gt;</span>電話格式錯誤<span class=\"tag\">&lt;/<span class=\"name\">small</span></span></span><br><span class=\"line\"><span class=\"tag\">  &gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>password</strong><br>寫法與 <code>name</code> 跟 <code>phone</code> 相同。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>使用者密碼<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">formControlName</span>=<span class=\"string\">\"password\"</span> <span class=\"attr\">pInputText</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">small</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">class</span>=<span class=\"string\">\"p-error\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    *<span class=\"attr\">ngIf</span>=<span class=\"string\">\"</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">              !invalidForm.controls.password.pristine &amp;&amp;</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">              invalidForm.controls.password.hasError('required')</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">            \"</span></span></span><br><span class=\"line\"><span class=\"tag\">    &gt;</span>請輸入密碼<span class=\"tag\">&lt;/<span class=\"name\">small</span></span></span><br><span class=\"line\"><span class=\"tag\">  &gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">small</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">class</span>=<span class=\"string\">\"p-error\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    *<span class=\"attr\">ngIf</span>=<span class=\"string\">\"</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">              !invalidForm.controls.password.pristine &amp;&amp;</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">              invalidForm.controls.password.hasError('pattern')</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">            \"</span></span></span><br><span class=\"line\"><span class=\"tag\">    &gt;</span>密碼格式錯誤：至少一個小寫字母，一個大寫字母，或是數字，密碼長度不得小於 8</span><br><span class=\"line\">    個字元亦不可超過 16 字元<span class=\"tag\">&lt;/<span class=\"name\">small</span></span></span><br><span class=\"line\"><span class=\"tag\">  &gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"最後給一個送出按鈕就大功告成了\"><a href=\"#最後給一個送出按鈕就大功告成了\" class=\"headerlink\" title=\"最後給一個送出按鈕就大功告成了\"></a>最後給一個送出按鈕就大功告成了</h2><p><strong>validator.component.html</strong><br>因按鈕 type 預設為 <code>submit</code> ，避免按下 enter 按鈕將資料送出，所以在 type 要給予 <code>button</code> 的類型。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p-button</span> <span class=\"attr\">type</span>=<span class=\"string\">\"button\"</span> (<span class=\"attr\">click</span>)=<span class=\"string\">\"confirm()\"</span>&gt;</span>確認<span class=\"tag\">&lt;/<span class=\"name\">p-button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>validator.component.ts</strong><br>給予事件，當表單為無效 ( <code>invalid</code> ) 的時候寫入回饋提示。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//todo 送出按鈕</span></span><br><span class=\"line\">confirm() &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.invalidForm.invalid) &#123;</span><br><span class=\"line\">    alert(<span class=\"string\">'表單漏填囉!'</span>);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    alert(<span class=\"string\">'驗證成功'</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>補充</strong></p>\n<p>本次範例有使用到 <a href=\"https://www.primefaces.org/primeng/\" target=\"_blank\" rel=\"noopener\">primeng</a> 的 UI 套件。</p>\n<p>DEMO: <a href=\"https://stackblitz.com/edit/angular-ivy-9jc9ld?embed=1&amp;file=src/app/app.component.html\" target=\"_blank\" rel=\"noopener\">https://stackblitz.com/edit/angular-ivy-9jc9ld?embed=1&amp;file=src/app/app.component.html</a></p>\n","categories":["Angular"],"tags":["Angular"]},{"title":"Angular 筆記 - 實作 API 的取得、刪除、新增、更新","url":"/angular/20210308/722060059/","content":"<p><img src=\"https://i.imgur.com/87pBpoJ.jpg\" alt=\"angular\"></p>\n<p>表單實作與 <a href=\"https://hsuchihting.github.io/angular/20210308/714014809/\">Angular 筆記 - FormArray 表單實作</a>差不多，有些部分就不贅述，僅記錄 API 操作的部分。</p>\n<h2 id=\"資料\"><a href=\"#資料\" class=\"headerlink\" title=\"資料\"></a>資料</h2><p>本次範例使用下方資料，已經建立成 <code>db.json</code>，並也啟用了 <code>json-server</code>。</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  \"posts\": [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      \"name\": \"提姆\",</span><br><span class=\"line\">      \"height\": <span class=\"number\">175</span>,</span><br><span class=\"line\">      \"id\": <span class=\"number\">1</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      \"id\": <span class=\"number\">2</span>,</span><br><span class=\"line\">      \"name\": \"lena\",</span><br><span class=\"line\">      \"height\": <span class=\"number\">160</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      \"id\": <span class=\"number\">3</span>,</span><br><span class=\"line\">      \"name\": \"eda\",</span><br><span class=\"line\">      \"height\": <span class=\"number\">155</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      \"id\": <span class=\"number\">4</span>,</span><br><span class=\"line\">      \"name\": \"mia\",</span><br><span class=\"line\">      \"height\": <span class=\"number\">170</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"建立-API-方法\"><a href=\"#建立-API-方法\" class=\"headerlink\" title=\"建立 API 方法\"></a>建立 API 方法</h2><ol>\n<li>在 <code>service</code> 資料夾下建立一個 API 資料夾，裡面建立一個 <code>data.service.ts</code>。</li>\n<li>定義一個 <code>options</code> 為任意型別，並制定好 <code>header</code> 要接收的格式。</li>\n<li><code>mainUrl</code> 的值是從 <code>environment</code> 中取得的，<a href=\"https://hsuchihting.github.io/angular/20210307/1877603814/\">Angular 筆記 - Router 路由實作串接 API</a>有提到過。</li>\n<li>定義各種方法的 API，方法如註解所示。</li>\n</ol>\n<p><strong>data.service.ts</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">options: any;</span><br><span class=\"line\">mainUrl: string = environment.apiUrl;</span><br><span class=\"line\"><span class=\"keyword\">constructor</span>(private http: HttpClient) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.options = &#123;</span><br><span class=\"line\">    headers: <span class=\"keyword\">new</span> HttpHeaders(&#123;</span><br><span class=\"line\">      <span class=\"string\">'content-type'</span>: <span class=\"string\">'application/json'</span>,</span><br><span class=\"line\">    &#125;),</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">run() &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'service run'</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//*取得所有資料</span></span><br><span class=\"line\">getAllData(): Observable&lt;PersonModal[]&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.http.get&lt;PersonModal[]&gt;(<span class=\"string\">`<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.mainUrl&#125;</span>/posts`</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//*取得單一資料</span></span><br><span class=\"line\">getData(): Observable&lt;PersonModal[]&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.http.get&lt;PersonModal[]&gt;(<span class=\"string\">`<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.mainUrl&#125;</span>/posts/1`</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//*新增一筆資料</span></span><br><span class=\"line\">insertData(request: PersonModal) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.http.post(<span class=\"string\">`<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.mainUrl&#125;</span>/posts`</span>, request, <span class=\"keyword\">this</span>.options);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//*更新一筆資料</span></span><br><span class=\"line\">updateData(request: PersonModal, <span class=\"attr\">id</span>: number) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.http.put(<span class=\"string\">`<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.mainUrl&#125;</span>/posts/<span class=\"subst\">$&#123;id&#125;</span>`</span>, request, <span class=\"keyword\">this</span>.options);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//*刪除一筆資料</span></span><br><span class=\"line\">deleteData(id: number) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.http.delete(<span class=\"string\">`<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.mainUrl&#125;</span>/posts/<span class=\"subst\">$&#123;id&#125;</span>`</span>, <span class=\"keyword\">this</span>.options);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"串接-API\"><a href=\"#串接-API\" class=\"headerlink\" title=\"串接 API\"></a>串接 API</h2><p>先完成輸入框的部分，</p>\n<p><strong>html</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> [<span class=\"attr\">formGroup</span>]=<span class=\"string\">\"form\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>名稱：<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">formControlName</span>=<span class=\"string\">\"name\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>身高：<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">formControlName</span>=<span class=\"string\">\"height\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>cm<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">\"button\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn btn-green\"</span> (<span class=\"attr\">click</span>)=<span class=\"string\">\"insertData()\"</span>&gt;</span></span><br><span class=\"line\">    新增</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">\"button\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn btn-orange\"</span> (<span class=\"attr\">click</span>)=<span class=\"string\">\"submitData()\"</span>&gt;</span></span><br><span class=\"line\">    修改</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>再把要呈現出清單的內容也寫出來，並把預設的欄位寫好。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"title\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>清單列表<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> *<span class=\"attr\">ngFor</span>=<span class=\"string\">\"let item of lists\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span> 名稱： &#123;&#123; item.name &#125;&#125; <span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span> 身高：&#123;&#123; item.height &#125;&#125;cm <span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">class</span>=<span class=\"string\">\"btn btn-orange\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      (<span class=\"attr\">click</span>)=<span class=\"string\">\"editData(item.id, item.name, item.height)\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    &gt;</span></span><br><span class=\"line\">      編輯</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn btn-red\"</span> (<span class=\"attr\">click</span>)=<span class=\"string\">\"deleteData(item.id)\"</span>&gt;</span>刪除<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"建立表單\"><a href=\"#建立表單\" class=\"headerlink\" title=\"建立表單\"></a>建立表單</h2><p>建立表單的初始值。<br><strong>list.component.ts</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">creatForm() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.form = <span class=\"keyword\">this</span>.formBuilder.group(&#123;</span><br><span class=\"line\">      id: <span class=\"literal\">null</span>,</span><br><span class=\"line\">      name: [<span class=\"string\">''</span>, Validators.required],</span><br><span class=\"line\">      height: [<span class=\"string\">''</span>, Validators.required],</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    <span class=\"comment\">// 觀察name輸入框的變數狀態</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.form.get(<span class=\"string\">'name'</span>).valueChanges.subscribe(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">'value:'</span>, res);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"引入-AJAX-方法\"><a href=\"#引入-AJAX-方法\" class=\"headerlink\" title=\"引入 AJAX 方法\"></a>引入 AJAX 方法</h3><p>將 <code>data.service.ts</code> 引入到建構式中。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">constructor</span>(</span><br><span class=\"line\">private formBuilder: FormBuilder,</span><br><span class=\"line\">private dataSvs: DataService</span><br><span class=\"line\">) &#123;&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"get-取得所有與單一資料\"><a href=\"#get-取得所有與單一資料\" class=\"headerlink\" title=\"get 取得所有與單一資料\"></a>get 取得所有與單一資料</h3><p>取得所有資料與取得單一資料的方法幾乎一樣，只是使用方法不同，詳細內容可以參照上方 <code>data.service.ts</code> 的內容。</p>\n<p><strong>取得所有資料</strong><br>使用一個 <code>getAllData</code> 的方法把資料存起來，並且在 <code>ngOnInit</code> 時呼叫，把資料渲染在畫面上。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">ngOnInit(): <span class=\"keyword\">void</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.creatForm();</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.getAllData();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  getAllData() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.dataSvs.getAllData().subscribe(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">     <span class=\"keyword\">this</span>.lists = res;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"delete-刪除當筆資料\"><a href=\"#delete-刪除當筆資料\" class=\"headerlink\" title=\"delete 刪除當筆資料\"></a>delete 刪除當筆資料</h3><ol>\n<li>在顯示資料清單中，在每一筆資料後方新增一個刪除按鈕，並綁定一個點擊事件。</li>\n<li>點擊後會刪除所觸發的那一筆資料，並從資料庫刪除。</li>\n</ol>\n<p><strong>list.component.html</strong></p>\n<p>因為要刪除該筆資料，所以在刪除方法中帶入該資料的 <code>id</code>，就可以把自己那筆資料刪除。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> *<span class=\"attr\">ngFor</span>=<span class=\"string\">\"let item of lists\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span> 名稱： &#123;&#123; item.name &#125;&#125; <span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span> 身高：&#123;&#123; item.height &#125;&#125;cm <span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn btn-red\"</span> (<span class=\"attr\">click</span>)=<span class=\"string\">\"deleteData(item.id)\"</span>&gt;</span>刪除<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>list.component.ts</strong></p>\n<p>刪除的方法帶入 <code>id</code> 參數，<code>dataSvs</code> 的刪除方法也接收到此 <code>id</code> 後，就會把該筆刪除，並重新呼叫 API。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//刪除一筆資料</span></span><br><span class=\"line\">  deleteData(id) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.dataSvs.deleteData(id).subscribe(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(res);</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.getAllData();</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"post-新增資料\"><a href=\"#post-新增資料\" class=\"headerlink\" title=\"post 新增資料\"></a>post 新增資料</h3><ol>\n<li>在輸入框輸入資料。</li>\n<li>按下確認鍵後把輸入框的值傳給 <code>db.json</code> 中。</li>\n</ol>\n<p><strong>list.component.html</strong></p>\n<p>給予一個點擊事件按鈕，因為按鈕會預設為 <code>submit</code>，所以要給予 <code>button</code> 的 <code>type</code> 為 <code>button</code>，才不會因為按下 <code>enter</code> 就送出了。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">\"button\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn btn-green\"</span> (<span class=\"attr\">click</span>)=<span class=\"string\">\"insertData()\"</span>&gt;</span>新增<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>list.component.ts</strong></p>\n<ol>\n<li>使用 <code>dataSvs</code> 寫好的 <code>post</code> 方法 <code>inserData</code>，並且把要傳送的物件格式寫在方法中。</li>\n<li>傳送後重新呼叫 API 與清空表格。</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">insertData() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.dataSvs</span><br><span class=\"line\">      .insertData(&#123;</span><br><span class=\"line\">        name: <span class=\"keyword\">this</span>.form.value.name,</span><br><span class=\"line\">        height: <span class=\"keyword\">this</span>.form.value.height,</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">      .subscribe(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.getAllData();</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.reset();</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"edit-編輯資料\"><a href=\"#edit-編輯資料\" class=\"headerlink\" title=\"edit 編輯資料\"></a>edit 編輯資料</h3><p>這個方法與串接 API 方法無直接關係，但也滿值得紀錄一下。</p>\n<p><strong>list.component.html</strong></p>\n<p>與刪除方法類似，但這次要把有用到欄位用參數帶入 <code>editData</code> 方法中。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> *<span class=\"attr\">ngFor</span>=<span class=\"string\">\"let item of lists\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span> 名稱： &#123;&#123; item.name &#125;&#125; <span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span> 身高：&#123;&#123; item.height &#125;&#125;cm <span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">class</span>=<span class=\"string\">\"btn btn-orange\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      (<span class=\"attr\">click</span>)=<span class=\"string\">\"editData(item.id, item.name, item.height)\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    &gt;</span></span><br><span class=\"line\">      編輯</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>list.component.ts</strong></p>\n<p>使用 <code>form</code> 本身的 <code>patchValue</code> 方法把欄位帶入對應屬性的值中。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">editData(id: number, <span class=\"attr\">name</span>: string, <span class=\"attr\">height</span>: number) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.form.patchValue(&#123;</span><br><span class=\"line\">      id: id,</span><br><span class=\"line\">      name: name,</span><br><span class=\"line\">      height: height,</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"put-更新檔案\"><a href=\"#put-更新檔案\" class=\"headerlink\" title=\"put 更新檔案\"></a>put 更新檔案</h3><ol>\n<li>這邊是編輯完後點擊 <code>submitData</code> 按鈕事件。</li>\n<li>使用的是包裝後的 <code>put</code> 方法：<code>updateData()</code>。</li>\n</ol>\n<p><strong>list.component.html</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">\"button\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn btn-orange\"</span> (<span class=\"attr\">click</span>)=<span class=\"string\">\"submitData()\"</span>&gt;</span></span><br><span class=\"line\">  修改</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>list.component.ts</strong></p>\n<ol>\n<li>因為修改送出並不會取到該筆 <code>id</code>，所以另外在外面宣告一個 <code>id</code> 的變數，型別為 <code>number</code>。</li>\n<li>讓 <code>id</code> 變數儲存這個表單的 <code>id</code>。</li>\n<li>使用 <code>dataSvs</code> 中的 <code>updateData</code> 方法，並把要送出的物件格式放在參數的位置中，並給予對應的 <code>id</code> 欄位。</li>\n<li>完成後重新呼叫 API 與清空輸入框。</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">submitData() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.id = <span class=\"keyword\">this</span>.form.getRawValue().id;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.dataSvs</span><br><span class=\"line\">      .updateData(</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          name: <span class=\"keyword\">this</span>.form.value.name,</span><br><span class=\"line\">          height: <span class=\"keyword\">this</span>.form.value.height,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.id</span><br><span class=\"line\">      )</span><br><span class=\"line\">      .subscribe(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.getAllData();</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.reset();</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n","categories":["Angular"],"tags":["Angular"]},{"title":"Angular 筆記 - FormArray 表單實作","url":"/angular/20210308/714014809/","content":"<p><img src=\"https://i.imgur.com/87pBpoJ.jpg\" alt=\"angular\"></p>\n<p>承 <a href=\"https://hsuchihting.github.io/angular/20210308/1673013614/\">Angular 筆記 - form 表單基礎實作</a> 還有另一個表單實作，就是 formArray。</p>\n<h2 id=\"formArrayName-指令\"><a href=\"#formArrayName-指令\" class=\"headerlink\" title=\"formArrayName 指令\"></a>formArrayName 指令</h2><ol>\n<li>一樣是在 <code>[formGroup] = &#39;form&#39;</code> 中實作。</li>\n<li>因為是陣列取值，所以要跑迴圈<blockquote>\n<p>tips: 看到陣列就要想到要跑迴圈的方法。</p>\n</blockquote>\n</li>\n<li>但因為 <code>nameArr</code> 並不是真的陣列，所以還是要套用 form 裡面的 <code>controls</code> 的屬性，才取得到值。</li>\n<li>為了給予序列，給予一個 <code>i</code> 變數存放 <code>index</code>。</li>\n<li>使用屬性繫結綁定 <code>formGroupName</code> 的指令，其值為序列的變數 <code>i</code>。</li>\n</ol>\n<p><strong>form.component.html</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> [<span class=\"attr\">formGroup</span>]=<span class=\"string\">\"form\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">formArrayName</span>=<span class=\"string\">\"nameArr\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">class</span>=<span class=\"string\">\"p-field\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      *<span class=\"attr\">ngFor</span>=<span class=\"string\">\"let item of nameArr.controls; let i = index\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      [<span class=\"attr\">formGroupName</span>]=<span class=\"string\">\"i\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    &gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span> firstKidName <span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">pInputText</span> <span class=\"attr\">formControlName</span>=<span class=\"string\">\"firstKidName\"</span> /&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span> secondKidName <span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">pInputText</span> <span class=\"attr\">formControlName</span>=<span class=\"string\">\"secondKidName\"</span> /&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>form.component.ts</strong></p>\n<ol>\n<li>建立一個方法，並新增物件在 <code>nameArr</code> 的陣列中。</li>\n<li>使用 <code>FormBuilder</code> 中的 <code>group</code> 方法，是新增物件的語法。</li>\n<li>並在先前的表單中呼叫 <code>createFromArray</code> 的函式。</li>\n<li>取得 <code>nameArr</code> 的內容，使用 <code>get</code> 方法，讓其屬性的值與 <code>FormArray</code> 相符。</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"> <span class=\"keyword\">get</span> nameArr() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.form.get(<span class=\"string\">'nameArr'</span>) <span class=\"keyword\">as</span> FormArray;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">createForm() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.form = <span class=\"keyword\">this</span>.formBuilder.group(&#123;</span><br><span class=\"line\">      formName: [&#123; <span class=\"attr\">value</span>: <span class=\"string\">'1111'</span>, <span class=\"attr\">disabled</span>: <span class=\"literal\">true</span> &#125;, Validators.required],</span><br><span class=\"line\">      firstName: [<span class=\"string\">''</span>, Validators.required],</span><br><span class=\"line\">      lastName: [<span class=\"string\">''</span>, Validators.required],</span><br><span class=\"line\">      nameArr: <span class=\"keyword\">this</span>.formBuilder.array([]),</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    <span class=\"comment\">// 驗證表單與觀察表單變數的狀態，類似 vue watch</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.form.get(<span class=\"string\">'formName'</span>).valueChanges.subscribe(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">'value:'</span>, res);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.createFormArray(); <span class=\"comment\">//呼叫函式</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">createFormArray() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.nameArr.push(</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.formBuilder.group(&#123;</span><br><span class=\"line\">        firstKidName: <span class=\"string\">'大哥'</span>,</span><br><span class=\"line\">        secondKidName: <span class=\"string\">'二哥'</span>,</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    );</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.nameArr);</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n\n<p>DEMO: <a href=\"https://stackblitz.com/edit/angular-ivy-kzcccj?embed=1&amp;file=src/app/app.component.ts\" target=\"_blank\" rel=\"noopener\">https://stackblitz.com/edit/angular-ivy-kzcccj?embed=1&amp;file=src/app/app.component.ts</a></p>\n","categories":["Angular"],"tags":["Angular"]},{"title":"Angular 筆記 - form 表單基礎實作","url":"/angular/20210308/1673013614/","content":"<p><img src=\"https://i.imgur.com/87pBpoJ.jpg\" alt=\"angular\"></p>\n<p>form 表單不管是前台填寫報名表還是後台表單填寫都很常見到，而 Angular 也把 form 做了更便利性的包裝，這次學習到便將其記錄起來。</p>\n<h2 id=\"form-起手式\"><a href=\"#form-起手式\" class=\"headerlink\" title=\"form 起手式\"></a>form 起手式</h2><p>Angular 包含了許多函式庫，form 表單便是其中之一，且官方文件還特別拉出一部分的篇幅來教學，可見表單元件的重要性。</p>\n<h3 id=\"引入表單相關模組\"><a href=\"#引入表單相關模組\" class=\"headerlink\" title=\"引入表單相關模組\"></a>引入表單相關模組</h3><p>先在 <code>app.module.ts</code> 引入表單相關模組，</p>\n<ul>\n<li>FormsModule</li>\n<li>ReactiveFormsModule</li>\n</ul>\n<p>再新增一個 form 資料夾裡面新增一組 <code>form.component</code>，form 有提供許多元件，起手式為：</p>\n<ol>\n<li>先在 <code>form.component.ts</code> 檔案中新增 name 變數。</li>\n<li>使其變數來儲存 <code>formControl</code> 的實體，並且給予初始值為空值。</li>\n</ol>\n<p><strong>form.component.ts</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">name = <span class=\"keyword\">new</span> FormControl(<span class=\"string\">\"\"</span>);</span><br></pre></td></tr></table></figure>\n\n<p><strong>form.component.html</strong></p>\n<p>在 HTML 中輸入下方程式碼，</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">  Name:</span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> [<span class=\"attr\">formControl</span>]=<span class=\"string\">\"name\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>說明：</p>\n<ol>\n<li>使用屬性繫結並使用 formControl 的實體，並使用剛剛新增的 name 變數。</li>\n</ol>\n<h2 id=\"建立表單\"><a href=\"#建立表單\" class=\"headerlink\" title=\"建立表單\"></a>建立表單</h2><p>表單模組還有一個元件為 <code>FormBuilder</code>，用來建立表單用，因上方的表單只是新增出來實體，但沒有辦法做到資料互動傳達。</p>\n<p>在建構是中建立一個私有方法為 <code>formBuilder</code> 的自訂義變數，並用來存 <code>FormBuilder</code> 的元件。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">constructor</span>(private formBuilder: FormBuilder) &#123;&#125;</span><br></pre></td></tr></table></figure>\n\n<p>我想要在 DOM 產生前就建立好表單，所以在生命週期初始的時候就建立此內容，</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">ngOnInit(): <span class=\"keyword\">void</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.createForm();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>並且把要建立的內容寫在函式內，</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">createForm() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.form = <span class=\"keyword\">this</span>.formBuilder.group(&#123;</span><br><span class=\"line\">      formName: [&#123; <span class=\"attr\">value</span>: <span class=\"string\">'1111'</span>, <span class=\"attr\">disabled</span>: <span class=\"literal\">true</span> &#125;, Validators.required],</span><br><span class=\"line\">      firstName: [<span class=\"string\">''</span>, Validators.required],</span><br><span class=\"line\">      lastName: [<span class=\"string\">''</span>, Validators.required],</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">    <span class=\"comment\">// 驗證表單與觀察表單變數的狀態，類似 vue watch</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.form.get(<span class=\"string\">'formName'</span>).valueChanges.subscribe(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">'value:'</span>, res);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>說明：</p>\n<ol>\n<li>Angular 要新增物件的語法為 <code>this.XXXXX.group({物件屬性:值})</code>，以上方為例，就是在裡面建立了三個屬性。</li>\n</ol>\n<ul>\n<li><code>formName</code></li>\n<li><code>firstName</code></li>\n<li><code>lastName</code></li>\n</ul>\n<ol start=\"2\">\n<li>完成後給予值，用一個陣列包起來，第一個欄位為初始值，後面是使用驗證器與條件。</li>\n</ol>\n<ul>\n<li><code>formName</code>：初始值為一個物件，其屬性為 <code>value</code>，其值為字串 <code>1111</code>，另一個屬性為預設是否為 <code>disabled</code>，條件為必填。</li>\n<li><code>firstName</code> 與 <code>lastName</code> 條件相同，初始值為空值，也都為必填。</li>\n</ul>\n<h2 id=\"表單群組化\"><a href=\"#表單群組化\" class=\"headerlink\" title=\"表單群組化\"></a>表單群組化</h2><p>有發現到新增了三個欄位，也就是表單會有三欄，此時 Angular 把多個欄位合併管理，使用一個指令為 <code>formControlName</code>，其功能是將現有 <code>FormGroup</code> 中的 <code>FormControl</code> 與一個表單控制元件進行同步。</p>\n<p>HTML 中原本是用屬性繫結的方式也改成此指令代替，其值為剛剛新增的物件屬性。<br><strong>form.component.html</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"p-field\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>formName<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">pInputText</span> <span class=\"attr\">formControlName</span>=<span class=\"string\">\"formName\"</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"p-field\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span> firstName <span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">pInputText</span> <span class=\"attr\">formControlName</span>=<span class=\"string\">\"firstName\"</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"p-field\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span> lastName <span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">pInputText</span> <span class=\"attr\">formControlName</span>=<span class=\"string\">\"lastName\"</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>既然三人成伍，也有一個 <code>formGroup</code> 的指令可以用，html 最外層再給予一個 form 標籤，並加上 <code>[formGroup] = &quot;form&quot;</code> 的屬性，來取得整個表單的值。</p>\n<p><strong>form.component.html</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> [<span class=\"attr\">formGroup</span>]=<span class=\"string\">\"form\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"p-field\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>formName<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">pInputText</span> <span class=\"attr\">formControlName</span>=<span class=\"string\">\"formName\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"p-field\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span> firstName <span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">pInputText</span> <span class=\"attr\">formControlName</span>=<span class=\"string\">\"firstName\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"p-field\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span> lastName <span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">pInputText</span> <span class=\"attr\">formControlName</span>=<span class=\"string\">\"lastName\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>在 <code>form.component.ts</code> 也在 form 變數中加上其屬性。</p>\n<p><strong>form.component.ts</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">form: FormGroup;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"取得表單的值\"><a href=\"#取得表單的值\" class=\"headerlink\" title=\"取得表單的值\"></a>取得表單的值</h2><p>使用一個按鈕並給予事件 <code>getFormValue()</code>，動態取得表單的控制元件值。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p-button</span> (<span class=\"attr\">click</span>)=<span class=\"string\">\"getFormValue()\"</span>&gt;</span>動態取得表單的控制元件值 <span class=\"tag\">&lt;/<span class=\"name\">p-button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>事件中內寫入要查看的內容，</p>\n<p><strong>form.component.ts</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">getFormValue() &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'control:'</span>, <span class=\"keyword\">this</span>.formName);</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.formName.value);</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'form:'</span>, <span class=\"keyword\">this</span>.form);</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'value:'</span>, <span class=\"keyword\">this</span>.form.value); <span class=\"comment\">//無法取得 disabled 的值</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'getRawValue:'</span>, <span class=\"keyword\">this</span>.form.getRawValue()); <span class=\"comment\">//可取得 disabled 的值</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'valid:'</span>, <span class=\"keyword\">this</span>.form.valid);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"更新表單元件值\"><a href=\"#更新表單元件值\" class=\"headerlink\" title=\"更新表單元件值\"></a>更新表單元件值</h2><p><strong>form.component.ts</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">updateFormValue() &#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.form.get(<span class=\"string\">'firstName'</span>).setValue(<span class=\"string\">'更新全部表單元件值成功'</span>);</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.form.get(<span class=\"string\">'lastName'</span>).patchValue(<span class=\"string\">'更新部分表單元件值成功'</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>有兩種方法可以取得更新，setValue 跟 patchValue。<br><code>setValue</code>：若欄位與 interface 屬性不同則會跳錯。</p>\n<p><code>patchValue</code>：若欄位有找到相符的就可以更新。</p>\n<h2 id=\"重新設定表單內容\"><a href=\"#重新設定表單內容\" class=\"headerlink\" title=\"重新設定表單內容\"></a>重新設定表單內容</h2><p>這個比較單純，就是令表單使用 reset 方法。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">resetForm() &#123;</span><br><span class=\"line\">   <span class=\"keyword\">this</span>.form.reset();</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n\n<p>Demo: <a href=\"https://stackblitz.com/edit/angular-ivy-fkqhhu?embed=1&amp;file=src/app/app.component.ts\" target=\"_blank\" rel=\"noopener\">https://stackblitz.com/edit/angular-ivy-fkqhhu?embed=1&amp;file=src/app/app.component.ts</a></p>\n","categories":["Angular"],"tags":["Angular"]},{"title":"Angular 筆記 - Router 路由實作串接 API","url":"/angular/20210307/1877603814/","content":"<p><img src=\"https://i.imgur.com/07vFnCj.jpg\" alt=\"router link\"></p>\n<p>本篇記錄重新練習路由搭配 RxJS 串接 API 的流程。</p>\n<h2 id=\"先建立-db-json-數據庫\"><a href=\"#先建立-db-json-數據庫\" class=\"headerlink\" title=\"先建立 db.json 數據庫\"></a>先建立 db.json 數據庫</h2><p>建立 API 細節可參考<a href=\"https://hsuchihting.github.io/javascript/20201030/52463831/\">JS 筆記 - 使用 postman 編輯通訊 API</a>完成後要在 <code>package.json</code> 中的 <code>script</code> 屬性中加入 <code>json</code> 指令，這樣日後啟動就不用輸入冗長的程式碼。</p>\n<p><strong>package.json</strong></p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">\"scripts\": &#123;</span><br><span class=\"line\">   \"ng\": \"ng\",</span><br><span class=\"line\">   \"<span class=\"built_in\">start</span>\": \"ng serve\",</span><br><span class=\"line\">   \"build\": \"ng build\",</span><br><span class=\"line\">   \"test\": \"ng test\",</span><br><span class=\"line\">   \"lint\": \"ng lint\",</span><br><span class=\"line\">   \"e2e\": \"ng e2e\",</span><br><span class=\"line\">   \"json\": \"json-server --watch db.json --port <span class=\"number\">3000</span>\"</span><br><span class=\"line\"> &#125;,</span><br></pre></td></tr></table></figure>\n\n<p>在 app 資料夾中建立一個 <code>db.json</code> 檔案，並把資料放在此處，</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  \"posts\": [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      \"id\": <span class=\"number\">1</span>,</span><br><span class=\"line\">      \"name\": \"tim\",</span><br><span class=\"line\">      \"height\": <span class=\"number\">175</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      \"id\": <span class=\"number\">2</span>,</span><br><span class=\"line\">      \"name\": \"lena\",</span><br><span class=\"line\">      \"height\": <span class=\"number\">160</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      \"id\": <span class=\"number\">3</span>,</span><br><span class=\"line\">      \"name\": \"eda\",</span><br><span class=\"line\">      \"height\": <span class=\"number\">155</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      \"id\": <span class=\"number\">4</span>,</span><br><span class=\"line\">      \"name\": \"mia\",</span><br><span class=\"line\">      \"height\": <span class=\"number\">170</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>這次建立 JSON 檔案發現有兩個套件可以製作 JSON 格式檔案：<br><a href=\"https://jsonformatter.curiousconcept.com/#\" target=\"_blank\" rel=\"noopener\">JSON Formatter &amp; Validator</a> 與 VSCode 套件 <a href=\"https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode\" target=\"_blank\" rel=\"noopener\">Prettier - Code formatter</a></p>\n</blockquote>\n<h2 id=\"引入-API-到-environment\"><a href=\"#引入-API-到-environment\" class=\"headerlink\" title=\"引入 API 到 environment\"></a>引入 API 到 environment</h2><p>找到 environment 資料夾，分別把 API 的路徑放在裡面，之後要串接 API 要從這裡呼叫，算是管理 API 的地方。</p>\n<blockquote>\n<p>兩個檔案都要放入 API 路徑。</p>\n</blockquote>\n<p><img src=\"https://i.imgur.com/M09N9QV.png\" alt=\"environment\"></p>\n<p><strong>environment.ts</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> environment = &#123;</span><br><span class=\"line\">  production: <span class=\"literal\">false</span>,</span><br><span class=\"line\">  apiUrl: <span class=\"string\">\"http://localhost:3000\"</span>,</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p><strong>environment.prod.ts</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> environment = &#123;</span><br><span class=\"line\">  production: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  apiUrl: <span class=\"string\">\"http://localhost:3000\"</span>,</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"建立-Model\"><a href=\"#建立-Model\" class=\"headerlink\" title=\"建立 Model\"></a>建立 Model</h2><p>因 Angular 是由 TypeScript 開發，好處是透過強型別的特性來制定資料的型別，讓專案的資料內容不會因為 JavaScript 弱型別的判斷而導致資料錯誤。</p>\n<p>先建立一個 model 資料夾，並新增一個名稱是 <code>PersonModel.ts</code> 的 <code>interface</code> 檔案(名稱可自訂義)，裡面放入所要制定的資料型別，</p>\n<p><strong>PersonModel.ts</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> interface PersonModal &#123;</span><br><span class=\"line\">  name: string,</span><br><span class=\"line\">  height: number,</span><br><span class=\"line\">  weight?: number <span class=\"comment\">//資料可放可不放</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"建立路由-router\"><a href=\"#建立路由-router\" class=\"headerlink\" title=\"建立路由 router\"></a>建立路由 router</h2><p>先選到 <code>app-routing.module.ts</code> 檔案，並把這次要產生路由建置好。</p>\n<p>而本次路由要建立與需求為：</p>\n<ol>\n<li>登入頁面。</li>\n<li>主頁面。</li>\n<li>主頁面有一個連結，點擊後會出現子頁面的內容。</li>\n<li>若路徑不符則顯示登入頁面。</li>\n</ol>\n<p>所以路由程式碼如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> routes: Routes = [</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    path: <span class=\"string\">\"main\"</span>,</span><br><span class=\"line\">    component: MainComponent,</span><br><span class=\"line\">    children: [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        path: <span class=\"string\">\"main-child\"</span>,</span><br><span class=\"line\">        component: MainChildComponent,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    ],</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    path: <span class=\"string\">\"login\"</span>,</span><br><span class=\"line\">    component: LoginComponent,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    path: <span class=\"string\">\"**\"</span>,</span><br><span class=\"line\">    redirectTo: <span class=\"string\">\"login\"</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">];</span><br></pre></td></tr></table></figure>\n\n<p>建置完成後會自動 <code>import</code> 相關元件與路徑。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; LoginComponent &#125; <span class=\"keyword\">from</span> <span class=\"string\">\"./page/login/login.component\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; MainComponent &#125; <span class=\"keyword\">from</span> <span class=\"string\">\"./main/main.component\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; MainChildComponent &#125; <span class=\"keyword\">from</span> <span class=\"string\">\"./main/main-child/main-child.component\"</span>;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"建立連結\"><a href=\"#建立連結\" class=\"headerlink\" title=\"建立連結\"></a>建立連結</h2><p>事先已經先建立好要連結的 component，如下圖。</p>\n<p><img src=\"https://i.imgur.com/fB1A2Us.png\" alt=\"view\"></p>\n<p><strong>app.component.html</strong><br>在最外層的 <code>app.component.html</code> 建立兩個路由設定好，</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"menu\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> [<span class=\"attr\">routerLink</span>]=<span class=\"string\">\"['/login']\"</span>&gt;</span>登入<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> [<span class=\"attr\">routerLink</span>]=<span class=\"string\">\"['/main']\"</span>&gt;</span>主頁面<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>並將插頭 <code>&lt;router-outlet&gt;&lt;/router-outlet&gt;</code> 寫在連結的下方，此路由就可以建立好了。</p>\n<p>如法炮製也在 <code>main.component.html</code> 建立路由，並在給予一個點擊事件，點擊後會顯示子頁面內容的文字。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>這是 Main 的頁面<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> [<span class=\"attr\">routerLink</span>]=<span class=\"string\">\"['/main/main-child']\"</span> (<span class=\"attr\">click</span>)=<span class=\"string\">\"childRender()\"</span>&gt;</span>顯示子頁面內容<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">router-outlet</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">router-outlet</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>注意：因<strong>子路由</strong>的路徑是相依在<strong>母路徑</strong>的下方，所以連結為 <code>/main/main-child</code>，路徑前面要加上 <code>&quot;/&quot;</code>，路徑名稱跟 component 名稱相同。</li>\n</ul>\n<h2 id=\"建立-Service\"><a href=\"#建立-Service\" class=\"headerlink\" title=\"建立 Service\"></a>建立 Service</h2><p>在 app 資料夾下方建立一個 service 的資料夾，建立方式可以參考 <a href=\"https://hsuchihting.github.io/angular/20200913/2155444350/\">Angular 筆記 - @injectable 裝飾器與注入 HttpClient 服務元件</a>，在建立一個 main 的資料夾，未來要在 main 使用的 service 方法的內容都可以寫在這個檔案內，以便管理。<br>承上，新增一個 <code>main.service.ts</code> 的檔案。<br><strong>main.service.ts</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; environment &#125; <span class=\"keyword\">from</span> <span class=\"string\">'./../../../environments/environment.prod'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; Injectable &#125; <span class=\"keyword\">from</span> <span class=\"string\">'@angular/core'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; PersonModal &#125; <span class=\"keyword\">from</span> <span class=\"string\">'src/app/model/PersonModel'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; HttpClient &#125; <span class=\"keyword\">from</span> <span class=\"string\">'@angular/common/http'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; Observable &#125; <span class=\"keyword\">from</span> <span class=\"string\">'rxjs'</span>;</span><br><span class=\"line\"><span class=\"comment\">// 以上要記得引入</span></span><br><span class=\"line\"></span><br><span class=\"line\">@Injectable(&#123;</span><br><span class=\"line\">  providedIn: <span class=\"string\">'root'</span>,</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainService</span> </span>&#123;</span><br><span class=\"line\">  mainUrl = environment.apiUrl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>(private http: HttpClient) &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  getMainData(): Observable&lt;PersonModal[]&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.http.get&lt;PersonModal[]&gt;(<span class=\"string\">`<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.mainUrl&#125;</span>/posts`</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>說明：</p>\n<ol>\n<li>建立一個 mainUrl 變數來接 environment.apiUrl</li>\n<li>建構是要使用 HttpClient 方法。</li>\n<li>使用 getMainData 方法，並用觀察者物件，其型別表示<code>PersonModal[]</code> 為陣列格式，並用 get 方法來取得資料，取得資料格式也是要符合 <code>PersonModal[]</code>的陣列格式，其 get 方法內的連結用 ES6 的模板語法來寫 <code>${this.mainUrl}/posts</code>，也就是與我們一開始建立 db.json 的 api 路徑相同。</li>\n</ol>\n<h3 id=\"點擊事件設定\"><a href=\"#點擊事件設定\" class=\"headerlink\" title=\"點擊事件設定\"></a>點擊事件設定</h3><p>使用 <code>navigate</code> 方法取得子頁面的路由，navigate 中文為導航，也就是點擊此事件後，會把頁面導航到子路由。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">childRender() &#123;</span><br><span class=\"line\">   <span class=\"keyword\">this</span>.router.navigate([<span class=\"string\">'/main/main-child'</span>]);</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"回到主要串接-API-的那一頁\"><a href=\"#回到主要串接-API-的那一頁\" class=\"headerlink\" title=\"回到主要串接 API 的那一頁\"></a>回到主要串接 API 的那一頁</h2><p>都設定完成後，就要回到主要串接 API 的那一頁，把功能寫在該頁的 ts 檔案中，也就是 <code>main.component.ts</code>。</p>\n<p>自訂義一個 <code>getAllData()</code> 方法來呼叫 API，Angular 推薦串接 API 的套件為 RxJS，其使用方法基礎寫法為，</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">this</span>.service.get().subscribe();</span><br></pre></td></tr></table></figure>\n\n<p>可以看到是透過 <code>service</code> 的服務元件，然後使用 <code>get</code> 方法，在用一個 <code>subcribe</code>(訂閱) 的方法執行 response 的資料，跟用其他 Promise 的套件與方法有點像，新手入門先這樣記憶，未來可以再深入研究 RxJS 的運作方式。</p>\n<p>此範例取得資料的程式碼為：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">getAllData() &#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.mainService.getMainData().subscribe(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(res);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"建構式引入-MainService-跟-Router\"><a href=\"#建構式引入-MainService-跟-Router\" class=\"headerlink\" title=\"建構式引入 MainService 跟 Router\"></a>建構式引入 MainService 跟 Router</h3><p>因為要在 <code>main.component.ts</code> 串接 API，要先引入服務元件與路由方法，故在建構式中要引入這兩個方法，程式碼如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">constructor</span>(private mainService: MainService, private router: Router) &#123;&#125;</span><br></pre></td></tr></table></figure>\n\n<p>並在生命週期 <code>ngOnInit()</code> 中呼叫 <code>getAllData()</code>，才能使用此方法。</p>\n<h3 id=\"完整程式碼為\"><a href=\"#完整程式碼為\" class=\"headerlink\" title=\"完整程式碼為\"></a>完整程式碼為</h3><p><strong>main.component.ts</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; MainService &#125; <span class=\"keyword\">from</span> <span class=\"string\">'./../service/main/main.service'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; AfterContentInit, Component, OnInit &#125; <span class=\"keyword\">from</span> <span class=\"string\">'@angular/core'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; Router &#125; <span class=\"keyword\">from</span> <span class=\"string\">'@angular/router'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">@Component(&#123;</span><br><span class=\"line\">  selector: <span class=\"string\">'app-main'</span>,</span><br><span class=\"line\">  templateUrl: <span class=\"string\">'./main.component.html'</span>,</span><br><span class=\"line\">  styleUrls: [<span class=\"string\">'./main.component.scss'</span>],</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainComponent</span> <span class=\"title\">implements</span> <span class=\"title\">OnInit</span>, <span class=\"title\">AfterContentInit</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>(private mainService: MainService, private router: Router) &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  ngAfterContentInit(): <span class=\"keyword\">void</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'DOM 渲染完囉!'</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  ngOnInit(): <span class=\"keyword\">void</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.getAllData();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  getAllData() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.mainService.getMainData().subscribe(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(res);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  childRender() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.router.navigate([<span class=\"string\">'/main/main-child'</span>]);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p><code>ngAfterContentInit()</code> 是表示在 DOM 渲染完後才載入 API，這邊使用是在 DOM 渲染前就先載入 API，至於要選哪一個生命週期，就要依專案而定。</p>\n</blockquote>\n<p>這樣就完成 API 串接了。</p>\n<h2 id=\"檢查是否有正確取得-API\"><a href=\"#檢查是否有正確取得-API\" class=\"headerlink\" title=\"檢查是否有正確取得 API\"></a>檢查是否有正確取得 API</h2><p>按下 <code>F12</code> 開發人員工具，選擇到 <code>network</code>，因本範例預設頁面為 login 頁面，故一開始不會看到 API 資料，當選擇到 main 時，就會在 <code>network &gt; preview</code> 看到 posts 這支 API 的名稱囉！</p>\n<p><strong>network</strong></p>\n<p><img src=\"https://i.imgur.com/vqAbbQ2.png\" alt=\"network\"></p>\n<p><strong>console</strong></p>\n<p><img src=\"https://i.imgur.com/ellqdbd.png\" alt=\"console\"></p>\n","categories":["Angular"],"tags":["Angular"]},{"title":"Angular 筆記 - input 與 output","url":"/angular/20210304/1004423002/","content":"<p><img src=\"https://i.imgur.com/87pBpoJ.jpg\" alt=\"angular\"></p>\n<p><code>input</code> 與 <code>output</code> 顧名思義就是進入與輸出，是使用在父子層傳遞資料使用，馬上來看練習。</p>\n<h2 id=\"父層與子層\"><a href=\"#父層與子層\" class=\"headerlink\" title=\"父層與子層\"></a>父層與子層</h2><p>目前我有兩個資料夾，父層為 <code>main</code>，子層為 <code>main-child</code>。</p>\n<p><img src=\"https://i.imgur.com/zaFAiAO.png\" alt=\"main\"></p>\n<h3 id=\"父層-main-component\"><a href=\"#父層-main-component\" class=\"headerlink\" title=\"父層 main.component\"></a>父層 main.component</h3><p><strong>main.componemt.html</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>This is Main<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>My name is &#123;&#123; person.name &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>My height is &#123;&#123; person.height &#125;&#125;cm<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> [(<span class=\"attr\">ngModel</span>)]=<span class=\"string\">\"text\"</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>main.componemt.ts</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">person: = &#123;</span><br><span class=\"line\">   name: <span class=\"string\">'Tim'</span>,</span><br><span class=\"line\">   height: <span class=\"number\">175</span>,</span><br><span class=\"line\">   weight: <span class=\"number\">78</span>,</span><br><span class=\"line\"> &#125;;</span><br><span class=\"line\">text:string = <span class=\"string\">'Tim'</span></span><br></pre></td></tr></table></figure>\n\n<p>可以理解畫面會呈現物件中的資料。</p>\n<p><img src=\"https://i.imgur.com/S1UlxM5.png\" alt=\"mainView\"></p>\n<h3 id=\"子層-main-child-component\"><a href=\"#子層-main-child-component\" class=\"headerlink\" title=\"子層 main-child.component\"></a>子層 main-child.component</h3><p><strong>main-child.component.html</strong></p>\n<p>在子層新增以下標籤與事件，</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>This is main-child<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> (<span class=\"attr\">click</span>)=<span class=\"string\">\"callDad()\"</span>&gt;</span>這是子層的按鈕<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> (<span class=\"attr\">click</span>)=<span class=\"string\">\"changeText()\"</span>&gt;</span>會更改文字按鈕<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>main-child.component.ts</strong><br>在 ts 增加事件。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">callDad() &#123;</span><br><span class=\"line\">   alert(<span class=\"string\">'事件傳送到父層了，按下確定會更改外層身高'</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">changeText() &#123;</span><br><span class=\"line\">   alert(<span class=\"string\">'事件傳送到父層了，按下確定會更改外層文字'</span>);</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"讓子層資料引入父層\"><a href=\"#讓子層資料引入父層\" class=\"headerlink\" title=\"讓子層資料引入父層\"></a>讓子層資料引入父層</h2><p>把子層 html 的 component 引入父層中，這樣才會正確顯示。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>This is Main<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>My name is &#123;&#123; person.name &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>My height is &#123;&#123; person.height &#125;&#125;cm<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">app-main-child</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">app-main-child</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> [(<span class=\"attr\">ngModel</span>)]=<span class=\"string\">\"text\"</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>這時候畫面會顯示如下，</p>\n<p><img src=\"https://i.imgur.com/Q2HuIv3.png\" alt=\"all\"></p>\n<p>點擊按鈕會出現預設的警示視窗。</p>\n<p><img src=\"https://i.imgur.com/SNn1EW7.png\" alt=\"alert\"></p>\n<h2 id=\"將子層的資料傳給父層\"><a href=\"#將子層的資料傳給父層\" class=\"headerlink\" title=\"將子層的資料傳給父層\"></a>將子層的資料傳給父層</h2><p>因為要先讓子層接收父層的資料，所以要在子層的 template 使用<a href=\"https://hsuchihting.github.io/angular/20200825/2522965862/\">屬性繫結</a>的指令把父層綁定其上。</p>\n<p><strong>main.component</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>This is Main<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>My name is &#123;&#123; person.name &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>My height is &#123;&#123; person.height &#125;&#125;cm<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">app-main-child</span> [<span class=\"attr\">parentName</span>]=<span class=\"string\">\"person.name\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">app-main-child</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ol>\n<li>在到子層的 ts 檔案使用 <code>@Input()</code> 接收父層資料，記得 Input 的開頭要大寫，且是一個方法，接收類型是 string。</li>\n<li>方法後面接著屬性繫結的<strong>自訂義名稱</strong>。<br><strong>main-child.component.ts</strong></li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">@Input() parentName: string;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"透過子層事件把父層資料修改\"><a href=\"#透過子層事件把父層資料修改\" class=\"headerlink\" title=\"透過子層事件把父層資料修改\"></a>透過子層事件把父層資料修改</h2><p>既然有 input 就有 output，新增兩個事件，</p>\n<ol>\n<li>按下按鈕修改名字。</li>\n<li>按下按鈕修改身高數值。</li>\n</ol>\n<p>使用 <code>@Output()</code> 方法，並給予自訂事件名稱，並 new 一個 <code>EventEmitter()</code> 的發射器。<br>在先前的事件中加入要傳出去的事件，使用 emit() 方法，括號裡面帶入要傳出去的值。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">@Output() pushToFather = <span class=\"keyword\">new</span> EventEmitter();</span><br><span class=\"line\">@Output() pushTextToFather = <span class=\"keyword\">new</span> EventEmitter();</span><br><span class=\"line\"></span><br><span class=\"line\"> callDad() &#123;</span><br><span class=\"line\">   alert(<span class=\"string\">'事件傳送到父層了，按下確定會更改外層身高'</span>);</span><br><span class=\"line\">   <span class=\"keyword\">this</span>.pushToFather.emit(<span class=\"number\">170</span>);<span class=\"comment\">//更改身高</span></span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"> changeText() &#123;</span><br><span class=\"line\">   alert(<span class=\"string\">'事件傳送到父層了，按下確定會更改外層文字'</span>);</span><br><span class=\"line\">   <span class=\"keyword\">this</span>.pushTextToFather.emit(<span class=\"string\">'提姆'</span>);<span class=\"comment\">//更改名稱</span></span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"父層要接收子層的資料\"><a href=\"#父層要接收子層的資料\" class=\"headerlink\" title=\"父層要接收子層的資料\"></a>父層要接收子層的資料</h2><p>在父層的子層標籤中要再加入接口的事件，並且在事件中要加入 $event 參數，才能把資料傳到父層。</p>\n<p><strong>main.component.html</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">app-main-child</span></span></span><br><span class=\"line\"><span class=\"tag\">  [<span class=\"attr\">parentName</span>]=<span class=\"string\">\"person.name\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  (<span class=\"attr\">pushToFather</span>)=<span class=\"string\">\"getChild($event)\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  (<span class=\"attr\">pushTextToFather</span>)=<span class=\"string\">\"getChildText($event)\"</span></span></span><br><span class=\"line\"><span class=\"tag\">&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">app-main-child</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>可以看到子層的 template 已經有接收父層的事件，而事件名與子層的傳出來的名稱相同，在後面要在父層中加上父層要接收的方法。</p>\n<p><strong>main.component.ts</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">getChild(height: number) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.person.height = height;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">getChildText(name: string) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.text = name;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">getInput(input) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(input);</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n\n<p>這時候可能會發現有錯誤訊息，<code>EventEmitter</code> 發射器的引入位置錯誤，應該是要從 <code>@angular/core</code> 引入，所以就把這個方法貼到引入位置為 <code>@angular/core</code> 的大括號內。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; Component, OnInit, EventEmitter, Input, Output &#125; <span class=\"keyword\">from</span> <span class=\"string\">\"@angular/core\"</span>;</span><br></pre></td></tr></table></figure>\n\n<p>這樣就完成了父子層傳遞資料的方法，完整程式碼可以看 <a href=\"https://stackblitz.com/edit/angular-ivy-znyopp?embed=1&file=src/app/app.component.ts\" target=\"_blank\" rel=\"noopener\">Demo</a>。</p>\n","categories":["Angular"],"tags":["Angular"]},{"title":"TS 筆記 - 原始型別","url":"/typescript/20210303/1114442971/","content":"<p><img src=\"https://i.imgur.com/dj8jsSO.jpg\" alt=\"ts\"></p>\n<p>主要記錄五種常用的原始資料型態。</p>\n<p>在 JS 中如果要給予變數賦予一個值是這樣寫，</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> myName = <span class=\"string\">\"Tim\"</span>;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"字串-String\"><a href=\"#字串-String\" class=\"headerlink\" title=\"字串 String\"></a>字串 String</h2><p>在 TS 可以賦予其變數型態，其值要符合該變數的型態才不會跳錯，這邊要給予字串的型態，其值也是要給予字串。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> myName: string = <span class=\"string\">\"Tom\"</span>;</span><br></pre></td></tr></table></figure>\n\n<p>如果把型態改成數字就會跳錯。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> myName: number = <span class=\"string\">\"Tom\"</span>;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>vscode 中會看到變數的位置會有紅色錯誤提示。</p>\n</blockquote>\n<p>也可以使用 ES6 的範本字串嵌入表示法。</p>\n<p><strong>typescript</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> myName: string = <span class=\"string\">\"Tim\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> sentence: string = <span class=\"string\">`My name is <span class=\"subst\">$&#123;myName&#125;</span>`</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(sentence);</span><br></pre></td></tr></table></figure>\n\n<p><strong>javascript</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">\"use strict\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> myName = <span class=\"string\">\"Tim\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> sentence = <span class=\"string\">`My name is <span class=\"subst\">$&#123;myName&#125;</span>`</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(sentence); <span class=\"comment\">//My name is Tim</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"數字-Number\"><a href=\"#數字-Number\" class=\"headerlink\" title=\"數字 Number\"></a>數字 Number</h2><p>因 JS 為弱型別語言，數字跟字串如果是以下狀況結果會相等。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> num = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> str = <span class=\"string\">\"1\"</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(num == str); <span class=\"comment\">//true</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(num === str); <span class=\"comment\">//false</span></span><br></pre></td></tr></table></figure>\n\n<p>在 TS 中因為有型別預先定義，光是在開發時就已經會跳錯誤訊息</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> one: number = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> str: string = <span class=\"string\">\"1\"</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(one == str);</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/5oOdcPM.png\" alt=\"error\"></p>\n<h2 id=\"布林值-Boolean\"><a href=\"#布林值-Boolean\" class=\"headerlink\" title=\"布林值 Boolean\"></a>布林值 Boolean</h2><p>基本宣告布林值型態的方法。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> isDone: boolean = <span class=\"literal\">true</span>;</span><br></pre></td></tr></table></figure>\n\n<p><code>new Boolean()</code> 返回的是一個 <code>Boolean</code> 物件。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> booleanType: <span class=\"built_in\">Boolean</span> = <span class=\"keyword\">new</span> <span class=\"built_in\">Boolean</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(booleanType); <span class=\"comment\">//[Boolean: true]</span></span><br></pre></td></tr></table></figure>\n\n<p>直接呼叫 <code>Boolean</code> 也可以返回一個 <code>boolean</code> 型別</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> booleanType2: boolean = <span class=\"built_in\">Boolean</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(booleanType2); <span class=\"comment\">//true</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"空值-void\"><a href=\"#空值-void\" class=\"headerlink\" title=\"空值 void\"></a>空值 void</h2><p>JS 中沒有空值的概念，在 TS 中可以使用 void 來表示沒有返回值的函式。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">alertName</span>(<span class=\"params\"></span>): <span class=\"title\">void</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">\"My name is Tom\"</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(alertName());</span><br></pre></td></tr></table></figure>\n\n<p>透過編譯器會看到錯誤訊息 <code>Type &#39;string&#39; is not assignable to type &#39;void&#39;</code>，<code>string</code> 類別不能指派給 <code>void</code>。<br>但只要把 <code>void</code> 改成 <code>string</code>，就可以成功編譯。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">alertName</span>(<span class=\"params\"></span>): <span class=\"title\">string</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">\"My name is Tom\"</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(alertName()); <span class=\"comment\">//My name is Tom</span></span><br></pre></td></tr></table></figure>\n\n<p>實務開發中會這樣寫的原因是不希望目前的函式將值輸出，待開發需要使用此函式時，要將空值改成對應的型別。</p>\n<h2 id=\"null-與-undefined\"><a href=\"#null-與-undefined\" class=\"headerlink\" title=\"null 與 undefined\"></a>null 與 undefined</h2><p>可以使用 <code>null</code> 和 <code>undefined</code> 來定義這兩個原始資料型別。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> cantFind: <span class=\"literal\">undefined</span> = <span class=\"literal\">undefined</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> noValue: <span class=\"literal\">null</span> = <span class=\"literal\">null</span>;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"任意值-any\"><a href=\"#任意值-any\" class=\"headerlink\" title=\"任意值 any\"></a>任意值 any</h2><p>若一開始賦予型別，改動 value 值會報錯。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> str: string = <span class=\"string\">\"seven\"</span>;</span><br><span class=\"line\">str = <span class=\"number\">7</span>;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/arTisO8.png\" alt=\"str is wrong\"></p>\n<p>但使用 <code>any</code> 型別可以任意改動 value 值，不建議使用，這樣失去 TS 強型別的意義，所以不建議使用。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> str: any = <span class=\"string\">\"seven\"</span>;</span><br><span class=\"line\">str = <span class=\"number\">7</span>;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><ul>\n<li><a href=\"https://willh.gitbook.io/typescript-tutorial/\" target=\"_blank\" rel=\"noopener\">TypeScript 新手指南</a></li>\n</ul>\n","categories":["TypeScript"],"tags":["TypeScript"]},{"title":"TS 筆記 - TypeScript 起手式","url":"/typescript/20210302/1513399276/","content":"<p><img src=\"https://i.imgur.com/dj8jsSO.jpg\" alt=\"ts\"></p>\n<h2 id=\"什麼是-TypeScript\"><a href=\"#什麼是-TypeScript\" class=\"headerlink\" title=\"什麼是 TypeScript\"></a>什麼是 TypeScript</h2><p>官網簡介：<a href=\"https://www.typescriptlang.org/\" target=\"_blank\" rel=\"noopener\">TypeScript</a> 是 JavaScript 的型別的超集，它可以編譯成純 JavaScript。編譯出來的 JavaScript 可以執行在任何瀏覽器上。TypeScript 編譯工具可以執行在任何伺服器和任何系統上。TypeScript 是開源的。</p>\n<ul>\n<li>TypeScript <a href=\"https://github.com/Microsoft/TypeScript\" target=\"_blank\" rel=\"noopener\">GitHub</a></li>\n</ul>\n<h2 id=\"TypeScript-優勢\"><a href=\"#TypeScript-優勢\" class=\"headerlink\" title=\"TypeScript 優勢\"></a>TypeScript 優勢</h2><p>增加了程式碼可讀性與可維護性</p>\n<ul>\n<li>在 TypeScript 裡型別可以自動推斷。</li>\n<li>在編譯時就可以提前發現錯誤。</li>\n<li>配合 IDE 工具可以發現在撰寫時就會有錯誤訊息。</li>\n<li>TypeScript 是 JavaScript 的超集，js 檔案可以直接命名為 ts 檔案。</li>\n</ul>\n<h2 id=\"安裝-TypeScript\"><a href=\"#安裝-TypeScript\" class=\"headerlink\" title=\"安裝 TypeScript\"></a>安裝 TypeScript</h2><ol>\n<li>新建一個自定義資料夾。這邊使用 tspractice，並用 VSCode 開啟。</li>\n<li>安裝 TypeScript 與 tslint。</li>\n</ol>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm install typescript --save</span><br><span class=\"line\">npm install tslint --save</span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>安裝編譯套件 npx。</li>\n</ol>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm install npx</span><br></pre></td></tr></table></figure>\n\n<ol start=\"4\">\n<li>初始化編譯套件。</li>\n</ol>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">npx tsc --init</span><br></pre></td></tr></table></figure>\n\n<ol start=\"5\">\n<li>再建立一個 src 的資料夾，裡面建立兩個檔案。</li>\n</ol>\n<ul>\n<li>index.ts: 開發用。</li>\n<li>index.js: 編譯後結果。</li>\n</ul>\n<p>這時資料夾會顯示如下圖，</p>\n<p><img src=\"https://i.imgur.com/KIp2UHN.png\" alt=\"tsfolder\"></p>\n<h3 id=\"修改-tsconfig-json\"><a href=\"#修改-tsconfig-json\" class=\"headerlink\" title=\"修改 tsconfig.json\"></a>修改 tsconfig.json</h3><p>找到 target 選項，此欄位為輸出的 JavaScript 版本，把 <code>&quot;target&quot;: &quot;es5&quot;</code> 改成 <code>&quot;target&quot;: &quot;ESNEXT&quot;</code>，其他設定值不需要更動。</p>\n<blockquote>\n<p>ES3 是 1999 年推出的第三版，ES5 (目前大部分主流瀏覽器都支援的版本)則是 2009 年推出的第五版，而後 2015 年推出 ES6（又名 ES2015)，之後規定每一年釋出新的版本，因此，2016 年推出 ES2016，2017 年推出 ES2017，以此類推，今年 2019 年已經到了 ES10 版本，而未釋出的未來版本則為 ESNext。</p>\n</blockquote>\n<h2 id=\"Hello-TypeScript\"><a href=\"#Hello-TypeScript\" class=\"headerlink\" title=\"Hello TypeScript\"></a>Hello TypeScript</h2><p>前置完成後，來試試第一個 ts 編譯檔案吧！<br>在 ts 檔案中寫下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> msg: string = <span class=\"string\">\"hello typescript!\"</span>;</span><br></pre></td></tr></table></figure>\n\n<p>這時輸入指令</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">npx tsc</span><br></pre></td></tr></table></figure>\n\n<p>就會看到 index.js 檔案編譯出下方程式碼，</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">\"use strict\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> msg = <span class=\"string\">\"hello typescript!\"</span>;</span><br></pre></td></tr></table></figure>\n\n<p>編輯器內會呈現如下圖。</p>\n<p><img src=\"https://i.imgur.com/6kO2c6B.png\" alt=\"tstojs\"></p>\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><ul>\n<li><a href=\"https://ithelp.ithome.com.tw/articles/10216636\" target=\"_blank\" rel=\"noopener\">【Day 03】 TypeScript 編譯設定 - tsconfig.json</a></li>\n<li><a href=\"https://ithelp.ithome.com.tw/articles/10214714\" target=\"_blank\" rel=\"noopener\">Day 01. 遠征 TypeScript・行前準備</a></li>\n<li><a href=\"https://willh.gitbook.io/typescript-tutorial/\" target=\"_blank\" rel=\"noopener\">TypeScript 新手指南</a></li>\n</ul>\n","categories":["TypeScript"],"tags":["TypeScript"]},{"title":"Vue 筆記 - 溜小孩好去處實作","url":"/vue-js/20210227/1649728182/","content":"<p><img src=\"https://i.imgur.com/dAqICu0.jpg\" alt=\"park\"></p>\n<p>目前工作在台北，住也在台北，目前小孩正值活蹦亂跳、電力充沛的階段，有小孩的爸媽都知道，假日最重要的就是要帶小孩出門放電，所以為了找尋能放電又不會一直在相同的公園，小孩膩了也是很麻煩的事情，所以就想找一下台北市到底有那些公園可以去巡禮，就試著做了這個 side project 給自己使用。</p>\n<h2 id=\"找台北市公園-API\"><a href=\"#找台北市公園-API\" class=\"headerlink\" title=\"找台北市公園 API\"></a>找台北市公園 API</h2><p>這是我找到的 data，<a href=\"https://github.com/hsuchihting/taipei_park_data/blob/master/db.json\" target=\"_blank\" rel=\"noopener\">https://github.com/hsuchihting/taipei_park_data/blob/master/db.json</a><br>資料平台當初下載的原始檔案是 CSV，本想嘗試自己轉成遠端 API，無奈會有 CROS 狀況，只好整包先下載下來使用。</p>\n<h2 id=\"確認資料內容與設定需求\"><a href=\"#確認資料內容與設定需求\" class=\"headerlink\" title=\"確認資料內容與設定需求\"></a>確認資料內容與設定需求</h2><p>看完 API 後我決定只要出現以下幾個條件：</p>\n<ol>\n<li>一個選擇欄位，用管理單位做分類。</li>\n<li>一個篩選欄位，在輸入路名可以找到比對的資料。</li>\n<li>卡片形式呈現，有公園名稱，公園地點跟交通指南。<br>公園管理處的欄位是：<code>pm_unit</code>。<br>可以看到資料的欄位是：<code>pm_name</code>、<code>pm_location</code>、<code>pm_transit</code>。</li>\n</ol>\n<h2 id=\"template-架構\"><a href=\"#template-架構\" class=\"headerlink\" title=\"template 架構\"></a>template 架構</h2><p>分成兩個區塊，選單與卡片</p>\n<h3 id=\"選單與搜尋欄位\"><a href=\"#選單與搜尋欄位\" class=\"headerlink\" title=\"選單與搜尋欄位\"></a>選單與搜尋欄位</h3><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">section</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"header\"</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"container\"</span>&gt;</span></span><br><span class=\"line\">         <span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">class</span>=<span class=\"string\">\"title\"</span>&gt;</span>溜小孩好去處<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">         <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">class</span>=<span class=\"string\">\"subTitle\"</span>&gt;</span>台北市共有 &#123;&#123;parkData.length&#125;&#125; 座公園<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">         <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">class</span>=<span class=\"string\">\"version\"</span>&gt;</span>版本 v2.0<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">         <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"inputGroup\"</span>&gt;</span></span><br><span class=\"line\">           <span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">class</span>=<span class=\"string\">\"select\"</span> <span class=\"attr\">v-model</span>=<span class=\"string\">\"selectUnit\"</span>&gt;</span></span><br><span class=\"line\">             <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"null\"</span> <span class=\"attr\">disabled</span>&gt;</span>-- 請選擇公園管理處 --<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">             <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">:value</span>=<span class=\"string\">\"park\"</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"park in parkMangement\"</span>&gt;</span>&#123;&#123;park&#125;&#125;</span><br><span class=\"line\">             <span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">           <span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">           <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"search\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"search\"</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">\"請輸入鄰近公園的路名，例：永吉路\"</span></span></span><br><span class=\"line\"><span class=\"tag\">             <span class=\"attr\">v-model.trim</span>=<span class=\"string\">\"search\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">         <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">       <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;/<span class=\"name\">section</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"卡片\"><a href=\"#卡片\" class=\"headerlink\" title=\"卡片\"></a>卡片</h3><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">section</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"cards\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"cardBody\"</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"item in parkData\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"parkList\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">h2</span> <span class=\"attr\">class</span>=<span class=\"string\">\"parkName\"</span>&gt;</span>&#123;&#123;item.pm_name&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">hr</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"itemName\"</span>&gt;</span> 公園地點：<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span> &#123;&#123;item.pm_location&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"itemName\"</span>&gt;</span>交通指南：<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">          &#123;&#123;item.pm_transit&#125;&#125;</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">section</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"JavaScript\"><a href=\"#JavaScript\" class=\"headerlink\" title=\"JavaScript\"></a>JavaScript</h2><p>說明：</p>\n<ol>\n<li>資料我用一個變數 <code>originData</code> 包裝，放在 Vue 實體上方，因資料太長，本頁就不呈現，僅擷取一筆資料內容當參考。</li>\n</ol>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">       <span class=\"number\">0</span>: \"<span class=\"number\">157</span>\",</span><br><span class=\"line\"><span class=\"function\">       pm_name: \"七虎公園\",</span></span><br><span class=\"line\"><span class=\"function\">       <span class=\"title\">pm_overview</span>:</span></span><br><span class=\"line\"><span class=\"function\">         \"　　為位於育仁路上、薇閣小學及七虎泳池之間的小公園，於83，84年間開闢，面積10,098平方公尺，園內設施包括兒童遊樂設施及簡易涼亭各1座，植栽部份則有蜘蛛百合、洋紫荊等，公園中心樟樹群落綠意盎然，臨溪畔近來種有吉野櫻數株，3月期間櫻粉與林綠相互襯托，令人賞心悅目，為薇閣小學及鄰近住戶共享的1處優良綠蔭遊憩場地。 \",</span></span><br><span class=\"line\"><span class=\"function\">       <span class=\"title\">pm_lon</span>: \"25.136499405\",</span></span><br><span class=\"line\"><span class=\"function\">       <span class=\"title\">pm_lat</span>: \"121.50205994\",</span></span><br><span class=\"line\"><span class=\"function\">       <span class=\"title\">pm_unit</span>: \"陽明山公園管理所\",</span></span><br><span class=\"line\"><span class=\"function\">       <span class=\"title\">pm_construction</span>: \"1994\",</span></span><br><span class=\"line\"><span class=\"function\">       <span class=\"title\">pm_location</span>: \"育仁路108號（薇閣小學旁）\",</span></span><br><span class=\"line\"><span class=\"function\">       <span class=\"title\">pm_area</span>: \"10098\",</span></span><br><span class=\"line\"><span class=\"function\">       <span class=\"title\">pm_opening_s</span>: \"00：00\",</span></span><br><span class=\"line\"><span class=\"function\">       <span class=\"title\">pm_opening_e</span>: \"24：00\",</span></span><br><span class=\"line\"><span class=\"function\">       <span class=\"title\">pm_libie</span>: \"長安里\",</span></span><br><span class=\"line\"><span class=\"function\">       <span class=\"title\">pm_phone</span>: \"\",</span></span><br><span class=\"line\"><span class=\"function\">       <span class=\"title\">pm_sports</span>: \"游泳池\",</span></span><br><span class=\"line\"><span class=\"function\">       <span class=\"title\">pm_recreation</span>: \"組合遊具\",</span></span><br><span class=\"line\"><span class=\"function\">       <span class=\"title\">pm_service</span>: \"涼亭*1\",</span></span><br><span class=\"line\"><span class=\"function\">       <span class=\"title\">pm_other</span>: \"\",</span></span><br><span class=\"line\"><span class=\"function\">       <span class=\"title\">pm_transit</span>:</span></span><br><span class=\"line\"><span class=\"function\">         \"北投公園站:216區, 218, 218區, 218直達車, 223, 266, 602,230,小6, 小7,小25,小26,小9,市民小巴2 \",</span></span><br><span class=\"line\"><span class=\"function\">       <span class=\"title\">pm_name_eng</span>: \"<span class=\"title\">Qihu</span> <span class=\"title\">Park</span>\",</span></span><br><span class=\"line\"><span class=\"function\">       <span class=\"title\">pm_ecology</span>: \"\",</span></span><br><span class=\"line\"><span class=\"function\">     &#125;,</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li><code>search</code> 變數一開始為空值。</li>\n<li><code>selectUnit</code> 讓一開始為沒有選擇。</li>\n<li><code>parkManagement</code> 為選單內容，也就是公園管理處。</li>\n<li>使用 <code>parkList</code> 方法存放要計算的內容。</li>\n<li>變數 <code>parkList</code> 的值是資料 <code>originData</code> 去做篩選。</li>\n<li>當我選單的值等於資料的 <code>pm_unit</code> 欄位，以及搜尋文字內容是空值或是跟 <code>pm_location</code> 的值一樣的時候，就回傳值到 <code>parkData</code> 變數中。</li>\n<li>透過 <code>watch</code> 檢查 <code>search</code> 跟 <code>selectUnit</code> 資料變動狀態。</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  el: <span class=\"string\">\"#app\"</span>,</span><br><span class=\"line\">  data: &#123;</span><br><span class=\"line\">    parkData: originData,</span><br><span class=\"line\">    search: <span class=\"string\">\"\"</span>,</span><br><span class=\"line\">    selectUnit: <span class=\"literal\">null</span>,</span><br><span class=\"line\">    parkManagement: [</span><br><span class=\"line\">      <span class=\"string\">\"南港公園管理所\"</span>,</span><br><span class=\"line\">      <span class=\"string\">\"陽明山公園管理所\"</span>,</span><br><span class=\"line\">      <span class=\"string\">\"花卉試驗中心\"</span>,</span><br><span class=\"line\">      <span class=\"string\">\"園藝工程隊(東區分隊)\"</span>,</span><br><span class=\"line\">      <span class=\"string\">\"園藝工程隊(西區分隊)\"</span>,</span><br><span class=\"line\">      <span class=\"string\">\"園藝工程隊(南區分隊)\"</span>,</span><br><span class=\"line\">      <span class=\"string\">\"園藝工程隊(北區分隊)\"</span>,</span><br><span class=\"line\">      <span class=\"string\">\"園藝管理所\"</span>,</span><br><span class=\"line\">      <span class=\"string\">\"青年公園管理所\"</span>,</span><br><span class=\"line\">    ],</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  watch: &#123;</span><br><span class=\"line\">    search() &#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.parkList();</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    selectUnit() &#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.parkList();</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\">    parkList() &#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.parkData = originData.filter(<span class=\"function\">(<span class=\"params\">item</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (</span><br><span class=\"line\">          <span class=\"keyword\">this</span>.selectUnit === item.pm_unit &amp;&amp;</span><br><span class=\"line\">          (<span class=\"keyword\">this</span>.search === <span class=\"string\">\"\"</span> || item.pm_location.indexOf(<span class=\"keyword\">this</span>.search) &gt;= <span class=\"number\">0</span>)</span><br><span class=\"line\">        ); <span class=\"comment\">//找得到</span></span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Demo\"><a href=\"#Demo\" class=\"headerlink\" title=\"Demo\"></a>Demo</h2><p>頁面連結：<a href=\"https://hsuchihting.github.io/taipei_park_vue/\">https://hsuchihting.github.io/taipei_park_vue/</a><br>放電小孩公園成就陸續解鎖中。</p>\n","categories":["vue.js"],"tags":["vue.js"]},{"title":"Vue 筆記 - 標籤對應資料實作","url":"/vue-js/20210213/761476601/","content":"<p><img src=\"https://images.unsplash.com/photo-1533747122906-9ac6b6709832?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1352&q=80\" alt=\"tab\"></p>\n<p>這次縣市資料要使用這支 <a href=\"\"https://opendata.cwb.gov.tw/api/v1/rest/datastore/F-D0047-091?Authorization=CWB-08737147-8E37-4BCD-8118-2014EF09BC45&elementName=MinT,MaxT,T,Wx\";\">API</a> 來實作，未來會延伸成氣象預報的表格。</p>\n<h2 id=\"使用-Bootstrap-標籤\"><a href=\"#使用-Bootstrap-標籤\" class=\"headerlink\" title=\"使用 Bootstrap 標籤\"></a>使用 Bootstrap 標籤</h2><p>使用 <code>nav</code> 這個<a href=\"https://bootstrap.hexschool.com/docs/4.2/components/navs/#fill-and-justify\" target=\"_blank\" rel=\"noopener\">功能</a>讓標籤填滿頁面，預設要有六個選項：全部、北部、中部、南部、東部、外島。</p>\n<p>所以就先把標籤建置好，</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">nav</span> <span class=\"attr\">class</span>=<span class=\"string\">\"nav nav-pills nav-fill\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">\"nav-item nav-link active\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>全部<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">\"nav-item nav-link\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>北部<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">\"nav-item nav-link\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>中部<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">\"nav-item nav-link\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>南部<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">\"nav-item nav-link\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>東部<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">\"nav-item nav-link\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>外島<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">nav</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>並也改寫 <a href=\"https://hsuchihting.github.io/vue-js/20210211/841164669/\">Vue 筆記 - 表格中放入七天日期實作</a>的 <code>table</code> 內容。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"table-responsive\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">class</span>=<span class=\"string\">\"table table-hover table-bordered\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">thead</span> <span class=\"attr\">class</span>=<span class=\"string\">\"table-info sticky-top\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">th</span> <span class=\"attr\">scope</span>=<span class=\"string\">\"col\"</span>&gt;</span>縣市<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">        // 加在這裡</span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">th</span> <span class=\"attr\">scope</span>=<span class=\"string\">\"col\"</span>&gt;</span>時間<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">th</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">scope</span>=<span class=\"string\">\"col\"</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">v-for</span>=<span class=\"string\">\"(item, index) in dayList\"</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">:key</span>=<span class=\"string\">\"index\"</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">:class</span>=<span class=\"string\">\"&#123; holiday: item.holiday &#125;\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        &gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>&#123;&#123; item.date &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>&#123;&#123; item.week &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">thead</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"加入縣市欄位\"><a href=\"#加入縣市欄位\" class=\"headerlink\" title=\"加入縣市欄位\"></a>加入縣市欄位</h2><p>因為要在 <code>table</code> 顯示對應的縣市資料，原本時間是寫在 <code>thead</code>，現在要顯示在 <code>tbody</code> 中。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>臺北市<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>新北市<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>臺中市<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>臺南市<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">tbody</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>得到畫面如下，並確認這是我要的呈現方式。</p>\n<p><img src=\"https://i.imgur.com/IfKJqDW.png\" alt=\"cities\"></p>\n<h2 id=\"使用-Vue-js-改寫\"><a href=\"#使用-Vue-js-改寫\" class=\"headerlink\" title=\"使用 Vue.js 改寫\"></a>使用 Vue.js 改寫</h2><p>先確認有哪些需求：</p>\n<ol>\n<li>要顯示台灣的城市。</li>\n<li>因為要重複顯示，所以要使用迴圈。</li>\n<li>因為要使用迴圈，所以會用到陣列。</li>\n<li>要使用陣列把城市存起來。</li>\n</ol>\n<p><code>tbody</code> 改寫，</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">tbody</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"(item,index) in cities\"</span> <span class=\"attr\">:key</span>=<span class=\"string\">\"index\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>&#123;&#123; item.locationName &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">tbody</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"新增要使用的變數\"><a href=\"#新增要使用的變數\" class=\"headerlink\" title=\"新增要使用的變數\"></a>新增要使用的變數</h3><ol>\n<li>因為這次要打天氣預報的 API，所以用 <code>weatherItems</code> 變數為空陣列存取取得的資料。</li>\n<li>建立 <code>cities</code> 的陣列資料為空陣列，之後要把資料存到裡面。</li>\n<li>建立 <code>area</code> 變數，因為縣市名基本上會變動機會不大，所以用五個陣列分別存好<strong>北區</strong>、<strong>中區</strong>、<strong>南區</strong>、<strong>東區</strong>、<strong>外島</strong>等縣市名稱。</li>\n<li><code>range</code> 變數一開始設定為 <code>-1</code>，代表取得全部。</li>\n<li><code>active</code> 是標籤目前狀態，點擊後為 true。</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">data: &#123;</span><br><span class=\"line\">     weatherItems: [], <span class=\"comment\">//存放 api 資料的陣列</span></span><br><span class=\"line\">     dayList: [],</span><br><span class=\"line\">     cities: [],</span><br><span class=\"line\">     area: [</span><br><span class=\"line\">       [<span class=\"string\">\"臺北市\"</span>, <span class=\"string\">\"新北市\"</span>, <span class=\"string\">\"桃園市\"</span>, <span class=\"string\">\"基隆市\"</span>],</span><br><span class=\"line\">       [<span class=\"string\">\"臺中市\"</span>, <span class=\"string\">\"新竹縣\"</span>, <span class=\"string\">\"新竹市\"</span>, <span class=\"string\">\"苗栗縣\"</span>, <span class=\"string\">\"彰化縣\"</span>, <span class=\"string\">\"南投縣\"</span>],</span><br><span class=\"line\">       [<span class=\"string\">\"臺南市\"</span>, <span class=\"string\">\"高雄市\"</span>, <span class=\"string\">\"雲林縣\"</span>, <span class=\"string\">\"嘉義縣\"</span>, <span class=\"string\">\"嘉義市\"</span>, <span class=\"string\">\"屏東縣\"</span>],</span><br><span class=\"line\">       [<span class=\"string\">\"宜蘭縣\"</span>, <span class=\"string\">\"花蓮縣\"</span>, <span class=\"string\">\"臺東縣\"</span>],</span><br><span class=\"line\">       [<span class=\"string\">\"金門縣\"</span>, <span class=\"string\">\"澎湖縣\"</span>, <span class=\"string\">\"連江縣\"</span>],</span><br><span class=\"line\">     ],</span><br><span class=\"line\">     range: <span class=\"number\">-1</span>,</span><br><span class=\"line\">     active: <span class=\"literal\">false</span>,</span><br><span class=\"line\">   &#125;,</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"存取-API-的方法\"><a href=\"#存取-API-的方法\" class=\"headerlink\" title=\"存取 API 的方法\"></a>存取 API 的方法</h3><ul>\n<li>使用 axios 套件取得資料。</li>\n<li>執行 getData 方法。</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">getApi() &#123;</span><br><span class=\"line\">     axios.get(weather).then(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">       <span class=\"keyword\">this</span>.weatherItems = res.data.records.locations;</span><br><span class=\"line\">       <span class=\"comment\">// console.log(this.weatherItems);</span></span><br><span class=\"line\">       <span class=\"keyword\">this</span>.getData();</span><br><span class=\"line\">     &#125;);</span><br><span class=\"line\">   &#125;,</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"改寫標籤-HTML\"><a href=\"#改寫標籤-HTML\" class=\"headerlink\" title=\"改寫標籤 HTML\"></a>改寫標籤 HTML</h3><p>把標籤部分加入 <code>:class</code> 與<code>點擊事件</code>。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">nav</span> <span class=\"attr\">class</span>=<span class=\"string\">\"nav nav-pills nav-fill\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">a</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">class</span>=<span class=\"string\">\"nav-item nav-link\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">:class</span>=<span class=\"string\">\"&#123;active:range ==-1&#125;\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    @<span class=\"attr\">click.prevent</span>=<span class=\"string\">\"getArea(-1)\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    &gt;</span>全部<span class=\"tag\">&lt;/<span class=\"name\">a</span></span></span><br><span class=\"line\"><span class=\"tag\">  &gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">a</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">class</span>=<span class=\"string\">\"nav-item nav-link\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">:class</span>=<span class=\"string\">\"&#123;active:range == 0&#125;\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    @<span class=\"attr\">click.prevent</span>=<span class=\"string\">\"getArea(0)\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    &gt;</span>北部<span class=\"tag\">&lt;/<span class=\"name\">a</span></span></span><br><span class=\"line\"><span class=\"tag\">  &gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">a</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">class</span>=<span class=\"string\">\"nav-item nav-link\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">:class</span>=<span class=\"string\">\"&#123;active:range == 1&#125;\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    @<span class=\"attr\">click.prevent</span>=<span class=\"string\">\"getArea(1)\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    &gt;</span>中部<span class=\"tag\">&lt;/<span class=\"name\">a</span></span></span><br><span class=\"line\"><span class=\"tag\">  &gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">a</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">class</span>=<span class=\"string\">\"nav-item nav-link\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">:class</span>=<span class=\"string\">\"&#123;active:range == 2&#125;\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    @<span class=\"attr\">click.prevent</span>=<span class=\"string\">\"getArea(2)\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    &gt;</span>南部<span class=\"tag\">&lt;/<span class=\"name\">a</span></span></span><br><span class=\"line\"><span class=\"tag\">  &gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">a</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">class</span>=<span class=\"string\">\"nav-item nav-link\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">:class</span>=<span class=\"string\">\"&#123;active:range == 3&#125;\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    @<span class=\"attr\">click.prevent</span>=<span class=\"string\">\"getArea(3)\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    &gt;</span>東部<span class=\"tag\">&lt;/<span class=\"name\">a</span></span></span><br><span class=\"line\"><span class=\"tag\">  &gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">a</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">class</span>=<span class=\"string\">\"nav-item nav-link\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">:class</span>=<span class=\"string\">\"&#123;active:range == 4&#125;\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    @<span class=\"attr\">click.prevent</span>=<span class=\"string\">\"getArea(4)\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    &gt;</span>外島<span class=\"tag\">&lt;/<span class=\"name\">a</span></span></span><br><span class=\"line\"><span class=\"tag\">  &gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">nav</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"取得地區的方法\"><a href=\"#取得地區的方法\" class=\"headerlink\" title=\"取得地區的方法\"></a>取得地區的方法</h3><ul>\n<li>在 HTML 有在方法中給予參數。</li>\n<li>把 range 變數的值改成參數值，以對應相對的縣市。</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">getArea(index) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.range = index;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.getData();</span><br><span class=\"line\">      &#125;,</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"取得資料方法\"><a href=\"#取得資料方法\" class=\"headerlink\" title=\"取得資料方法\"></a>取得資料方法</h3><ul>\n<li>時間部份可以參考<a href=\"https://hsuchihting.github.io/vue-js/20210211/841164669/\">這篇</a>。</li>\n</ul>\n<h4 id=\"取得城市\"><a href=\"#取得城市\" class=\"headerlink\" title=\"取得城市\"></a>取得城市</h4><ul>\n<li>首先一樣清空 <code>cities</code> 陣列，以確保不會重複傳值。</li>\n<li>因資料結構較冗長，把取得的資料存在一個 <code>locations</code> 的變數中。</li>\n<li>另外給予一個 <code>location2</code> 的空陣列，要來存篩選後的結果。</li>\n<li>判斷如果 <code>range</code> 不是 <code>-1</code> 的時候要做哪些事情。<ol>\n<li>用 <code>assignArea</code> 變數存 <code>area</code> 的陣列要對應 <code>range</code> 所選到的值。</li>\n<li><code>location2</code> 存 <code>locations</code> 資料篩選後的結果。</li>\n<li>讓 <code>assignArea</code> 的值比對資料中的地區名稱，因為資料陣列是從 0 開始，所以設定 <code>&gt;=0</code> 就會確保一定找得到。</li>\n<li>否則就是全部都顯示。</li>\n</ol>\n</li>\n<li>在把篩選後的結果（<code>location2</code>）所迴圈並依序把地區名稱存回 <code>cities</code> 的空陣列中。</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">getData() &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.dayList = []; <span class=\"comment\">//存放日期的陣列</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">7</span>; i++) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">let</span> day = moment().add(i, <span class=\"string\">\"days\"</span>);</span><br><span class=\"line\">          <span class=\"keyword\">let</span> week = <span class=\"built_in\">Number</span>(day.format(<span class=\"string\">\"E\"</span>));</span><br><span class=\"line\">          <span class=\"keyword\">this</span>.dayList.push(&#123;</span><br><span class=\"line\">            date: day.format(<span class=\"string\">\"MM/DD\"</span>),</span><br><span class=\"line\">            d: day.format(<span class=\"string\">\"YYYY-MM-DD\"</span>), <span class=\"comment\">//驗證用</span></span><br><span class=\"line\">            week: <span class=\"keyword\">this</span>.toWeek(<span class=\"built_in\">Number</span>(week)),</span><br><span class=\"line\">            holiday: week === <span class=\"number\">6</span> || week === <span class=\"number\">7</span>,</span><br><span class=\"line\">          &#125;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//取城市</span></span><br><span class=\"line\">        <span class=\"keyword\">this</span>.cities = [];</span><br><span class=\"line\">        <span class=\"keyword\">let</span> locations = <span class=\"keyword\">this</span>.weatherItems[<span class=\"number\">0</span>].location;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> location2 = [];</span><br><span class=\"line\">        <span class=\"comment\">//縣市標籤</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.range != <span class=\"number\">-1</span>) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">let</span> assignArea = <span class=\"keyword\">this</span>.area[<span class=\"keyword\">this</span>.range];</span><br><span class=\"line\">          location2 = locations.filter(<span class=\"function\">(<span class=\"params\">element</span>) =&gt;</span></span><br><span class=\"line\">            assignArea.indexOf(element.locationName) &gt;= <span class=\"number\">0</span></span><br><span class=\"line\">          );</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">          location2 = locations;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        location2.forEach(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> &#123;</span><br><span class=\"line\">          <span class=\"keyword\">this</span>.cities.push(&#123;</span><br><span class=\"line\">            locationName: item.locationName</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">      &#125;,</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"完整程式碼\"><a href=\"#完整程式碼\" class=\"headerlink\" title=\"完整程式碼\"></a>完整程式碼</h2><p><strong>HTML</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"container-fluid\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- nav --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">section</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">nav</span> <span class=\"attr\">class</span>=<span class=\"string\">\"nav nav-pills nav-fill\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">a</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">class</span>=<span class=\"string\">\"nav-item nav-link\"</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">:class</span>=<span class=\"string\">\"&#123;active:range ==-1&#125;\"</span></span></span><br><span class=\"line\"><span class=\"tag\">          @<span class=\"attr\">click.prevent</span>=<span class=\"string\">\"getArea(-1)\"</span></span></span><br><span class=\"line\"><span class=\"tag\">          &gt;</span>全部<span class=\"tag\">&lt;/<span class=\"name\">a</span></span></span><br><span class=\"line\"><span class=\"tag\">        &gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">a</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">class</span>=<span class=\"string\">\"nav-item nav-link\"</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">:class</span>=<span class=\"string\">\"&#123;active:range == 0&#125;\"</span></span></span><br><span class=\"line\"><span class=\"tag\">          @<span class=\"attr\">click.prevent</span>=<span class=\"string\">\"getArea(0)\"</span></span></span><br><span class=\"line\"><span class=\"tag\">          &gt;</span>北部<span class=\"tag\">&lt;/<span class=\"name\">a</span></span></span><br><span class=\"line\"><span class=\"tag\">        &gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">a</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">class</span>=<span class=\"string\">\"nav-item nav-link\"</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">:class</span>=<span class=\"string\">\"&#123;active:range == 1&#125;\"</span></span></span><br><span class=\"line\"><span class=\"tag\">          @<span class=\"attr\">click.prevent</span>=<span class=\"string\">\"getArea(1)\"</span></span></span><br><span class=\"line\"><span class=\"tag\">          &gt;</span>中部<span class=\"tag\">&lt;/<span class=\"name\">a</span></span></span><br><span class=\"line\"><span class=\"tag\">        &gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">a</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">class</span>=<span class=\"string\">\"nav-item nav-link\"</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">:class</span>=<span class=\"string\">\"&#123;active:range == 2&#125;\"</span></span></span><br><span class=\"line\"><span class=\"tag\">          @<span class=\"attr\">click.prevent</span>=<span class=\"string\">\"getArea(2)\"</span></span></span><br><span class=\"line\"><span class=\"tag\">          &gt;</span>南部<span class=\"tag\">&lt;/<span class=\"name\">a</span></span></span><br><span class=\"line\"><span class=\"tag\">        &gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">a</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">class</span>=<span class=\"string\">\"nav-item nav-link\"</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">:class</span>=<span class=\"string\">\"&#123;active:range == 3&#125;\"</span></span></span><br><span class=\"line\"><span class=\"tag\">          @<span class=\"attr\">click.prevent</span>=<span class=\"string\">\"getArea(3)\"</span></span></span><br><span class=\"line\"><span class=\"tag\">          &gt;</span>東部<span class=\"tag\">&lt;/<span class=\"name\">a</span></span></span><br><span class=\"line\"><span class=\"tag\">        &gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">a</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">class</span>=<span class=\"string\">\"nav-item nav-link\"</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">:class</span>=<span class=\"string\">\"&#123;active:range == 4&#125;\"</span></span></span><br><span class=\"line\"><span class=\"tag\">          @<span class=\"attr\">click.prevent</span>=<span class=\"string\">\"getArea(4)\"</span></span></span><br><span class=\"line\"><span class=\"tag\">          &gt;</span>外島<span class=\"tag\">&lt;/<span class=\"name\">a</span></span></span><br><span class=\"line\"><span class=\"tag\">        &gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">nav</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">section</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- table --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">section</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"table-responsive\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">class</span>=<span class=\"string\">\"table table-hover table-bordered\"</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">thead</span> <span class=\"attr\">class</span>=<span class=\"string\">\"table-info sticky-top\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">th</span> <span class=\"attr\">scope</span>=<span class=\"string\">\"col\"</span>&gt;</span>縣市<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">th</span> <span class=\"attr\">scope</span>=<span class=\"string\">\"col\"</span>&gt;</span>時間<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">th</span></span></span><br><span class=\"line\"><span class=\"tag\">                <span class=\"attr\">scope</span>=<span class=\"string\">\"col\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                <span class=\"attr\">v-for</span>=<span class=\"string\">\"(item, index) in dayList\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                <span class=\"attr\">:key</span>=<span class=\"string\">\"index\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                <span class=\"attr\">:class</span>=<span class=\"string\">\"&#123; holiday: item.holiday &#125;\"</span></span></span><br><span class=\"line\"><span class=\"tag\">              &gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>&#123;&#123; item.date &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>&#123;&#123; item.week &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">thead</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">tbody</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"(item,index) in cities\"</span> <span class=\"attr\">:key</span>=<span class=\"string\">\"index\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>&#123;&#123; item.locationName &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">section</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>Vue</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  el: <span class=\"string\">\"#app\"</span>,</span><br><span class=\"line\">  data: &#123;</span><br><span class=\"line\">    weatherItems: [],</span><br><span class=\"line\">    dayList: [],</span><br><span class=\"line\">    cities: [],</span><br><span class=\"line\">    area: [</span><br><span class=\"line\">      [<span class=\"string\">\"臺北市\"</span>, <span class=\"string\">\"新北市\"</span>, <span class=\"string\">\"桃園市\"</span>, <span class=\"string\">\"基隆市\"</span>],</span><br><span class=\"line\">      [<span class=\"string\">\"臺中市\"</span>, <span class=\"string\">\"新竹縣\"</span>, <span class=\"string\">\"新竹市\"</span>, <span class=\"string\">\"苗栗縣\"</span>, <span class=\"string\">\"彰化縣\"</span>, <span class=\"string\">\"南投縣\"</span>],</span><br><span class=\"line\">      [<span class=\"string\">\"臺南市\"</span>, <span class=\"string\">\"高雄市\"</span>, <span class=\"string\">\"雲林縣\"</span>, <span class=\"string\">\"嘉義縣\"</span>, <span class=\"string\">\"嘉義市\"</span>, <span class=\"string\">\"屏東縣\"</span>],</span><br><span class=\"line\">      [<span class=\"string\">\"宜蘭縣\"</span>, <span class=\"string\">\"花蓮縣\"</span>, <span class=\"string\">\"臺東縣\"</span>],</span><br><span class=\"line\">      [<span class=\"string\">\"金門縣\"</span>, <span class=\"string\">\"澎湖縣\"</span>, <span class=\"string\">\"連江縣\"</span>],</span><br><span class=\"line\">    ],</span><br><span class=\"line\">    range: <span class=\"number\">-1</span>,</span><br><span class=\"line\">    active: <span class=\"literal\">false</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  created() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.getApi();</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\">    getApi() &#123;</span><br><span class=\"line\">      axios.get(weather).then(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.weatherItems = res.data.records.locations;</span><br><span class=\"line\">        <span class=\"comment\">// console.log(this.weatherItems);</span></span><br><span class=\"line\">        <span class=\"keyword\">this</span>.getData();</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    getArea(index) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.range = index;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.getData();</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    getData() &#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.dayList = []; <span class=\"comment\">//存放日期的陣列</span></span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">7</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> day = moment().add(i, <span class=\"string\">\"days\"</span>);</span><br><span class=\"line\">        <span class=\"keyword\">let</span> week = <span class=\"built_in\">Number</span>(day.format(<span class=\"string\">\"E\"</span>));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.dayList.push(&#123;</span><br><span class=\"line\">          date: day.format(<span class=\"string\">\"MM/DD\"</span>),</span><br><span class=\"line\">          d: day.format(<span class=\"string\">\"YYYY-MM-DD\"</span>), <span class=\"comment\">//驗證用</span></span><br><span class=\"line\">          week: <span class=\"keyword\">this</span>.toWeek(<span class=\"built_in\">Number</span>(week)),</span><br><span class=\"line\">          holiday: week === <span class=\"number\">6</span> || week === <span class=\"number\">7</span>,</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"comment\">//取城市</span></span><br><span class=\"line\">      <span class=\"keyword\">this</span>.cities = [];</span><br><span class=\"line\">      <span class=\"keyword\">let</span> locations = <span class=\"keyword\">this</span>.weatherItems[<span class=\"number\">0</span>].location;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> location2 = [];</span><br><span class=\"line\">      <span class=\"comment\">//縣市標籤</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.range != <span class=\"number\">-1</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> assignArea = <span class=\"keyword\">this</span>.area[<span class=\"keyword\">this</span>.range];</span><br><span class=\"line\">        location2 = locations.filter(</span><br><span class=\"line\">          (element) =&gt; assignArea.indexOf(element.locationName) &gt;= <span class=\"number\">0</span></span><br><span class=\"line\">        );</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        location2 = locations;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      location2.forEach(<span class=\"function\">(<span class=\"params\">item</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.cities.push(&#123;</span><br><span class=\"line\">          locationName: item.locationName,</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    toWeek(week) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">switch</span> (week) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">          <span class=\"keyword\">return</span> <span class=\"string\">\"星期一\"</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\">          <span class=\"keyword\">return</span> <span class=\"string\">\"星期二\"</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">3</span>:</span><br><span class=\"line\">          <span class=\"keyword\">return</span> <span class=\"string\">\"星期三\"</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">4</span>:</span><br><span class=\"line\">          <span class=\"keyword\">return</span> <span class=\"string\">\"星期四\"</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">5</span>:</span><br><span class=\"line\">          <span class=\"keyword\">return</span> <span class=\"string\">\"星期五\"</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">6</span>:</span><br><span class=\"line\">          <span class=\"keyword\">return</span> <span class=\"string\">\"星期六\"</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">7</span>:</span><br><span class=\"line\">          <span class=\"keyword\">return</span> <span class=\"string\">\"星期日\"</span>;</span><br><span class=\"line\">        <span class=\"keyword\">default</span>:</span><br><span class=\"line\">          <span class=\"keyword\">return</span> <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Demo\"><a href=\"#Demo\" class=\"headerlink\" title=\"Demo\"></a>Demo</h2><iframe height=\"600\" style=\"width: 100%;\" src=\"https://codepen.io/hnzxewqw/embed/vYygmyo?height=265&theme-id=light&default-tab=result\" >\n</iframe>\n","categories":["vue.js"],"tags":["vue.js"]},{"title":"Vue 筆記 - 台灣空氣品質列表實作","url":"/vue-js/20210212/4141054544/","content":"<p><img src=\"https://images.unsplash.com/photo-1584634731339-252c581abfc5?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1354&q=80\" alt=\"mask\"></p>\n<p>最近空氣品質有點糟糕，有鼻子過敏的我有點受不了，想說做個簡易版讓自己要去該地區可以查一下該地空氣品質如何的小功能。</p>\n<h2 id=\"確認需求\"><a href=\"#確認需求\" class=\"headerlink\" title=\"確認需求\"></a>確認需求</h2><ol>\n<li>我需要一個 input 當作搜尋列表。</li>\n<li>要呈現全台縣市、行政區、空氣品質與日期，等四個資訊。</li>\n<li>需要有 RWD，電腦版為四排，平板有兩排，手機為單列。</li>\n</ol>\n<h2 id=\"架構先寫好\"><a href=\"#架構先寫好\" class=\"headerlink\" title=\"架構先寫好\"></a>架構先寫好</h2><p>照慣例就先把基本的版型切好，然後放入假資料或是預計要呈現的欄位。</p>\n<p><strong>HTML</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"header\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"container\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"input-group\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>台灣空氣品質列表<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">type</span>=<span class=\"string\">\"search\"</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">v-model.trim</span>=<span class=\"string\">\"input\"</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">placeholder</span>=<span class=\"string\">\"搜尋要找的縣市，例：新北市\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        /&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"container\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"list\"</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"(item, index) in typeMenu\"</span> <span class=\"attr\">:key</span>=<span class=\"string\">\"index\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"county\"</span>&gt;</span>&#123;&#123;item.County&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"siteName\"</span>&gt;</span>行政區：&#123;&#123;item.SiteName&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"airStatus\"</span>&gt;</span>空氣品質： &#123;&#123;item.Status&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"publishTime\"</span>&gt;</span>&#123;&#123;item.PublishTime&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>SCSS</strong></p>\n<p>我有先做一個 RWD 的 SCSS 元件，所以就直接 import 進來，就不用一直寫 media query 這冗長的語法。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@mixin</span> pc &#123;</span><br><span class=\"line\">  <span class=\"keyword\">@media</span> (<span class=\"attribute\">max-width:</span> <span class=\"number\">1024px</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">@content</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@mixin</span> pad &#123;</span><br><span class=\"line\">  <span class=\"keyword\">@media</span> (<span class=\"attribute\">max-width:</span> <span class=\"number\">768px</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">@content</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@mixin</span> phone &#123;</span><br><span class=\"line\">  <span class=\"keyword\">@media</span> (<span class=\"attribute\">max-width:</span> <span class=\"number\">414px</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">@content</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>SCSS 樣式</strong></p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@import</span> <span class=\"string\">\"_media\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">* &#123;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">list-style</span>: none;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">body</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">box-sizing</span>: border-box;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#eee</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">1024px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> auto;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">  <span class=\"attribute\">justify-content</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">flex-wrap</span>: wrap;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">20px</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">  @include pad &#123;</span><br><span class=\"line\">    <span class=\"selector-tag\">width</span>: 100%;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">@include</span> phone &#123;</span><br><span class=\"line\">    <span class=\"selector-tag\">width</span>: 100%;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.header</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background-image</span>: <span class=\"built_in\">url</span>(<span class=\"string\">\"https://images.unsplash.com/photo-1493364391862-bb90969a4cc1?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&amp;ixlib=rb-1.2.1&amp;auto=format&amp;fit=crop&amp;w=1350&amp;q=80\"</span>);</span><br><span class=\"line\">  <span class=\"attribute\">background-position</span>: center center;</span><br><span class=\"line\">  <span class=\"attribute\">background-size</span>: cover;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@include</span> pad &#123;</span><br><span class=\"line\">  <span class=\"selector-tag\">width</span>: 100%;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@include</span> phone &#123;</span><br><span class=\"line\">  <span class=\"selector-tag\">width</span>: 100%;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.input-group</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">3%</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">  <span class=\"attribute\">justify-content</span>: space-around;</span><br><span class=\"line\">  <span class=\"attribute\">align-items</span>: center;</span><br><span class=\"line\">  @include pad &#123;</span><br><span class=\"line\">    <span class=\"selector-tag\">display</span>: <span class=\"selector-tag\">block</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">text-align</span>: <span class=\"selector-tag\">center</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"selector-tag\">h1</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"number\">#0d47a1</span>;</span><br><span class=\"line\">    <span class=\"attribute\">margin-right</span>: <span class=\"number\">1%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">text-shadow</span>: <span class=\"number\">#333</span>;</span><br><span class=\"line\">    @include pad &#123;</span><br><span class=\"line\">      <span class=\"selector-tag\">margin-right</span>: 0;</span><br><span class=\"line\">      <span class=\"selector-tag\">margin-bottom</span>: 3%;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  &gt; <span class=\"selector-tag\">input</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">70%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">padding</span>: <span class=\"number\">10px</span> <span class=\"number\">15px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid <span class=\"number\">#fff</span>;</span><br><span class=\"line\">    <span class=\"attribute\">font-size</span>: <span class=\"number\">18px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">outline</span>: none;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.list</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">21%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">1%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">1%</span> <span class=\"number\">1%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">box-shadow</span>: <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">5px</span> <span class=\"number\">2px</span> <span class=\"number\">#ddd</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#ffffff</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">6px</span>;</span><br><span class=\"line\">  @include pad &#123;</span><br><span class=\"line\">    <span class=\"selector-tag\">width</span>: 43%;</span><br><span class=\"line\">    <span class=\"selector-tag\">text-align</span>: <span class=\"selector-tag\">center</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">@include</span> phone &#123;</span><br><span class=\"line\">    <span class=\"selector-tag\">width</span>: 98%;</span><br><span class=\"line\">    <span class=\"selector-tag\">text-align</span>: <span class=\"selector-tag\">center</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  &gt; <span class=\"selector-tag\">li</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">padding-bottom</span>: <span class=\"number\">5%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">cursor</span>: pointer;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  &amp;<span class=\"selector-pseudo\">:hover</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: <span class=\"number\">#e0f7fa</span>;</span><br><span class=\"line\">    <span class=\"attribute\">transition</span>: all <span class=\"number\">1s</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"selector-class\">.county</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">font-size</span>: <span class=\"number\">24px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"number\">#1e88e5</span>;</span><br><span class=\"line\">    <span class=\"attribute\">font-weight</span>: bold;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"selector-class\">.siteName</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">font-size</span>: <span class=\"number\">18px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">font-weight</span>: bold;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.footer</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#1e88e5</span>;</span><br><span class=\"line\">  <span class=\"attribute\">line-height</span>: <span class=\"number\">70px</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  .text,</span><br><span class=\"line\">  <span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"number\">#fff</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Vue-js\"><a href=\"#Vue-js\" class=\"headerlink\" title=\"Vue.js\"></a>Vue.js</h2><p>使用的 api 是<a href=\"https://data.epa.gov.tw/api/v1/aqx_p_432?limit=1000&api_key=9be7b239-557b-4c10-9775-78cadfc555e9&format=json%22\" target=\"_blank\" rel=\"noopener\">這個</a>。</p>\n<p>說明：</p>\n<ol>\n<li>先宣告一個空陣列 cantacts 來裝 api 資料。</li>\n<li>預設讓 input 為空值，如果要先預設值也可以先寫在裡面。</li>\n<li>在 DOM 生成前載入資料，所以使用 <code>create()</code> 方法。</li>\n<li>自訂一個 typeMenu 函式，要實作篩選功能。</li>\n<li>我要篩選出跟輸入框一樣的關鍵字，判斷如果 input 有跟資料一樣的關鍵字，就回傳陣列資料中是跟輸入框當中相同的文字。</li>\n<li>如果輸入框沒有文字，就顯示所有資料。<blockquote>\n<p><code>indexOf() !==-1</code> 是指要找得到文字，找不到就是 -1。</p>\n</blockquote>\n</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  el: <span class=\"string\">\"#app\"</span>,</span><br><span class=\"line\">  data: &#123;</span><br><span class=\"line\">    contacts: [],</span><br><span class=\"line\">    input: <span class=\"string\">\"\"</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  created() &#123;</span><br><span class=\"line\">    axios.get(aqi).then(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.contacts = res.data.records;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  computed: &#123;</span><br><span class=\"line\">     typeMenu() &#123;</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.input) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.contacts.filter(<span class=\"function\">(<span class=\"params\">item</span>) =&gt;</span> &#123;</span><br><span class=\"line\">              <span class=\"keyword\">return</span> item.County.toLowerCase().indexOf(<span class=\"keyword\">this</span>.input.toLowerCase()) !== <span class=\"number\">-1</span>;</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">          &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.contacts;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>寫到這邊有確認功能可以實作了，但程式碼有點不好閱讀，所以就來優化一下，把<strong>城市名稱</strong>跟<strong>關鍵字</strong>這兩段各用一個變數存取。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> keyword = <span class=\"keyword\">this</span>.input.toLowerCase();</span><br><span class=\"line\"><span class=\"keyword\">let</span> countyName = item.County.toLowerCase();</span><br></pre></td></tr></table></figure>\n\n<p>所以這一段優化後就會變成，</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">typeMenu() &#123;</span><br><span class=\"line\">       <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.input) &#123;</span><br><span class=\"line\">         <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.contacts.filter(<span class=\"function\">(<span class=\"params\">item</span>) =&gt;</span> &#123;</span><br><span class=\"line\">           <span class=\"keyword\">let</span> keyword = <span class=\"keyword\">this</span>.input.toLowerCase();</span><br><span class=\"line\">           <span class=\"keyword\">let</span> countyName = item.County.toLowerCase();</span><br><span class=\"line\">           <span class=\"keyword\">return</span> countyName.indexOf(keyword) !== <span class=\"number\">-1</span>;</span><br><span class=\"line\">         &#125;);</span><br><span class=\"line\">       &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">         <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.contacts;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">     &#125;,</span><br></pre></td></tr></table></figure>\n\n<p>Demo: <a href=\"https://hsuchihting.github.io/air_quality/index.html\">https://hsuchihting.github.io/air_quality/index.html</a></p>\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><p><a href=\"https://ithelp.ithome.com.tw/articles/10202996\" target=\"_blank\" rel=\"noopener\">開胃餐點 - 清爽表單處理佐雙向資料</a></p>\n","categories":["vue.js"],"tags":["vue.js"]},{"title":"Vue 筆記 - 表格中放入七天日期實作","url":"/vue-js/20210211/841164669/","content":"<p><img src=\"https://images.unsplash.com/photo-1435527173128-983b87201f4d?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1347&q=80\" alt=\"calender\"></p>\n<blockquote>\n<p>這次筆記是要記錄如何在表格中顯示日期，並讓第一格的日期顯示當日與星期。</p>\n</blockquote>\n<h2 id=\"開發環境與使用技術\"><a href=\"#開發環境與使用技術\" class=\"headerlink\" title=\"開發環境與使用技術\"></a>開發環境與使用技術</h2><ul>\n<li>Window10</li>\n<li>Vue.js</li>\n<li>Bootstap4</li>\n<li><a href=\"https://momentjs.com/\" target=\"_blank\" rel=\"noopener\">moment.js 2.29.1</a></li>\n</ul>\n<h2 id=\"切好靜態版面\"><a href=\"#切好靜態版面\" class=\"headerlink\" title=\"切好靜態版面\"></a>切好靜態版面</h2><p>引入要使用的相關套件後，先建立一個 table 並使用 bootstrap4 <a href=\"https://bootstrap.hexschool.com/docs/4.2/content/tables/\" target=\"_blank\" rel=\"noopener\">表格</a>以便符合 RWD 的樣式，並切好靜態版面。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"table-responsive\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">class</span>=<span class=\"string\">\"table table-hover table-bordered\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">thead</span> <span class=\"attr\">class</span>=<span class=\"string\">\"table-info sticky-top\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">th</span> <span class=\"attr\">scope</span>=<span class=\"string\">\"col\"</span>&gt;</span>日期<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">th</span> <span class=\"attr\">scope</span>=<span class=\"string\">\"col\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>2/11<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>星期四<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">th</span> <span class=\"attr\">scope</span>=<span class=\"string\">\"col\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>2/12<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>星期五<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">th</span> <span class=\"attr\">scope</span>=<span class=\"string\">\"col\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>2/13<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>星期六<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">th</span> <span class=\"attr\">scope</span>=<span class=\"string\">\"col\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>2/14<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>星期日<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">th</span> <span class=\"attr\">scope</span>=<span class=\"string\">\"col\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>2/15<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>星期一<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">th</span> <span class=\"attr\">scope</span>=<span class=\"string\">\"col\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>2/16<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>星期二<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">th</span> <span class=\"attr\">scope</span>=<span class=\"string\">\"col\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>2/17<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>星期三<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">thead</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>會得到的畫面如下，</p>\n<p><img src=\"https://i.imgur.com/ric5CNZ.png\" alt=\"dateNow\"></p>\n<h2 id=\"引入-Vue-js-並改寫-HTML\"><a href=\"#引入-Vue-js-並改寫-HTML\" class=\"headerlink\" title=\"引入 Vue.js 並改寫 HTML\"></a>引入 Vue.js 並改寫 HTML</h2><p>依照目前畫面我會需要以下條件：</p>\n<ol>\n<li>需要顯示日期</li>\n<li>需要顯示星期幾</li>\n<li>要顯示七天內</li>\n<li>判斷如果是假日的話，背景提示色為紅色</li>\n</ol>\n<p>分析後得到簡單的思維是：</p>\n<ul>\n<li>因為有範圍有多筆資料，所以可以使用陣列來存資料。</li>\n<li>因為有重複顯示的資料，所以要使用 for 迴圈。</li>\n<li>有判斷所以會用到 if。</li>\n</ul>\n<p>所以來改寫 table 並且把對應要放的資料建立在 vue 的實體內。</p>\n<p><strong>HTML</strong></p>\n<p>透過 v-for 將 dayList 的對應替換原本的日期與星期</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">thead</span> <span class=\"attr\">class</span>=<span class=\"string\">\"table-info sticky-top\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">th</span> <span class=\"attr\">scope</span>=<span class=\"string\">\"col\"</span>&gt;</span>時間<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">th</span> <span class=\"attr\">scope</span>=<span class=\"string\">\"col\"</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"(item, index) in dayList\"</span> <span class=\"attr\">:key</span>=<span class=\"string\">\"index\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>&#123;&#123; item.date &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span> //日期</span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>&#123;&#123; item.week &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span> // 星期</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">thead</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>Vue</strong><br>說明：</p>\n<ol>\n<li>在資料中建立一個 dayList 陣列，要用迴圈取得。</li>\n<li>在 <code>methods</code> 先把 dayList 陣列清空。</li>\n<li>因為一週為七天，所以可以確認範圍要小於七天。</li>\n<li>使用 <code>moment.js</code> 取得當下<a href=\"https://momentjs.com/docs/#/get-set/day/\" target=\"_blank\" rel=\"noopener\">日期</a>與<a href=\"https://momentjs.com/docs/#/displaying/\" target=\"_blank\" rel=\"noopener\">星期</a>。</li>\n<li>使用 push 方法，把自訂的日期物件新增到 dayList 陣列中。</li>\n<li><code>d:</code> 因為 API 制定日期會是 <code>YYYY-MM-DD</code> 的形式居多，所以有自訂一個驗證用的屬性來使用，但不呈現於畫面上。</li>\n<li><code>week:</code>為了要計算哪一天是假日，所以另外使用一個 <code>toWeek</code> 的函式做判斷，只要對應到為 6 與 7 的值，就是假日，因為週間天數的名稱並不會改變，所以就直接打入中文。</li>\n<li>在 CSS 也要新增一個 <code>.holiday</code> 的 class 做顏色的樣式變化。</li>\n<li>這邊設定為在載入畫面前就要抓到日期，所以使用 <code>created</code> 來執行 <code>getDate</code> 方法。</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  el: <span class=\"string\">\"#app\"</span>,</span><br><span class=\"line\">  data: &#123;</span><br><span class=\"line\">    dayList: [],</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  created() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.getDate();</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\">    getDate() &#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.dayList = []; <span class=\"comment\">//存放日期的陣列</span></span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">7</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> day = moment().add(i, <span class=\"string\">\"days\"</span>);</span><br><span class=\"line\">        <span class=\"keyword\">let</span> week = <span class=\"built_in\">Number</span>(day.format(<span class=\"string\">\"E\"</span>));</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.dayList.push(&#123;</span><br><span class=\"line\">          date: day.format(<span class=\"string\">\"MM/DD\"</span>),</span><br><span class=\"line\">          d: day.format(<span class=\"string\">\"YYYY-MM-DD\"</span>), <span class=\"comment\">//驗證用</span></span><br><span class=\"line\">          week: <span class=\"keyword\">this</span>.toWeek(<span class=\"built_in\">Number</span>(week)),</span><br><span class=\"line\">          holiday: week === <span class=\"number\">6</span> || week === <span class=\"number\">7</span>,</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    toWeek(week) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">switch</span> (week) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">          <span class=\"keyword\">return</span> <span class=\"string\">\"星期一\"</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\">          <span class=\"keyword\">return</span> <span class=\"string\">\"星期二\"</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">3</span>:</span><br><span class=\"line\">          <span class=\"keyword\">return</span> <span class=\"string\">\"星期三\"</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">4</span>:</span><br><span class=\"line\">          <span class=\"keyword\">return</span> <span class=\"string\">\"星期四\"</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">5</span>:</span><br><span class=\"line\">          <span class=\"keyword\">return</span> <span class=\"string\">\"星期五\"</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">6</span>:</span><br><span class=\"line\">          <span class=\"keyword\">return</span> <span class=\"string\">\"星期六\"</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">7</span>:</span><br><span class=\"line\">          <span class=\"keyword\">return</span> <span class=\"string\">\"星期日\"</span>;</span><br><span class=\"line\">        <span class=\"keyword\">default</span>:</span><br><span class=\"line\">          <span class=\"keyword\">return</span> <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Demo\"><a href=\"#Demo\" class=\"headerlink\" title=\"Demo\"></a>Demo</h2><iframe height=\"265\" style=\"width: 100%;\"  src=\"https://codepen.io/hnzxewqw/embed/YzppPxd?height=265&theme-id=light&default-tab=result\" >\n</iframe>\n\n<h2 id=\"相關資源\"><a href=\"#相關資源\" class=\"headerlink\" title=\"相關資源\"></a>相關資源</h2><ul>\n<li>想了解 Bootstrap5 可以看<a href=\"https://bootstrap5.hexschool.com/?fbclid=IwAR3iR5oHNM_aZNKfYfNg9D4BO3Ieeslr-p13pLlf8cJKw7OI14s46XE5Vrw\" target=\"_blank\" rel=\"noopener\">這裡</a>有六角學院翻譯的中文版</li>\n</ul>\n","categories":["vue.js"],"tags":["vue.js"]},{"title":"JS 筆記 - 信用卡驗證","url":"/javascript/20210202/711211859/","content":"<p><img src=\"https://images.unsplash.com/photo-1589758438368-0ad531db3366?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1489&q=80\" alt=\"credit card\"></p>\n<p>在一般消費平台會需要刷卡，並要填入信用卡單，再填寫第一欄的時候會發現卡片會自己辨識是屬於哪類的信用卡，有 Master Card，VISA，JCB，美國運通卡號只有 15 碼，不再這次驗證範圍。這次剛好在課程中學到信用卡驗證器，就來依照條件實作看看吧！</p>\n<h2 id=\"信用卡號產生器\"><a href=\"#信用卡號產生器\" class=\"headerlink\" title=\"信用卡號產生器\"></a>信用卡號產生器</h2><p>可自行輸入信用卡 16 碼，或是用<a href=\"https://saijogeorge.com/dummy-credit-card-generator/\" target=\"_blank\" rel=\"noopener\">產生器</a>。</p>\n<h2 id=\"信用卡驗證流程\"><a href=\"#信用卡驗證流程\" class=\"headerlink\" title=\"信用卡驗證流程\"></a>信用卡驗證流程</h2><ol>\n<li>從左邊算起來的第一個數字為發卡行，Master Card 是 5 開頭，Visa 是 4，JCB 則是 3。</li>\n<li>前 15 位數經過加權後加總，會得出一個數字，先把這數字除以 10 取餘數，如果結果是 0，那檢查碼就是 0，否則就是用 10 減去之後的結果。</li>\n<li>權重的部分你可以這樣記：<ul>\n<li>左邊數起奇數位是 <code>*2</code>。</li>\n<li>偶數位是 <code>*1</code>。</li>\n<li>若是在計算的過程中某一位數加權後的結果比 10 大，那請減去 9。<blockquote>\n<p>舉例來說，5412-3456-7890-1232 這個卡號的第一位是 5，代表這是 MasterCard 的卡。</p>\n</blockquote>\n</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"奇數位加總\"><a href=\"#奇數位加總\" class=\"headerlink\" title=\"奇數位加總\"></a>奇數位加總</h3><ul>\n<li>奇數位加總為：<code>5*2</code> + <code>1*2</code> + <code>3*2</code> + <code>5*2</code> + <code>7*2</code> + <code>9*2</code> + <code>1*2</code> + <code>3*2</code>，原本應該是：10 + 2 + 6 + 10 + 14 + 18 + 2 + 6。</li>\n<li>前面有說過「如果比 10 大，請減去 9」，所以就是 1(10-9) + 2 + 6 + 1(10-9) + 5(14-9) + 9(18-9) + 2 + 6 = 32。</li>\n</ul>\n<h3 id=\"偶數位加總\"><a href=\"#偶數位加總\" class=\"headerlink\" title=\"偶數位加總\"></a>偶數位加總</h3><ul>\n<li>偶數位加總為：4 + 2 + 4 + 6 + 8 + 0 + 2 = 26，乘以 1 之後還是 26。<blockquote>\n<p>第 16 碼檢查碼，不用算進偶數列。</p>\n</blockquote>\n</li>\n</ul>\n<h3 id=\"卡片是否可用\"><a href=\"#卡片是否可用\" class=\"headerlink\" title=\"卡片是否可用\"></a>卡片是否可用</h3><p>把 32 跟 26 相加，得到 58，<code>58 % 10 = 8</code>，因此檢查碼就是 <code>10-8 = 2</code>，而卡號的第 16 碼也是 2，因此這個卡號是沒有問題的。</p>\n<h2 id=\"任務需求\"><a href=\"#任務需求\" class=\"headerlink\" title=\"任務需求\"></a>任務需求</h2><h3 id=\"輸入信用卡號\"><a href=\"#輸入信用卡號\" class=\"headerlink\" title=\"輸入信用卡號\"></a>輸入信用卡號</h3><p>輸入為一個信用卡卡號，皆為 16 碼，每 4 碼以 <code>-</code> 做為分隔。<br>EX. 5412-3456-7890-1232</p>\n<h3 id=\"輸出\"><a href=\"#輸出\" class=\"headerlink\" title=\"輸出\"></a>輸出</h3><p>若是信用卡不合法，請輸出 INVALID，合法則輸出信用卡的發卡行，只會有 VISA 與 MASTER CARD 兩種結果。</p>\n<h2 id=\"實作信用卡驗證架構\"><a href=\"#實作信用卡驗證架構\" class=\"headerlink\" title=\"實作信用卡驗證架構\"></a>實作信用卡驗證架構</h2><p>所使用的卡號為 <code>5412-3456-7890-1232</code><br>首先，觀察到信用卡號中間的 dash 符號，在計算時是不需要出現的。<br>所以可以先給一個變數存卡片號碼，並使用 replace 方法把 dash 的內容拿掉，這樣之後才能加總。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> cardNum = <span class=\"string\">\"5412-3456-7890-1232\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> newCardNum = cardNum.replace(<span class=\"string\">\"5412-3456-7890-1232\"</span>, <span class=\"string\">\"5412345678901232\"</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(newCardNum); <span class=\"comment\">//5412345678901232</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"奇偶數加總、取出奇偶數\"><a href=\"#奇偶數加總、取出奇偶數\" class=\"headerlink\" title=\"奇偶數加總、取出奇偶數\"></a>奇偶數加總、取出奇偶數</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//奇偶數相加</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> sum = evenNum(newCardNum) + oddNum(newCardNum);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//偶數位加總</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">evenNum</span>(<span class=\"params\">newCardNum</span>) </span>&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//奇數位加總</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">oddNum</span>(<span class=\"params\">newCardNum</span>) </span>&#123;&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"加權後的數字\"><a href=\"#加權後的數字\" class=\"headerlink\" title=\"加權後的數字\"></a>加權後的數字</h3><p>題目有提到，前 15 位數經過加權後加總，會得出一個數字，先把這數字除以 10 取餘數，如果結果是 0，那檢查碼就是 0，否則就是用 10 減去之後的結果，這一段文字可以先改成步驟來寫。</p>\n<ol>\n<li><code>resultNum = sum % 10;</code></li>\n<li>如果 <code>resultNum = 0;</code></li>\n<li><code>檢查碼 = resultNum;</code></li>\n<li>否則就是 <code>resultNum = 10-resultNum;</code></li>\n</ol>\n<p>可是步驟這樣寫有點難變成虛擬碼，可以換個角度來想，</p>\n<ol>\n<li><code>resultNum = sum % 10;</code></li>\n<li>如果 <code>resultNum !=0;</code></li>\n<li>是 <code>resultNum = 10-resultNum;</code></li>\n</ol>\n<p>這樣就可以試著改成程式碼，</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> resultNum = sum % <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (resultNum != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">  resultNum = <span class=\"number\">10</span> - resultNum;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"判斷驗證是否成功架構\"><a href=\"#判斷驗證是否成功架構\" class=\"headerlink\" title=\"判斷驗證是否成功架構\"></a>判斷驗證是否成功架構</h2><ol>\n<li>第 16 碼是檢查碼，如果與檢查碼不符，就是 INVALID。</li>\n<li>如果第一碼是 5 就是 MASTER CARD，不然就是 VISA，為什麼沒有 JCB，因為這次任務只需要這兩種卡片。</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (resultNum !== newCardNum[<span class=\"number\">15</span>] * <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">\"INVALID\"</span>);</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (card[<span class=\"number\">0</span>] === <span class=\"string\">\"5\"</span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"MASTER CARD\"</span>);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"VISA\"</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>目前 console 出來的結果會是 INVALID，因為還沒奇偶數的運算。</p>\n<p>截至目前為止的架構已經寫好，不明確的地方都用<strong>函式填空法</strong>完成，完整程式碼如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> cardNum = <span class=\"string\">\"5412-3456-7890-1232\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> newCardNum = cardNum.replace(<span class=\"string\">\"5412-3456-7890-1232\"</span>, <span class=\"string\">\"5412345678901232\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> sum = evenNum(newCardNum) + oddNum(newCardNum);</span><br><span class=\"line\"><span class=\"keyword\">let</span> resultNum = sum % <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (resultNum != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">  resultNum = <span class=\"number\">10</span> - resultNum;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (resultNum !== newCardNum[<span class=\"number\">15</span>] * <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">\"INVALID\"</span>);</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (card[<span class=\"number\">0</span>] === <span class=\"string\">\"5\"</span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"Master Card\"</span>);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"VISA\"</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//偶數位加總</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">evenNum</span>(<span class=\"params\">newCardNum</span>) </span>&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//奇數位加總</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">oddNum</span>(<span class=\"params\">newCardNum</span>) </span>&#123;&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p><code>if (resultNum !== newCardNum[15] * 1)</code> 跟 <code>if (resultNum !== Number(newCardNum[15]) )</code> 都是把<strong>字串轉成數字</strong>的方式。</p>\n</blockquote>\n<h2 id=\"奇偶數列運算實作\"><a href=\"#奇偶數列運算實作\" class=\"headerlink\" title=\"奇偶數列運算實作\"></a>奇偶數列運算實作</h2><p>目前得到的卡號： <code>5412345678901232</code>。</p>\n<h3 id=\"先做簡單的偶數列\"><a href=\"#先做簡單的偶數列\" class=\"headerlink\" title=\"先做簡單的偶數列\"></a>先做簡單的偶數列</h3><ol>\n<li>因為偶數位比較單純，所以先來做偶數位，觀察數列，偶數位從第 1 個開始。(程式式從第 0 位開始)。</li>\n<li>看到要取順序，就要想到用 for 迴圈，並且偶數最末位為第 14 個，數列為第 13 個。</li>\n<li>因為要跳兩位取得數字，故要 i+=2。</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">evenNum</span>(<span class=\"params\">newCardNum</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">13</span>; i += <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> resultNum = <span class=\"built_in\">Number</span>(newCardNum[i]);</span><br><span class=\"line\">    sum += resultNum;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(sum); <span class=\"comment\">//4 2 4 6 8 0 2</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> sum;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>步驟說明：</p>\n<ol>\n<li>先設定偶數數列總數 sum 起始為 0。</li>\n<li>並且數列長度小於等於 13 個數列，並透過 i+=2 取得偶數列的數字。</li>\n<li>sum 會依序跑 newCardNum 的每個數字，跑到偶數列就存到 sum 的變數中。</li>\n<li>確認 console 結果為預期。</li>\n<li>回傳到 sum。</li>\n</ol>\n<h3 id=\"奇數列加總實作\"><a href=\"#奇數列加總實作\" class=\"headerlink\" title=\"奇數列加總實作\"></a>奇數列加總實作</h3><ol>\n<li>與偶數列方法雷同，所以把偶數函式中的方法先複製到奇數列的函式內。</li>\n<li>奇數列從第 0 個開始，最後一碼是第 15 個。</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">oddNum</span>(<span class=\"params\">newCardNum</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt;= <span class=\"number\">15</span>; i += <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">    sum = <span class=\"built_in\">Number</span>(newCardNum[i]);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(sum); <span class=\"comment\">// 5 1 3 5 7 9 1 3</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> sum;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>題目有提到奇數列有加權重(數字*2)，大於 10 的話要減 9，這邊的程式碼要加上運算。</li>\n<li>把運算結果回傳給 sum。</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">oddNum</span>(<span class=\"params\">newCardNum</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt;= <span class=\"number\">15</span>; i += <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> resultNum = <span class=\"built_in\">Number</span>(newCardNum[i]);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (resultNum &gt;= <span class=\"number\">10</span>) &#123;</span><br><span class=\"line\">      resultNum -= <span class=\"number\">9</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    sum += resultNum;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> sum;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"驗證一下-sum-的結果\"><a href=\"#驗證一下-sum-的結果\" class=\"headerlink\" title=\"驗證一下 sum 的結果\"></a>驗證一下 sum 的結果</h3><p>驗證結果如下，是如預期的結果。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> sum = evenNum(newCardNum) + oddNum(newCardNum);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(evenNum(newCardNum)); <span class=\"comment\">//26</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(oddNum(newCardNum)); <span class=\"comment\">//32</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(sum); <span class=\"comment\">//58</span></span><br></pre></td></tr></table></figure>\n\n<p>最終答案會是 MASTER CARD。</p>\n<h2 id=\"完整程式碼與-Demo\"><a href=\"#完整程式碼與-Demo\" class=\"headerlink\" title=\"完整程式碼與 Demo\"></a>完整程式碼與 Demo</h2><p>DEMO: <a href=\"https://codepen.io/hnzxewqw/pen/LYbVjpN?editors=1111\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/LYbVjpN?editors=1111</a></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> cardNum = <span class=\"string\">\"5412-3456-7890-1232\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> newCardNum = cardNum.replace(<span class=\"string\">\"5412-3456-7890-1232\"</span>, <span class=\"string\">\"5412345678901232\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">let</span> sum = evenNum(newCardNum) + oddNum(newCardNum);</span><br><span class=\"line\"><span class=\"keyword\">let</span> resultNum = sum % <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (resultNum != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">  resultNum = <span class=\"number\">10</span> - resultNum;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (resultNum !== newCardNum[<span class=\"number\">15</span>] * <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">\"INVALID\"</span>);</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (newCardNum[<span class=\"number\">0</span>] === <span class=\"string\">\"5\"</span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"MASTER CARD\"</span>);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"VISA\"</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//偶數位加總</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">evenNum</span>(<span class=\"params\">newCardNum</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">13</span>; i += <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> resultNum = <span class=\"built_in\">Number</span>(newCardNum[i]);</span><br><span class=\"line\">    sum += resultNum;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> sum;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//奇數位加總</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">oddNum</span>(<span class=\"params\">newCardNum</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt;= <span class=\"number\">15</span>; i += <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> resultNum = <span class=\"built_in\">Number</span>(newCardNum[i]) * <span class=\"number\">2</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (resultNum &gt;= <span class=\"number\">10</span>) &#123;</span><br><span class=\"line\">      resultNum -= <span class=\"number\">9</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    sum += resultNum;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> sum;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"小結\"><a href=\"#小結\" class=\"headerlink\" title=\"小結\"></a>小結</h2><ol>\n<li>先把需求架構寫出來，不要急著寫答案。</li>\n<li>利用函式填空法專注於程式邏輯的編寫。</li>\n<li>透過 <code>console.log</code> 把不確定的地方都印出來檢查是否與預期的相同。</li>\n</ol>\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><ul>\n<li><a href=\"https://lidemy.com/courses/793973/lectures/14637255\" target=\"_blank\" rel=\"noopener\">先別急著寫 leetcode</a></li>\n<li><a href=\"https://www.fooish.com/javascript/string/replace.html\" target=\"_blank\" rel=\"noopener\">JavaScript String replace() (字串取代)</a></li>\n</ul>\n","categories":["JavaScript"],"tags":["JavaScript"]},{"title":"JS 筆記 - 簡化法 + 函式填空法實作九九乘法表","url":"/javascript/20210129/1094387651/","content":"<p><img src=\"https://images.unsplash.com/photo-1509228627152-72ae9ae6848d?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80\" alt=\"math\"></p>\n<h2 id=\"找出規律\"><a href=\"#找出規律\" class=\"headerlink\" title=\"找出規律\"></a>找出規律</h2><p>延續之前的練習，要馬上實作九九乘法表可能有點困難，但可以先試找出一個乘法表的規律，</p>\n<p>先找<code>1*1 到 1*9</code> 的規律，</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">9</span>; i++) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">\"1\"</span> + <span class=\"string\">\"*\"</span> + i + <span class=\"string\">\"=\"</span> + <span class=\"string\">\"1\"</span> * i);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>似乎可以以此類推，把 1 換成 2 - 9 的數字。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">9</span>; i++) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">\"2\"</span> + <span class=\"string\">\"*\"</span> + i + <span class=\"string\">\"=\"</span> + <span class=\"string\">\"2\"</span> * i);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">9</span>; i++) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">\"3\"</span> + <span class=\"string\">\"*\"</span> + i + <span class=\"string\">\"=\"</span> + <span class=\"string\">\"3\"</span> * i);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>.<br>.<br>.</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">9</span>; i++) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">\"9\"</span> + <span class=\"string\">\"*\"</span> + i + <span class=\"string\">\"=\"</span> + <span class=\"string\">\"9\"</span> * i);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>恩… 有點暴力，但的確達到效果了。</p>\n<h2 id=\"改成函式\"><a href=\"#改成函式\" class=\"headerlink\" title=\"改成函式\"></a>改成函式</h2><p>除了帶入不同的數字，其他都是相同重複出現的程式碼，改成函式包裝，<br>只要函式的參數，帶入不同的數字，就可以得到不同乘法表的結果。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">printTable</span>(<span class=\"params\">j</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt;= <span class=\"number\">9</span>; i++) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">`<span class=\"subst\">$&#123;j&#125;</span> * <span class=\"subst\">$&#123;i&#125;</span> = <span class=\"subst\">$&#123;j * i&#125;</span>`</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"使用迴圈跑出九九乘法表\"><a href=\"#使用迴圈跑出九九乘法表\" class=\"headerlink\" title=\"使用迴圈跑出九九乘法表\"></a>使用迴圈跑出九九乘法表</h2><p>目前是各自獨立的乘法表，現在要做成九九乘法表，就只要把最外面的數列用迴圈跑出 2~9 的數列，<br>再將剛剛的函式放到迴圈中，就可以依序跑出九九乘法表。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">2</span>; j &lt;= <span class=\"number\">9</span>; j++) &#123;</span><br><span class=\"line\">  printTable(j);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>然後就完成了！</p>\n<p>完整的九九乘法表程式碼。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//獨立的乘法表</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">printTable</span>(<span class=\"params\">j</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">9</span>; i++) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">`<span class=\"subst\">$&#123;j&#125;</span> * <span class=\"subst\">$&#123;i&#125;</span> = <span class=\"subst\">$&#123;j * i&#125;</span>`</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 2~9 帶入乘法表</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">2</span>; j &lt;= <span class=\"number\">9</span>; j++) &#123;</span><br><span class=\"line\">  printTable(j);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"心得\"><a href=\"#心得\" class=\"headerlink\" title=\"心得\"></a>心得</h3><ol>\n<li>先用簡化法跑出第一個結果。</li>\n<li>發現會有重複的程式碼出現，使用函式封裝。</li>\n<li>又發現有重複的動作，再把函式帶進去，得到想要的結果。</li>\n</ol>\n<h2 id=\"雙層迴圈\"><a href=\"#雙層迴圈\" class=\"headerlink\" title=\"雙層迴圈\"></a>雙層迴圈</h2><p>使用雙層迴圈改寫，也就是把外層迴圈中的函式，改成封裝函式中的程式碼。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//雙迴圈版本的九九乘法表</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">2</span>; j &lt;= <span class=\"number\">9</span>; j++) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">9</span>; i++) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">`<span class=\"subst\">$&#123;j&#125;</span> * <span class=\"subst\">$&#123;i&#125;</span> = <span class=\"subst\">$&#123;j * i&#125;</span>`</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>雙層迴圈一開始對新手比較不友善，因為無法第一時間看出來到底在做什麼。</p>\n<h3 id=\"小結\"><a href=\"#小結\" class=\"headerlink\" title=\"小結\"></a>小結</h3><p>透過簡化法跟函式填空法，可以先把流程跟動作分開，然後再做整合與優化得到更簡易的程式碼。</p>\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><ol>\n<li><a href=\"https://lidemy.com/courses/793973/lectures/14637124\" target=\"_blank\" rel=\"noopener\">先別急著寫 leetcode</a></li>\n</ol>\n","categories":["JavaScript"],"tags":["JavaScript"]},{"title":"JS 筆記 - 簡化法搭配函式填空法","url":"/javascript/20210128/620796380/","content":"<p><img src=\"https://images.unsplash.com/photo-1444080748397-f442aa95c3e5?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1490&q=80\" alt=\"star\"></p>\n<h2 id=\"簡化法\"><a href=\"#簡化法\" class=\"headerlink\" title=\"簡化法\"></a>簡化法</h2><p>開發的過程需求總是很多，而且很複雜，而面對這麼多問題一時也不知道從何下手，而使用簡化法可以把問題縮到最小，解決掉小問題就可以逐漸解決大問題，因為大問題是由許多小問題構成。</p>\n<p>舉生活的例子：</p>\n<p>小美告訴小明說：「我電腦壞了。」<br>小明第一時間只接收到電腦壞了，可是電腦的組成很多部分，<br>是螢幕壞了，還是滑鼠壞了，還是主機壞了？<br>這時候已經開始解析問題的複雜度，最後分析是主機壞了，<br>可是主機又分成主機板、顯示卡、記憶體、電源供應器、硬碟…等等。<br>最後的最後發現是電源供應器壞了，所以只要換掉電源供應器，主機就修好了。</p>\n<p>寫程式也是一樣，馬上來看一題。</p>\n<h2 id=\"印出星星\"><a href=\"#印出星星\" class=\"headerlink\" title=\"印出星星\"></a>印出星星</h2><p>題目是這樣</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">n = <span class=\"number\">1</span></span><br><span class=\"line\">*</span><br><span class=\"line\"></span><br><span class=\"line\">n = <span class=\"number\">2</span></span><br><span class=\"line\">*</span><br><span class=\"line\">**</span><br><span class=\"line\"></span><br><span class=\"line\">n = <span class=\"number\">3</span></span><br><span class=\"line\">*</span><br><span class=\"line\">**</span><br><span class=\"line\">* * *</span><br><span class=\"line\">.</span><br><span class=\"line\">.</span><br><span class=\"line\">.</span><br><span class=\"line\">n = <span class=\"number\">10</span></span><br><span class=\"line\">*</span><br><span class=\"line\">**</span><br><span class=\"line\">* * *</span><br><span class=\"line\">****</span><br><span class=\"line\">*****</span><br><span class=\"line\">******</span><br><span class=\"line\">*******</span><br><span class=\"line\">********</span><br><span class=\"line\">*********</span><br><span class=\"line\">**********</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"先解一個\"><a href=\"#先解一個\" class=\"headerlink\" title=\"先解一個\"></a>先解一個</h2><p>看到題目我第一時間反應是我不會解到第 10 個，那我解一個試看看，如果印得出一個，應該就可以印出 10 個。</p>\n<p>看規則應該是要使用迴圈，然後印出來，所以想到這樣。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">10</span>; i++) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">\"*\"</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>沒錯，會跑 10 次的一顆星星。</p>\n<p>前一篇有說如果還不知道怎麼做，就先用<a href=\"https://hsuchihting.github.io/javascript/20210128/4033691106/\">函式填空法</a>。</p>\n<p>所以先填起來，如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">10</span>; i++) &#123;</span><br><span class=\"line\">  printStar(i);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">printStar</span>(<span class=\"params\">n</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">//todo</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"印出-10-個星星\"><a href=\"#印出-10-個星星\" class=\"headerlink\" title=\"印出 10 個星星\"></a>印出 10 個星星</h2><ul>\n<li>要依序找出 10 個星星，也是要用迴圈的方法來做，並且起始數字為 1，因為 n=1 要印出一個。</li>\n<li>讓其跑回圈印出星星，並且加總讓每次數字跟星星的數量相同。</li>\n<li>印出星星。</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">printStar</span>(<span class=\"params\">n</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> star = <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt;= n; i++) &#123;</span><br><span class=\"line\">    star += <span class=\"string\">\"*\"</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(star);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>Demo： <a href=\"https://codepen.io/hnzxewqw/pen/ZEBzXmm?editors=1112\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/ZEBzXmm?editors=1112</a></p>\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><ol>\n<li><a href=\"https://lidemy.com/courses/793973/lectures/14419352\" target=\"_blank\" rel=\"noopener\">先別急著寫 leetcode</a></li>\n</ol>\n","categories":["JavaScript"],"tags":["JavaScript"]},{"title":"JS 筆記 - 函式填空法","url":"/javascript/20210128/4033691106/","content":"<p><img src=\"https://images.unsplash.com/photo-1586527155314-1d25428324ff?ixlib=rb-1.2.1&ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&auto=format&fit=crop&w=1350&q=80\" alt=\"puzzle\"></p>\n<h2 id=\"什麼是函式填空法\"><a href=\"#什麼是函式填空法\" class=\"headerlink\" title=\"什麼是函式填空法?\"></a>什麼是函式填空法?</h2><p>也就是在撰寫一個功能的時候，如果發現有一個地方不會寫，那就用 function 把它填起來，然後先確保整體架構是對的，那只要專心把 function 內的程式碼寫正確，那應該就可以正確執行，也可以避免初心者殺手：雙層迴圈。菜雞如我就是之前看到二維陣列的雙層迴圈時，就瞬間傻住不知道該怎麼解…</p>\n<h2 id=\"判斷-1-10-質數\"><a href=\"#判斷-1-10-質數\" class=\"headerlink\" title=\"判斷 1-10 質數\"></a>判斷 1-10 質數</h2><p>直接來看一個題目，找出 1~10 中的質數，<a href=\"https://zh.wikipedia.org/wiki/%E8%B4%A8%E6%95%B0\" target=\"_blank\" rel=\"noopener\">質數的定義</a>可以看一下維基百科。</p>\n<blockquote>\n<p>小時候數學真的是爛…</p>\n</blockquote>\n<p>題目需求可以改成這樣：</p>\n<ol>\n<li>找出 1~10 的數字</li>\n<li>找出質數。</li>\n</ol>\n<h3 id=\"虛擬碼可以寫成\"><a href=\"#虛擬碼可以寫成\" class=\"headerlink\" title=\"虛擬碼可以寫成\"></a>虛擬碼可以寫成</h3><p>由題意可以寫成虛擬碼，看起來結構應該是對的。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>, <span class=\"number\">10</span>];</span><br><span class=\"line\"><span class=\"keyword\">for</span>(i <span class=\"keyword\">from</span> <span class=\"number\">0</span> to n<span class=\"number\">-1</span>) <span class=\"keyword\">do</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span>(arr[i]是質數) <span class=\"keyword\">do</span></span><br><span class=\"line\">    print <span class=\"string\">\"質數\"</span></span><br><span class=\"line\">  <span class=\"keyword\">else</span></span><br><span class=\"line\">    print <span class=\"string\">\"非質數\"</span></span><br><span class=\"line\">  end <span class=\"keyword\">if</span></span><br><span class=\"line\">end <span class=\"keyword\">for</span></span><br></pre></td></tr></table></figure>\n\n<p>改成程式碼</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>, <span class=\"number\">10</span>];</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (arr[i]是質數) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(i+<span class=\"number\">1</span>,<span class=\"string\">\"質數\"</span>);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(i+<span class=\"number\">1</span>,<span class=\"string\">\"非質數\"</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"加入函式\"><a href=\"#加入函式\" class=\"headerlink\" title=\"加入函式\"></a>加入函式</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>, <span class=\"number\">10</span>];</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (isPrime(arr[i])) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 這裡使用函式填空法</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(i + <span class=\"number\">1</span>, <span class=\"string\">\"質數\"</span>);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(i + <span class=\"number\">1</span>, <span class=\"string\">\"非質數\"</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">isPrime</span>(<span class=\"params\">num</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">//todo</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>有發現問題被簡化了，變得容易理解了！<br>再來就把 function 內的判斷寫好！</p>\n<h3 id=\"函式內實作\"><a href=\"#函式內實作\" class=\"headerlink\" title=\"函式內實作\"></a>函式內實作</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">isPrime</span>(<span class=\"params\">num</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (num === <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">2</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (num % i === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ol>\n<li>質數的定義有寫到 <strong>1 被定義為不是質數</strong>，所以先判斷如果 <code>num === 1</code>，就回傳 false。</li>\n<li>從 2 開始跑迴圈，如果 num 除以 迴圈的數字為整除，就不是質數。</li>\n<li>不然就是質數。</li>\n</ol>\n<blockquote>\n<p>提醒：<br>新手容易犯錯的地方有可能會寫成下方這樣。</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">isPrime</span>(<span class=\"params\">num</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (num === <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">2</span>; i &lt; num; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (num % i === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>對於找質數的案例來說，這樣邏輯是錯的，因為是從 2 開始，都沒有一個數字可以整除 num 的話，num 才是質數，而不是只要不能被整除，就是質數，也就是說，只有自己可以被自己整除，才是質數。</p>\n<h3 id=\"最終完成的質數判斷程式碼\"><a href=\"#最終完成的質數判斷程式碼\" class=\"headerlink\" title=\"最終完成的質數判斷程式碼\"></a>最終完成的質數判斷程式碼</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>, <span class=\"number\">10</span>];</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (isPrime(arr[i])) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(i + <span class=\"number\">1</span>, <span class=\"string\">\"質數\"</span>);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(i + <span class=\"number\">1</span>, <span class=\"string\">\"非質數\"</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">isPrime</span>(<span class=\"params\">num</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (num === <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">2</span>; i &lt; num; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (num % i === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>Demo: <a href=\"https://codepen.io/hnzxewqw/pen/wvowrqJ?editors=1111\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/wvowrqJ?editors=1111</a></p>\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><ol>\n<li><a href=\"https://lidemy.com/courses/793973/lectures/14419352\" target=\"_blank\" rel=\"noopener\">先別急著寫 leetcode</a></li>\n</ol>\n","categories":["JavaScript"],"tags":["JavaScript"]},{"title":"JS 筆記 - 迴圈與判斷式的應用","url":"/javascript/20210127/2644125855/","content":"<p><img src=\"https://images.unsplash.com/photo-1541278107931-e006523892df?ixlib=rb-1.2.1&ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&auto=format&fit=crop&w=1351&q=80\" alt=\"poker\"></p>\n<p>紀錄一下最近在上鋰學院的<a href=\"https://lidemy.com/courses/793973/lectures/14686154\" target=\"_blank\" rel=\"noopener\">先別急著寫 leetcode</a> 課程中幾個練習，滿不錯的課程，有助於過去在程式碼卡關的思維。</p>\n<h2 id=\"找出-1-100-的奇偶數\"><a href=\"#找出-1-100-的奇偶數\" class=\"headerlink\" title=\"找出 1~100 的奇偶數\"></a>找出 1~100 的奇偶數</h2><p>奇數</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt; <span class=\"number\">100</span>; i++) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (i % <span class=\"number\">2</span> === <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(i);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>偶數</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt; <span class=\"number\">100</span>; i++) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (i % <span class=\"number\">2</span> === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(i);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"fizz-buzz\"><a href=\"#fizz-buzz\" class=\"headerlink\" title=\"fizz buzz\"></a>fizz buzz</h2><p>經典<a href=\"https://leetcode.com/problems/fizz-buzz/\" target=\"_blank\" rel=\"noopener\">刷題題目</a>，需求是</p>\n<ol>\n<li>n = 15。</li>\n<li>3 的倍數印出 fizz。</li>\n<li>5 的倍數印出 buzz。</li>\n<li>是 3 跟 5 的倍數印出 fizzBuzz。</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> n = <span class=\"number\">15</span>;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt;= n; i++) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (i % <span class=\"number\">15</span> === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"FizzBuzz\"</span>);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (i % <span class=\"number\">3</span> === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"Fizz\"</span>);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (i % <span class=\"number\">5</span> === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"Buzz\"</span>);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(i);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"刪除特定字元\"><a href=\"#刪除特定字元\" class=\"headerlink\" title=\"刪除特定字元\"></a>刪除特定字元</h2><p>這個練習滿有意思的，與其說是刪除，也可以用另一個思維是：倘若遇到一樣的就略過，這樣也可以達到需求。</p>\n<p>題目為：<br>有一字串為 hello，並把 l 刪掉。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> str = <span class=\"string\">\"hello\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> deleted = <span class=\"string\">\"l\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> ans = <span class=\"string\">\"\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; str.length; i++) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (str[i] !== deleted) &#123;</span><br><span class=\"line\">    ans += str[i];</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(ans);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"取最大值\"><a href=\"#取最大值\" class=\"headerlink\" title=\"取最大值\"></a>取最大值</h2><p>情境可以想，我目前手上翻一個撲克牌，我翻開的第一張牌就是我目前的最大值，倘若第二張牌比我原先的還要大，那就是把第一張放旁邊，將第二張牌代替手上的牌。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr = [<span class=\"number\">2</span>, <span class=\"number\">6</span>, <span class=\"number\">8</span>, <span class=\"number\">4</span>, <span class=\"number\">10</span>, <span class=\"number\">20</span>];</span><br><span class=\"line\"><span class=\"keyword\">let</span> max = arr[<span class=\"number\">0</span>];</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (arr[i] &gt; max) &#123;</span><br><span class=\"line\">    max = arr[i];</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(max); <span class=\"comment\">//20</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"找次大值\"><a href=\"#找次大值\" class=\"headerlink\" title=\"找次大值\"></a>找次大值</h2><p>延伸上一題，要找次大值的方式，所以從手上有一張牌，變成兩張牌，會有以下狀況：</p>\n<ol>\n<li>一張會是最大值，另一張維次大值。</li>\n<li>如果新翻一張牌的值比最大的還要大，那原本的值就變成次大值。</li>\n<li>如果新翻一張牌的值比手上兩張的值都小，那就略過。</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>, <span class=\"number\">10</span>, <span class=\"number\">11</span>, <span class=\"number\">12</span>, <span class=\"number\">13</span>];</span><br><span class=\"line\"><span class=\"keyword\">let</span> max = -<span class=\"literal\">Infinity</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> max2 = -<span class=\"literal\">Infinity</span>;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (arr[i] &gt; max) &#123;</span><br><span class=\"line\">    max2 = max;</span><br><span class=\"line\">    max = arr[i];</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (arr[i] &gt; max2) &#123;</span><br><span class=\"line\">    max2 = arr[i];</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(max, max2);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><p><a href=\"https://lidemy.com/courses/793973/lectures/14686154\" target=\"_blank\" rel=\"noopener\">先別急著寫 leetcode</a></p>\n","categories":["JavaScript"],"tags":["JavaScript"]},{"title":"如何把想法轉成程式碼?","url":"/Learning-Experience/20210127/1279212541/","content":"<p><img src=\"https://images.unsplash.com/photo-1581090700227-1e37b190418e?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80\" alt=\"upset\"></p>\n<h2 id=\"原來我還是不會寫程式\"><a href=\"#原來我還是不會寫程式\" class=\"headerlink\" title=\"原來我還是不會寫程式\"></a>原來我還是不會寫程式</h2><p>從平面轉職前端也快一年了，以為切切版，寫個 CSS 跟套個 jQuery 就是有跟程式碰到邊，結果不是，在進入專案開始處理 API 資料，get 跟 post 都傻傻分不清楚，拿到資料也不太會處理的時候，才知道我根本還不會寫程式。</p>\n<h2 id=\"新手寫程式問題\"><a href=\"#新手寫程式問題\" class=\"headerlink\" title=\"新手寫程式問題\"></a>新手寫程式問題</h2><p>其中提到新手遇到的幾個問題，那就是我啊！</p>\n<p><img src=\"https://i.imgur.com/hEBU61Q.png\" alt=\"初學者寫程式\"></p>\n<p>我就是那 1-3…</p>\n<p><img src=\"https://i.imgur.com/7BZhTOo.png\" alt=\"pic2\"></p>\n<p>看不懂需求或題目…</p>\n<p><img src=\"https://i.imgur.com/GT6Buxn.png\" alt=\"pic3\"></p>\n<p>是不是也有這種困擾，</p>\n<p><img src=\"https://i.imgur.com/KOcfNWW.png\" alt=\"pic4\"></p>\n<p>所以要有一個橋梁幫助我，</p>\n<p><img src=\"https://i.imgur.com/pyW14DY.png\" alt=\"pic5\"></p>\n<p>用虛擬碼來寫。</p>\n<p><img src=\"https://i.imgur.com/6SVCedE.png\" alt=\"pic6\"></p>\n<h2 id=\"先想流程，再想動作\"><a href=\"#先想流程，再想動作\" class=\"headerlink\" title=\"先想流程，再想動作\"></a>先想流程，再想動作</h2><p>以我自己為例，我拿到資料就想直接處理它，但卻忽略我為什麼要處理，該怎麼處理，哪個流程才需要處理資料，例如我今天從起床到睡覺，寫出一行一行的步驟，並把握以下原則：</p>\n<ol>\n<li>一行只做一件事。</li>\n<li>善用跳轉。(等等會說明)</li>\n</ol>\n<p>實際例子說明：</p>\n<h3 id=\"學生的一天\"><a href=\"#學生的一天\" class=\"headerlink\" title=\"學生的一天\"></a>學生的一天</h3><ol>\n<li>早上八點起床。</li>\n<li>吃早餐。</li>\n<li>如果公車來了，搭公車。</li>\n<li>如果公車沒來，搭捷運。</li>\n<li>到學校上課。</li>\n<li>放學。</li>\n<li>吃晚餐。</li>\n<li>睡覺。</li>\n<li>回到步驟 1。</li>\n</ol>\n<p>可以發現有幾項為<strong>敘述</strong>，有幾項為<strong>條件判斷</strong>，有一項是<strong>跳轉</strong>。</p>\n<ol>\n<li>早上八點起床。(敘述)</li>\n<li>吃早餐。(敘述)</li>\n<li>如果公車來了，搭公車。(條件判斷)</li>\n<li>如果公車沒來，搭捷運。(條件判斷)</li>\n<li>到學校上課。(敘述)</li>\n<li>放學。(敘述)</li>\n<li>吃晚餐。(敘述)</li>\n<li>睡覺。(敘述)</li>\n<li>回到步驟 1。(重複，也就是跳轉)</li>\n</ol>\n<p>透過重複的選項，可以製造出一個不斷循環的行為。</p>\n<h3 id=\"等人\"><a href=\"#等人\" class=\"headerlink\" title=\"等人\"></a>等人</h3><ol>\n<li>人來了嗎?(敘述)</li>\n<li>還沒，滑手機五分鐘。(條件判斷)</li>\n<li>來了，跳到第五步。(條件判斷)</li>\n<li>跳到第一步。(重複)</li>\n<li>一起去逛街。(敘述)</li>\n</ol>\n<p>分析一下會有兩個狀況產生，</p>\n<p><strong>如果人還沒來</strong>，會是：</p>\n<ol>\n<li>人來了嗎?</li>\n<li>還沒，滑手機五分鐘。</li>\n<li>跳到第一步。</li>\n</ol>\n<p>會一直重複。</p>\n<p><strong>如果人來了</strong>，會是：</p>\n<ol>\n<li>人來了嗎?</li>\n<li>來了，跳到第五步。</li>\n<li>一起去逛街。</li>\n</ol>\n<p>所以可以看到，如果沒有符合判斷條件的狀況下，就會略過幾個步驟，也就是之後會很常使用的迴圈加上條件判斷的應用。</p>\n<h2 id=\"找出-1-100-的偶數\"><a href=\"#找出-1-100-的偶數\" class=\"headerlink\" title=\"找出 1~100 的偶數\"></a>找出 1~100 的偶數</h2><p>一開始看到這個題目的時候，就會很快想把心中的偶數得到，然後就卡住了…<br>但其實應該要拆解問題，變成下方步驟：</p>\n<ol>\n<li>找出 1~100 的數字。</li>\n<li>可以被 2 整除的就是偶數。</li>\n</ol>\n<h3 id=\"找出-1-100-的數字\"><a href=\"#找出-1-100-的數字\" class=\"headerlink\" title=\"找出 1~100 的數字\"></a>找出 1~100 的數字</h3><p>似乎問題就變單純，且可以被執行，把這個題目寫成一步步可執行的步驟，先來找出 1~100 的數字。</p>\n<ol>\n<li>令 i 為 1。</li>\n<li>如果 i &gt; 100，結束。</li>\n<li>印出 i 。</li>\n<li>i = i+1。</li>\n<li>跳回第二行。</li>\n</ol>\n<p>其中，第四個步驟非常重要，可以印出 1~100 的關鍵就是這個，因為如果沒有 i+1 的步驟，會一直重複只出現 1 這個數字，就永遠不會達到 100。</p>\n<h3 id=\"找出偶數\"><a href=\"#找出偶數\" class=\"headerlink\" title=\"找出偶數\"></a>找出偶數</h3><p>找到 1~100 的數字了，再來是要找偶數。<br>什麼是偶數，也就是可以被 2 整除的叫做偶數，若有餘數為 1 的稱為奇數。</p>\n<blockquote>\n<p>EX. 2 除以 2 為 0，3 除以 2 為 1。</p>\n</blockquote>\n<p>所以步驟可以改寫成這樣，</p>\n<ol>\n<li>令 i 為 1。</li>\n<li>如果 i &gt; 100，結束。</li>\n<li>如果可以被 2 整除的為偶數，印出 i。</li>\n<li>i = i+1。</li>\n<li>跳回第二行。</li>\n</ol>\n<p>再更直覺一點可以改成這樣。</p>\n<ol>\n<li>令 i 為 1。</li>\n<li>如果 i &gt; 100，結束。</li>\n<li>如果 i % 2 === 0，印出 i。</li>\n<li>i = i+1。</li>\n<li>跳回第二行。</li>\n</ol>\n<h2 id=\"什麼是虛擬碼\"><a href=\"#什麼是虛擬碼\" class=\"headerlink\" title=\"什麼是虛擬碼\"></a>什麼是虛擬碼</h2><p>虛擬碼就是把腦袋的想法轉成一步步可執行的步驟，然後再透過比較像程式碼的形式寫出來。<br>例如剛剛提到找出 1~100 的步驟。</p>\n<ol>\n<li>令 i 為 1。</li>\n<li>如果 i &gt; 100，結束。</li>\n<li>印出 i 。</li>\n<li>i = i+1。</li>\n<li>跳回第二行。</li>\n</ol>\n<p>改成虛擬碼的話會是這樣，</p>\n<ol>\n<li>let i = 1</li>\n<li>if i &gt; 100 then exit</li>\n<li>print i</li>\n<li>i = i+1</li>\n<li>jump to line2</li>\n</ol>\n<p>喔！好像跟程式碼有點像喔！<br>可以感覺得出來好像有迴圈加上條件判斷。</p>\n<h2 id=\"把虛擬碼改成程式碼\"><a href=\"#把虛擬碼改成程式碼\" class=\"headerlink\" title=\"把虛擬碼改成程式碼\"></a>把虛擬碼改成程式碼</h2><p>試著改寫成程式碼的話應該是：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt; <span class=\"number\">100</span>; i++) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (i % <span class=\"number\">2</span> === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(i); <span class=\"comment\">// 得到 2 4 6 8 10....98</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>有發現到一件事情，似乎就是把中文的意思改寫成類似程式碼的敘述，<br>步驟的流程建議使用英文，因為要讓敘述的過程更貼近程式碼。</p>\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><ol>\n<li><a href=\"https://lidemy.com/courses/793973/lectures/14419352\" target=\"_blank\" rel=\"noopener\">先別急著寫 leetcode</a></li>\n</ol>\n","categories":["Learning Experience"],"tags":["前端學習之路"]},{"title":"JS 核心觀念筆記 - 物件的淺層複製與深層複製","url":"/javascript/20210120/4254951765/","content":"<p><img src=\"https://i.imgur.com/RvAfQKY.jpg\" alt=\"core\"></p>\n<p>先前有提到<a href=\"https://hsuchihting.github.io/javascript/20200812/506656834/\">物件的特性</a>是傳參考，但因為這個特性也會導致一些資料處理上的困擾，物件中有淺層複製跟深層複製的方法，來處理這個困擾。</p>\n<h2 id=\"原始物件資料\"><a href=\"#原始物件資料\" class=\"headerlink\" title=\"原始物件資料\"></a>原始物件資料</h2><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> family = &#123;</span><br><span class=\"line\">  home: <span class=\"string\">\"提姆家\"</span>,</span><br><span class=\"line\">  members: &#123;</span><br><span class=\"line\">    dad: <span class=\"string\">\"Tim\"</span>,</span><br><span class=\"line\">    mom: <span class=\"string\">\"Min\"</span>,</span><br><span class=\"line\">    son: <span class=\"string\">\"Joshua\"</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"淺層複製\"><a href=\"#淺層複製\" class=\"headerlink\" title=\"淺層複製\"></a>淺層複製</h2><h3 id=\"for…in\"><a href=\"#for…in\" class=\"headerlink\" title=\"for…in\"></a>for…in</h3><p>使用 <code>for...in</code> 的方法取得物件資料，並可以得到以下的值。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> newFamily = &#123;&#125;;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> key <span class=\"keyword\">in</span> family) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(key);</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(family[key]);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code>key</code>: 會取到 <code>family</code> 物件的第一層的屬性，也就是 <code>home</code> 跟 <code>members</code>。</li>\n<li><code>family[key]</code>: 會取到 <code>home</code> 的值跟 <code>members</code> 的值(<code>members</code> 是物件)。</li>\n</ul>\n<p><img src=\"https://i.imgur.com/HyUv8hj.png\" alt=\"淺拷貝\"></p>\n<p>讓新的物件裡面的值等於原本物件裡面的值。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> newFamily = &#123;&#125;;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> key <span class=\"keyword\">in</span> family) &#123;</span><br><span class=\"line\">  newFamily[key] = family[key];</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log((newFamily[key] = family[key]));</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(newFamily[key] === family[key]); <span class=\"comment\">//true</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>這時候再比對一下兩個物件，會得到 false，代表 newFamily 已經是新的物件了。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> newFamily = &#123;&#125;;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> key <span class=\"keyword\">in</span> family) &#123;</span><br><span class=\"line\">  newFamily[key] = family[key];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(family === newFamily); <span class=\"comment\">//false</span></span><br></pre></td></tr></table></figure>\n\n<p>這時把新物件的 <code>home</code> 修改成別的值，並且看一下兩個物件的內容。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> newFamily = &#123;&#125;;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> key <span class=\"keyword\">in</span> family) &#123;</span><br><span class=\"line\">  newFamily[key] = family[key];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">newFamily.home = <span class=\"string\">\"約約家\"</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(family);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(newFamily);</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/owxaOJe.png\" alt=\"\"></p>\n<p>會發現 <code>newFamily</code> 第一層的 <code>home</code> 屬性被修改了，但 <code>family</code> 沒有，因為這兩個物件已經沒有關係了。<br>.<br>.<br>.<br>BUT! 人生最重要就是這個 BUT 了!<br>.<br>.<br>.<br>如果把 <code>newFamily</code> 裡面的 <code>members</code> 中的屬性改掉，</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> newFamily = &#123;&#125;;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> key <span class=\"keyword\">in</span> family) &#123;</span><br><span class=\"line\">  newFamily[key] = family[key];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">newFamily.home = <span class=\"string\">\"約約家\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">newFamily.members.dad = <span class=\"string\">\"提姆爸爸\"</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(family);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(newFamily);</span><br></pre></td></tr></table></figure>\n\n<p>會看到 <code>members</code> 裡面的 <code>dad</code> 還是被改掉了，</p>\n<p><img src=\"https://i.imgur.com/5aqxr3N.png\" alt=\"淺複製\"></p>\n<p>原因是透過這樣的方式只能改變第一層的屬性內容，第二層資料內容還是以傳參考的形式，這個方式就叫做淺層複製，也有稱為淺拷貝。</p>\n<h3 id=\"其他方式寫法\"><a href=\"#其他方式寫法\" class=\"headerlink\" title=\"其他方式寫法\"></a>其他方式寫法</h3><h4 id=\"jQuery-的寫法\"><a href=\"#jQuery-的寫法\" class=\"headerlink\" title=\"jQuery 的寫法\"></a>jQuery 的寫法</h4><p>使用 jQuery 的 extend 方法，前面先帶一個空物件，後面放入要複製的物件實字。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> newFamily2 = jQuery.extend(&#123;&#125;, family);</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"ES6-的寫法\"><a href=\"#ES6-的寫法\" class=\"headerlink\" title=\"ES6 的寫法\"></a>ES6 的寫法</h4><p>使用 ES6 寫法，使用 Object 的 assign 方法，前面帶一個空物件，後面放入要複製的物件實字。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> newFamily3 = <span class=\"built_in\">Object</span>.assign(&#123;&#125;, family);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"深層複製\"><a href=\"#深層複製\" class=\"headerlink\" title=\"深層複製\"></a>深層複製</h2><p>為了不要有物件傳參考的特性，會先把資料轉型成字串，再轉型成物件，</p>\n<h3 id=\"先轉成字串\"><a href=\"#先轉成字串\" class=\"headerlink\" title=\"先轉成字串\"></a>先轉成字串</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(family); <span class=\"comment\">//原本的物件</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">JSON</span>.stringify(family)); <span class=\"comment\">//把物件轉成字串</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/1Qixfr1.png\" alt=\"深拷貝\"></p>\n<h3 id=\"再轉成物件\"><a href=\"#再轉成物件\" class=\"headerlink\" title=\"再轉成物件\"></a>再轉成物件</h3><p>再使用 JSON.parse 轉型成物件，這時候新的物件就跟原本的 <code>family</code> 物件沒有關聯了。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">JSON</span>.parse(<span class=\"built_in\">JSON</span>.stringify(family)));</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/qfnWJSb.png\" alt=\"深拷貝2\"></p>\n<h3 id=\"兩者物件已無相聯性\"><a href=\"#兩者物件已無相聯性\" class=\"headerlink\" title=\"兩者物件已無相聯性\"></a>兩者物件已無相聯性</h3><p>將轉型後的物件賦予在新的變數上，並做比對，會發現是 <code>false</code>。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> newFamily4 = <span class=\"built_in\">JSON</span>.parse(<span class=\"built_in\">JSON</span>.stringify(family));</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(family === newFamily4); <span class=\"comment\">//false</span></span><br></pre></td></tr></table></figure>\n","categories":["JavaScript"],"tags":["JavaScript","JS core"]},{"title":"工作筆記 -  切割分字串的方法 Split","url":"/work/20201208/270899285/","content":"<p><img src=\"https://images.unsplash.com/photo-1586685983389-612a65517b38?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80\" alt=\"cutter\"></p>\n<p>最近專案需求要把後端傳過來的字串切割成字串，並只 post 到後端只有數字的部份。</p>\n<p>這次使用的套件為 <a href=\"https://element.eleme.io/#/zh-CN/component/tree#scoped-slot\" target=\"_blank\" rel=\"noopener\">element-ui 裡面的 tree 元件</a>。</p>\n<h2 id=\"使用套件\"><a href=\"#使用套件\" class=\"headerlink\" title=\"使用套件\"></a>使用套件</h2><p>情境如下：</p>\n<ol>\n<li>會有一個樹狀圖。</li>\n<li>需要有點選資料的 checkbox。</li>\n<li>其中的文字是從後端 API 抓回來的資料。</li>\n<li>文字前面的標籤用 v-if 做判斷，其中屬性 folder:true 是顯示<code>資料夾</code>， folder:false 則顯示<code>標籤</code>。</li>\n</ol>\n<p>畫面如下：</p>\n<p><img src=\"https://i.imgur.com/yMOkysb.png\" alt=\"tree\"></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">el-tree</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">:data</span>=<span class=\"string\">\"data\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">node-key</span>=<span class=\"string\">\"key\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">ref</span>=<span class=\"string\">\"tree\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">show-checkbox</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">default-expand-all</span></span></span><br><span class=\"line\"><span class=\"tag\">  @<span class=\"attr\">check</span>=<span class=\"string\">\"getCheckedKeys\"</span></span></span><br><span class=\"line\"><span class=\"tag\">&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"custom-tree-node\"</span> <span class=\"attr\">slot-scope</span>=<span class=\"string\">\"&#123; data &#125;\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">v-if</span>=<span class=\"string\">\"data.folder\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"far fa-folder-open\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">v-else</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fas fa-tag\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span></span><br><span class=\"line\">      &#123;&#123; data.title &#125;&#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">el-tree</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>其中有使用到 tree 元件的方法，<code>@check=&quot;getCheckedKeys&quot;</code>，簡單說就是可以取得 checkbox 的值，但要搭配 <code>show-checkbox</code> 屬性才能使用。(詳細說明可以看官方文件)</p>\n<h3 id=\"引入套件\"><a href=\"#引入套件\" class=\"headerlink\" title=\"引入套件\"></a>引入套件</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> ElementUI <span class=\"keyword\">from</span> <span class=\"string\">\"element-ui\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">\"element-ui/lib/theme-chalk/index.css\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> Vue = <span class=\"built_in\">require</span>(<span class=\"string\">\"vue\"</span>);</span><br><span class=\"line\">Vue.use(ElementUI);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"如何切割字串\"><a href=\"#如何切割字串\" class=\"headerlink\" title=\"如何切割字串\"></a>如何切割字串</h2><p>目標是要把回傳的資料格式做修改，回傳一開始是一個陣列，裡面有數個資料，切割使用 split 陣列方法，但只能使用在字串，目前資料為陣列，所以要取出來變成字串。</p>\n<p>一開始先使用套件給予取值的方法，然後看看取出什麼。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">getCheckedKeys() &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> dataKeys = <span class=\"keyword\">this</span>.$refs[<span class=\"string\">'tree'</span>].getCheckedKeys();</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(dataKeys); <span class=\"comment\">//[\"tag_588\"]</span></span><br><span class=\"line\">  &#125;,</span><br></pre></td></tr></table></figure>\n\n<p>是陣列，然後要先把他轉成字串。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">getCheckedKeys() &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> dataKeys = <span class=\"keyword\">this</span>.$refs[<span class=\"string\">'tree'</span>].getCheckedKeys();</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(dataKeys); <span class=\"comment\">//[\"tag_588\"]</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> dataStr = dataKeys.toString();</span><br><span class=\"line\">   <span class=\"built_in\">console</span>.log(dataStr); <span class=\"comment\">//tag_588</span></span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n\n<p>得到字串後，可以看到字串中間有一個底線，但後端只要數字的部份，所以要來做切割，並取出數字的部份。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">getCheckedKeys() &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> dataKeys = <span class=\"keyword\">this</span>.$refs[<span class=\"string\">'tree'</span>].getCheckedKeys();</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(dataKeys); <span class=\"comment\">//[\"tag_588\"]</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> dataStr = dataKeys.toString();</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(dataStr); <span class=\"comment\">//tag_588</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> dataSplited = dataStr.split(<span class=\"string\">\"_\"</span>).pop(<span class=\"number\">1</span>);</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(dataSplited); <span class=\"comment\">//588</span></span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n\n<p>確認可以正確切割後，但我有多個應該要用迴圈，另外如果要取陣列多個一定也需要使用迴圈來取。</p>\n<blockquote>\n<p>提示：看到陣列就要想到使用迴圈。</p>\n</blockquote>\n<p>所以我使用 forEach 來取，就會知道 item 取出來的已經是字串，真是太好了！</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">getCheckedKeys() &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> dataKeys = <span class=\"keyword\">this</span>.$refs[<span class=\"string\">'tree'</span>].getCheckedKeys();</span><br><span class=\"line\">  dataKeys.forEach(<span class=\"function\">(<span class=\"params\">item</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(item); <span class=\"comment\">// 資料為字串</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n\n<p>這樣就可以來做切割的動作，再把資料丟回 data 設定好的空陣列即可，然後這個功能就做完了（灑花）！</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">getCheckedKeys() &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> dataKeys = <span class=\"keyword\">this</span>.$refs[<span class=\"string\">'tree'</span>].getCheckedKeys();</span><br><span class=\"line\">  dataKeys.forEach(<span class=\"function\">(<span class=\"params\">item</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> tagId = item.split(<span class=\"string\">'_'</span>)[<span class=\"number\">1</span>];</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.tag_ids.push(tagId);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n\n<p>.<br>.<br>.<br>.<br>.<br>.<br>.</p>\n<p>當然事情絕對不會如前端菜雞想得一樣…</p>\n<h2 id=\"遇到問題\"><a href=\"#遇到問題\" class=\"headerlink\" title=\"遇到問題\"></a>遇到問題</h2><h3 id=\"undefined-無法切割\"><a href=\"#undefined-無法切割\" class=\"headerlink\" title=\"undefined 無法切割\"></a>undefined 無法切割</h3><p>前面提到 split 方法只能使用在字串，但後端資料設定資料夾部份的值是 undefined，所以在測試的時候， tag 的值是可以正確，而後端也只 <code>type = &#39;tag&#39;</code> 的值，所以在改寫成這樣。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">getCheckedKeys() &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> dataKeys = <span class=\"keyword\">this</span>.$refs[<span class=\"string\">'tree'</span>].getCheckedKeys();</span><br><span class=\"line\">  dataKeys.forEach(<span class=\"function\">(<span class=\"params\">item</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (item !== <span class=\"literal\">undefined</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> keySplited = item.split(<span class=\"string\">'_'</span>)[<span class=\"number\">0</span>];</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (keySplited == <span class=\"string\">'tag'</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> tagId = item.split(<span class=\"string\">'_'</span>)[<span class=\"number\">1</span>];</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.tag_ids.push(tagId);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"重複傳值\"><a href=\"#重複傳值\" class=\"headerlink\" title=\"重複傳值\"></a>重複傳值</h3><p>解決型別問題後，在測試的時候又遇到會重複傳值的問題，選擇 checkbox 後，出現一個現象，<br>會把之前的選項也列入空陣列中，例如有三個選項可以勾選，選到資料會變成 1 , 12, 123 結果變成六個選項…</p>\n<p>後來觀察資料發現是陣列會一直保留前一次的所選的值，所以會不斷的添加，後來解決辦法。</p>\n<p>把陣列清空後，再重新把值放進陣列。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">getCheckedKeys() &#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.tag_ids = [];</span><br><span class=\"line\">  <span class=\"keyword\">let</span> dataKeys = <span class=\"keyword\">this</span>.$refs[<span class=\"string\">'tree'</span>].getCheckedKeys();</span><br><span class=\"line\">  dataKeys.forEach(<span class=\"function\">(<span class=\"params\">item</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (item !== <span class=\"literal\">undefined</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> keySplited = item.split(<span class=\"string\">'_'</span>)[<span class=\"number\">0</span>];</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (keySplited == <span class=\"string\">'tag'</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> tagId = item.split(<span class=\"string\">'_'</span>)[<span class=\"number\">1</span>];</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.tag_ids.push(tagId);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n\n<p>這個功能才是正確完成了！</p>\n<p>以此紀錄！</p>\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><ul>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/split\" target=\"_blank\" rel=\"noopener\">MDN-String.prototype.split()</a></li>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/pop\" target=\"_blank\" rel=\"noopener\">MDN-Array.prototype.pop()</a></li>\n</ul>\n","categories":["work"],"tags":["JavaScript","vue.js","work"]},{"title":"JS 筆記 - 使用 Google Sheet 製作外部資料","url":"/javascript/20201205/2403541966/","content":"<p><img src=\"https://i.imgur.com/VQoFbQH.jpg\" alt=\"google sheet\"></p>\n<p>最近因為工作每個專案都需要使用 API 與後端溝通，就想說能不能除了工作上能透過前端技術解決生活上的問題，也因為自己在教會有參加敬拜團，可是看到每次在排班表的同工在敬拜團的大家填寫完 Google 表單之後所生成的 Google Sheet 表格，還要一行一行的去對照誰可以誰不行，浪費太多時間，就想說不然先來處理第一波篩選出來，讓每一次的組合一眼就看得出來誰可以。</p>\n<p>所以就來研究一下 Google Sheet 怎麼生成 API。</p>\n<h2 id=\"取得資料後變成網路格式\"><a href=\"#取得資料後變成網路格式\" class=\"headerlink\" title=\"取得資料後變成網路格式\"></a>取得資料後變成網路格式</h2><p>首先我先取得這次填寫完後的 Excel 檔案，然後丟進新開啟的 Google Sheet 程式，</p>\n<ol>\n<li>選擇「檔案」&gt;「匯入」，然後會出現下方視窗，選擇 upload 標籤把要轉成線上試算表的檔案拖曳到方框內。</li>\n</ol>\n<p><img src=\"https://i.imgur.com/2ZpXoqy.png\" alt=\"import\"></p>\n<ol start=\"2\">\n<li>然後選擇「取代試算表」，再點擊「匯入資料」按鈕，就可以看見資料都匯入試算表了。</li>\n</ol>\n<p><img src=\"https://i.imgur.com/fQ8zn3I.png\" alt=\"table\"></p>\n<ol start=\"3\">\n<li>因為做成 API，這時再選到「檔案」&gt;「發佈到網路」，會看到下方視窗。</li>\n</ol>\n<p><img src=\"https://i.imgur.com/S9PEIVQ.png\" alt=\"發佈到網路\"></p>\n<ol start=\"4\">\n<li>發佈後會再彈跳一個視窗，點「確定」即可。</li>\n</ol>\n<p><img src=\"https://i.imgur.com/EzG1MwK.png\" alt=\"確定\"></p>\n<ol start=\"5\">\n<li>會在跳一個發佈後的視窗，直接點選右上角的關閉圖示，也就「X」。</li>\n</ol>\n<p><img src=\"https://i.imgur.com/d1s0mRy.png\" alt=\"close\"></p>\n<h2 id=\"終於要變成-API-了\"><a href=\"#終於要變成-API-了\" class=\"headerlink\" title=\"終於要變成 API 了\"></a>終於要變成 API 了</h2><p>取得 Google Sheet 網址規則如下：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">https://<span class=\"title\">spreadsheets.google.com</span>/<span class=\"title\">feeds</span>/<span class=\"title\">cells</span>/[<span class=\"title\">KEY</span>]/[<span class=\"title\">SHEET</span> <span class=\"title\">INDEX</span>]/<span class=\"title\">public</span>/<span class=\"title\">values</span>?<span class=\"title\">alt</span>=<span class=\"title\">json</span></span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>key: 以這個案例來說，key 就在試算表網址中的這一行(如下圖)。<br><img src=\"https://i.imgur.com/lCOsvNX.png\" alt=\"key\"></p>\n</li>\n<li><p>sheet index:就是要在第幾個頁籤，如果是第一頁，就把 sheet index 的區塊帶入 1 即可。</p>\n</li>\n</ul>\n<p>以這次的案例來說 API 就會長下面這樣。</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">https://<span class=\"title\">spreadsheets.google.com</span>/<span class=\"title\">feeds</span>/<span class=\"title\">cells</span>/1<span class=\"title\">VS99Gh0lN_cYZsaTe7cTxTPVTnT0e4p_rYAE1cSb8cU</span>/1/<span class=\"title\">public</span>/<span class=\"title\">values</span>?<span class=\"title\">alt</span>=<span class=\"title\">json</span></span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"取得資料\"><a href=\"#取得資料\" class=\"headerlink\" title=\"取得資料\"></a>取得資料</h2><p>打開 API 會看到資料都在 <code>data.feed.entry</code> 裡面，可以透過<code>gs$cell</code> 來找到所屬的 <code>row 欄</code>/ <code>col 列</code>，以及<code>儲存格</code>的內容。</p>\n<p><img src=\"https://i.imgur.com/eM7t3i9.png\" alt=\"data\"></p>\n<p>透過 Google Sheet API 取得的資料預設會帶有 CORS Header，所以不受跨 domain 存取限制，超級棒的喔！</p>\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><ul>\n<li><a href=\"https://kuro.tw/posts/2018/08/27/%E5%88%A9%E7%94%A8-Google-%E8%A9%A6%E7%AE%97%E8%A1%A8-Google-Sheet-%E4%BD%9C%E7%82%BA%E5%A4%96%E9%83%A8%E8%B3%87%E6%96%99%E4%BE%86%E6%BA%90/\" target=\"_blank\" rel=\"noopener\">利用 Google 試算表 (Google Sheet) 作為外部資料來源</a></li>\n</ul>\n","categories":["JavaScript"],"tags":["JavaScript","Google Sheet"]},{"title":"工作筆記 - 實務上從髒扣到優化","url":"/work/20201128/4257170672/","content":"<p><img src=\"https://images.unsplash.com/photo-1456735190827-d1262f71b8a3?ixlib=rb-1.2.1&ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&auto=format&fit=crop&w=1348&q=80\" alt=\"sort\"></p>\n<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>歷經從單純寫 jQuery 直接控制 DOM，寫起來真的爽，看見什麼就寫什麼，想到什麼就寫什麼。單一功能可能沒感覺，但整頁都是功能的時候，回過頭來整理就會很痛苦，拜框架所賜的關注點分離解決了這一大半的問題。</p>\n<h2 id=\"專案情境\"><a href=\"#專案情境\" class=\"headerlink\" title=\"專案情境\"></a>專案情境</h2><p>目前當道前後端溝通使用的 Web API 實務經驗還不夠，只了解一點概念，但實務上有許多眉角要知道的地方，花了一點時間熟悉外，也因為基礎不夠好嘗了許多苦頭，每天對我來說都很戰兢，深怕技術力不夠就又要說再見了！</p>\n<p>這次專案的 API 　資料類似下方格式：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">select:[</span></span><br><span class=\"line\"><span class=\"function\">&#123;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">title</span>:'<span class=\"title\">option_001</span>',</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">id</span>:'1',</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">code</span>:'<span class=\"title\">code_001</span>'</span></span><br><span class=\"line\"><span class=\"function\">&#125;,</span></span><br><span class=\"line\"><span class=\"function\">&#123;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">title</span>:'<span class=\"title\">option_002</span>',</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">id</span>:'2',</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">code</span>:'<span class=\"title\">code_002</span>'</span></span><br><span class=\"line\"><span class=\"function\">&#125;,&#123;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">title</span>:'<span class=\"title\">option_noCode</span>'</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">id</span>:'3',</span></span><br><span class=\"line\"><span class=\"function\">&#125;,</span></span><br><span class=\"line\"><span class=\"function\">]</span></span><br></pre></td></tr></table></figure>\n\n<p>專案要求是，需要有一個 <code>select</code> 選單，看資料內容會有幾種情況：</p>\n<ol>\n<li>當 code 沒有值的時候，要出現沒有 code 的選項。</li>\n<li>當 code 是 <code>code_001</code> 的時候出現 <code>code_001</code> 的選項。</li>\n<li>或是 <code>code_002</code> 的時候出現 <code>code_002</code> 的選項。</li>\n</ol>\n<blockquote>\n<p>因為我是用 VUE 開發，故下方寫法為 VUE 的寫法：</p>\n</blockquote>\n<h2 id=\"給予監聽事件\"><a href=\"#給予監聽事件\" class=\"headerlink\" title=\"給予監聽事件\"></a>給予監聽事件</h2><p>看到 <code>select</code> 事件當然要給予的是 <code>change</code>。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> @<span class=\"attr\">change</span>=<span class=\"string\">\"disableApisFiltered\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>然後在 <code>methods</code> 的地方建立一個 <code>disableApisFiltered</code> 的方法，面對編輯器真的就知道自己能力實在有夠菜，我第一個想到的是使用 if 的判斷式來進行，所以變成下方程式碼：</p>\n<p>前提說一下，因為已經先取得 API 了，所以這邊的 API 是在專案包裝過後的方法，這邊就不贅述。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">disableApisFiltered()&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.Api.filter(<span class=\"function\">(<span class=\"params\">item</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (item.code === <span class=\"literal\">undefined</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.Api;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (item.code !== <span class=\"literal\">undefined</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> item.code === <span class=\"keyword\">this</span>.query.code ? <span class=\"literal\">true</span> : <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (item.code !== <span class=\"keyword\">this</span>.query.code) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.query.code;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>說明：</p>\n<ol>\n<li>先把 API 透過 <code>filter</code> 方法篩選出資料。</li>\n<li>如果資料中的 code 是 <code>undefined</code> 時候，就回傳整個 API 資料。</li>\n<li>或是如果資料中的 code 不是 <code>undefined</code> 的時候，就回傳資料裡的 code 是不是跟 <code>select</code> 事件中的 code 相同。</li>\n<li>或是資料中的 code 不是跟 <code>select</code> 的 code 時，就回傳選單自己的值。</li>\n</ol>\n<p>當下再看功能是可以如預期中一樣的呈現，但過兩天回頭要維護優化時，實在覺得看了難過。</p>\n<h3 id=\"難過的地方\"><a href=\"#難過的地方\" class=\"headerlink\" title=\"難過的地方\"></a>難過的地方</h3><p>會看到滿滿的 if 判斷，又一直看到相同的程式碼不斷的出現，可讀性又低，所以就嘗試優化了。</p>\n<h2 id=\"優化的過程\"><a href=\"#優化的過程\" class=\"headerlink\" title=\"優化的過程\"></a>優化的過程</h2><p>菜雞如我實在想不出什麼好思維，後來就請教前輩如果要優化該怎麼去想，他提醒我把剛剛的情境重新思考一遍，用另一種說法講出來。</p>\n<p>先分析目前狀況：</p>\n<ol>\n<li>就是<strong>有值</strong>跟<strong>沒有值</strong></li>\n<li>跟資料的值相同就顯示該選項，若不相同就傳整個 API 資料。</li>\n</ol>\n<p>後來就換句話說：</p>\n<ol>\n<li>如果選項有值的時候，就去篩選資料，然後讓資料的 code 跟選單的值一樣。</li>\n<li>不然就回傳整個 API 資料。</li>\n</ol>\n<p>所以程式碼就變成：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">disableApisFiltered() &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.query.code) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.Api.filter(<span class=\"function\">(<span class=\"params\">item</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> item.code == <span class=\"keyword\">this</span>.query.code;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.Apis;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"結語\"><a href=\"#結語\" class=\"headerlink\" title=\"結語\"></a>結語</h2><p>哇!</p>\n<p>整個令人驚豔，果然經驗老到的前輩就是不一樣，透過實務經驗學到了寶貴的一課，希望透過這個觀念對於後續開發又更好的優化能力。</p>\n<p>前輩說不用一開始就想要寫漂亮的程式碼，寫程式跟寫稿子一樣，先把思維寫下來，再慢慢整理成有條理的思維，也不要一開始想效能的事情，雖然前端工程師要注重效能，但更要確定功能正常運作，效能的考量是更進階的事情。</p>\n<p>給自己做個紀錄，未來參考用。</p>\n<p><a href=\"https://www.hexschool.com/\" target=\"_blank\" rel=\"noopener\">六角學院</a></p>\n","categories":["work"],"tags":["vue.js","work"]},{"title":"全馬鐵人最終回：一趟十個月的旅程","url":"/Learning-Experience/20201109/2641793434/","content":"<p><img src=\"https://i.imgur.com/EtOe6Lt.jpg\" alt=\"goal\"></p>\n<p>全馬鐵人列表<a href=\"https://hsiangfeng.github.io/w3cHexSchool-Search/#/user\" target=\"_blank\" rel=\"noopener\">連結</a>，搜尋 Tim Hsu</p>\n<h2 id=\"報名比賽\"><a href=\"#報名比賽\" class=\"headerlink\" title=\"報名比賽\"></a>報名比賽</h2><p>去年六角學院舉辦的<a href=\"https://www.hexschool.com/2019/11/14/2019-11-14-w3Hexschool-2020-challenge/\" target=\"_blank\" rel=\"noopener\"> w3HexSchool 鼠年全馬鐵人挑戰</a>公告消息後，我沒有懷疑就直接報名了，那時剛結束 2019 IT 鐵人賽的賽事，因感受到 IT 鐵人賽連續 30 天的好處，讓自己在切版上進步的速度相當快，透過每天切版的熟悉感，讓我在切版速度不算太慢，當然還是有很多需要精進的地方，也為了可以更快速走進前端工程師的工作，所以就先報名參加，逼迫自己產出東西讓自己變強！</p>\n<p>在這段全馬鐵人的十個月，說長不長，說短不短，也發生了許多事情，就也當作第 40 篇的最終回。</p>\n<h2 id=\"投遞履歷與面試\"><a href=\"#投遞履歷與面試\" class=\"headerlink\" title=\"投遞履歷與面試\"></a>投遞履歷與面試</h2><p>今年二月初，在累積一年的能量，並完成一個旅館訂房網頁<a href=\"https://hsuchihting.github.io/Hotel_booking/hotel_index.html\">作品</a>，覺得好像可以投遞履歷了，打開各平台的人力銀行，開始投遞覺得與能力相近的公司，並一邊學習 Vue，這時全馬鐵人剛開賽，投遞後的兩週陸續接到面試通知，或許是年後轉職潮的關係，各公司比較願意開始看履歷(?)，因為我是做了十年平面才轉職前端工程師的菜鳥，實在沒什麼太大的自信，但為了家庭為了孩子，真的很想轉職成前端工程師，又加上我對 Vue 的熟悉度較低，所以先找的都是沒有使用框架的公司，但我說真的還真難找…</p>\n<h2 id=\"難找的原因\"><a href=\"#難找的原因\" class=\"headerlink\" title=\"難找的原因\"></a>難找的原因</h2><p>首先我的年紀已經是中年，又沒有相關工作經驗，加上技術含量不高，看著職缺想應徵的公司大部分都需要前端框架，所以能投得還是以 Vue 的公司為主，但又不想因為被限制太多，所以其他框架也加減投，在第一波在幾間公司透過電話小聊與面試後，都是謝謝再連絡，但拿到面試機會時，的確是一個強心劑！代表我的履歷已被這個領域認同。</p>\n<p>直到第二波投遞履歷才比較有多一點機會到公司面試，從投履歷到等待通知這段時間，非常緊張又難熬，因為已經投遞出去了，就會常常關注信件是否有動靜，但通常都沒什麼回音 (也是有博弈公司主動聯繫，但因為個人沒有考量去博弈公司，所以就排除此部分)。</p>\n<p>這中間也去參加 Yourator 所舉辦的數位徵才博覽會，因為人潮眾多，索性放棄帶電腦，只帶著 iPad 與幾份紙本履歷，就前往會場給自己一個機會，在這種場合一定要預備要怎麼在短時間介紹自己與了解工作內容。所以我在家就會找空檔自我演練，看著履歷介紹自己一遍，不用太長，因為這種大拜拜的現場也沒時間給你講太多內容，重點講一講，不要吃螺絲就好。</p>\n<h2 id=\"拿到第一份-OFFER\"><a href=\"#拿到第一份-OFFER\" class=\"headerlink\" title=\"拿到第一份 OFFER\"></a>拿到第一份 OFFER</h2><p>這時候已經三月了，眼看著已經過了一個月，說不慌是騙人的，為了讓自己可以多一點機會，就去報名了 <a href=\"https://5xruby.tw/talks/vue-js/\" target=\"_blank\" rel=\"noopener\">Vue.js 與 Vuex 前端開發實戰課程</a>，就在報名後的一週，收到一間公司的面試邀請，並且感謝上帝的恩典，在面試當下就拿到 offer 的門票，但當下我並不知道我拿到 offer，現在回想起來才知道原來當下就錄取了，也在確認報到時間沒幾天收到了 offer letter，在當月底到公司報到。</p>\n<h2 id=\"上班第一天\"><a href=\"#上班第一天\" class=\"headerlink\" title=\"上班第一天\"></a>上班第一天</h2><p>當天報到後花了一個小時的時間完成一些人事與行政事宜後，就簡單了解環境便移動到座位準備上工，但落差馬上就來了，使用 Win7(?)作業系統開發與沒碰過的 Visual Studio 2019 編輯器，介面完全沒碰過，只知道也是微軟公司開發的編輯器，但使用後是覺得也不錯用，debug 滿強的。</p>\n<p>是一間使用地圖應用開發的科技公司，也在這間公司學習閱讀 Google Maps JavaScript API 文件，與協助前端畫面的撰寫，也感謝公司讓我在這段時間可以額外充實自己的 CSS 與 jQuery 觀念。</p>\n<p>經過第三個月的考核，我提早通過試用期成為正式員工，我真的非常高興，因為我真的成為前端工程師了！當然還是很嫩的前端工程師，所以還要努力的學習。</p>\n<p>通過試用期的想法可以看<a href=\"https://hsuchihting.github.io/Learning-Experience/20200629/2632109835/\">這篇 - 終於成為正式的前端工程師?</a></p>\n<h2 id=\"工作好好的幹嘛跳槽\"><a href=\"#工作好好的幹嘛跳槽\" class=\"headerlink\" title=\"工作好好的幹嘛跳槽\"></a>工作好好的幹嘛跳槽</h2><p>契機是因為公司業務與 PM 端不知為什麼會把開發好幾個月的專案突然停擺，甚至還聽到轉單…眼看著好像有點奇怪，所以就重新打開人力銀行，嘗試把之前想投遞的公司與新發現的公司再投遞一遍，想說如果真有機會就在去面試看看吧…</p>\n<p>意外地在八月收到先前滿想去的職缺邀約報到，但因為要使用的是前端魔王 Angular，確認好薪水，與工作內容後，並再三確認目前能力是沒辦法獨立作業，對方是說想要培訓新人，所以會是由資深工程師帶領開發的專案，心想：如果是這樣比較有意願前往，不然一邊離職，若到新地點又因能力不足而被刷掉豈不兩頭空?</p>\n<p>最後評估後，還是答應了前往了，並於八月中報到，但沒想到是一個痛苦的開始…</p>\n<h2 id=\"才開始就結束，就這樣被資遣了\"><a href=\"#才開始就結束，就這樣被資遣了\" class=\"headerlink\" title=\"才開始就結束，就這樣被資遣了\"></a>才開始就結束，就這樣被資遣了</h2><p>到了新公司，環境真的很不錯，也很有制度，偏向日系經營管理，光是新人的公司簡介就花了一個半小時…使用筆電開發，這是人生的第一台 Mac 啊！突然覺得「潮」起來。當然摸索了兩天才比較習慣一些指令與用法，還好編輯器可以使用較熟悉的 VSCode。</p>\n<p>因我是平面設計背景，公司便請我學習 Adobe XD，後來才知道這裡的前端還要包 UI 設計，還好有先前的工作累積，學習起來並不吃力，花了六個小時學習後，隔天便開始進行設計稿繪製，也順利的在兩天後讓主管拿去與客戶報告。</p>\n<p>重頭戲 Angular 開發實戰來了，為了有朝一日來這間公司上班，在防疫期間保哥所開立的 <a href=\"https://www.udemy.com/course/angular-zero/\" target=\"_blank\" rel=\"noopener\">Angular 開發實戰：從零開始</a>就派上用場了，但都說是大魔王了，不要說熟悉了，光是上手就要一點時間，且還要了解 TypeScript 的特性與應用，非常的吃力，光是要做出一些簡單的換頁功能與路由串接就花了我非常多的時間，或許是我資質駑鈍吧!</p>\n<p>這中間有問題也會去詢問前輩，但得到的回答大多是：「這個官方文件有寫，可以先看看。」或是「可以先 Google 看看。」</p>\n<p>嗯?有點黑人問號…我也是先去看這兩個部分才來求救的啊…當然還是有回答我一些簡單的問題，就這樣，這樣的培訓方式令我覺得奇怪…</p>\n<p>在許多問題的累積與花很多時間查找資料，進度落後很多，不得已的情況下必須把工作帶回家開發，到這裡前兩週幾乎從晚上九點十點打開電腦，寫到兩點才睡覺，但最終第一階段的目標還是差了一點才完成。</p>\n<blockquote>\n<p>差一點就等於沒有完成。</p>\n</blockquote>\n<p>當週三下午後開了進度會議後，主管說會再給我一點時間，就請前輩給一個課題來挑戰，但有說這次目標若沒有達成就只好說抱歉了。</p>\n<p>然後這次安排的任務變成系統開發，驗收是在隔週二下午，所以我能把握的只有五天時間，剛好週三下午跟週四下午都有公司內訓要參加，所以時間就更短了…</p>\n<p>於是週三晚上我評估能做的就是把切版完成，這五天我壓力非常大，因為我心裡知道我沒辦法完成了，但我還是竭盡所能的開發，那五天幾乎都是快早上才睡，在小睡一兩個小時再去上班，非常感謝六角學院的學長姊，在週六還陪伴我一起協助我這次專案開發的問題。</p>\n<p>驗收日到了，因主管下午要開會，驗收臨時提早到中午前，當然我沒有完成開發，當天討論後就說那就交給人資處理了，也在當天下午收到了資遣通知，為了學習 Angular 所買的書籍才在週五拿到而已，然後就要暫時收起來了…</p>\n<h2 id=\"沒時間消沉太久，重新出發吧\"><a href=\"#沒時間消沉太久，重新出發吧\" class=\"headerlink\" title=\"沒時間消沉太久，重新出發吧\"></a>沒時間消沉太久，重新出發吧</h2><p>當天收到資遣通知，我也同步讓校長知道了，但對我來說這一個月算是奮力一戰，我沒有對不起自己了，雖然沒辦法成為這間公司的助力，但我沒有遺憾，只能說是自己能力不足，無法勝任這次的挑戰，但現實就是這麼殘酷…成敗論英雄！</p>\n<p>就這樣來到了下半年，這時已經九月中了，眼看也快年底了，這幾個月也沒存到什麼錢，想說如果再不投遞履歷或許就來不及，說不難過的是騙人的，沮喪也是一定的。但我給自己一個晚上的時間消化，也謝謝太太的禱告，而且我告訴自己，沮喪是沒有幫助的，只有趕快爬起來並且讓自己變強，才能再繼續挑戰新的機會，所以隔天就開始投遞履歷，更改履歷內容，更專注把 Vue 的課程再複習與筆記，繼續找東西來開發練習語法，後來投遞三十間履歷後，得到四間面試，最終獲得目前的工作，非常開心。</p>\n<p>這段時間我沒有放棄自己，也謝謝身邊的前端朋友熱心與盡力的幫助，六角學院給予這麼棒的學習環境，不過兄弟爬山，各自努力！</p>\n<h2 id=\"我已經休息夠了\"><a href=\"#我已經休息夠了\" class=\"headerlink\" title=\"我已經休息夠了\"></a>我已經休息夠了</h2><p><img src=\"https://i.imgur.com/SbiCRjy.jpg\" alt=\"Van\"></p>\n<p>知名手遊－傳說對決有一個角色叫做凡恩，我喜歡他復活的口白：我已經休息夠了！</p>\n<p>短暫的三週學習與休息，讓我可以陪伴孩子與太太，也讓太太在緊湊接送孩子與工作中稍微得到解套，是的，我已經休息夠了！</p>\n<p>十月中開始了新的旅程，這裡的工作很不錯，是循序漸進的開發，且工程師會互相討論程式，相較於前兩間比較單兵作戰，除了教枯燥無聊外，目前同仁比較會互相幫忙，也從前輩身上學會很多新的語法與思維，當然壓力跟挑戰還是有的。</p>\n<p>感謝上帝只讓我等待三週就找到新的機會，這次我會好好沉住氣，在這邊累積茁壯，成為公司與團隊的祝福與助力，成為稱職的前端工程師！</p>\n<h2 id=\"謝謝全馬鐵人\"><a href=\"#謝謝全馬鐵人\" class=\"headerlink\" title=\"謝謝全馬鐵人\"></a>謝謝全馬鐵人</h2><p>全馬鐵人落幕了，感謝<a href=\"https://www.hexschool.com/\" target=\"_blank\" rel=\"noopener\">六角學院</a>舉辦這麼有意義的活動，沒想到我能堅持到現在連續四十週的發文，為了讓自己提升能力，選擇 JavaScript 的內容來撰寫成系列文，但也間接培養自己筆記工作中問題的文章，讓自己省下重新 Google 的時間，最大的受益者還是自己，間接可以幫助到他人是件美事，但出發點就是希望未來重新查找語法的時候，當時寫的筆記可以自己幫助未來的自己，若連自己都看不懂就太失敗啦!</p>\n<h2 id=\"未完待續\"><a href=\"#未完待續\" class=\"headerlink\" title=\"未完待續\"></a>未完待續</h2><p>扣掉待業的日子，雖然只有短短接觸前端半年左右的時間，但也因為加入了許多前端社團，了解前端變化實在是快到跟不上，才大概學會一個東西就馬上來新的，螢幕解析度千變萬化，軟體發展速度也沒有辦法預測會到什麼程度，也因為這樣，已經習慣把工作遇到的問題或是學習到的新東西，利用筆記紀錄下來，幫助自己是最主要的目標，也可以幫助到跟我遇到相同問題的朋友，最近透過 GA 發現部落格的曝光度大幅提升(雖然也沒多少人看啦…)，算是驚訝，代表筆記的東西有對其他人有幫助，繼續加油！</p>\n<ul>\n<li>目前串接 API 的能力還要加強，與後端協作的溝通也還在努力！</li>\n<li>陣列與物件的資料整理觀念也還要加油與熟練，不要把事情想得太複雜！</li>\n<li>更重要的不要小看自己過去的經歷，過去累積的職場經驗絕對不會白費，前端工作不是只有寫程式而已，溝通與思維更重要！</li>\n</ul>\n<p>希望過一年回來再看到這篇，依然可以激勵自己！</p>\n<p>前端，沒有極限！</p>\n<h2 id=\"後記\"><a href=\"#後記\" class=\"headerlink\" title=\"後記\"></a>後記</h2><p>後來十月到了一間電商公司，只有簡單的面試與談話，沒有上機考試，並且我有據實回答我目前的開發能力還需加強，面試官表示可用專案來養成，進到公司五週就有五個考核，最後安排一個 project 給我做，只給我三天的時間要完成三個頁面，雖然此測試有 80 分，但面試官覺得似乎發覺養不成，兩個月後又被資遣了…一年被資遣兩次的感覺真的很難受，當然在第一個月就發覺不太對勁，又打開人力銀行投履歷，也感謝六角學院的學長介紹他們公司的培訓計畫，我也去投了，等待的過程是忐忑的，但最後收到錄取通知真的是太開心了，關於計畫可以參考<a href=\"https://medium.com/tpisoftware-%E6%98%95%E5%8A%9B%E8%B3%87%E8%A8%8A/%E5%8F%83%E8%88%87it-%E6%98%95%E7%A7%80%E8%8F%81%E8%8B%B1%E5%9F%B9%E8%A8%93%E8%A8%88%E7%95%AB%E6%98%AF%E7%A8%AE%E4%BB%80%E9%BA%BC%E9%AB%94%E9%A9%97-a82e712aeb34\" target=\"_blank\" rel=\"noopener\">這篇</a></p>\n","categories":["Learning Experience"],"tags":["前端學習之路"]},{"title":"JS 筆記 - 認識 BOM","url":"/javascript/20201108/2987667911/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/JavaScript%20note-01.jpg?alt=media&token=7bee0261-72ac-4de4-9f5a-f39d58735b7d\" alt=\"JavaScript Note\"></p>\n<h2 id=\"BOM-是什麼\"><a href=\"#BOM-是什麼\" class=\"headerlink\" title=\"BOM 是什麼\"></a>BOM 是什麼</h2><p>Browser Object Model 瀏覽器物件模型，簡稱 BOM，是瀏覽器所有功能的核心，與網頁的內容無關。</p>\n<p>在早期沒有制定標準規範的時候，各家瀏覽器廠商幾乎各自在自家瀏覽器上實作功能，非常混亂。 直到最近幾年， W3C 把各家瀏覽器都有實作的部分，以及確定已經(或未來會) 加入的功能，統一集合起來納入了 HTML5 的標準中，這也就是我們現在看到的 BOM API 的實作。</p>\n<p>BOM 也有人非正式地稱它為 「Level 0 DOM」。 因為它在 DOM level 1 標準前就已存在，而不是真的有文件去規範這些，所以「Level 0 DOM」與「BOM」兩者實際上指的是同一個東西。</p>\n<p><strong>簡單來說</strong><br>BOM，是 JavaScript 與<strong>瀏覽器</strong>溝通的橋樑，JavaScript 可以透過 BOM 對瀏覽器進行各種操作，包含開啟及關閉視窗、改變視窗大小、計時器、取得位址之類的。</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/BOM.png?alt=media&token=d34a2270-faef-4965-bb58-19d3550f58f4\" alt=\"BOM\"></p>\n<h2 id=\"什麼是-Window\"><a href=\"#什麼是-Window\" class=\"headerlink\" title=\"什麼是 Window\"></a>什麼是 Window</h2><p>BOM 的核心是 <code>window</code> 物件，而 <code>window</code> 物件提供的特性主要為 <code>document</code>、<code>location</code>、<code>navigator</code>、<code>screen</code>、<code>history</code> 以及 <code>frames</code>。</p>\n<p>在瀏覽器裡的 <code>window</code> 物件扮演著兩種角色：</p>\n<ul>\n<li>ECMAScript 標準裡的「全域物件」 (Global Object)</li>\n<li>JavaScript 用來與瀏覽器溝通的窗口</li>\n</ul>\n<p>可以透過 chrome 開發人員工具中的 <code>console</code> 輸入 <code>window</code> ，得到相關的值，假如我今天想要得到網頁中的 <code>a</code> 連結資訊，就可以這樣輸入：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">111</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">window</span>.a); <span class=\"comment\">//111</span></span><br></pre></td></tr></table></figure>\n\n<p>另外，window 也是瀏覽器中的對話框，一開始學習 JavaScript，就先學 alert，</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">alert(<span class=\"string\">\"這裡是一段文字\"</span>);</span><br></pre></td></tr></table></figure>\n\n<p>但其實其完整的程式碼是這樣寫:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">window</span>.alert(<span class=\"string\">'這是一段文字'</span>;)</span><br></pre></td></tr></table></figure>\n\n<p><code>window</code> 一般都省略不寫，這就是瀏覽器環境的 BOM 提供給 JavaScript 控制的功能之一。</p>\n<h2 id=\"常用的-window-功能\"><a href=\"#常用的-window-功能\" class=\"headerlink\" title=\"常用的 window 功能\"></a>常用的 window 功能</h2><h3 id=\"當前瀏覽器尺寸-screen\"><a href=\"#當前瀏覽器尺寸-screen\" class=\"headerlink\" title=\"當前瀏覽器尺寸 screen\"></a>當前瀏覽器尺寸 screen</h3><p>當輸入 <code>window.screen</code> 的時候，會得知當前瀏覽器尺寸。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">Screen &#123;<span class=\"attr\">availWidth</span>: <span class=\"number\">1920</span>, <span class=\"attr\">availHeight</span>: <span class=\"number\">1040</span>, <span class=\"attr\">width</span>: <span class=\"number\">1920</span>, <span class=\"attr\">height</span>: <span class=\"number\">1080</span>, <span class=\"attr\">colorDepth</span>: <span class=\"number\">24</span>, …&#125;</span><br><span class=\"line\">availWidth: <span class=\"number\">1920</span></span><br><span class=\"line\">availHeight: <span class=\"number\">1040</span></span><br><span class=\"line\">width: <span class=\"number\">1920</span></span><br><span class=\"line\">height: <span class=\"number\">1080</span></span><br><span class=\"line\">colorDepth: <span class=\"number\">24</span></span><br><span class=\"line\">pixelDepth: <span class=\"number\">24</span></span><br><span class=\"line\">availLeft: <span class=\"number\">0</span></span><br><span class=\"line\">availTop: <span class=\"number\">0</span></span><br><span class=\"line\">orientation: ScreenOrientation &#123;<span class=\"attr\">angle</span>: <span class=\"number\">0</span>, <span class=\"attr\">type</span>: <span class=\"string\">\"landscape-primary\"</span>, <span class=\"attr\">onchange</span>: <span class=\"literal\">null</span>&#125;</span><br><span class=\"line\">__proto__: Screen</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"當前瀏覽的網址\"><a href=\"#當前瀏覽的網址\" class=\"headerlink\" title=\"當前瀏覽的網址\"></a>當前瀏覽的網址</h3><p>當輸入 <code>window.location</code> 的話，可以找到 <code>href</code> 的資訊，就是當前網址：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">Location &#123;<span class=\"attr\">href</span>: <span class=\"string\">\"https://tw.yahoo.com/\"</span>, <span class=\"attr\">ancestorOrigins</span>: DOMStringList, <span class=\"attr\">origin</span>: <span class=\"string\">\"https://tw.yahoo.com\"</span>, <span class=\"attr\">protocol</span>: <span class=\"string\">\"https:\"</span>, <span class=\"attr\">host</span>: <span class=\"string\">\"tw.yahoo.com\"</span>, …&#125;</span><br><span class=\"line\">ancestorOrigins: DOMStringList &#123;<span class=\"attr\">length</span>: <span class=\"number\">0</span>&#125;</span><br><span class=\"line\">origin: <span class=\"string\">\"https://tw.yahoo.com\"</span></span><br><span class=\"line\">protocol: <span class=\"string\">\"https:\"</span></span><br><span class=\"line\">host: <span class=\"string\">\"tw.yahoo.com\"</span></span><br><span class=\"line\">hostname: <span class=\"string\">\"tw.yahoo.com\"</span></span><br><span class=\"line\">port: <span class=\"string\">\"\"</span></span><br><span class=\"line\">pathname: <span class=\"string\">\"/\"</span></span><br><span class=\"line\">search: <span class=\"string\">\"\"</span></span><br><span class=\"line\">hash: <span class=\"string\">\"\"</span></span><br><span class=\"line\">href: <span class=\"string\">\"https://tw.yahoo.com/\"</span> <span class=\"comment\">//當前網址資訊</span></span><br><span class=\"line\">assign: ƒ assign()</span><br><span class=\"line\">reload: ƒ reload()</span><br><span class=\"line\">toString: ƒ toString()</span><br><span class=\"line\">replace: ƒ replace()</span><br><span class=\"line\">valueOf: ƒ valueOf()</span><br><span class=\"line\"><span class=\"built_in\">Symbol</span>(<span class=\"built_in\">Symbol</span>.toPrimitive): <span class=\"literal\">undefined</span></span><br><span class=\"line\">__proto__: Location</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"當前瀏覽器相關資訊\"><a href=\"#當前瀏覽器相關資訊\" class=\"headerlink\" title=\"當前瀏覽器相關資訊\"></a>當前瀏覽器相關資訊</h3><p>輸入 window.navigator 的話，會得到下方資訊， <code>onload</code> 就是上網狀態， <code>true</code> 就是上網中，<code>false</code> 就是離線：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">Navigator &#123;<span class=\"attr\">vendorSub</span>: <span class=\"string\">\"\"</span>, <span class=\"attr\">productSub</span>: <span class=\"string\">\"20030107\"</span>, <span class=\"attr\">vendor</span>: <span class=\"string\">\"Google Inc.\"</span>, <span class=\"attr\">maxTouchPoints</span>: <span class=\"number\">0</span>, <span class=\"attr\">hardwareConcurrency</span>: <span class=\"number\">8</span>, …&#125;</span><br><span class=\"line\">vendorSub: <span class=\"string\">\"\"</span></span><br><span class=\"line\">productSub: <span class=\"string\">\"20030107\"</span></span><br><span class=\"line\">vendor: <span class=\"string\">\"Google Inc.\"</span></span><br><span class=\"line\">maxTouchPoints: <span class=\"number\">0</span></span><br><span class=\"line\">hardwareConcurrency: <span class=\"number\">8</span></span><br><span class=\"line\">cookieEnabled: <span class=\"literal\">true</span></span><br><span class=\"line\">appCodeName: <span class=\"string\">\"Mozilla\"</span></span><br><span class=\"line\">appName: <span class=\"string\">\"Netscape\"</span></span><br><span class=\"line\">appVersion: <span class=\"string\">\"5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.122 Safari/537.36\"</span></span><br><span class=\"line\">platform: <span class=\"string\">\"Win32\"</span></span><br><span class=\"line\">product: <span class=\"string\">\"Gecko\"</span></span><br><span class=\"line\">userAgent: <span class=\"string\">\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.122 Safari/537.36\"</span></span><br><span class=\"line\">language: <span class=\"string\">\"zh-TW\"</span></span><br><span class=\"line\">languages: (<span class=\"number\">5</span>) [<span class=\"string\">\"zh-TW\"</span>, <span class=\"string\">\"zh\"</span>, <span class=\"string\">\"en-US\"</span>, <span class=\"string\">\"en\"</span>, <span class=\"string\">\"ia\"</span>]</span><br><span class=\"line\">onLine: <span class=\"literal\">true</span> <span class=\"comment\">//上網中</span></span><br><span class=\"line\">doNotTrack: <span class=\"literal\">null</span></span><br><span class=\"line\">geolocation: Geolocation &#123;&#125;</span><br><span class=\"line\">mediaCapabilities: MediaCapabilities &#123;&#125;</span><br><span class=\"line\">connection: NetworkInformation &#123;<span class=\"attr\">onchange</span>: <span class=\"literal\">null</span>, <span class=\"attr\">effectiveType</span>: <span class=\"string\">\"4g\"</span>, <span class=\"attr\">rtt</span>: <span class=\"number\">0</span>, <span class=\"attr\">downlink</span>: <span class=\"number\">10</span>, <span class=\"attr\">saveData</span>: <span class=\"literal\">false</span>&#125;</span><br><span class=\"line\">plugins: PluginArray &#123;<span class=\"number\">0</span>: Plugin, <span class=\"number\">1</span>: Plugin, <span class=\"number\">2</span>: Plugin, Chrome PDF Plugin: Plugin, Chrome PDF Viewer: Plugin, Native Client: Plugin, <span class=\"attr\">length</span>: <span class=\"number\">3</span>&#125;</span><br><span class=\"line\">mimeTypes: MimeTypeArray &#123;<span class=\"number\">0</span>: MimeType, <span class=\"number\">1</span>: MimeType, <span class=\"number\">2</span>: MimeType, <span class=\"number\">3</span>: MimeType, application/pdf: MimeType, application/x-google-chrome-pdf: MimeType, application/x-nacl: MimeType, application/x-pnacl: MimeType, <span class=\"attr\">length</span>: <span class=\"number\">4</span>&#125;</span><br><span class=\"line\">webkitTemporaryStorage: DeprecatedStorageQuota &#123;&#125;</span><br><span class=\"line\">webkitPersistentStorage: DeprecatedStorageQuota &#123;&#125;</span><br><span class=\"line\">userActivation: UserActivation &#123;<span class=\"attr\">hasBeenActive</span>: <span class=\"literal\">true</span>, <span class=\"attr\">isActive</span>: <span class=\"literal\">true</span>&#125;</span><br><span class=\"line\">mediaSession: MediaSession &#123;<span class=\"attr\">metadata</span>: <span class=\"literal\">null</span>, <span class=\"attr\">playbackState</span>: <span class=\"string\">\"none\"</span>&#125;</span><br><span class=\"line\">permissions: Permissions &#123;&#125;</span><br><span class=\"line\">deviceMemory: <span class=\"number\">8</span></span><br><span class=\"line\">clipboard: Clipboard &#123;&#125;</span><br><span class=\"line\">credentials: CredentialsContainer &#123;&#125;</span><br><span class=\"line\">keyboard: Keyboard &#123;&#125;</span><br><span class=\"line\">locks: LockManager &#123;&#125;</span><br><span class=\"line\">mediaDevices: MediaDevices &#123;<span class=\"attr\">ondevicechange</span>: <span class=\"literal\">null</span>&#125;</span><br><span class=\"line\">serviceWorker: ServiceWorkerContainer &#123;<span class=\"attr\">ready</span>: <span class=\"built_in\">Promise</span>, <span class=\"attr\">controller</span>: <span class=\"literal\">null</span>, <span class=\"attr\">oncontrollerchange</span>: <span class=\"literal\">null</span>, <span class=\"attr\">onmessage</span>: <span class=\"literal\">null</span>, <span class=\"attr\">onmessageerror</span>: <span class=\"literal\">null</span>&#125;</span><br><span class=\"line\">storage: StorageManager &#123;&#125;</span><br><span class=\"line\">presentation: Presentation &#123;<span class=\"attr\">receiver</span>: <span class=\"literal\">null</span>, <span class=\"attr\">defaultRequest</span>: <span class=\"literal\">null</span>&#125;</span><br><span class=\"line\">bluetooth: Bluetooth &#123;&#125;</span><br><span class=\"line\">usb: USB &#123;<span class=\"attr\">onconnect</span>: <span class=\"literal\">null</span>, <span class=\"attr\">ondisconnect</span>: <span class=\"literal\">null</span>&#125;</span><br><span class=\"line\">xr: XR &#123;<span class=\"attr\">ondevicechange</span>: <span class=\"literal\">null</span>&#125;</span><br><span class=\"line\">__proto__: Navigator</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"上一頁與下一頁的功能\"><a href=\"#上一頁與下一頁的功能\" class=\"headerlink\" title=\"上一頁與下一頁的功能\"></a>上一頁與下一頁的功能</h2><p>使用 <code>history</code> 來製作上一頁與下一頁的語法，先在 <code>console</code> 輸入 <code>history，會看到其中這兩個語法</code></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">History &#123;<span class=\"attr\">length</span>: <span class=\"number\">1</span>, <span class=\"attr\">scrollRestoration</span>: <span class=\"string\">\"auto\"</span>, <span class=\"attr\">state</span>: <span class=\"literal\">null</span>&#125;</span><br><span class=\"line\">length: <span class=\"number\">1</span></span><br><span class=\"line\">scrollRestoration: <span class=\"string\">\"auto\"</span></span><br><span class=\"line\">state: <span class=\"literal\">null</span></span><br><span class=\"line\">__proto__: History</span><br><span class=\"line\">length: (...)</span><br><span class=\"line\">scrollRestoration: (...)</span><br><span class=\"line\">state: (...)</span><br><span class=\"line\">go: ƒ go()</span><br><span class=\"line\">back: ƒ back() <span class=\"comment\">//上一頁</span></span><br><span class=\"line\">forward: ƒ forward() <span class=\"comment\">//下一頁</span></span><br><span class=\"line\">pushState: ƒ pushState()</span><br><span class=\"line\">replaceState: ƒ replaceState()</span><br><span class=\"line\"><span class=\"keyword\">constructor</span>: ƒ History()</span><br><span class=\"line\">Symbol(Symbol.toStringTag): \"History\"</span><br><span class=\"line\"><span class=\"keyword\">get</span> length: ƒ length()</span><br><span class=\"line\"><span class=\"keyword\">get</span> scrollRestoration: ƒ scrollRestoration()</span><br><span class=\"line\"><span class=\"keyword\">set</span> scrollRestoration: ƒ scrollRestoration()</span><br><span class=\"line\"><span class=\"keyword\">get</span> state: ƒ state()</span><br><span class=\"line\">__proto__: Object</span><br></pre></td></tr></table></figure>\n\n<p>做兩個按鈕，點擊後可以進行上一頁與下一頁，</p>\n<h3 id=\"HTML\"><a href=\"#HTML\" class=\"headerlink\" title=\"HTML\"></a>HTML</h3><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"aLink\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"https://tw.yahoo.com/\"</span>&gt;</span>Yahoo!<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"button\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"backBtn\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"上一頁\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"button\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"forwardBtn\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"下一頁\"</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>綁定兩個 <code>id</code> 後，寫入監聽事件，</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> back = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"backBtn\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> foward = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"forwardBtn\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//上一頁</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">back</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">window</span>.history.back();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">back.addEventListener(<span class=\"string\">\"click\"</span>, back, <span class=\"literal\">false</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//下一頁</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">forward</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">window</span>.history.forward();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">foward.addEventListener(<span class=\"string\">\"click\"</span>, forward, <span class=\"literal\">false</span>);</span><br></pre></td></tr></table></figure>\n\n<p>在讀取到新的頁面後，就可以進行上一頁與下一頁囉!!</p>\n<p>codepen: <a href=\"https://codepen.io/hnzxewqw/pen/mdJMrdN\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/mdJMrdN</a></p>\n<blockquote>\n<p>程式碼僅供對照，無法實現跳轉後功能。</p>\n</blockquote>\n<h2 id=\"列印功能\"><a href=\"#列印功能\" class=\"headerlink\" title=\"列印功能\"></a>列印功能</h2><p>寫一個列印按鈕，並綁定 <code>id</code> 寫入列印語法:</p>\n<h3 id=\"html\"><a href=\"#html\" class=\"headerlink\" title=\"html\"></a>html</h3><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"button\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"print\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"列印\"</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"JavaScript\"><a href=\"#JavaScript\" class=\"headerlink\" title=\"JavaScript\"></a>JavaScript</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"print\"</span>).onclick = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">window</span>.print();</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p>codepen: <a href=\"https://codepen.io/hnzxewqw/pen/bGdrwLq\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/bGdrwLq</a></p>\n<h2 id=\"innerHeight-outerHeight-動態擷取瀏覽器高度\"><a href=\"#innerHeight-outerHeight-動態擷取瀏覽器高度\" class=\"headerlink\" title=\"innerHeight, outerHeight 動態擷取瀏覽器高度\"></a>innerHeight, outerHeight 動態擷取瀏覽器高度</h2><p>innerHeight 指的可見的瀏覽器範圍，如下圖紅框處:</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/innerHeight.jpg?alt=media&token=b8d0323b-9f29-4793-97f0-48b0cc6001d7\" alt=\"innerHeight\"></p>\n<p>outerHeight 指的是整個瀏覽器範圍，如下圖:</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/outerHeight.png?alt=media&token=e94189dd-dd79-410a-856a-88e876d6ff5d\" alt=\"outerHeight\"></p>\n<p>如果要讓網頁圖片，不管是什麼尺寸的瀏覽器，都可以滿版呈現，可以這樣寫:</p>\n<h3 id=\"html-1\"><a href=\"#html-1\" class=\"headerlink\" title=\"html\"></a>html</h3><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"pic\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"section2\"</span>&gt;</span>section2<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>lorem150<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">//文字長度部分用數字代替，避免版面過長</span><br></pre></td></tr></table></figure>\n\n<p>綁定 <code>.pic</code> 後，動態修改 CSS 的高度樣式(覆蓋原本的數值)，讓瀏覽器的 <code>innerHeight</code> 給予當前數值，並且後面要加上單位 <code>&#39;px&#39;</code>，這樣圖片就會變成滿版了。</p>\n<h3 id=\"JavaScript-1\"><a href=\"#JavaScript-1\" class=\"headerlink\" title=\"JavaScript\"></a>JavaScript</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\".pic\"</span>).style.height = <span class=\"built_in\">window</span>.innerHeight + <span class=\"string\">\"px\"</span>;</span><br></pre></td></tr></table></figure>\n\n<p>如果任意改變瀏覽器視窗大小，也要讓圖片的高度數值跟著改變，可以在上方程式碼下，再加上這一段，在 <code>onresize</code> 的時候，會自動改變 CSS 內的 <code>innerHeight</code> 的數值。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">window</span>.onresize = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\".pic\"</span>).style.height = <span class=\"built_in\">window</span>.innerHeight + <span class=\"string\">\"px\"</span>;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p>codepen: <a href=\"https://codepen.io/hnzxewqw/pen/BaNdvrL\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/BaNdvrL</a></p>\n<hr>\n<p>參考資料:</p>\n<ul>\n<li><a href=\"https://codertw.com/%E5%89%8D%E7%AB%AF%E9%96%8B%E7%99%BC/283220/\" target=\"_blank\" rel=\"noopener\">https://codertw.com/%E5%89%8D%E7%AB%AF%E9%96%8B%E7%99%BC/283220/</a></li>\n<li><a href=\"https://ithelp.ithome.com.tw/articles/10191666\" target=\"_blank\" rel=\"noopener\">https://ithelp.ithome.com.tw/articles/10191666</a></li>\n<li><a href=\"https://medium.com/%E9%A6%AC%E6%A0%BC%E8%95%BE%E7%89%B9%E7%9A%84%E5%86%92%E9%9A%AA%E8%80%85%E6%97%A5%E8%AA%8C/js-bom-%E7%AD%86%E8%A8%98-6dedea7155ea\" target=\"_blank\" rel=\"noopener\">https://medium.com/%E9%A6%AC%E6%A0%BC%E8%95%BE%E7%89%B9%E7%9A%84%E5%86%92%E9%9A%AA%E8%80%85%E6%97%A5%E8%AA%8C/js-bom-%E7%AD%86%E8%A8%98-6dedea7155ea</a></li>\n</ul>\n","categories":["JavaScript"],"tags":["JavaScript"]},{"title":"Vue 全家桶系列 - 古早味事件燉畫面綁定","url":"/vue-js/20201031/2004839907/","content":"<p>為了多一點 Vue 的實戰練習，經網路推薦宅幹嘛 Vue 系列，透過 Alex 幽默又生活化的講述，覺得讓這個框架又顯得易學很多，這次就跟著宅幹嘛在 2018 年 IT 鐵人賽 <a href=\"https://ithelp.ithome.com.tw/users/20111576/ironman/1787\" target=\"_blank\" rel=\"noopener\">Vue.js 手牽手，一起嗑光全家桶</a>來做一系列的練習。</p>\n<p><img src=\"https://i.imgur.com/IowSSo9.png\" alt=\"day4\"></p>\n<h2 id=\"學習重點\"><a href=\"#學習重點\" class=\"headerlink\" title=\"學習重點\"></a>學習重點</h2><ul>\n<li>事件綁定。</li>\n<li>屬性綁定。</li>\n<li>餘數觀念。</li>\n</ul>\n<h2 id=\"畫面結構\"><a href=\"#畫面結構\" class=\"headerlink\" title=\"畫面結構\"></a>畫面結構</h2><p>上方圖片可以看到畫面有幾樣資訊：</p>\n<ol>\n<li>頁面圖片。</li>\n<li>頁面標題。</li>\n<li>選擇箭頭按鈕。</li>\n<li>排序編號、項目名稱、選單標題。</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"container\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">img</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">src</span>=<span class=\"string\">\"https://images.unsplash.com/photo-1593642634315-48f5414c3ad9?ixlib=rb-1.2.1&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;auto=format&amp;fit=crop&amp;w=1350&amp;q=80\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Practice Vue With Alex<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"container\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"option\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fas fa-caret-left fa-3x\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"optionTitle\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"number\"</span>&gt;</span>1<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"type\"</span>&gt;</span>練習一<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"title\"</span>&gt;</span>選單事件綁定<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fas fa-caret-right fa-3x\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"資料區\"><a href=\"#資料區\" class=\"headerlink\" title=\"資料區\"></a>資料區</h2><p>下方為準備的資料區域：</p>\n<ol>\n<li>title: 預備好的標題字串。</li>\n<li>src: 圖片。</li>\n<li>data: 選單內容，有類型、標題、連結。</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> data = &#123;</span><br><span class=\"line\">  title: <span class=\"string\">\"Practice Vue With Alex\"</span>,</span><br><span class=\"line\">  src:</span><br><span class=\"line\">    <span class=\"string\">\"https://images.unsplash.com/photo-1593642634315-48f5414c3ad9?ixlib=rb-1.2.1&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;auto=format&amp;fit=crop&amp;w=1350&amp;q=80\"</span>,</span><br><span class=\"line\">  index: <span class=\"number\">0</span>,</span><br><span class=\"line\">  menu: [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      type: <span class=\"string\">\"練習一\"</span>,</span><br><span class=\"line\">      title: <span class=\"string\">\"選單事件綁定\"</span>,</span><br><span class=\"line\">      link: <span class=\"string\">\"#\"</span>,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      type: <span class=\"string\">\"練習二\"</span>,</span><br><span class=\"line\">      title: <span class=\"string\">\"雙向資料表單處理\"</span>,</span><br><span class=\"line\">      link: <span class=\"string\">\"#\"</span>,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      type: <span class=\"string\">\"練習三\"</span>,</span><br><span class=\"line\">      title: <span class=\"string\">\"使用者輸入呈現\"</span>,</span><br><span class=\"line\">      link: <span class=\"string\">\"#\"</span>,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      type: <span class=\"string\">\"練習四\"</span>,</span><br><span class=\"line\">      title: <span class=\"string\">\"篩選資料轉換\"</span>,</span><br><span class=\"line\">      link: <span class=\"string\">\"#\"</span>,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      type: <span class=\"string\">\"練習五\"</span>,</span><br><span class=\"line\">      title: <span class=\"string\">\"互動式資料選單\"</span>,</span><br><span class=\"line\">      link: <span class=\"string\">\"#\"</span>,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      type: <span class=\"string\">\"練習六\"</span>,</span><br><span class=\"line\">      title: <span class=\"string\">\"CSS + jQuery 動畫\"</span>,</span><br><span class=\"line\">      link: <span class=\"string\">\"#\"</span>,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      type: <span class=\"string\">\"練習七\"</span>,</span><br><span class=\"line\">      title: <span class=\"string\">\"資料觀測與設定\"</span>,</span><br><span class=\"line\">      link: <span class=\"string\">\"#\"</span>,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      type: <span class=\"string\">\"練習八\"</span>,</span><br><span class=\"line\">      title: <span class=\"string\">\"家鄉通訊錄 API\"</span>,</span><br><span class=\"line\">      link: <span class=\"string\">\"#\"</span>,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      type: <span class=\"string\">\"練習九\"</span>,</span><br><span class=\"line\">      title: <span class=\"string\">\"TodoList 實做\"</span>,</span><br><span class=\"line\">      link: <span class=\"string\">\"#\"</span>,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  ],</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"雙向綁定做出標題與圖片\"><a href=\"#雙向綁定做出標題與圖片\" class=\"headerlink\" title=\"雙向綁定做出標題與圖片\"></a>雙向綁定做出標題與圖片</h2><ol>\n<li>就用雙括號將標題的字串用 <code>Vue 全家桶系列 - 古早味事件燉畫面綁定</code> 帶入 templete 中。</li>\n<li>使用屬性綁定圖片 <code>:src=&quot;src&quot;</code>。即完成綁定，等等加上 Vue 實體就會正確顯示在畫面上。</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"container\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">:src</span>=<span class=\"string\">\"src\"</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>&#123;&#123;title&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"資料起始點設定\"><a href=\"#資料起始點設定\" class=\"headerlink\" title=\"資料起始點設定\"></a>資料起始點設定</h2><p>因為目前資料中有十筆資料，但正常來說畫面顯示應該只有一筆，所以在資料中的起始點多給一個屬性 <code>index</code>，其值為 <code>0</code> ，代表我一開始要從第一筆顯示。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> data = &#123;</span><br><span class=\"line\">  title: <span class=\"string\">\"Practice Vue With Alex\"</span>,</span><br><span class=\"line\">  src:</span><br><span class=\"line\">    <span class=\"string\">\"https://images.unsplash.com/photo-1593642634315-48f5414c3ad9?ixlib=rb-1.2.1&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;auto=format&amp;fit=crop&amp;w=1350&amp;q=80\"</span>,</span><br><span class=\"line\">  index: <span class=\"number\">0</span>, <span class=\"comment\">//從第 0 筆開始</span></span><br><span class=\"line\">  menu: [</span><br><span class=\"line\">  ...資料部分略...</span><br><span class=\"line\">  ],</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"用-Vue-把畫面與資料連起來\"><a href=\"#用-Vue-把畫面與資料連起來\" class=\"headerlink\" title=\"用 Vue 把畫面與資料連起來\"></a>用 Vue 把畫面與資料連起來</h2><p>有畫面也有資料了，中間的媒介就是 Vue 了，如果用這樣就更好理解。<br>再來就是建立 Vue 的實體，並把畫面與資料先建立好。</p>\n<h3 id=\"Vue\"><a href=\"#Vue\" class=\"headerlink\" title=\"Vue\"></a>Vue</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> vm=<span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  el: <span class=\"string\">\"#app\"</span>,</span><br><span class=\"line\">  data: data,</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<p>把剩下的畫面的資料也綁好，如下：</p>\n<h3 id=\"HTML\"><a href=\"#HTML\" class=\"headerlink\" title=\"HTML\"></a>HTML</h3><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"option\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fas fa-caret-left fa-3x\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"optionTitle\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"number\"</span>&gt;</span>&#123;&#123;index+1 &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"type\"</span>&gt;</span>&#123;&#123;menu[index].type&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"title\"</span>&gt;</span>&#123;&#123;menu[index].title&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">:href</span>=<span class=\"string\">\"menu[index].link\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fas fa-caret-right fa-3x\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"點擊事件\"><a href=\"#點擊事件\" class=\"headerlink\" title=\"點擊事件\"></a>點擊事件</h2><p>在要點擊的按鈕上加 <code>v-on</code> 事件，並且給予對應的 <code>methods</code>，其事件名稱為 <code>changePage()</code>，因為會有往前跟往後，所以參數就給予 <code>-1</code> 與 <code>1</code> ，</p>\n<h3 id=\"html\"><a href=\"#html\" class=\"headerlink\" title=\"html\"></a>html</h3><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"option\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span> @<span class=\"attr\">click.prevent</span>=<span class=\"string\">\"changePage(-1)\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fas fa-caret-left fa-3x\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"optionTitle\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"number\"</span>&gt;</span>&#123;&#123;index+1 &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"type\"</span>&gt;</span>&#123;&#123;menu[index].type&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"title\"</span>&gt;</span>&#123;&#123;menu[index].title&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">:href</span>=<span class=\"string\">\"menu[index].link\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span> @<span class=\"attr\">click.prevent</span>=<span class=\"string\">\"changePage(1)\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fas fa-caret-right fa-3x\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"vue\"><a href=\"#vue\" class=\"headerlink\" title=\"vue\"></a>vue</h3><p>因為在前面事件有帶入參數，所以在方法中也給予一個對應的參數名稱，其名稱可自訂。</p>\n<ul>\n<li>Vue 的 index 做加總。<blockquote>\n<p>this 在 vue 中已被包裝指向 vue 本身，所以不會在指到 window 物件。</p>\n</blockquote>\n</li>\n<li>判斷，如果此 index 小於 0 ，則 index 就為第一筆。</li>\n<li>或是此 index 大於 9，則此 index 就會是 9。因為陣列排序從 0 開始，所以資料長度要 -1。簡單說就是自己等於自己。</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  el: <span class=\"string\">\"#app\"</span>,</span><br><span class=\"line\">  data: data,</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\">    changePage(change) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.index += change;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.index &lt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.index = <span class=\"number\">0</span>;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.index &gt; menu.length - <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.index = change - <span class=\"number\">1</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>但有趣的可以使用<strong>餘數</strong>的觀念，就會變成下方寫法。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">this</span>.index = (<span class=\"keyword\">this</span>.index + change + <span class=\"keyword\">this</span>.menu.length) % <span class=\"keyword\">this</span>.menu.length;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"什麼是餘數\"><a href=\"#什麼是餘數\" class=\"headerlink\" title=\"什麼是餘數\"></a>什麼是餘數</h3><p>這是一個很不錯的技巧，數學極爛的我真是覺得小時候應該多熟悉點基本數學觀念，但餘數這個還可以，舉例：</p>\n<p><code>20 / 3=18</code> 餘 <code>2</code><br><code>39/5=7</code> 餘 <code>4</code>，</p>\n<p>這是國小除法應該會教到，那這有什麼關係，以上兩個規則會發現，<br>3 的餘數為 0、1、2。<br>5 的餘數為 0、1、2、3、4。</p>\n<p>由此可知，陣列的數量與餘數的數量<strong>相同</strong>，如果把數字帶入下方公式就會很明顯得到結果。</p>\n<p>目前資料有 10 筆資料，所以：</p>\n<p><code>this.index</code> = <code>0</code>, 陣列起始為 <code>0</code>。<br><code>change</code> = <code>1</code> or <code>-1</code>，<br><code>this.menu.length</code> = <code>10</code>。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">this</span>.index = (<span class=\"keyword\">this</span>.index + change + <span class=\"keyword\">this</span>.menu.length) % <span class=\"keyword\">this</span>.menu.length;</span><br></pre></td></tr></table></figure>\n\n<p>但這邊為什麼要加上 <code>this.menu.length</code> 呢? 如果不帶陣列長度的話會變這樣：</p>\n<p>加號的話，<code>(0 +1) %10</code> 會餘 <code>1</code>，加號沒什問題。</p>\n<p>但如果是帶 <code>-1</code> 的時候會變 <code>(0 -1 )%10</code> ，餘數會變 <code>-1</code>，然後就壞掉了。</p>\n<p>所以加上陣列長度是確保加總值會維持為真值，也就是正值，就不會壞掉了。</p>\n<blockquote>\n<p>加號：<code>(0 +1+10) %10</code> 餘 <code>1</code>。<br>減號：<code>(0 -1+10) %10</code> 餘 <code>9</code>。</p>\n<p>這招好強啊!!</p>\n</blockquote>\n<p>是用於圖片輪播或是循環選單，而且可以一行抵六行，更簡潔的寫法！</p>\n<p>寫到這邊基本上功能都已經完成且可以正常運作。</p>\n<h2 id=\"優化程式碼\"><a href=\"#優化程式碼\" class=\"headerlink\" title=\"優化程式碼\"></a>優化程式碼</h2><p>為了讓程式碼更好閱讀，可以把重複出現的程式碼使用 computed 屬性統一整理，就把剛剛重複出現的兩個程式碼整理好，</p>\n<h3 id=\"computed\"><a href=\"#computed\" class=\"headerlink\" title=\"computed\"></a>computed</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">computed: &#123;</span><br><span class=\"line\">   <span class=\"comment\">//重複的變數</span></span><br><span class=\"line\">   today() &#123;</span><br><span class=\"line\">     <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.menu[<span class=\"keyword\">this</span>.index];</span><br><span class=\"line\">   &#125;,</span><br><span class=\"line\">   total() &#123;</span><br><span class=\"line\">     <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.menu.length;</span><br><span class=\"line\">   &#125;,</span><br><span class=\"line\"> &#125;,</span><br></pre></td></tr></table></figure>\n\n<p>最後再把該 <code>this.menu[this.index]</code> 跟 <code>this.menu.length</code> 替換成這兩個方法即可。</p>\n<h3 id=\"當第一跟最後的隱藏箭頭圖示\"><a href=\"#當第一跟最後的隱藏箭頭圖示\" class=\"headerlink\" title=\"當第一跟最後的隱藏箭頭圖示\"></a>當第一跟最後的隱藏箭頭圖示</h3><p>為了讓使用者更合理使用介面，當資料選到第一項與最後一項的時候，要隱藏左邊跟右邊的箭頭。</p>\n<p>這時使用 <code>v-if</code> 判斷箭頭的條件。<br><strong>左邊箭頭</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 若不是第一天就顯示 --&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- index != 0 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">v-if</span>=<span class=\"string\">\"index &gt; 0\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span> @<span class=\"attr\">click.prevent</span>=<span class=\"string\">\"changePage(-1) \"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fas fa-caret-left fa-3x\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>右邊箭頭</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 若不是最後一天就顯示 --&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- index != this.menu.length --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">v-if</span>=<span class=\"string\">\"index &lt; total -1\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span> @<span class=\"attr\">click.prevent</span>=<span class=\"string\">\"changePage(1)\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fas fa-caret-right fa-3x\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>這樣在選到第一個跟最後一個的時候，就會隱藏起頭與最後的箭頭了！</p>\n<p>最後程式碼可以看 <a href=\"https://codepen.io/hnzxewqw/full/ExymYPe\" target=\"_blank\" rel=\"noopener\">CodePen</a></p>\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><p><a href=\"https://ithelp.ithome.com.tw/articles/10202577\" target=\"_blank\" rel=\"noopener\">開胃餐點 - 古早味事件燉畫面綁定</a></p>\n","categories":["vue.js"],"tags":["vue.js"]},{"title":"JS 筆記 - JSON.parse, JSON.stringify","url":"/javascript/20201030/1732150077/","content":"<p>JSON 資料很容易使用到這兩個屬性，因 <code>localstorage</code> 只會存入 string 資料，故要把 JSON 資料轉換成可以存取的值，需要使用以下兩個語法:</p>\n<ul>\n<li><code>JSON.stringify()</code>: 將 <code>array</code> 轉為 <code>string</code>。</li>\n<li><code>JSON.parse()</code>: 將 sring 轉為 array。</li>\n</ul>\n<p>目前下方有一個 JSON 資料:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> data = [</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    team: <span class=\"string\">\"BULLS\"</span>,</span><br><span class=\"line\">    player: <span class=\"string\">\"Pippen\"</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    team: <span class=\"string\">\"JAZZ\"</span>,</span><br><span class=\"line\">    player: <span class=\"string\">\"Stockton\"</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">];</span><br></pre></td></tr></table></figure>\n\n<p>先把資料轉成字串存入 localstorage:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> dataString = <span class=\"built_in\">JSON</span>.stringify(data); <span class=\"comment\">//將資料轉成 string</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(dataString); <span class=\"comment\">//確認是否有抓到 data</span></span><br><span class=\"line\">localStorage.setItem(<span class=\"string\">\"data\"</span>, dataString); <span class=\"comment\">//存入 key 為 data, value 為dataString</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(localStorage.getItem(data)); <span class=\"comment\">// 確認可取出 data 資料</span></span><br></pre></td></tr></table></figure>\n\n<p>需要使用時，再把資料轉成 Array 資料，並取出資料中第一筆 player 資料:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> getData = localStorage.getItem(<span class=\"string\">\"data\"</span>); <span class=\"comment\">//取出資料</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> getDataAry = <span class=\"built_in\">JSON</span>.parse(getData); <span class=\"comment\">//轉型為 array</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(getDataAry[<span class=\"number\">0</span>].player); <span class=\"comment\">//確認可取出第一筆的 player 資料，Pippen</span></span><br></pre></td></tr></table></figure>\n\n<p>codepen: <a href=\"https://codepen.io/hnzxewqw/pen/rNVwGOX\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/rNVwGOX</a></p>\n<blockquote>\n<p>可透過 console 與 Application 檢查。</p>\n</blockquote>\n","categories":["JavaScript"],"tags":["JavaScript"]},{"title":"JS 筆記 - 使用 postman 編輯通訊 API","url":"/javascript/20201030/52463831/","content":"<p><img src=\"https://i.imgur.com/xpEPDvU.png\" alt=\"postman\"></p>\n<p>使用 API 最常使用的方法，讀取、新增、編輯、刪除。<br>本次練習欄位會有排序、姓名、信箱等欄位，透過 json server 與 postman 來操作 API。</p>\n<h2 id=\"檔案初始化\"><a href=\"#檔案初始化\" class=\"headerlink\" title=\"檔案初始化\"></a>檔案初始化</h2><p>使用 node.js 設定檔案架構，所以請先安裝 <a href=\"https://nodejs.org/en/\" target=\"_blank\" rel=\"noopener\">node.js</a>，打開終端機並輸入指令：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm init</span><br></pre></td></tr></table></figure>\n\n<p>然後一路 enter 到底，就會看到檔案列出現 <code>package.json</code> 檔案。</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  \"name\": \"test\", // 專案名稱</span><br><span class=\"line\">  \"version\": \"<span class=\"number\">1</span>.<span class=\"number\">0</span>.<span class=\"number\">0</span>\", //專案版本</span><br><span class=\"line\">  \"description\": \"\", //專案簡介</span><br><span class=\"line\">  \"main\": \"index.js\", //主程式</span><br><span class=\"line\">  \"scripts\": &#123; //自訂 npm  指令</span><br><span class=\"line\">    \"test\": \"<span class=\"built_in\">echo</span> \\\"Error: no test specified\\\" &amp;&amp; <span class=\"keyword\">exit</span> <span class=\"number\">1</span>\"</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  \"author\": \"\", //作者</span><br><span class=\"line\">  \"license\": \"ISC\", //出處</span><br><span class=\"line\">  \"dependencies\": &#123; //使用的套件</span><br><span class=\"line\">    \"json-server\": \"^<span class=\"number\">0</span>.<span class=\"number\">16</span>.<span class=\"number\">2</span>\"</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>並修改下方這樣：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  \"name\": \"test\",</span><br><span class=\"line\">  \"version\": \"<span class=\"number\">1</span>.<span class=\"number\">0</span>.<span class=\"number\">0</span>\",</span><br><span class=\"line\">  \"description\": \"api postman practice\",</span><br><span class=\"line\">  \"scripts\": &#123;</span><br><span class=\"line\">    \"json\":\"json-server --watch db.json --port <span class=\"number\">3000</span>\"</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  \"author\": \"Tim\",</span><br><span class=\"line\">  \"license\": \"MIT\",</span><br><span class=\"line\">  \"dependencies\": &#123;</span><br><span class=\"line\">    \"json-server\": \"^<span class=\"number\">0</span>.<span class=\"number\">16</span>.<span class=\"number\">2</span>\"</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>scripts 指令部份：執行自訂指令 json 時，會透過 <code>json-server</code> 套件執行 <code>watch</code> 來監看 <code>db.json</code> 這支檔案，並使用 <code>post:3000</code>，post 的路由位置可自訂。</p>\n</blockquote>\n<h2 id=\"json-server\"><a href=\"#json-server\" class=\"headerlink\" title=\"json-server\"></a>json-server</h2><p>完成後安裝 <code>json-server</code> ，輸入安裝指令：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm i json-server</span><br></pre></td></tr></table></figure>\n\n<p>就會開始安裝，再安裝的同時順便建立一個 <code>json</code> 檔案，名稱為 <code>db.json</code> ，完成本地資料庫設建立。</p>\n<blockquote>\n<p>json 檔案內容為物件形式，需要注意的地方是<strong>屬性</strong>跟其<strong>值</strong>需要用雙引號。</p>\n</blockquote>\n<p>在 <code>db.json</code> 建立好的資料如下：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  \"contact\":[</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      \"id\":<span class=\"number\">1</span>,</span><br><span class=\"line\">      \"name\":\"Tim\",</span><br><span class=\"line\">      \"email\":\"timhsu@email.com\"</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><code>post</code> 檔案時，不必給 <code>id</code> 的項目，因為 <code>id</code> 是資料庫自行管理的資料，新增資料後會自動加入。</p>\n<h2 id=\"執行-json-指令\"><a href=\"#執行-json-指令\" class=\"headerlink\" title=\"執行 json 指令\"></a>執行 json 指令</h2><p>使用剛剛自定義的指令</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm run json</span><br></pre></td></tr></table></figure>\n\n<p>終端機最後跑完會出現下方資訊：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">Resources</span><br><span class=\"line\"><span class=\"function\">  http://<span class=\"title\">localhost</span>:3000/<span class=\"title\">contact</span></span></span><br><span class=\"line\"><span class=\"function\"></span></span><br><span class=\"line\"><span class=\"function\">  <span class=\"title\">Home</span></span></span><br><span class=\"line\"><span class=\"function\">  <span class=\"title\">http</span>://<span class=\"title\">localhost</span>:3000</span></span><br></pre></td></tr></table></figure>\n\n<p>將 Home 的網址貼到瀏覽器，會得到下方頁面資訊，就代表成功了。</p>\n<p><img src=\"https://i.imgur.com/JFxjAte.png\" alt=\"cut\"></p>\n<p>可以看到在 Resources 中有幾個方法可以使用，等等會介紹較常使用的五個方法。</p>\n<p>輸入 Resources 的網址可以看到一開始建立的資料內容。</p>\n<blockquote>\n<p>注意：<code>npm run json</code> 要持續開著才可以正確開啟資料頁面在瀏覽器上。</p>\n<p><img src=\"https://i.imgur.com/t8GAVkS.png\" alt=\"contact\"></p>\n</blockquote>\n<h2 id=\"使用-postman\"><a href=\"#使用-postman\" class=\"headerlink\" title=\"使用 postman\"></a>使用 postman</h2><p>postman 下載<a href=\"https://www.postman.com/downloads/\" target=\"_blank\" rel=\"noopener\">連結</a></p>\n<p>完成後打開會看到起始畫面：<br><img src=\"https://i.imgur.com/yJIeZja.png\" alt=\"postman\"></p>\n<p>就開始操作 API 吧！</p>\n<p>都貼上此網址</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">http://<span class=\"title\">localhost</span>:3000/<span class=\"title\">contact</span></span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"GET-讀取資料\"><a href=\"#GET-讀取資料\" class=\"headerlink\" title=\"GET 讀取資料\"></a>GET 讀取資料</h2><p>顧名思義就是取得資料，選到 GET 方法再選擇 send，目前沒有指定任何編號，所以會得到所有資料，但目前預設只有一筆，所以<br>只會出現一筆資料。</p>\n<p><img src=\"https://i.imgur.com/en2SisW.png\" alt=\"get\"></p>\n<h2 id=\"POST-新增資料\"><a href=\"#POST-新增資料\" class=\"headerlink\" title=\"POST 新增資料\"></a>POST 新增資料</h2><p>將資料送出到數據庫，這邊選擇的界面不同，</p>\n<ol>\n<li>方法選擇 <code>POST</code></li>\n<li>標籤選到 <code>body</code>。</li>\n<li>再選到 <code>raw</code>。</li>\n<li>最後格式下拉選單選擇 <code>JSON</code>。</li>\n<li>並且輸入下方資訊。</li>\n<li><code>send</code> 資料後會得到下方畫面</li>\n</ol>\n<p><img src=\"https://i.imgur.com/o4Ekobn.png\" alt=\"post\"></p>\n<p>同樣的在 <code>db.json</code> 中會出現剛剛新增的資料。</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  \"contact\": [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      \"id\": <span class=\"number\">1</span>,</span><br><span class=\"line\">      \"name\": \"Tim\",</span><br><span class=\"line\">      \"email\": \"timhsu@email.com\"</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      \"name\": \"Timothy\",</span><br><span class=\"line\">      \"email\": \"Timothy@email.com\",</span><br><span class=\"line\">      \"id\": <span class=\"number\">2</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"DELETE-刪除資料\"><a href=\"#DELETE-刪除資料\" class=\"headerlink\" title=\"DELETE 刪除資料\"></a>DELETE 刪除資料</h2><p>刪除資料，只要在 API 後方加上資料編號就可以直接刪除。例如我想刪除第二筆資料，就可以像下圖一樣的設定。<br><img src=\"https://i.imgur.com/GMpngqD.png\" alt=\"delete\"></p>\n<h2 id=\"PATCH-更新指定資料\"><a href=\"#PATCH-更新指定資料\" class=\"headerlink\" title=\"PATCH 更新指定資料\"></a>PATCH 更新指定資料</h2><p>更新指定資料，這時要輸入要更新的資料編號，對應的網址為 <code>http://localhost:3000/contact/2</code></p>\n<p>把名字修改成 <code>bob</code>，就會變下方畫面。</p>\n<p><img src=\"https://i.imgur.com/e047t5w.png\" alt=\"patch\"></p>\n<h2 id=\"PUT-覆寫全部資料\"><a href=\"#PUT-覆寫全部資料\" class=\"headerlink\" title=\"PUT 覆寫全部資料\"></a>PUT 覆寫全部資料</h2><p>覆寫全部資料，方法如 <code>patch</code>。</p>\n<h3 id=\"但-PATCH-跟-PUT-不同之處\"><a href=\"#但-PATCH-跟-PUT-不同之處\" class=\"headerlink\" title=\"但 PATCH 跟 PUT 不同之處\"></a>但 PATCH 跟 PUT 不同之處</h3><p><code>PATCH</code> 是可以只更新指定資料，也就是今天我只想多一加一行新的資料可以使用 <code>PATCH</code>，不會更動到原本的其他資料。</p>\n<p><code>PUT</code> 會直接把原本的欄位資料整個覆蓋掉，也就是說如果今天不小心更新資料少了或多了資料，會把原本正確的資料都一併蓋掉，所以使用上要小心。</p>\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><p><a href=\"https://ithelp.ithome.com.tw/articles/10205590\" target=\"_blank\" rel=\"noopener\">總匯拼盤 - 家鄉通訊錄佐手作 API #1</a></p>\n","categories":["JavaScript"],"tags":["JavaScript","vue.js","json-server","Postman"]},{"title":"JS 筆記 - 做一個 TodoList","url":"/javascript/20201026/3745026985/","content":"<h2 id=\"練習-TodoList-的原因\"><a href=\"#練習-TodoList-的原因\" class=\"headerlink\" title=\"練習 TodoList 的原因\"></a>練習 TodoList 的原因</h2><p>TodoList 看似簡單的介面，但其實隱藏了很多小細節，記錄一下這次的練習，預計要完成的畫面如下：<br><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/todolist.png?alt=media&token=049c8df9-9ab8-41b3-b321-8166aeb6432d\" alt=\"todolist\"></p>\n<hr>\n<h2 id=\"練習重點\"><a href=\"#練習重點\" class=\"headerlink\" title=\"練習重點\"></a>練習重點</h2><ul>\n<li>切版的熟悉度。</li>\n<li>綁定 DOM 元素。</li>\n<li>紀錄資料再 <code>localStorage。</code></li>\n<li>透過 <code>setItem</code> 與 <code>getItem</code> 實現新增待辦。</li>\n<li>透過 <code>dataset</code> 與 <code>splice</code> 屬性抓出排序與刪除資料。</li>\n</ul>\n<h2 id=\"製作-TodoList\"><a href=\"#製作-TodoList\" class=\"headerlink\" title=\"製作 TodoList\"></a>製作 TodoList</h2><blockquote>\n<p>navbar 用 Bootstrap 4 套件很快速就可以完成了，相關的 CSS 再看 codepen，就不做太多陳述。</p>\n</blockquote>\n<p>下方的 content 分成兩欄，這邊稍微紀錄一下：</p>\n<p>左邊 <code>siderbar</code> 設定為 <code>Width:30%</code></p>\n<p>右邊 <code>inputbar</code> 為 <code>width: 67%</code>，再往左邊推 <code>margin-left: 3%</code>，總共為 <code>70%</code>。</p>\n<p>因為最下面的 <code>taskList</code> 清單想要再 <code>inputbar</code> 下方，且限制其寬度， CSS 設定為 <code>width: 70%</code> 跟 <code>margin-left: 26%</code>。</p>\n<h3 id=\"HTML\"><a href=\"#HTML\" class=\"headerlink\" title=\"HTML\"></a>HTML</h3><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"content\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"siderbar\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>今天<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>明天<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>未來七天<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"inputbar\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"task\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"task\"</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">\"請輸入待辦事項\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fas fa-plus\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!-- input --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"taskList\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"SCSS\"><a href=\"#SCSS\" class=\"headerlink\" title=\"SCSS\"></a>SCSS</h3><figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.content</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">margin-top</span>: <span class=\"number\">3%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\"></span><br><span class=\"line\">  .siderbar &#123;</span><br><span class=\"line\">    <span class=\"selector-tag\">width</span>: 30%;</span><br><span class=\"line\">    <span class=\"selector-tag\">line-height</span>: 2;</span><br><span class=\"line\">    <span class=\"selector-tag\">margin-right</span>: 0;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"selector-tag\">a</span> &#123;</span><br><span class=\"line\">      <span class=\"attribute\">text-decoration</span>: none;</span><br><span class=\"line\">      <span class=\"attribute\">color</span>: $primary-color;</span><br><span class=\"line\"></span><br><span class=\"line\">      &amp;:hover &#123;</span><br><span class=\"line\">        <span class=\"selector-tag\">font-weight</span>: <span class=\"selector-tag\">bold</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"selector-class\">.inputbar</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">    <span class=\"attribute\">margin-left</span>: <span class=\"number\">3%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">42px</span>;</span><br><span class=\"line\">    //限制高度，就能讓 inputbar 的高度固定，不會受 flex 影響</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"selector-tag\">input</span> &#123;</span><br><span class=\"line\">      <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">      <span class=\"attribute\">margin-right</span>: <span class=\"number\">0.3em</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"selector-class\">.btn</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: $primary-color;</span><br><span class=\"line\">    <span class=\"attribute\">padding</span>: <span class=\"number\">5px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"number\">#fff</span>;</span><br><span class=\"line\">    <span class=\"attribute\">font-size</span>: <span class=\"number\">16px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">42px</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    &amp;:hover &#123;</span><br><span class=\"line\">      background-color: (darken($color: $primary-color, $amount: 20%));</span><br><span class=\"line\">      <span class=\"selector-tag\">color</span>: <span class=\"selector-id\">#fff</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>以上是<strong>靜態頁面</strong>會呈現的樣子，但 todolist 需要有互動，可增加與刪除事項的功能，所以要加入 JavaScript。</p>\n<h3 id=\"JavaScript\"><a href=\"#JavaScript\" class=\"headerlink\" title=\"JavaScript\"></a>JavaScript</h3><p>先綁定資料，</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> btn = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\".btn\"</span>);</span><br><span class=\"line\"><span class=\"comment\">//綁定 .btn</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> input = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\"#task\"</span>);</span><br><span class=\"line\"><span class=\"comment\">//綁定 input 中的 id</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> list = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\".taskList\"</span>);</span><br><span class=\"line\"><span class=\"comment\">//綁定新增 todos 的清單 .taskList</span></span><br></pre></td></tr></table></figure>\n\n<p>宣告 getData 變數作為從 <code>localStorage</code> 取出 <code>value</code>，typeof 會是 string，</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> getData = localStorage.getItem(<span class=\"string\">\"task\"</span>);</span><br></pre></td></tr></table></figure>\n\n<p>先宣告一個 getDataAry = 空值，如果 getData 是 true，會去解析 getDataAry 字串資料成陣列，否則就會空陣列。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> getDataAry = <span class=\"string\">\"\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (getData) &#123;</span><br><span class=\"line\">  getDataAry = <span class=\"built_in\">JSON</span>.parse(getData); <span class=\"comment\">//將字串轉成陣列</span></span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">  getDataAry = [];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> taskList = getDataAry; <span class=\"comment\">//陣列資料</span></span><br></pre></td></tr></table></figure>\n\n<p>更新清單，組完字串後，會放在 <code>.taskList</code> 的 <code>ul</code> 中，</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">updateList(); <span class=\"comment\">//讓後面新增與刪除的功能也吃到 funciton</span></span><br><span class=\"line\"><span class=\"comment\">//更新清單</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">updateList</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> len = taskList.length; <span class=\"comment\">//計算 taskList 的長度</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> str = <span class=\"string\">\"\"</span>; <span class=\"comment\">//組字串</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; len; i++) &#123;</span><br><span class=\"line\">    str += <span class=\"string\">`</span></span><br><span class=\"line\"><span class=\"string\">        &lt;li&gt;</span></span><br><span class=\"line\"><span class=\"string\">          &lt;a data-num=<span class=\"subst\">$&#123;i&#125;</span>&gt;</span></span><br><span class=\"line\"><span class=\"string\">            &lt;i class='fas fa-times-circle'&gt;&lt;/i&gt;</span></span><br><span class=\"line\"><span class=\"string\">          &lt;/a&gt;<span class=\"subst\">$&#123;taskList[i]&#125;</span></span></span><br><span class=\"line\"><span class=\"string\">        &lt;/li&gt;`</span>;</span><br><span class=\"line\">    <span class=\"comment\">//字串加總後會產生 li，並加入 a 連結，新增一個 data-num 作為陣列排序，加上陣列資料</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  list.innerHTML = str; <span class=\"comment\">//每次更新就存回 localStorage 印在網頁上成字串</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">var</span> taskListStr = <span class=\"built_in\">JSON</span>.stringify(taskList); <span class=\"comment\">//解析陣列成字串</span></span><br><span class=\"line\">  localStorage.setItem(<span class=\"string\">\"task\"</span>, taskListStr); <span class=\"comment\">//把輸入的資料存到 localStorage 的 key, value</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>建立<strong>新增資料</strong>與<strong>刪除資料</strong>監聽事件，</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">btn.addEventListener(<span class=\"string\">\"click\"</span>, getInput, <span class=\"literal\">false</span>);</span><br><span class=\"line\"><span class=\"comment\">//新增監聽按鈕，當有點擊事件時得到 input 的值</span></span><br><span class=\"line\">list.addEventListener(<span class=\"string\">\"click\"</span>, delTask, <span class=\"literal\">false</span>);</span><br><span class=\"line\"><span class=\"comment\">//新增監聽清單，當點擊事件時刪除 list 的值</span></span><br></pre></td></tr></table></figure>\n\n<p>當使用者輸入資料，</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getInput</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(input.value);</span><br><span class=\"line\">  <span class=\"keyword\">var</span> text = input.value; <span class=\"comment\">//簡易判斷是否為空值</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (text === <span class=\"string\">\"\"</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//如果 input 裡面是空值</span></span><br><span class=\"line\">    alert(<span class=\"string\">\"您未輸入事項\"</span>); <span class=\"comment\">//會跳 alert 視窗</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">//把 input 加入陣列</span></span><br><span class=\"line\">  taskList.push(text); <span class=\"comment\">//輸入的值丟回代辦事項的陣列</span></span><br><span class=\"line\">  input.value = <span class=\"string\">\"\"</span>; <span class=\"comment\">//清空輸入框</span></span><br><span class=\"line\">  updateList();</span><br><span class=\"line\">  <span class=\"comment\">//重新更新清單</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>當使用者刪除資料，點擊到的 <code>nodeName</code> 為 <code>A</code> 或是 <code>I</code> 就中斷，造成點選<code>A</code>和 <code>I</code> 就結束動作，而點到後面文字，也就是 <code>LI</code> 則被刪除，所以要把刪除的動作放在 <code>if</code> 判斷內就能點 icon 圖示刪除 todo</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">delTask</span>(<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> current = e.target.nodeName; <span class=\"comment\">//當刪除事件指的是自己的 nodeName</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (current == <span class=\"string\">\"A\"</span> || current == <span class=\"string\">\"I\"</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> currentNum = e.target.dataset.num; <span class=\"comment\">//選取到自定義的 data-num</span></span><br><span class=\"line\">    taskList.splice(currentNum, <span class=\"number\">1</span>); <span class=\"comment\">//就刪除該筆的一筆資料</span></span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  updateList(); <span class=\"comment\">//重新更新清單</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"結語\"><a href=\"#結語\" class=\"headerlink\" title=\"結語\"></a>結語</h2><p>JS 的互動行為有點細，跟人腦思維不太一樣，要一個口令一個動作，也不用想得太難，要直觀一點，可能人腦的思維可以很快速的整合一件事情的內容，但 JS 是要透過很多的行為告訴電腦該怎麼完成這些很細的動作。很有趣的練習!!</p>\n<p>附上 codepen，可以玩玩看： <a href=\"https://codepen.io/hnzxewqw/pen/eYmRgoJ\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/eYmRgoJ</a></p>\n","categories":["JavaScript"],"tags":["JavaScript"]},{"title":"JS 筆記 - dataset 與 Array 的運用","url":"/javascript/20201019/3849135081/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/JavaScript%20note-01.jpg?alt=media&token=7bee0261-72ac-4de4-9f5a-f39d58735b7d\" alt=\"JavaScript Note\"></p>\n<h2 id=\"data\"><a href=\"#data\" class=\"headerlink\" title=\"data-*\"></a>data-*</h2><p>簡單來說，就是可以在 HTML 標籤內直接新增物件的寫法，並透過 <code>data-*</code> 可以帶入想要的值。</p>\n<p>藉由增加 <code>data-_</code> 屬性，即使是普通的 HTML 元素也能變成複雜而強大程式物件。例如說遊戲裡面的太空船精靈 能成為帶有 <code>class</code> 與<strong>數個</strong> <code>data-_</code> 屬性的 <code>&lt;img&gt;</code> 元素：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">class</span>=<span class=\"string\">\"spaceship cruiserX3\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">src</span>=<span class=\"string\">\"shipX3.png\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">data-ship-id</span>=<span class=\"string\">\"324\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">data-weapons</span>=<span class=\"string\">\"laserI laserII\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">data-shields</span>=<span class=\"string\">\"72%\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">data-x</span>=<span class=\"string\">\"414354\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">data-y</span>=<span class=\"string\">\"85160\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">data-z</span>=<span class=\"string\">\"31940\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">onclick</span>=<span class=\"string\">\"spaceships[this.dataset.shipId].blasted()\"</span></span></span><br><span class=\"line\"><span class=\"tag\">/&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"dataset\"><a href=\"#dataset\" class=\"headerlink\" title=\"dataset\"></a>dataset</h2><p>透過 JS 的可以綁定 <code>data-*</code> 並取出中的值。</p>\n<h3 id=\"HTML\"><a href=\"#HTML\" class=\"headerlink\" title=\"HTML\"></a>HTML</h3><p>寫一個範例，在 <code>li</code> 中自訂 <code>data-*</code> 新增兩個項目與值:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"list\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">data-num</span>=<span class=\"string\">\"0\"</span> <span class=\"attr\">data-dog</span>=<span class=\"string\">\"3\"</span>&gt;</span>提姆<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>當今天點選到 <code>li</code> 時，要取出 <code>.list</code> 裡面的 <code>li</code> 的 <code>data-*</code> 的值。<br>透過監聽事件，</p>\n<h3 id=\"JavaScript\"><a href=\"#JavaScript\" class=\"headerlink\" title=\"JavaScript\"></a>JavaScript</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> list = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\".list\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//確認點擊的 li 是誰</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">checkList</span>(<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> num = e.target.dataset.num;</span><br><span class=\"line\">  <span class=\"comment\">//宣告 num 變數中的事件目標，透過 dataset 取出 num 的值</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> dog = e.target.dataset.dog;</span><br><span class=\"line\">  <span class=\"comment\">//宣告 dog 變數中的事件目標，透過 dataset 取出 num 的值</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">`編號是<span class=\"subst\">$&#123;num&#125;</span>`</span>); <span class=\"comment\">//編號是 0</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">`有 <span class=\"subst\">$&#123;dog&#125;</span> 隻狗`</span>); <span class=\"comment\">//有 3 隻狗</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">list.addEventListener(<span class=\"string\">\"click\"</span>, checkList, <span class=\"literal\">false</span>);</span><br></pre></td></tr></table></figure>\n\n<p>codepen:<a href=\"https://codepen.io/hnzxewqw/pen/abZZaKb?editors=1111\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/abZZaKb?editors=1111</a></p>\n<hr>\n<h2 id=\"dataset-Array\"><a href=\"#dataset-Array\" class=\"headerlink\" title=\"dataset + Array\"></a>dataset + Array</h2><p>透過 dataset 可以實現取得 Array 資料的方式，會結合之前所學的綜合應用。</p>\n<h3 id=\"練習主題\"><a href=\"#練習主題\" class=\"headerlink\" title=\"練習主題\"></a>練習主題</h3><p>目前有一個資料，裡面有商店店長的名字，透過 data-* 自定義名稱，透過 JS 抓出資料後並渲染置網頁。</p>\n<p>得到的條件有:</p>\n<blockquote>\n<ol>\n<li>JSON 資料。</li>\n<li>要使用 data-* 命名。</li>\n<li>使用 for 迴圈抓出店長資料。</li>\n<li>使用 innerHTML 渲染網頁。</li>\n</ol>\n</blockquote>\n<h4 id=\"JSON-資料\"><a href=\"#JSON-資料\" class=\"headerlink\" title=\"JSON 資料\"></a>JSON 資料</h4><figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">var shops = [&#123;</span><br><span class=\"line\"><span class=\"function\">  keeper: '魯夫'</span></span><br><span class=\"line\"><span class=\"function\">&#125;, &#123;</span></span><br><span class=\"line\"><span class=\"function\">  <span class=\"title\">keeper</span>: '香吉士'</span></span><br><span class=\"line\"><span class=\"function\">&#125;]</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"HTML-架構\"><a href=\"#HTML-架構\" class=\"headerlink\" title=\"HTML 架構\"></a>HTML 架構</h4><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"list\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"JS\"><a href=\"#JS\" class=\"headerlink\" title=\"JS\"></a>JS</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> list = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\".list\"</span>);</span><br></pre></td></tr></table></figure>\n\n<p>前面有學習過，如果綁定多個 li，就要建立許多監聽事件，也可以這樣寫，但會降低網頁效能，所以這邊直接綁定父元素去控制子元素。</p>\n<p>因為要透過 JS 動態加入 <code>li</code> 到網頁上，所以增加一個更新清單函式並且執行它，讓這個函式裡面去跑 <code>for</code> 迴圈，將 JSON 中所需要的資料抓出來，在透過 <code>innerHTML</code> 印在 <code>li</code> 中，更新於網頁上。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">updateList</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> str = <span class=\"string\">\"\"</span>; <span class=\"comment\">//組一個字串，內容為空</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> shopLen = shops.length; <span class=\"comment\">//資料長度 2</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; shopLen &gt; i; i++) &#123;</span><br><span class=\"line\">    str += <span class=\"string\">`&lt;li data-num=<span class=\"subst\">$&#123;i&#125;</span>&gt;<span class=\"subst\">$&#123;shops[i].keeper&#125;</span>&lt;/li&gt;`</span>;</span><br><span class=\"line\">  &#125; <span class=\"comment\">//字串加總</span></span><br><span class=\"line\">  list.innerHTML = str; <span class=\"comment\">//渲染到字串，並渲染到網頁</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(str); <span class=\"comment\">// &lt;li data-num=\"0\"&gt;魯夫&lt;/li&gt;&lt;li data-num=\"1\"&gt;香吉士&lt;/li&gt;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">updateList(); <span class=\"comment\">//執行函式</span></span><br></pre></td></tr></table></figure>\n\n<p>在剛剛綁定的 <code>list</code> 變數中增加監聽事件:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">list.addEventListener(<span class=\"string\">\"click\"</span>, checkList, <span class=\"literal\">false</span>);</span><br></pre></td></tr></table></figure>\n\n<p>渲染後的值在滑鼠點擊 <code>li</code> 的時候，可以增加滑鼠事件，在點擊後可以知道點擊到的內容是什麼。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">checkList</span>(<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> num = e.target.dataset.num;</span><br><span class=\"line\">  <span class=\"comment\">//宣告一個 num ，當事件目標為自己，dataset 取出 num 的值</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(e.target.nodeName); <span class=\"comment\">//確認 nodeName 是否為 'LI'</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (e.target.nodeName !== <span class=\"string\">\"LI\"</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span>;</span><br><span class=\"line\">  &#125; <span class=\"comment\">//若選到的 nodeName 不是 LI，就回傳(停止函式)</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">`你選擇的店長為 <span class=\"subst\">$&#123;shops[num].keeper&#125;</span>`</span>); <span class=\"comment\">//顯示選擇內容</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>這樣就可以透過 dataset 的方式，去選取在 HTML 中使用 data-* 的方式，取得 Array 的資料內容!</p>\n<p>codepen: <a href=\"https://codepen.io/hnzxewqw/pen/JjdJmJK\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/JjdJmJK</a></p>\n","categories":["JavaScript"],"tags":["JavaScript"]},{"title":"Vue 筆記 - Vuex 基本認識","url":"/vue-js/20201018/1144022821/","content":"<p><img src=\"https://i.imgur.com/MmGAnsx.png\" alt=\"vuex\"></p>\n<p>上圖為一份元件與資料要傳遞的示意圖，先前知道要傳遞資料可以使用 <code>props</code> 跟 <code>emit</code> 兩種方式，來傳遞 <code>side</code> 跟 <code>components</code> 的資料，若資料狀態比較少，也可以使用 <code>evenbus</code> 來傳遞，但 <code>header</code> 跟 <code>side</code> 是同層資料，就要使用 <code>evenbus</code> 來傳遞。</p>\n<blockquote>\n<p><code>evenbus</code> 比較適合使用在簡單的情境。</p>\n</blockquote>\n<p>也不能使用全域變數，因為會失去雙向綁定的特性。</p>\n<h2 id=\"Vuex-的方式\"><a href=\"#Vuex-的方式\" class=\"headerlink\" title=\"Vuex 的方式\"></a>Vuex 的方式</h2><p><img src=\"https://i.imgur.com/U2iMDVo.png\" alt=\"store\"></p>\n<p>Vuex 就把資料與方法統一放在這裡管理，讓不管是哪一個元件都可以來這裡取用，Vuex 較常使用在中大型網站專案上，管理資料相對好用，如果是小專案使用 vuex，會有點綁手綁腳，透過 Vue CLI 會建立好 vuex 的檔案，存放在 <code>store</code> 資料下的 <code>index.js</code> 檔案，起始看到的程式如下：</p>\n<p><strong>stroe/index.js</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">\"vue\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> Vuex <span class=\"keyword\">from</span> <span class=\"string\">\"vuex\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">Vue.use(Vuex);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"keyword\">new</span> Vuex.Store(&#123;</span><br><span class=\"line\">  state: &#123;&#125;,</span><br><span class=\"line\">  mutations: &#123;&#125;,</span><br><span class=\"line\">  actions: &#123;&#125;,</span><br><span class=\"line\">  modules: &#123;&#125;,</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Vuex-使用的方法有四種\"><a href=\"#Vuex-使用的方法有四種\" class=\"headerlink\" title=\"Vuex 使用的方法有四種\"></a>Vuex 使用的方法有四種</h3><p><img src=\"https://i.imgur.com/Q1SgKk6.png\" alt=\"vuex function\"><br>上圖使用元件方法與 Vuex 的方法做對照，有點類似但卻稍微不太一樣，算是一種輔助記憶的方式。</p>\n<ol>\n<li><code>state</code>:存放預設資料。</li>\n<li><code>action</code>：取得非同步事件與取得遠端資料(不會改變狀態)。</li>\n<li><code>getter</code>：呈現畫面之前，完成計算結果。</li>\n<li><code>mutation</code>:即時改變資料內容的方法。</li>\n</ol>\n<h3 id=\"Vuex-的流程\"><a href=\"#Vuex-的流程\" class=\"headerlink\" title=\"Vuex 的流程\"></a>Vuex 的流程</h3><p><img src=\"https://i.imgur.com/YEAMHz9.png\" alt=\"vuex process\"><br>上圖為 vuex 進行的流程，元件透過 <code>action</code> 取得資料或進行非同步事件後，要透過 <code>commit</code> 方法改變 <code>mutation</code> 的資料狀態。</p>\n<blockquote>\n<p><code>Action</code>　階段不會改變資料內容。<br><code>mutation</code> 階段資料才會進行更動，故可搭配 <code>vue Devtools</code> 做資料查看。</p>\n</blockquote>\n<p>改變後的資料會更新道 <code>state</code>，並且渲染於元件。</p>\n","categories":["vue.js"],"tags":["vue.js"]},{"title":"Vue 筆記 - Props 基本觀念","url":"/vue-js/20201018/899307915/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/vue%20cover.png?alt=media&token=5f8b5aa0-eb3e-4d21-a715-07c5442dafbc\" alt=\"vue.js\"></p>\n<p>前面建立 <a href=\"https://hsuchihting.github.io/vue-js/20200920/2506730221/\">x-template</a> 有提到如何使用 props 的情境，props 是將全域元件的資料傳到局部元件的管道，設定 props 的地方，為局部元件，可以當作是承裝資料的窗口。</p>\n<h2 id=\"使用情境\"><a href=\"#使用情境\" class=\"headerlink\" title=\"使用情境\"></a>使用情境</h2><p>現在痊癒中有一個圖片的連結資料，要將這個連結資料透過 props 的方式傳遞到局部元件。</p>\n<h3 id=\"全域資料的圖片連結\"><a href=\"#全域資料的圖片連結\" class=\"headerlink\" title=\"全域資料的圖片連結\"></a>全域資料的圖片連結</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> app = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  el: <span class=\"string\">\"#app\"</span>,</span><br><span class=\"line\">  data: &#123;</span><br><span class=\"line\">    url:</span><br><span class=\"line\">      <span class=\"string\">\"https://images.unsplash.com/photo-1522204538344-922f76ecc041?ixlib=rb-0.3.5&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;s=50e38600a12d623a878983fc5524423f&amp;auto=format&amp;fit=crop&amp;w=1351&amp;q=80\"</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"要接收資料的-HTML-與局部元件\"><a href=\"#要接收資料的-HTML-與局部元件\" class=\"headerlink\" title=\"要接收資料的 HTML 與局部元件\"></a>要接收資料的 HTML 與局部元件</h3><h4 id=\"HTML\"><a href=\"#HTML\" class=\"headerlink\" title=\"HTML\"></a>HTML</h4><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>靜態傳遞<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">photo</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">photo</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>動態傳遞<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">photo</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">photo</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Vue-局部元件\"><a href=\"#Vue-局部元件\" class=\"headerlink\" title=\"Vue 局部元件\"></a>Vue 局部元件</h4><p>局部元件中已經建立好相關語法，可以看到已經動態綁定圖片資料名稱。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;script type=<span class=\"string\">\"text/x-template\"</span> id=<span class=\"string\">\"photo\"</span>&gt;</span><br><span class=\"line\">&lt;div&gt;</span><br><span class=\"line\">  &lt;img :src=<span class=\"string\">\"imgUrl\"</span> <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"img-fluid\"</span> alt=<span class=\"string\">\"\"</span> /&gt;</span><br><span class=\"line\">  &lt;p&gt;風景照&lt;<span class=\"regexp\">/p&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/</span>div&gt;</span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>局部元件相關的物件設定，<code>id</code> 為 <code>photo</code>。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">Vue.component(<span class=\"string\">\"photo\"</span>, &#123;</span><br><span class=\"line\">  props: [<span class=\"string\">\"imgUrl\"</span>],</span><br><span class=\"line\">  template: <span class=\"string\">\"#photo\"</span>,</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"靜態傳遞\"><a href=\"#靜態傳遞\" class=\"headerlink\" title=\"靜態傳遞\"></a>靜態傳遞</h2><p>竟態傳遞的方法是這張圖片之後也不會再變動比較適用，在 photo 元件標籤上，加上 props 定義的陣列名稱，在 HTML 中，不可以用小駝峰式的方式建立變數名稱，要使用 dash - 這個符號來區隔在元件中的名稱。</p>\n<blockquote>\n<p>以 imgUrl 為例，這個在程式碼中遇到不同單字的第一個字母，改為大寫的寫法稱為小駝峰式。</p>\n</blockquote>\n<p>所以在 HTML 的變數要寫成 img-url，將這個變數名稱加在 src 中。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>靜態傳遞<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">photo</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">img-url</span>=<span class=\"string\">\"https://images.unsplash.com/photo-1522204538344-922f76ecc041?ixlib=rb-0.3.5&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;s=50e38600a12d623a878983fc5524423f&amp;auto=format&amp;fit=crop&amp;w=1351&amp;q=80\"</span></span></span><br><span class=\"line\"><span class=\"tag\">&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">photo</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>這樣就完成了 <code>props</code> 的靜態傳遞。</p>\n<h2 id=\"動態傳遞\"><a href=\"#動態傳遞\" class=\"headerlink\" title=\"動態傳遞\"></a>動態傳遞</h2><p>寫法跟靜態傳遞有點像，只是因為動態傳遞可以讓會變動的資料也能即時的接收到，所以要使用 <code>v-bind</code> 的綁定。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">photo</span> <span class=\"attr\">:img-url</span>=<span class=\"string\">\"url\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">photo</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>這樣就完成了 <code>props</code> 的傳遞。</p>\n<p><a href=\"https://codepen.io/hnzxewqw/pen/rNeQBjb\" target=\"_blank\" rel=\"noopener\">DEMO</a></p>\n<h2 id=\"小結\"><a href=\"#小結\" class=\"headerlink\" title=\"小結\"></a>小結</h2><p>props 的資料傳遞在 Vue 中相當重要，懶人記憶法為是哪一個元件成為子層要接收資料，就將 props 屬性放在該元件中。</p>\n<p>完整程式碼：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>靜態傳遞<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">photo</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">img-url</span>=<span class=\"string\">\"https://images.unsplash.com/photo-1522204538344-922f76ecc041?ixlib=rb-0.3.5&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;s=50e38600a12d623a878983fc5524423f&amp;auto=format&amp;fit=crop&amp;w=1351&amp;q=80\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  &gt;</span><span class=\"tag\">&lt;/<span class=\"name\">photo</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>動態傳遞<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">photo</span> <span class=\"attr\">:img-url</span>=<span class=\"string\">\"url\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">photo</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/x-template\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"photo\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"handlebars\"><span class=\"xml\">  <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"javascript\">    &lt;img :src=<span class=\"string\">\"imgUrl\"</span> <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"img-fluid\"</span> alt=<span class=\"string\">\"\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"handlebars\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>風景照<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"handlebars\"><span class=\"xml\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"actionscript\">  Vue.component(<span class=\"string\">\"photo\"</span>, &#123;</span></span><br><span class=\"line\"><span class=\"actionscript\">    <span class=\"comment\">// 同學請依據課程內容，自行填寫 Props 的寫法</span></span></span><br><span class=\"line\"><span class=\"actionscript\">    props: [<span class=\"string\">\"imgUrl\"</span>],</span></span><br><span class=\"line\"><span class=\"actionscript\">    template: <span class=\"string\">\"#photo\"</span>,</span></span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"actionscript\">  <span class=\"keyword\">var</span> app = <span class=\"keyword\">new</span> Vue(&#123;</span></span><br><span class=\"line\"><span class=\"actionscript\">    el: <span class=\"string\">\"#app\"</span>,</span></span><br><span class=\"line\">    data: &#123;</span><br><span class=\"line\">      url:</span><br><span class=\"line\"><span class=\"actionscript\">        <span class=\"string\">\"https://images.unsplash.com/photo-1522204538344-922f76ecc041?ixlib=rb-0.3.5&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;s=50e38600a12d623a878983fc5524423f&amp;auto=format&amp;fit=crop&amp;w=1351&amp;q=80\"</span>,</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n","categories":["vue.js"],"tags":["vue.js"]},{"title":"JS 筆記 - 認識 LocalStorage","url":"/javascript/20201013/1133875456/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/JavaScript%20note-01.jpg?alt=media&token=7bee0261-72ac-4de4-9f5a-f39d58735b7d\" alt=\"JavaScript Note\"></p>\n<h2 id=\"瀏覽器如何記錄資料\"><a href=\"#瀏覽器如何記錄資料\" class=\"headerlink\" title=\"瀏覽器如何記錄資料\"></a>瀏覽器如何記錄資料</h2><p>現在瀏覽器非常聰明，為了提升使用者體驗好感度，會發現到很多網站的帳號、密碼都只要輸入一次就可以了，下次再登入就會被記得，甚至上次瀏覽過的購物商品，今天再打開網頁時，會出現瀏覽紀錄!到底是怎麼做到的?</p>\n<p>是透過這三種方式記錄的( 可透過 chrome 開發人員工具中的 <code>Application</code> 標籤找到):</p>\n<ul>\n<li>LocalStorage</li>\n<li>SessionStorage</li>\n<li>Cookie</li>\n</ul>\n<h2 id=\"LocalStorage-基本介紹\"><a href=\"#LocalStorage-基本介紹\" class=\"headerlink\" title=\"LocalStorage 基本介紹\"></a>LocalStorage 基本介紹</h2><p>在 HTML5 中，新加入了一個 <code>localStorage</code> 特性，此特性主要是用來作為本地儲存來使用的，解決了 cookie 儲存空間不足的問題。</p>\n<blockquote>\n<p><code>localStorage</code> 中一般瀏覽器支援的是 5M 大小 ( 在不同的瀏覽器中 <code>localStorage</code> 會有所不同 )。<br><code>cookie</code> 的儲存空間為 4k。</p>\n</blockquote>\n<h3 id=\"localStorage-的優勢與侷限\"><a href=\"#localStorage-的優勢與侷限\" class=\"headerlink\" title=\"localStorage 的優勢與侷限\"></a>localStorage 的優勢與侷限</h3><ul>\n<li><strong>localStorage 的優勢</strong></li>\n</ul>\n<ol>\n<li>拓展了 cookie 的 4K 限制。</li>\n<li>瀏覽器儲存在本地端的資料，格式為 <code>key</code>, <code>value</code>。</li>\n</ol>\n<blockquote>\n<p>需要注意的是「<code>value</code> 的型態只有 <code>String</code>」!會可以將第一次請求的資料直接儲存到本地，這個相當於一個 5M 大小的針對於前端頁面的資料庫，相比於 cookie 可以節約頻寬，但是這個卻是只有在高版本的瀏覽器中才支援的</p>\n</blockquote>\n<ul>\n<li><strong>localStorage 的侷限</strong></li>\n</ul>\n<ol>\n<li>在 IE8 以上版本才支援這個屬性。</li>\n<li>目前所有的瀏覽器中都會把 <code>localStorage</code> 的值 ( <code>key</code>, <code>value</code> ) 型別限定為 <code>string</code> ，需要透過 JSON 轉換型別。</li>\n<li>在瀏覽器的隱私模式是不可讀取的。</li>\n<li>基本上是對 <code>string</code> 的讀取，如果儲存內容多的話會消耗記憶體空間，會導致頁面卡頓。</li>\n<li>無法被<a href=\"https://zh.wikipedia.org/wiki/%E7%B6%B2%E8%B7%AF%E7%88%AC%E8%9F%B2\" target=\"_blank\" rel=\"noopener\">爬蟲</a>抓取到。</li>\n</ol>\n<h3 id=\"localStorage-與-sessionStorage-的差異\"><a href=\"#localStorage-與-sessionStorage-的差異\" class=\"headerlink\" title=\"localStorage 與 sessionStorage 的差異\"></a>localStorage 與 sessionStorage 的差異</h3><p>這兩者常一起講，因為幾乎都相同，唯一的區別只有:</p>\n<ul>\n<li><code>localStorage</code> 屬於永久性儲存。</li>\n<li><code>sessionStorage</code> 屬於當結束網頁的時候，<code>sessionStorage</code> 中的鍵值對會被清空。</li>\n</ul>\n<blockquote>\n<p><a href=\"https://developer.mozilla.org/zh-TW/docs/Web/API/Window/sessionStorage\" target=\"_blank\" rel=\"noopener\">sessionStorage 介紹</a>。</p>\n</blockquote>\n<h2 id=\"localStorage-的存取\"><a href=\"#localStorage-的存取\" class=\"headerlink\" title=\"localStorage 的存取\"></a>localStorage 的存取</h2><p>基本操作會使用下方兩個屬性存取 localStorage 的值。</p>\n<ul>\n<li>setItem 存入資料</li>\n<li>getItem 取出資料</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">\"text\"</span>;</span><br><span class=\"line\">localStorage.setItem(<span class=\"string\">\"textName\"</span>, str); <span class=\"comment\">//存入資料(key,value)</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(localStorage.getItem(<span class=\"string\">\"textName\"</span>)); <span class=\"comment\">//取出 key 的值</span></span><br></pre></td></tr></table></figure>\n\n<p>codepen: <a href=\"https://codepen.io/hnzxewqw/pen/rNVwzzq\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/rNVwzzq</a></p>\n<hr>\n<h3 id=\"簡易練習\"><a href=\"#簡易練習\" class=\"headerlink\" title=\"簡易練習\"></a>簡易練習</h3><p>下方有一個 <code>input</code> 表格，並透過兩個 <code>button</code>，存入 <code>input</code> 輸入的資料，另一個是呼叫資料。</p>\n<p><strong>user story:</strong></p>\n<blockquote>\n<ol>\n<li>有一個 input，會輸入資料。</li>\n<li>一個 button 存入資料。</li>\n<li>資料要存到 localStorage。</li>\n<li>一個 button 取出資料。</li>\n</ol>\n</blockquote>\n<h4 id=\"HTML\"><a href=\"#HTML\" class=\"headerlink\" title=\"HTML\"></a>HTML</h4><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"inputClass\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">\"請輸入姓名\"</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"button\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"setBtn\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"存入資料\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"button\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"getBtn\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"取出資料\"</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"存入資料-setItem\"><a href=\"#存入資料-setItem\" class=\"headerlink\" title=\"存入資料 setItem\"></a>存入資料 setItem</h3><h4 id=\"JavaScript\"><a href=\"#JavaScript\" class=\"headerlink\" title=\"JavaScript\"></a>JavaScript</h4><p>首先要透過點擊的 <code>button</code> 後，存入資料 tim，所以要綁定 <code>.setBtn</code> 後，建立監聽事件。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//綁定 .setBtn</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> setBtn = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\".setBtn\"</span>);</span><br><span class=\"line\"><span class=\"comment\">//監聽 setBtn</span></span><br><span class=\"line\">setBtn.addEventListener(<span class=\"string\">\"click\"</span>, setInputItem, <span class=\"literal\">false</span>);</span><br><span class=\"line\"><span class=\"comment\">//建立 function</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">setInputItem</span>(<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> str = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\".text\"</span>).value; <span class=\"comment\">//選擇到表單輸入的值</span></span><br><span class=\"line\">  localStorage.setItem(<span class=\"string\">\"textName\"</span>, str); <span class=\"comment\">//存入 localStorage</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>在 function 內，透過 <code>console.log(&#39;textName&#39;);</code> 確認所輸入的資料有存入 <code>localStorage</code></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"textName\"</span>);</span><br><span class=\"line\"><span class=\"comment\">//透過 Application 檢查 localStorage 後</span></span><br><span class=\"line\"><span class=\"comment\">//key=textName</span></span><br><span class=\"line\"><span class=\"comment\">//value=tim</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"取出資料-getItem\"><a href=\"#取出資料-getItem\" class=\"headerlink\" title=\"取出資料 getItem\"></a>取出資料 getItem</h3><p>綁定取出資料的 <code>button</code>，建立監聽 <code>click</code> 事件，點擊後，取出剛剛輸入的資料，並跳出 <code>alert</code> 視窗。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//綁定 .getBtn</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> getBtn = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\".getBtn\"</span>);</span><br><span class=\"line\"><span class=\"comment\">//監聽 getBtn</span></span><br><span class=\"line\">getBtn.addEventListener(<span class=\"string\">\"click\"</span>, getInputItem, <span class=\"literal\">false</span>);</span><br><span class=\"line\"><span class=\"comment\">//建立 function</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getInputItem</span>(<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> str = localStorage.getItem(<span class=\"string\">\"textName\"</span>); <span class=\"comment\">//取出 textName 的值</span></span><br><span class=\"line\">  alert(<span class=\"string\">\"Hello!\"</span> + str); <span class=\"comment\">//取出後跳 alert</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>codepen: <a href=\"https://codepen.io/hnzxewqw/pen/ZEGyJPw\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/ZEGyJPw</a></p>\n<hr>\n<p>參考資料:</p>\n<ul>\n<li><a href=\"https://yakimhsu.com/project/project_w7_storage.html\" target=\"_blank\" rel=\"noopener\">[第七週] 瀏覽器資料儲存 - Cookie、LocalStorage、SessionStorage</a></li>\n<li><a href=\"https://developer.mozilla.org/zh-TW/docs/Web/API/Window/localStorage\" target=\"_blank\" rel=\"noopener\">Window.localStorage</a></li>\n<li><a href=\"https://ithelp.ithome.com.tw/articles/10211972\" target=\"_blank\" rel=\"noopener\">localStorage 用法</a></li>\n<li><a href=\"https://codertw.com/%E5%89%8D%E7%AB%AF%E9%96%8B%E7%99%BC/232745/\" target=\"_blank\" rel=\"noopener\">本地儲存 localStorage 用法詳解</a></li>\n<li><a href=\"https://medium.com/%E9%A6%AC%E6%A0%BC%E8%95%BE%E7%89%B9%E7%9A%84%E5%86%92%E9%9A%AA%E8%80%85%E6%97%A5%E8%AA%8C/js-localstorage-%E7%AD%86%E8%A8%98-581d432c2d7f\" target=\"_blank\" rel=\"noopener\">[JS] localStorage 筆記</a></li>\n<li><a href=\"https://medium.com/@bebebobohaha/cookie-localstorage-sessionstorage-%E5%B7%AE%E7%95%B0-9e1d5df3dd7f\" target=\"_blank\" rel=\"noopener\">Cookie、LocalStorage、SessionStorage 差異</a></li>\n</ul>\n","categories":["JavaScript"],"tags":["JavaScript"]},{"title":"Angular 筆記 - 響應式表單驗證 Reactive Form Driven","url":"/angular/20201007/4159379097/","content":"<p><img src=\"https://i.imgur.com/87pBpoJ.jpg\" alt=\"angular\"></p>\n<p>Angular 本身對於 form 表單有強大的支援功能，透過響應式表單，可以自訂要驗證的內容寫在 TS 中，讓 HTML 標籤看起來是比較乾淨的。</p>\n<p>有兩個表單，一個是帳號跟密碼，其驗證條件：</p>\n<ol>\n<li>帳號輸入內容為 email 格式。</li>\n<li>密碼輸入有最短長度。</li>\n</ol>\n<p>這個頁面會有兩個比較重要的檔案，</p>\n<ul>\n<li>login.component.html</li>\n<li>login.component.ts</li>\n</ul>\n<h2 id=\"初始基本架構如下\"><a href=\"#初始基本架構如下\" class=\"headerlink\" title=\"初始基本架構如下\"></a>初始基本架構如下</h2><p>使用 <code>.inputControl</code> 分別將帳號密碼兩個欄位包起來，因為要共用同一個樣式作為錯誤效果。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"inputControl\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"email\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"password\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"主要的函式庫\"><a href=\"#主要的函式庫\" class=\"headerlink\" title=\"主要的函式庫\"></a>主要的函式庫</h2><p>先在 <code>app.module.ts</code> 這隻檔案匯入 <code>FormsModule</code> 跟這次的主角 <code>ReactiveFormsModule</code>。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; FormsModule, ReactiveFormsModule &#125; <span class=\"keyword\">from</span> <span class=\"string\">\"@angular/forms\"</span>;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"加入要驗證的表單內容\"><a href=\"#加入要驗證的表單內容\" class=\"headerlink\" title=\"加入要驗證的表單內容\"></a>加入要驗證的表單內容</h2><p>在 HTML 中的帳號密碼加入相對應要驗證的內容：</p>\n<ol>\n<li>form 標籤使用屬性繫結，變數名稱為 <code>formGroup</code>，其接收 form 的值。</li>\n<li>將 <code>name</code> 改寫成 <code>formControlName</code>。</li>\n<li>使用屬性繫結並使用 <code>ngClass</code>，動態的在表單上增加驗證的樣式，當 form 表單要驗證實，就會出現 <code>errors</code> 這個 class，並且執行後方 <code>submitted &amp;&amp; f.email.errors</code> 的內容。</li>\n<li>p 標籤為驗證的錯誤訊息，並使用 ngIf 做判斷，若錯誤則顯示 DOM 元素。</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;form [formGroup]=\"form\" &lt;!-- 帳號 --&gt;</span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"inputControl\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">input</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">type</span>=<span class=\"string\">\"email\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">class</span>=<span class=\"string\">\"formControl\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">formControlName</span>=<span class=\"string\">\"email\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        [<span class=\"attr\">ngClass</span>]=<span class=\"string\">\"&#123; 'errors': f.email.errors &#125;\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">placeholder</span>=<span class=\"string\">\"Account\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 帳號驗證 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">class</span>=<span class=\"string\">\"errors\"</span> *<span class=\"attr\">ngIf</span>=<span class=\"string\">\"f.email.errors\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">span</span> *<span class=\"attr\">ngIf</span>=<span class=\"string\">\"f.email.errors.required\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fas fa-exclamation-triangle\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span>請填寫帳號</span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">span</span> *<span class=\"attr\">ngIf</span>=<span class=\"string\">\"f.email.errors.email\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fas fa-exclamation-triangle\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span>信箱格式錯誤</span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 帳號驗證結束 --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- 密碼 --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"inputControl\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">input</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">type</span>=<span class=\"string\">\"password\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">class</span>=<span class=\"string\">\"formControl\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">formControlName</span>=<span class=\"string\">\"password\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        [<span class=\"attr\">ngClass</span>]=<span class=\"string\">\"&#123; 'errors': f.password.errors &#125;\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">placeholder</span>=<span class=\"string\">\"Password\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 密碼驗證--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">class</span>=<span class=\"string\">\"errors\"</span> *<span class=\"attr\">ngIf</span>=<span class=\"string\">\"f.password.errors\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">span</span> *<span class=\"attr\">ngIf</span>=<span class=\"string\">\"f.password.errors.required\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fas fa-exclamation-triangle\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span>請填寫密碼</span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">span</span> *<span class=\"attr\">ngIf</span>=<span class=\"string\">\"f.password.errors.minlength\"</span>&gt;</span>請輸入超過6位數密碼<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 密碼驗證結束 --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"使用內建的表單驗證器\"><a href=\"#使用內建的表單驗證器\" class=\"headerlink\" title=\"使用內建的表單驗證器\"></a>使用內建的表單驗證器</h2><p>Angular 本身對於 form 有幾個好用的函式庫，這次要用有 <code>FormGroup</code>, <code>FormBuilder</code>，以及內建驗證器 <code>Validators</code>。</p>\n<p>在 <code>login.component.ts</code> 分別 <code>import</code> 上述的函式庫，</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; FormGroup, FormBuilder, Validators &#125; <span class=\"keyword\">from</span> <span class=\"string\">\"@angular/forms\"</span>;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"建構式公開使用-FormBuilder-函式\"><a href=\"#建構式公開使用-FormBuilder-函式\" class=\"headerlink\" title=\"建構式公開使用 FormBuilder 函式\"></a>建構式公開使用 FormBuilder 函式</h3><figure class=\"highlight typescript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">constructor</span>(<span class=\"params\"></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"keyword\">public</span> formBuilder: FormBuilder</span></span><br><span class=\"line\"><span class=\"params\"></span>)&#123;&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"給-email-跟-password-預設值\"><a href=\"#給-email-跟-password-預設值\" class=\"headerlink\" title=\"給 email 跟 password 預設值\"></a>給 email 跟 password 預設值</h3><figure class=\"highlight typescript\"><table><tr><td class=\"code\"><pre><span class=\"line\">email = <span class=\"literal\">true</span>;</span><br><span class=\"line\">password = <span class=\"literal\">true</span>;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"使用表單內容\"><a href=\"#使用表單內容\" class=\"headerlink\" title=\"使用表單內容\"></a>使用表單內容</h3><figure class=\"highlight typescript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">get</span> f() &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.form.controls;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"使用驗證器\"><a href=\"#使用驗證器\" class=\"headerlink\" title=\"使用驗證器\"></a>使用驗證器</h3><p>因一開始就讓網頁執行驗證器，所以放在 <code>ngOnInit</code> 裡面。</p>\n<ul>\n<li><code>this</code> 已經包裝成外面這個方法，也就是 <code>ngOnInit</code> 本身。</li>\n<li><code>ngOnInit</code> 裡面的 form 的值是 <code>formBuilder</code> 裡面的 <code>group</code> 屬性，裡面要驗證的內容。</li>\n<li>以 email 為例，使用驗證器可以看到是一個陣列型態，第一個位置是一個空值，後面是一個陣列，驗證器 <code>Validators</code> 後面放上要驗證的方法。<ul>\n<li><code>required</code> 為必填欄位，沒填寫則會跳錯誤訊息。</li>\n<li><code>email</code> 為內建的信箱驗證方法。</li>\n<li><code>minLength</code> 是最小長度，如果要限定字元數量，就可以放在小括弧內，像這邊練習是最少 6 字元，最大值則是 <code>maxLength。</code></li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight typescript\"><table><tr><td class=\"code\"><pre><span class=\"line\">ngOnInit(): <span class=\"built_in\">void</span> &#123;</span><br><span class=\"line\">   <span class=\"comment\">// 表單驗證</span></span><br><span class=\"line\">  <span class=\"keyword\">this</span>.form = <span class=\"keyword\">this</span>.formBuilder.group(&#123;</span><br><span class=\"line\">       email: [<span class=\"string\">''</span>, [Validators.required,Validators.email]],</span><br><span class=\"line\">    password: [<span class=\"string\">''</span>, [Validators.required, Validators.minLength(<span class=\"number\">6</span>)]],</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>這樣就完成一個響應式的表單驗證。</p>\n<p>Demo <a href=\"https://stackblitz.com/edit/angular-ivy-uas199?file=src/app/app.component.html\" target=\"_blank\" rel=\"noopener\">https://stackblitz.com/edit/angular-ivy-uas199?file=src/app/app.component.html</a></p>\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><p><a href=\"https://jasonwatmore.com/post/2020/07/07/angular-10-reactive-forms-validation-example\" target=\"_blank\" rel=\"noopener\">Angular 10 - Reactive Forms Validation Example</a></p>\n","categories":["Angular"],"tags":["Angular"]},{"title":"Angular 筆記 - 表單驗證：Template Driven Form","url":"/angular/20201005/793985400/","content":"<p><img src=\"https://i.imgur.com/87pBpoJ.jpg\" alt=\"angular\"></p>\n<p>表單驗證在許多網頁中很常使用到，只要有需要輸入資料的地方，就會有表單，而 Angular 本身就帶有表單驗證的內建函式庫，這次就從比較好入手的範本表單驗證做個筆記。</p>\n<h2 id=\"Angular-Form-基本用途\"><a href=\"#Angular-Form-基本用途\" class=\"headerlink\" title=\"Angular Form 基本用途\"></a>Angular Form 基本用途</h2><ul>\n<li>將表單資料進行序列化。</li>\n<li>提供初始預設資料。</li>\n<li>驗證表單資料。</li>\n<li>顯示有幫助的錯誤提示訊息。</li>\n</ul>\n<h2 id=\"進階用途\"><a href=\"#進階用途\" class=\"headerlink\" title=\"進階用途\"></a>進階用途</h2><ul>\n<li>自訂表單驗證器。</li>\n<li>自訂表單控制選項。</li>\n<li>動態建立控制選項。</li>\n</ul>\n<h2 id=\"Template-Driven-Form-基本認識\"><a href=\"#Template-Driven-Form-基本認識\" class=\"headerlink\" title=\"Template Driven Form 基本認識\"></a>Template Driven Form 基本認識</h2><ul>\n<li>只能進行 E2E 測試。</li>\n<li>需要有 DOM 的存在，因為是直接寫在 HTML 標籤上。</li>\n<li>需要 import Module: FormsModule。</li>\n<li>可以使用下列指令建立：<ul>\n<li>ngForm</li>\n<li>ngModel</li>\n<li>ngModelGroup</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"匯入-formsModule\"><a href=\"#匯入-formsModule\" class=\"headerlink\" title=\"匯入 formsModule\"></a>匯入 formsModule</h2><p>在 <strong>app.module.ts</strong> 中匯入 <code>FormsModule</code>。</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; FormsModule &#125; <span class=\"keyword\">from</span> <span class=\"string\">\"@angular/forms\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@NgModule</span>(&#123;</span><br><span class=\"line\">  declarations: [AppComponent],</span><br><span class=\"line\">  imports: [BrowserModule, AppRoutingModule, FormsModule],</span><br><span class=\"line\">  providers: [],</span><br><span class=\"line\">  bootstrap: [AppComponent],</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">class</span> AppModule &#123;&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"在-HTML-中加入-ngModel\"><a href=\"#在-HTML-中加入-ngModel\" class=\"headerlink\" title=\"在 HTML 中加入 ngModel\"></a>在 HTML 中加入 ngModel</h2><p>加入 ngModel 後會產生表單的實體，</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">label</span></span></span><br><span class=\"line\"><span class=\"tag\">    &gt;</span>帳號：</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"email\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"userEmail\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"\"</span> <span class=\"attr\">ngModel</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">label</span></span></span><br><span class=\"line\"><span class=\"tag\">    &gt;</span>密碼：</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"password\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"userPassword\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"\"</span> <span class=\"attr\">ngModel</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>並且會產生對應的 class 可以使用，省去還要另外去想 class 狀態的命名。</p>\n<ul>\n<li>value 有值</li>\n<li>valid / invalid 符合驗證 / 不符合驗證</li>\n<li>pristine / dirty 表單資料沒變動 / 有變動</li>\n<li>touched / untouched 有觸發 / 沒觸發</li>\n<li>errors 錯誤</li>\n</ul>\n<blockquote>\n<p>一定要加 <code>name</code>，不然會跳錯。<br>　依需求用 <code>ngModel</code> 指定 <code>component</code> 的 <code>model</code>。</p>\n</blockquote>\n<h2 id=\"加上範本參考變數名稱\"><a href=\"#加上範本參考變數名稱\" class=\"headerlink\" title=\"加上範本參考變數名稱\"></a>加上範本參考變數名稱</h2><p>在 <code>form</code> 標籤中加上<strong>範本參考變數</strong>，並給予自定義名稱，可以參考<a href=\"https://hsuchihting.github.io/angular/20200831/2129198187/\">這篇</a>，為了檢視輸入資料是否正確，加入 <code>pre</code> 標籤與一個管線元件 <code>json</code>，來觀察 <code>#form</code> 這個範本變數中表單值的變化，這個語法僅於開發時使用，上線前都會移除。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;form #form&#x3D;&quot;ngForm&quot;&gt;</span><br><span class=\"line\">  &lt;label&gt;帳號：</span><br><span class=\"line\">    &lt;input type&#x3D;&quot;email&quot; name&#x3D;&quot;userEmail&quot; id&#x3D;&quot;&quot; ngModel&gt;</span><br><span class=\"line\">  &lt;&#x2F;label&gt;</span><br><span class=\"line\">  &lt;br&gt;</span><br><span class=\"line\">  &lt;label&gt;密碼：</span><br><span class=\"line\">    &lt;input type&#x3D;&quot;password&quot; name&#x3D;&quot;userPassword&quot; id&#x3D;&quot;&quot; ngModel&gt;</span><br><span class=\"line\">  &lt;&#x2F;label&gt;</span><br><span class=\"line\">&lt;&#x2F;form&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;pre&gt;&#123;&#123;form.value | json&#125;&#125;&lt;&#x2F;pre&gt; &#x2F;&#x2F;預覽資料狀況</span><br></pre></td></tr></table></figure>\n\n<p>完成後會看到下方畫面。</p>\n<p><img src=\"https://i.imgur.com/gn9th5n.png\" alt=\"pre\"></p>\n<h2 id=\"自行更改-CSS-Class-的變化\"><a href=\"#自行更改-CSS-Class-的變化\" class=\"headerlink\" title=\"自行更改 CSS Class 的變化\"></a>自行更改 CSS Class 的變化</h2><p>Angular 驗證會自己帶有預設的 class，這個方式幫助到團隊開發時，不必另外想新的 className，如這次範例可以看到在未更動表單前在開發人員工具的 class 狀態，如下圖：</p>\n<p><img src=\"https://i.imgur.com/1uf6E68.png\" alt=\"formsValid\"></p>\n<p>若有更動則會改變 class 名稱。</p>\n<p><img src=\"https://i.imgur.com/zBUC0mm.png\" alt=\"formsinvalid\"></p>\n<p>可針對這些狀態設定想要的 CSS 樣式。</p>\n<h2 id=\"輸入預設值\"><a href=\"#輸入預設值\" class=\"headerlink\" title=\"輸入預設值\"></a>輸入預設值</h2><p>可在表單帶入預設值，透過雙向綁定，即可達到該設定，並可直接回饋在表單內。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> #<span class=\"attr\">form</span>=<span class=\"string\">\"ngForm\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">label</span></span></span><br><span class=\"line\"><span class=\"tag\">    &gt;</span>帳號：</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"email\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"userEmail\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"\"</span> [(<span class=\"attr\">ngModel</span>)]=<span class=\"string\">\"myEmail\"</span> <span class=\"attr\">ngModel</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">label</span></span></span><br><span class=\"line\"><span class=\"tag\">    &gt;</span>密碼：</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">type</span>=<span class=\"string\">\"password\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">name</span>=<span class=\"string\">\"userPassword\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">id</span>=<span class=\"string\">\"\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      [(<span class=\"attr\">ngModel</span>)]=<span class=\"string\">\"myPassword\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">ngModel</span></span></span><br><span class=\"line\"><span class=\"tag\">    /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>並且在 <strong>app.module.ts</strong> 中把資料先預設好。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; Component &#125; <span class=\"keyword\">from</span> <span class=\"string\">\"@angular/core\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">@Component(&#123;</span><br><span class=\"line\">  selector: <span class=\"string\">\"app-root\"</span>,</span><br><span class=\"line\">  templateUrl: <span class=\"string\">\"./app.component.html\"</span>,</span><br><span class=\"line\">  styleUrls: [<span class=\"string\">\"./app.component.scss\"</span>],</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AppComponent</span> </span>&#123;</span><br><span class=\"line\">  myEmail = <span class=\"string\">\"text@email.com\"</span>;</span><br><span class=\"line\">  myPassword = <span class=\"string\">\"12345678\"</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>表單就會出現預設資料</p>\n<p><img src=\"https://i.imgur.com/n0Q0dwH.png\" alt=\"preSetting\"></p>\n<h2 id=\"驗證訊息\"><a href=\"#驗證訊息\" class=\"headerlink\" title=\"驗證訊息\"></a>驗證訊息</h2><p>在 HTML 本身有一個標籤是 <code>required</code> 驗證功能，Angular 也一樣有這個標籤功能，另外還有最小長度 <code>minlength</code>， 最大長度 <code>maxlength</code>, <a href=\"https://stackoverflow.com/questions/46155/how-to-validate-an-email-address-in-javascript\" target=\"_blank\" rel=\"noopener\">信箱格式驗證</a> <code>pattern</code> 等標籤功能，只要將這些標籤與條件加入 <code>template</code> 即可。</p>\n<p>並且也將要驗證的資訊加上 <code>ngIf</code> 的條件，呈現在該表單下方，將兩個表單內容分別使用 <code>formGroup</code> 獨立出來，表單本身也使用 <code>formControl</code> 的 <code>className</code> 做好歸類，未來在設定 CSS 時更方便。</p>\n<p>使用範本參考變數將 <code>ngModel</code> 的功能賦予到帳號與密碼的欄位。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> #<span class=\"attr\">form</span>=<span class=\"string\">\"ngForm\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"formGroup\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">label</span></span></span><br><span class=\"line\"><span class=\"tag\">      &gt;</span>帳號：</span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">input</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">type</span>=<span class=\"string\">\"email\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">class</span>=<span class=\"string\">\"formControl\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">name</span>=<span class=\"string\">\"userEmail\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">id</span>=<span class=\"string\">\"email\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">placeholder</span>=<span class=\"string\">\"請輸入帳號\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">required</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">pattern</span>=<span class=\"string\">\"^[a-zA-Z0-9.!#$%&amp;』*+/=?^_`&#123;|&#125;~-]+@[a-zA-Z0-9-]+(?:.[a-zA-Z0-9-]+)*$\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        #<span class=\"attr\">iAccount</span>=<span class=\"string\">\"ngModel\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        [(<span class=\"attr\">ngModel</span>)]=<span class=\"string\">\"myEmail\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"errors\"</span> *<span class=\"attr\">ngIf</span>=<span class=\"string\">\"iAccount.errors\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span> *<span class=\"attr\">ngIf</span>=<span class=\"string\">\"iAccount.errors.required\"</span>&gt;</span>請輸入帳號<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span> *<span class=\"attr\">ngIf</span>=<span class=\"string\">\"iAccount.errors.pattern\"</span>&gt;</span>信箱格式錯誤<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"formGroup\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">label</span></span></span><br><span class=\"line\"><span class=\"tag\">      &gt;</span>密碼：</span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">input</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">type</span>=<span class=\"string\">\"password\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">class</span>=<span class=\"string\">\"formControl\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">name</span>=<span class=\"string\">\"userPassword\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">id</span>=<span class=\"string\">\"password\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">placeholder</span>=<span class=\"string\">\"請輸入密碼\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">minlength</span>=<span class=\"string\">\"6\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">required</span></span></span><br><span class=\"line\"><span class=\"tag\">        #<span class=\"attr\">iPassword</span>=<span class=\"string\">\"ngModel\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        [(<span class=\"attr\">ngModel</span>)]=<span class=\"string\">\"myPassword\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"errors\"</span> *<span class=\"attr\">ngIf</span>=<span class=\"string\">\"iPassword.errors\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span> *<span class=\"attr\">ngIf</span>=<span class=\"string\">\"iPassword.errors.required\"</span>&gt;</span>請輸入密碼<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span> *<span class=\"attr\">ngIf</span>=<span class=\"string\">\"iPassword.errors.minlength\"</span>&gt;</span>密碼長度須超過 6 字元<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>這樣就完成了表單驗證功能。</p>\n<p>Demo： <a href=\"https://stackblitz.com/edit/angular-ivy-e71hxv?file=src/app/app.component.html\" target=\"_blank\" rel=\"noopener\">https://stackblitz.com/edit/angular-ivy-e71hxv?file=src/app/app.component.html</a></p>\n","categories":["Angular"],"tags":["Angular"]},{"title":"JS 筆記 - 點選清單項目時，刪除清單資料","url":"/javascript/20201005/1655458365/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/JavaScript%20note-01.jpg?alt=media&token=7bee0261-72ac-4de4-9f5a-f39d58735b7d\" alt=\"JavaScript Note\"></p>\n<p>先前有筆記如何刪除陣列資料的概念，這次的筆記是延伸應用 <code>splice</code> 的功能。<br>如何在點擊後，將所選到的清單內容刪除，並更新畫面?</p>\n<p>條件如下:</p>\n<blockquote>\n<ol>\n<li>原本已有清單內容。</li>\n<li>有 <code>click</code> 事件。</li>\n<li>刪除清單資料。</li>\n<li>更新畫面。</li>\n</ol>\n</blockquote>\n<p>HTML 跟 CSS 與上一篇內容相同，這邊是在 JS 加上一些語法達到效果。先回顧上一篇所講到的內容：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//JSON</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> shops = [&#123;</span><br><span class=\"line\">  keeper: <span class=\"string\">'魯夫'</span></span><br><span class=\"line\">&#125;, &#123;</span><br><span class=\"line\">  keeper: <span class=\"string\">'香吉士'</span></span><br><span class=\"line\">&#125;]</span><br><span class=\"line\"><span class=\"comment\">//綁定 .list，使用父元素控制子元素</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> list = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'.list'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//為了把資料回填到 li 中，故透過這個函式將資料抓出後渲染到網頁上</span></span><br><span class=\"line\"><span class=\"comment\">//更新商店資料</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">updateList</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> str = <span class=\"string\">''</span>; <span class=\"comment\">//組一個字串，內容為空</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> shopLen = shops.length; <span class=\"comment\">//資料長度 2</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; shopLen &gt; i; i++) &#123;</span><br><span class=\"line\">    str += <span class=\"string\">'&lt;li data-num=\"'</span> + i + <span class=\"string\">'\"&gt;'</span> + shops[i].keeper + <span class=\"string\">'&lt;/li&gt;'</span></span><br><span class=\"line\">  &#125; <span class=\"comment\">//字串加總</span></span><br><span class=\"line\">  list.innerHTML = str; <span class=\"comment\">//渲染到字串，並渲染到網頁</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(str);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">updateList(); <span class=\"comment\">//執行函式</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 確認點擊的店長是誰</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">checkList</span>(<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> num = e.target.dataset.num; <span class=\"comment\">//宣告一個 num ，當事件目標為自己，dataset 取出 num 的值</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(e.target.nodeName); <span class=\"comment\">//確認 nodeName 是否為 'LI'</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (e.target.nodeName !== <span class=\"string\">'LI'</span>) &#123; <span class=\"comment\">//若選到的 nodeName 不是 LI，就回傳(停止函式)</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span></span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'你選擇的店長為'</span> + shops[num].keeper); <span class=\"comment\">//顯示選擇內容</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//在 list 新增 click 事件</span></span><br><span class=\"line\">list.addEventListener(<span class=\"string\">'click'</span>, checkList, <span class=\"literal\">false</span>);</span><br></pre></td></tr></table></figure>\n\n<p>這邊要新增的語法在函式 <code>checkList</code> 內的 <code>return</code> 後加上這段程式碼:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">shops.splice(<span class=\"number\">0</span>, <span class=\"number\">1</span>); <span class=\"comment\">//刪除陣列的第一筆與一筆資料</span></span><br><span class=\"line\">updateList(); <span class=\"comment\">//更新頁面資料</span></span><br></pre></td></tr></table></figure>\n<p>這樣在點擊後，就可以把選取到的 <code>li</code> 刪掉，函式<code>checkList</code> 完整程式碼如下:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">checkList</span>(<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> num = e.target.dataset.num; <span class=\"comment\">//宣告一個 num ，當事件目標為自己，dataset 取出 num 的值</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(e.target.nodeName); <span class=\"comment\">//確認 nodeName 是否為 'LI'</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (e.target.nodeName !== <span class=\"string\">'LI'</span>) &#123; <span class=\"comment\">//若選到的 nodeName 不是 LI，就回傳(停止函式)</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span></span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  shops.splice(<span class=\"number\">0</span>, <span class=\"number\">1</span>); <span class=\"comment\">//刪除陣列的第一筆與一筆資料</span></span><br><span class=\"line\">  updateList(); <span class=\"comment\">//更新頁面資料</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>codepen: <a href=\"https://codepen.io/hnzxewqw/pen/RwPgOdG\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/RwPgOdG</a></p>\n","categories":["JavaScript"],"tags":["JavaScript"]},{"title":"JS 核心觀念筆記 - Promise 鏈接方法與常用方法","url":"/javascript/20201001/2356048050/","content":"<p><img src=\"https://i.imgur.com/RvAfQKY.jpg\" alt=\"core\"></p>\n<p>延續上一篇使用的程式碼，並在修改函式的 <code>resolve</code> 的結果，會帶出參數的值。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">promiseFn</span>(<span class=\"params\">num</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    setTimeout(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (num) &#123;</span><br><span class=\"line\">        resolve(<span class=\"string\">`success <span class=\"subst\">$&#123;num&#125;</span>`</span>);</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        reject(<span class=\"string\">\"error\"</span>);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;, <span class=\"number\">0</span>);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">promiseFn(<span class=\"number\">1</span>)</span><br><span class=\"line\">  .then(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(res);</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  .catch(<span class=\"function\">(<span class=\"params\">rej</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(rej);</span><br><span class=\"line\">  &#125;);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Promise-Chain\"><a href=\"#Promise-Chain\" class=\"headerlink\" title=\"Promise Chain\"></a>Promise Chain</h2><p>倘若要在原本的 <code>promise</code> 再做一個 <code>promise</code>，就會在第一個 <code>then()</code> 中， <code>return</code> 第二個 <code>promiseFn(params)</code>，並且在後面直接再加一個 <code>then()</code> 來接收新的 <code>promiseFn(params)</code> 函式的結果。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">promiseFn(<span class=\"number\">1</span>)</span><br><span class=\"line\">  .then(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(res); <span class=\"comment\">// success 1</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> promiseFn(<span class=\"number\">2</span>);</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  .then(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(res); <span class=\"comment\">// success 2</span></span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  .catch(<span class=\"function\">(<span class=\"params\">rej</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(rej);</span><br><span class=\"line\">  &#125;);</span><br></pre></td></tr></table></figure>\n\n<p>倘若中間有一個參數非真值的話，就會直接跳到 <code>catch()</code>。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">promiseFn(<span class=\"number\">1</span>)</span><br><span class=\"line\">  .then(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(res); <span class=\"comment\">// success 1</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> promiseFn(<span class=\"number\">0</span>);</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  .then(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(res); <span class=\"comment\">// 不會執行，會直接跳到 catch</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> promiseFn(<span class=\"number\">3</span>);</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  .then(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(res);</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  .catch(<span class=\"function\">(<span class=\"params\">rej</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(rej);</span><br><span class=\"line\">  &#125;);</span><br></pre></td></tr></table></figure>\n\n<p>如果在 <code>catch()</code> 之後想要再進行新的 <code>promise</code> 是可以的，前面結果失敗後，會重啟一個新的 <code>promise</code>，如下方程式碼，會在失敗後繼續執行 <code>promiseFn(4)</code> 的結果。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">promiseFn(<span class=\"number\">1</span>)</span><br><span class=\"line\">  .then(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(res); <span class=\"comment\">// success 1</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> promiseFn(<span class=\"number\">0</span>);</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  .then(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(res); <span class=\"comment\">// 不會執行，會直接跳到 catch</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> promiseFn(<span class=\"number\">3</span>);</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  .then(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(res);</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  .catch(<span class=\"function\">(<span class=\"params\">rej</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(rej);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> promiseFn(<span class=\"number\">4</span>);</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  .then(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(res); <span class=\"comment\">//success 4</span></span><br><span class=\"line\">  &#125;);</span><br></pre></td></tr></table></figure>\n\n<p>CodePen: <a href=\"https://codepen.io/hnzxewqw/pen/ExKBVJr?editors=1111\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/ExKBVJr?editors=1111</a></p>\n<h3 id=\"then-也可接收錯誤資料\"><a href=\"#then-也可接收錯誤資料\" class=\"headerlink\" title=\"then() 也可接收錯誤資料\"></a>then() 也可接收錯誤資料</h3><p>前面提到大部分 <code>then()</code> 是用來接收成功的結果，但其實也可以接收錯誤的結果，程式碼可以這樣寫：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">promiseFn(<span class=\"number\">0</span>).then(</span><br><span class=\"line\">  (res) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"成功\"</span>, res); <span class=\"comment\">// 真值結果</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  (rej) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"失敗\"</span>, rej); <span class=\"comment\">// 0 的結果</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n\n<p>試著將 CodePen 中的參數改成<strong>真值</strong>或 <strong>0</strong>，就會在 <code>console</code> 中個別出現要接收的結果，這樣就可以直接使用 <code>then()</code> 來取得結果，就不用使用 <code>catch()</code> 了。</p>\n<p>CodePen: <a href=\"https://codepen.io/hnzxewqw/pen/Rwazrba?editors=1111\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/Rwazrba?editors=1111</a></p>\n<h2 id=\"Promise-常用方法\"><a href=\"#Promise-常用方法\" class=\"headerlink\" title=\"Promise 常用方法\"></a>Promise 常用方法</h2><p>這兩個方法使用上有點像，只是取值的方式不同。</p>\n<h3 id=\"Promise-all\"><a href=\"#Promise-all\" class=\"headerlink\" title=\"Promise.all()\"></a>Promise.all()</h3><blockquote>\n<p>全部同時執行，並且<strong>只要有一個是錯誤的</strong>，就會直接回傳錯誤給 <code>catch</code> 接收。</p>\n</blockquote>\n<p>改寫原本的 <code>promiseFn</code> 函式，多加一個 <code>time</code> 的參數，若沒有傳值進去，預設就是 500 毫秒。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">promiseFn</span>(<span class=\"params\">num, time = <span class=\"number\">500</span></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    setTimeout(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (num) &#123;</span><br><span class=\"line\">        resolve(<span class=\"string\">`success <span class=\"subst\">$&#123;num&#125;</span>`</span>);</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        reject(<span class=\"string\">\"error\"</span>);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;, time);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>使用 <code>Promise.all()</code> 的方法，取得三次函式執行的結果。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">Promise</span>.all([promiseFn(<span class=\"number\">1</span>), promiseFn(<span class=\"number\">2</span>, <span class=\"number\">1000</span>), promiseFn(<span class=\"number\">3</span>, <span class=\"number\">2000</span>)])</span><br><span class=\"line\">  .then(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(res[<span class=\"number\">0</span>], res[<span class=\"number\">1</span>], res[<span class=\"number\">2</span>]); <span class=\"comment\">// success 1 success 2 success 3</span></span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  .catch(<span class=\"function\">(<span class=\"params\">rej</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(rej);</span><br><span class=\"line\">  &#125;);</span><br></pre></td></tr></table></figure>\n\n<p>將 2 改成 0，就會直接變成接收失敗的結果。</p>\n<p>CodePen: <a href=\"https://codepen.io/hnzxewqw/pen/OJNeMmx?editors=1111\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/OJNeMmx?editors=1111</a></p>\n<h3 id=\"Promise-race\"><a href=\"#Promise-race\" class=\"headerlink\" title=\"Promise.race()\"></a>Promise.race()</h3><blockquote>\n<p>全部同時執行，但<strong>只針對第一個回傳的值</strong>做為接收值，若第二或第三個有錯誤，則<strong>不影響</strong>回傳的結果。</p>\n</blockquote>\n<p>將 <code>all()</code> 的方法改成 <code>race()</code>，並將回傳的結果稍微改寫。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">Promise</span>.race([</span><br><span class=\"line\">  promiseFn(<span class=\"number\">1</span>, <span class=\"number\">500</span>),</span><br><span class=\"line\">  promiseFn(<span class=\"number\">2</span>, <span class=\"number\">300</span>), <span class=\"comment\">// 會先取到這個結果</span></span><br><span class=\"line\">  promiseFn(<span class=\"number\">3</span>, <span class=\"number\">2000</span>),</span><br><span class=\"line\">])</span><br><span class=\"line\">  .then(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(res);</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  .catch(<span class=\"function\">(<span class=\"params\">rej</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(rej);</span><br><span class=\"line\">  &#125;);</span><br></pre></td></tr></table></figure>\n\n<p>就算把 1 改成 0，也因為第二個執行時間比較早，所以第一個雖然值改成 0，也不會影響結果。</p>\n<p>CodePen: <a href=\"https://codepen.io/hnzxewqw/pen/wvGLMqp?editors=1111\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/wvGLMqp?editors=1111</a></p>\n","categories":["JavaScript"],"tags":["JavaScript","JS core"]},{"title":"JS 核心觀念筆記 - 建立一個 Promise","url":"/javascript/20200930/3471080868/","content":"<p><img src=\"https://i.imgur.com/RvAfQKY.jpg\" alt=\"core\"></p>\n<p>在開發者工具透過 <code>console.log(Promise)</code>，會得到一個 Promise 的函式，如下方結果，但因為裡面沒有內容，所以不會有任何結果。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">Promise</span>)</span><br><span class=\"line\">ƒ <span class=\"built_in\">Promise</span>() &#123; [native code] &#125;</span><br></pre></td></tr></table></figure>\n\n<p>改用 <code>console.dir(Promise)</code>，就可以看到 Promise 變成一個物件，並且有自己的方法，像是 <code>reject</code> 跟 <code>resolve</code>，接收結果的 <code>then</code> 跟 <code>catch</code> 也在裡面。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.dir(<span class=\"built_in\">Promise</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">ƒ <span class=\"built_in\">Promise</span>()</span><br><span class=\"line\">all: ƒ all()</span><br><span class=\"line\">allSettled: ƒ allSettled()</span><br><span class=\"line\">any: ƒ any()</span><br><span class=\"line\"><span class=\"built_in\">arguments</span>: (...)</span><br><span class=\"line\">caller: (...)</span><br><span class=\"line\">length: <span class=\"number\">1</span></span><br><span class=\"line\">name: <span class=\"string\">\"Promise\"</span></span><br><span class=\"line\">prototype: <span class=\"built_in\">Promise</span> &#123;<span class=\"built_in\">Symbol</span>(<span class=\"built_in\">Symbol</span>.toStringTag): <span class=\"string\">\"Promise\"</span>, <span class=\"attr\">constructor</span>: ƒ, <span class=\"attr\">then</span>: ƒ, <span class=\"attr\">catch</span>: ƒ, <span class=\"attr\">finally</span>: ƒ&#125;</span><br><span class=\"line\">race: ƒ race()</span><br><span class=\"line\">reject: ƒ reject()</span><br><span class=\"line\">resolve: ƒ resolve()</span><br><span class=\"line\"><span class=\"built_in\">Symbol</span>(<span class=\"built_in\">Symbol</span>.species): (...)</span><br><span class=\"line\"><span class=\"keyword\">get</span> Symbol(Symbol.species): ƒ [Symbol.species]()</span><br><span class=\"line\">__proto__: ƒ ()</span><br><span class=\"line\">[[Scopes]]: Scopes[0]</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"實體化-promise\"><a href=\"#實體化-promise\" class=\"headerlink\" title=\"實體化 promise\"></a>實體化 promise</h2><p>既然 Promise 是一個物件，那也可以將其實體化，並使用它，下方就是實體化的起手式。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> a = <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;&#125;);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a);</span><br></pre></td></tr></table></figure>\n\n<p>透過開發者工具可以看到下方資訊：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">Promise</span> &#123;&lt;pending&gt;&#125;</span><br><span class=\"line\">__proto__:<span class=\"built_in\">Promise</span></span><br><span class=\"line\">[[PromiseState]]: <span class=\"string\">\"pending\"</span></span><br><span class=\"line\">[[PromiseResult]]: <span class=\"literal\">undefined</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>Promise 正在 <code>pending</code> 未確認狀態。</li>\n<li>目前值的結果是 <code>undefined</code>，在透過 <code>resolve</code> 跟 <code>reject</code> 回傳後就會得結果的值。</li>\n</ul>\n<h3 id=\"resolve\"><a href=\"#resolve\" class=\"headerlink\" title=\"resolve\"></a>resolve</h3><p>所以會帶入剛剛提到的兩個參數，<code>resolve</code> 跟 <code>reject</code>，要注意的地方為一次只會執行一個，下方帶入 <code>resolve</code> 的方法，並且把要顯示的結果也寫入。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> a = <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  resolve(<span class=\"string\">\"執行成功\"</span>);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a);</span><br></pre></td></tr></table></figure>\n\n<p>在看到開發人員工具，會看到 Promise 的狀態也改變了。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">Promise</span> &#123;&lt;fulfilled&gt;: <span class=\"string\">\"執行成功\"</span>&#125;</span><br><span class=\"line\">__proto__: <span class=\"built_in\">Promise</span></span><br><span class=\"line\">[[PromiseState]]: <span class=\"string\">\"fulfilled\"</span></span><br><span class=\"line\">[[PromiseResult]]: <span class=\"string\">\"執行成功\"</span></span><br></pre></td></tr></table></figure>\n\n<p>這時候知道是成功獲得資料，就可以使用 Promise 接收資料的方法來取得資料，所以可以用 then()。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">a.then(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(res); <span class=\"comment\">// 執行成功</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"reject\"><a href=\"#reject\" class=\"headerlink\" title=\"reject\"></a>reject</h3><p>那失敗當然就是執行 reject 的方法。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> a = <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  reject(<span class=\"string\">\"執行失敗\"</span>);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a);</span><br></pre></td></tr></table></figure>\n\n<p>開發者工具就會得到：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">Promise</span> &#123;&lt;rejected&gt;: <span class=\"string\">\"執行失敗\"</span>&#125;</span><br><span class=\"line\">__proto__: <span class=\"built_in\">Promise</span></span><br><span class=\"line\">[[PromiseState]]: <span class=\"string\">\"rejected\"</span></span><br><span class=\"line\">[[PromiseResult]]: <span class=\"string\">\"執行失敗\"</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>但是這地方會跳錯，因為之前還沒有寫上接收失敗結果的方法。</p>\n</blockquote>\n<p>失敗就要使用 <code>catch</code> 來接收資料傳遞失敗的的結果，但不需要重新寫一個方法，而是直接在 <code>then</code> 的方法後面直接加上 <code>catch</code> 的方法即可。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">a.then(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(res);</span><br><span class=\"line\">&#125;).catch(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(res); <span class=\"comment\">// 執行失敗</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>以上為 Promise 建立時的基本概念，實務上並不會這樣寫。</p>\n</blockquote>\n<p>通常如果要建立一個 Promise 的實體，會使用函式，不管用具名或是匿名函式都可以，以下為基本 Promise 完成後的程式碼。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">promiseFn</span>(<span class=\"params\">num</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    setTimeout(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (num) &#123;</span><br><span class=\"line\">        resolve(<span class=\"string\">\"success\"</span>);</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        reject(<span class=\"string\">\"error\"</span>);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;, <span class=\"number\">0</span>);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>建立函釋後直接 <code>return</code> 一個 <code>Promise</code> 的實體物件，並且把之前寫的參數帶入。</li>\n<li>既然是非同步事件，典型的用法為 <code>setTimeout</code>。</li>\n<li>在執行完非同步事件後，才會回傳結果。</li>\n</ul>\n<p>執行上方函式，並給予真值，使用 <code>then</code> 取得正確的結果。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">promiseFn(<span class=\"number\">1</span>)</span><br><span class=\"line\">  .then(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(res);</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  .catch(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(res);</span><br><span class=\"line\">  &#125;);</span><br></pre></td></tr></table></figure>\n\n<p>如果帶入的參數為 <code>0</code> ，則會變失敗，就會由 <code>catch</code> 來呈現結果。</p>\n<p>CodePen: <a href=\"https://codepen.io/hnzxewqw/pen/MWyRMGB?editors=1111\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/MWyRMGB?editors=1111</a></p>\n","categories":["JavaScript"],"tags":["JavaScript","JS core"]},{"title":"JS 核心觀念筆記 - Promise 基礎認識","url":"/javascript/20200930/1002635357/","content":"<p><img src=\"https://i.imgur.com/RvAfQKY.jpg\" alt=\"core\"></p>\n<p>Promise 方法是解決非同步事件的語法，因非同步的行為不知道什麼時候才會執行完畢，之前使用過 axios 套件，就是包裝過後的 promise，如下方程式碼。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">axios.get(dataUrl).then(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(res);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"promise-處理非同步事件的流程\"><a href=\"#promise-處理非同步事件的流程\" class=\"headerlink\" title=\"promise 處理非同步事件的流程\"></a>promise 處理非同步事件的流程</h2><p><img src=\"https://i.imgur.com/NAdgsXV.png\" alt=\"promise\"></p>\n<p>如上圖所示，</p>\n<ol>\n<li>用 promise 方法的時候會先進入 <code>pending</code> 未確認狀態。</li>\n<li>等資料取得後會進入 <code>sattled</code> 已確認狀態。</li>\n<li>得到結果後，若取得資料會進入已實現狀態 <code>fulfilled</code>，得到 <code>resolve</code> (解決) 的參數回傳一個結果，並用 <code>then()</code> 方法承接資料。</li>\n<li>若沒有獲得資料或取得資料失敗，會進入 <code>Rejected</code> 已否決的狀態，得到 <code>reject</code> 的參數回傳一個結果，使用 <code>catch()</code> 的方法來接收資料。</li>\n</ol>\n<blockquote>\n<p>一次只會得到一個結果。</p>\n</blockquote>\n<h2 id=\"使用-promise-的好處\"><a href=\"#使用-promise-的好處\" class=\"headerlink\" title=\"使用 promise 的好處\"></a>使用 promise 的好處</h2><ol>\n<li>寫法一致，成功就用 <code>then()</code>，失敗就是 <code>catch()</code>。</li>\n<li>不會變巢狀寫法而落入 <code>callback</code> 地獄。</li>\n<li>可以同步執行。</li>\n</ol>\n<h2 id=\"promise-原理\"><a href=\"#promise-原理\" class=\"headerlink\" title=\"promise 原理\"></a>promise 原理</h2><p>promise 是 ES6 新的語法，也是宣告一個新的物件方法，其原理如下方程式碼：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">promiseFn</span>(<span class=\"params\">num</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    setTimeout(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (num) &#123;</span><br><span class=\"line\">        resolve(<span class=\"string\">\"OK\"</span>);</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        reject(<span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">\"error\"</span>));</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;, <span class=\"number\">0</span>);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">promiseFn(<span class=\"number\">1</span>)</span><br><span class=\"line\">  .then(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(res);</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  .catch(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.error(err);</span><br><span class=\"line\">  &#125;);</span><br></pre></td></tr></table></figure>\n\n<ol>\n<li>建立一個 <code>promiseFn</code> 的函式，其內直接回傳一個 <code>promise</code> 物件。</li>\n<li>並帶入 <code>resolve</code> 與 <code>reject</code> 的兩個參數，當作接收回傳的結果。</li>\n<li>因為是非同步，所以給予一個 <code>setTimeout</code> 的函式，去執行接收後的結果。</li>\n<li>把 <code>promiseFn()</code> 此函式用 <code>then()</code> 與 <code>catch()</code> 的方法，來取得成功或失敗的值。</li>\n</ol>\n<p><img src=\"https://i.imgur.com/9rcJSa6.png\" alt=\"promise basic\"></p>\n","categories":["JavaScript"],"tags":["JavaScript","JS core"]},{"title":"JS 筆記 - 網頁座標 Screen、Page、Client","url":"/javascript/20200928/4256705698/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/JavaScript%20note-01.jpg?alt=media&token=7bee0261-72ac-4de4-9f5a-f39d58735b7d\" alt=\"JavaScript Note\"></p>\n<p>在開發人員工具中 MouseEvent 會看到第一排有這幾個資訊:</p>\n<blockquote>\n<ul>\n<li>ScreenX</li>\n<li>ScreenY</li>\n<li>pageX</li>\n<li>pageY</li>\n<li>clientX</li>\n<li>clientY</li>\n</ul>\n</blockquote>\n<p>分別記錄這些名稱的意思。</p>\n<h2 id=\"X-Y-軸\"><a href=\"#X-Y-軸\" class=\"headerlink\" title=\"X, Y 軸\"></a>X, Y 軸</h2><p>X 代表橫軸。<br>Y 代表直軸。</p>\n<h2 id=\"Screen\"><a href=\"#Screen\" class=\"headerlink\" title=\"Screen\"></a>Screen</h2><p>英文單字中為<strong>螢幕</strong>的意思，在網頁中代表整個<strong>螢幕尺寸</strong>大小。</p>\n<h2 id=\"Page\"><a href=\"#Page\" class=\"headerlink\" title=\"Page\"></a>Page</h2><p>英文單字中為<strong>頁面</strong>的意思，在網頁中代表整個頁面大小，如果有一個遊戲頁面是往下或往上移動的遊戲，在 pageY 的數字就會非常大，因為在 <code>height</code> 可能會設定很長。</p>\n<blockquote>\n<p>EX. 雪人兄弟 或是 小朋友下樓梯。(暴露年紀)</p>\n</blockquote>\n<h2 id=\"Client\"><a href=\"#Client\" class=\"headerlink\" title=\"Client\"></a>Client</h2><p>英文單字中為<strong>客戶</strong>的意思，在網頁中代表當前的頁面位置，所以又跟 Screen、Page 不同，是計算目前瀏覽器所見的大小，所以如果任意調整瀏覽器視窗大小， Client 的 X、Y 值也會跟著變化。</p>\n<h2 id=\"練習主題\"><a href=\"#練習主題\" class=\"headerlink\" title=\"練習主題\"></a>練習主題</h2><p>設定一個 <code>height:5000px;</code> 的頁面，並透過 JS 的<strong>滑鼠事件</strong>( <code>mousemove</code> )顯示 <code>Screen</code>、<code>Page</code>、<code>Client</code> 相關數值。</p>\n<h3 id=\"HTML\"><a href=\"#HTML\" class=\"headerlink\" title=\"HTML\"></a>HTML</h3><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"wrap\"</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"header\"</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">       screenX: <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"screenX\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">       screenY: <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"screenY\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">       pageX: <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"pageX\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">       pageY: <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"pageY\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">       clientX: <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"clientX\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">       clientY: <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"clientY\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"CSS\"><a href=\"#CSS\" class=\"headerlink\" title=\"CSS\"></a>CSS</h3><figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.wrap</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">max-width</span>: <span class=\"number\">1920px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">5000px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-image</span>: <span class=\"built_in\">url</span>(https://images.unsplash.com/photo-<span class=\"number\">1549880338</span>-<span class=\"number\">65</span>ddcdfd017b?ixlib=rb-<span class=\"number\">1.2</span>.<span class=\"number\">1</span>&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;auto=format&amp;fit=crop&amp;w=<span class=\"number\">1350</span>&amp;q=<span class=\"number\">80</span>);</span><br><span class=\"line\">  <span class=\"attribute\">background-repeat</span>: no-repeat;</span><br><span class=\"line\">  <span class=\"attribute\">background-position</span>: center bottom;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: lightblue;</span><br><span class=\"line\">  <span class=\"attribute\">background-size</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.header</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: auto;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: fixed;</span><br><span class=\"line\">  <span class=\"attribute\">top</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"number\">#fff</span>;</span><br><span class=\"line\">  <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: green;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.header</span> <span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">0.5em</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"JavaScript\"><a href=\"#JavaScript\" class=\"headerlink\" title=\"JavaScript\"></a>JavaScript</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> screenX = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\".screenX\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> screenY = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\".screenY\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> pageX = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\".pageX\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> pageY = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\".pageY\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> clientX = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\".clientX\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> clientY = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\".clientY\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> el = <span class=\"built_in\">document</span>.body;</span><br><span class=\"line\">el.addEventListener(<span class=\"string\">\"mousemove\"</span>, getPosition, <span class=\"literal\">false</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getPosition</span>(<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">  screenX.textContent = e.screenX;</span><br><span class=\"line\">  screenY.textContent = e.screenY;</span><br><span class=\"line\">  pageX.textContent = e.pageX;</span><br><span class=\"line\">  pageY.textContent = e.pageY;</span><br><span class=\"line\">  clientX.textContent = e.clientX;</span><br><span class=\"line\">  clientY.textContent = e.clientY;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>codepen: <a href=\"https://codepen.io/hnzxewqw/pen/GRJmVvN\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/GRJmVvN</a></p>\n<hr>\n<h2 id=\"相關應用\"><a href=\"#相關應用\" class=\"headerlink\" title=\"相關應用\"></a>相關應用</h2><p>很多遊戲使用圖片替代游標的方式來玩，這次就做個練習:</p>\n<p>在原本的 HTML 的 <code>.wrap</code> 下方加上這行，將圖片寬度變成 <code>width=&quot;300&quot;</code>，並插入一張 png 圖片代替滑鼠用:</p>\n<h3 id=\"HTML-1\"><a href=\"#HTML-1\" class=\"headerlink\" title=\"HTML\"></a>HTML</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;div class&#x3D;&quot;mouseImg&quot;&gt;</span><br><span class=\"line\">    &lt;img width&#x3D;&quot;300&quot; src&#x3D;&quot;https:&#x2F;&#x2F;url.joor.net&#x2F;Oc&quot;&gt;</span><br><span class=\"line\">  &lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<ul>\n<li>png 圖片可以呈現去背效果，才不會有白色背景。</li>\n<li>圖片是用短網址修改後的連結，純粹為了版面好看。</li>\n</ul>\n</blockquote>\n<p>將滑鼠游標隱藏，在 CSS 的 <code>body</code> ，將游標改成不顯示:</p>\n<h3 id=\"CSS-1\"><a href=\"#CSS-1\" class=\"headerlink\" title=\"CSS\"></a>CSS</h3><figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">body</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">cursor</span>: none;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>利用 JS 選取到 <code>mouseImg</code>，並在 <code>function</code> 中加入下方兩行程式碼<strong>控制游標位置</strong>:</p>\n<h3 id=\"JavaScript-1\"><a href=\"#JavaScript-1\" class=\"headerlink\" title=\"JavaScript\"></a>JavaScript</h3><p>選取 <code>.mouseImg</code>:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> mouseImg = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\".mouseImg\"</span>); <span class=\"comment\">//新增滑鼠游標</span></span><br></pre></td></tr></table></figure>\n\n<p>在 <code>function</code> 加入控制游標位置，動態修改 <code>CSS</code> 中的 <code>left</code> 與 <code>top</code> 的值:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">mouseImg.style.left = e.clientX + <span class=\"string\">\"px\"</span>; <span class=\"comment\">//滑鼠游標 X 軸</span></span><br><span class=\"line\">mouseImg.style.top = e.clientY + <span class=\"string\">\"px\"</span>; <span class=\"comment\">//滑鼠游標 Y 軸</span></span><br></pre></td></tr></table></figure>\n\n<p>透過開發人員工具可以看到 <code>Element</code> 中 <code>style</code> 的數值，會與 <code>Client</code> 值相同。</p>\n<hr>\n<p>可以在 codepen 玩玩看: <a href=\"https://codepen.io/hnzxewqw/pen/MWwmNVz\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/MWwmNVz</a></p>\n<blockquote>\n<ul>\n<li>透過滑鼠滾輪上下捲動視窗，可以移動圖片位置。</li>\n<li>透過滑鼠游標任意移動位置，可以控制老鷹圖案。</li>\n</ul>\n</blockquote>\n","categories":["JavaScript"],"tags":["JavaScript"]},{"title":"Vue 筆記 - 使用 is 動態切換元件","url":"/vue-js/20200922/1658435018/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/vue%20cover.png?alt=media&token=5f8b5aa0-eb3e-4d21-a715-07c5442dafbc\" alt=\"vue.js\"></p>\n<p>有些頁面可以使用按鈕或頁籤來實現切換元件的功能，如果用原生的 JS 來撰寫，會有非常多的程式碼，透過 Vue 的 <code>is</code>，就透過簡易編寫的方式輕鬆切換元件來達到效果。</p>\n<h2 id=\"is-的基礎應用\"><a href=\"#is-的基礎應用\" class=\"headerlink\" title=\"is 的基礎應用\"></a>is 的基礎應用</h2><p>下方有一個資訊卡片，原程式碼如下：</p>\n<h3 id=\"HTML\"><a href=\"#HTML\" class=\"headerlink\" title=\"HTML\"></a>HTML</h3><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">primary-component</span> <span class=\"attr\">:data</span>=<span class=\"string\">\"item\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">primary-component</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"局部元件\"><a href=\"#局部元件\" class=\"headerlink\" title=\"局部元件\"></a>局部元件</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;script type=<span class=\"string\">\"text/x-template\"</span> id=<span class=\"string\">\"primaryComponent\"</span>&gt;</span><br><span class=\"line\">&lt;div <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"card text-white bg-primary mb-3\"</span> style=<span class=\"string\">\"max-width: 18rem;\"</span>&gt;</span><br><span class=\"line\">  &lt;div <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"card-header\"</span>&gt;&#123;&#123; data.header &#125;&#125;&lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">  &lt;div class=\"card-body\"&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    &lt;h5 class=\"card-title\"&gt;&#123;&#123; data.title &#125;&#125;&lt;/</span>h5&gt;</span><br><span class=\"line\">    &lt;p <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"card-text\"</span>&gt;&#123;&#123; data.text &#125;&#125;&lt;<span class=\"regexp\">/p&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">  &lt;/</span>div&gt;</span><br><span class=\"line\">&lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/</span>script&gt;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Vue-對應的元件與物件實體\"><a href=\"#Vue-對應的元件與物件實體\" class=\"headerlink\" title=\"Vue 對應的元件與物件實體\"></a>Vue 對應的元件與物件實體</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">Vue.component(<span class=\"string\">\"primary-component\"</span>, &#123;</span><br><span class=\"line\">  props: [<span class=\"string\">\"data\"</span>],</span><br><span class=\"line\">  template: <span class=\"string\">\"#primaryComponent\"</span>,</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> app = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  el: <span class=\"string\">\"#app\"</span>,</span><br><span class=\"line\">  data: &#123;</span><br><span class=\"line\">    item: &#123;</span><br><span class=\"line\">      header: <span class=\"string\">\"這裡是 header\"</span>,</span><br><span class=\"line\">      title: <span class=\"string\">\"這裡是 title\"</span>,</span><br><span class=\"line\">      text:</span><br><span class=\"line\">        <span class=\"string\">\"Lorem ipsum dolor sit amet consectetur adipisicing elit. Enim perferendis illo reprehenderit ex natus earum explicabo modi voluptas cupiditate aperiam, quasi quisquam mollitia velit ut odio vitae atque incidunt minus?\"</span>,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    current: <span class=\"string\">\"primary-component\"</span>, <span class=\"comment\">//主要使用的屬性</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>只要在 HTML 標籤的局部物件中加上 <code>is=&quot;current&quot;</code> 這個屬性資料，就可以靜態完成新增此元件的功能，很簡單吧!</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;primary-component :data=<span class=\"string\">\"item\"</span>&gt;<span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">primary-component</span>&gt;</span></span></span><br><span class=\"line\">&lt;div is=<span class=\"string\">\"primary-component\"</span> :data=<span class=\"string\">\"item\"</span>&gt;<span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n\n<iframe height=\"800\" style=\"width: 100%;\" src=\"https://codepen.io/hnzxewqw/embed/ZEWmNjw?height=265&theme-id=light&default-tab=html,result\"></iframe>\n\n<h2 id=\"動態切換元件\"><a href=\"#動態切換元件\" class=\"headerlink\" title=\"動態切換元件\"></a>動態切換元件</h2><p>前面已經基礎知道靜態頁面要如何撰寫，之前許多筆記有注意到動態綁定屬性要用 <code>v-bind</code>。</p>\n<p>下方有兩個按鈕，透過切換按鈕直接做元件的背景色切換。</p>\n<h3 id=\"HTML-1\"><a href=\"#HTML-1\" class=\"headerlink\" title=\"HTML\"></a>HTML</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;h2 <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"mt-3\"</span>&gt;使用 is 動態切換組件&lt;<span class=\"regexp\">/h2&gt;</span></span><br><span class=\"line\"><span class=\"regexp\"> &lt;ul class=\"nav nav-pills\"&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">   &lt;li class=\"nav-item\"&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">     &lt;a class=\"nav-link\" :class=\"&#123;'active': current == 'primary-component'&#125;\" href=\"#\" @click.prevent=\"current = 'primary-component'\"&gt;藍色元件&lt;/</span>a&gt;</span><br><span class=\"line\">   &lt;<span class=\"regexp\">/li&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">   &lt;li class=\"nav-item\"&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">     &lt;a class=\"nav-link\" :class=\"&#123;'active': current == 'danger-component'&#125;\" href=\"#\" @click.prevent=\"current = 'danger-component'\"&gt;紅色元件&lt;/</span>a&gt;</span><br><span class=\"line\">   &lt;<span class=\"regexp\">/li&gt;</span></span><br><span class=\"line\"><span class=\"regexp\"> &lt;/u</span>l&gt;</span><br><span class=\"line\"> &lt;div <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"mt-3\"</span>&gt;</span><br><span class=\"line\">   &lt;primary-component :data=<span class=\"string\">\"item\"</span> v-<span class=\"keyword\">if</span>=<span class=\"string\">\"current === 'primary-component'\"</span>&gt;<span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">primary-component</span>&gt;</span></span></span><br><span class=\"line\">   &lt;danger-component :data=<span class=\"string\">\"item\"</span> v-<span class=\"keyword\">if</span>=<span class=\"string\">\"current === 'danger-component'\"</span>&gt;<span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">danger-component</span>&gt;</span></span></span><br><span class=\"line\">   &lt;<span class=\"regexp\">/div&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"局部元件-1\"><a href=\"#局部元件-1\" class=\"headerlink\" title=\"局部元件\"></a>局部元件</h2><p>沒有太特別的設定，只是背景換顏色而已。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;script type=<span class=\"string\">\"text/x-template\"</span> id=<span class=\"string\">\"primaryComponent\"</span>&gt;</span><br><span class=\"line\">&lt;div <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"card text-white bg-primary mb-3\"</span> style=<span class=\"string\">\"max-width: 18rem;\"</span>&gt;</span><br><span class=\"line\">  &lt;div <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"card-header\"</span>&gt;&#123;&#123; data.header &#125;&#125;&lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">  &lt;div class=\"card-body\"&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    &lt;h5 class=\"card-title\"&gt;&#123;&#123; data.title &#125;&#125;&lt;/</span>h5&gt;</span><br><span class=\"line\">    &lt;p <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"card-text\"</span>&gt;&#123;&#123; data.text &#125;&#125;&lt;<span class=\"regexp\">/p&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">  &lt;/</span>div&gt;</span><br><span class=\"line\">&lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/</span>script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script type=<span class=\"string\">\"text/x-template\"</span> id=<span class=\"string\">\"dangerComponent\"</span>&gt;</span><br><span class=\"line\">&lt;div <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"card text-white bg-danger mb-3\"</span> style=<span class=\"string\">\"max-width: 18rem;\"</span>&gt;</span><br><span class=\"line\">  &lt;div <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"card-header\"</span>&gt;&#123;&#123; data.header &#125;&#125;&lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">  &lt;div class=\"card-body\"&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    &lt;h5 class=\"card-title\"&gt;&#123;&#123; data.title &#125;&#125;&lt;/</span>h5&gt;</span><br><span class=\"line\">    &lt;p <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"card-text\"</span>&gt;&#123;&#123; data.text &#125;&#125;&lt;<span class=\"regexp\">/p&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">  &lt;/</span>div&gt;</span><br><span class=\"line\">&lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/</span>script&gt;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Vue-局部元件資料與實體\"><a href=\"#Vue-局部元件資料與實體\" class=\"headerlink\" title=\"Vue 局部元件資料與實體\"></a>Vue 局部元件資料與實體</h2><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">Vue.component(<span class=\"string\">\"primary-component\"</span>, &#123;</span><br><span class=\"line\">  props: [<span class=\"string\">\"data\"</span>],</span><br><span class=\"line\">  template: <span class=\"string\">\"#primaryComponent\"</span>,</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">Vue.component(<span class=\"string\">\"danger-component\"</span>, &#123;</span><br><span class=\"line\">  props: [<span class=\"string\">\"data\"</span>],</span><br><span class=\"line\">  template: <span class=\"string\">\"#dangerComponent\"</span>,</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> app = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  el: <span class=\"string\">\"#app\"</span>,</span><br><span class=\"line\">  data: &#123;</span><br><span class=\"line\">    item: &#123;</span><br><span class=\"line\">      header: <span class=\"string\">\"這裡是 header\"</span>,</span><br><span class=\"line\">      title: <span class=\"string\">\"這裡是 title\"</span>,</span><br><span class=\"line\">      text:</span><br><span class=\"line\">        <span class=\"string\">\"Lorem ipsum dolor sit amet consectetur adipisicing elit. Enim perferendis illo reprehenderit ex natus earum explicabo modi voluptas cupiditate aperiam, quasi quisquam mollitia velit ut odio vitae atque incidunt minus?\"</span>,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    current: <span class=\"string\">\"primary-component\"</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"改寫-HTML\"><a href=\"#改寫-HTML\" class=\"headerlink\" title=\"改寫 HTML\"></a>改寫 HTML</h2><p>在動態切換元件有看到 <code>ul</code> 清單列表內有兩個 a 連結，其中有綁定 <code>click</code> 事件，當點擊時，透過 <code>v-bind:class</code> 新增 <code>active</code> 屬性，並切換背景色。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">primary-component</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">:data</span>=<span class=\"string\">\"item\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">v-if</span>=<span class=\"string\">\"current === 'primary-component'\"</span></span></span><br><span class=\"line\"><span class=\"tag\">&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">primary-component</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">danger-component</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">:data</span>=<span class=\"string\">\"item\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">v-if</span>=<span class=\"string\">\"current === 'danger-component'\"</span></span></span><br><span class=\"line\"><span class=\"tag\">&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">danger-component</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>依照剛剛靜態的概念，透過動態切換，所以可改寫成下方程式碼，</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">:is</span>=<span class=\"string\">\"current\"</span> <span class=\"attr\">:data</span>=<span class=\"string\">\"item\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>這樣就完成了點擊按鈕並可切換背景色。</p>\n<iframe height=\"550\" style=\"width: 100%;\"  src=\"https://codepen.io/hnzxewqw/embed/mdPQYow?height=265&theme-id=light&default-tab=html,result\"></iframe>\n","categories":["vue.js"],"tags":["vue.js"]},{"title":"JS 筆記 - Mousemove 滑鼠移動到指定元素事件","url":"/javascript/20200922/3291818329/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/JavaScript%20note-01.jpg?alt=media&token=7bee0261-72ac-4de4-9f5a-f39d58735b7d\" alt=\"JavaScript Note\"></p>\n<p>mousemove 事件常用於一些小遊戲，因滑鼠移動到指定元素後就會出現效果。</p>\n<blockquote>\n<p>馬利歐如果碰到烏龜就會死掉，或是撞擊磚塊會有蘑菇或是無敵星星。</p>\n</blockquote>\n<h2 id=\"練習主題\"><a href=\"#練習主題\" class=\"headerlink\" title=\"練習主題\"></a>練習主題</h2><p>寫一個方塊，滑鼠移動到方塊時，會跳出 alert 視窗。</p>\n<h3 id=\"HTML\"><a href=\"#HTML\" class=\"headerlink\" title=\"HTML\"></a>HTML</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;div class&#x3D;&quot;box&quot;&gt;&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"CSS\"><a href=\"#CSS\" class=\"headerlink\" title=\"CSS\"></a>CSS</h3><figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.box</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">300px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">300px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#333</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>這很簡單，就不贅述。</p>\n<p>mousemove 是 JS 另一個控制滑鼠的屬性，先綁定 .box，並新增一個監聽事件，在監聽事件中，寫入相關語法。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> box = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\".box\"</span>);</span><br><span class=\"line\">box.addEventListener(<span class=\"string\">\"mousemove\"</span>, touch, <span class=\"literal\">false</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">touch</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  alert(<span class=\"string\">\"滑鼠碰到我了\"</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>codepen 試效果 <a href=\"https://codepen.io/hnzxewqw/pen/wvadwMQ\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/wvadwMQ</a></p>\n<hr>\n<h2 id=\"來做一個小遊戲\"><a href=\"#來做一個小遊戲\" class=\"headerlink\" title=\"來做一個小遊戲\"></a>來做一個小遊戲</h2><p>遊戲任務，滑鼠<strong>不可碰到</strong>持續<strong>上下移動</strong>的<strong>六個方塊</strong>，不然就<strong>輸了</strong>!</p>\n<p>所以有幾個條件:</p>\n<ul>\n<li>不可碰到 mousemove</li>\n<li>上下移動 CSS 動畫</li>\n<li>六個方塊 .box</li>\n<li>輸了 alert</li>\n</ul>\n<h3 id=\"HTML-1\"><a href=\"#HTML-1\" class=\"headerlink\" title=\"HTML\"></a>HTML</h3><p>那就來建立六個方塊:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;div class&#x3D;&quot;box box1&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;div class&#x3D;&quot;box box2&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;div class&#x3D;&quot;box box3&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;div class&#x3D;&quot;box box4&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;div class&#x3D;&quot;box box5&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;div class&#x3D;&quot;box box6&quot;&gt;&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure>\n\n<p>因控制 .box 內容皆相同，只有 .box1~6 為做動畫而分開撰寫。</p>\n<hr>\n<h3 id=\"CSS-1\"><a href=\"#CSS-1\" class=\"headerlink\" title=\"CSS\"></a>CSS</h3><figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.box</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: firebrick;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">  <span class=\"comment\">/* 為了讓方塊可以都先置頂，等等跑動畫才會有動態 */</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>為了製作這次的遊戲關卡，使用 <code>animation</code> 屬性，<code>@keyframes &quot;變數名稱&quot;</code>，</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@keyframes</span> boxmove &#123;</span><br><span class=\"line\">  0% &#123;</span><br><span class=\"line\">    <span class=\"attribute\">top</span>: <span class=\"number\">0px</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  50% &#123;</span><br><span class=\"line\">    <span class=\"attribute\">top</span>: <span class=\"number\">300px</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  100% &#123;</span><br><span class=\"line\">    <span class=\"attribute\">top</span>: <span class=\"number\">0px</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><code>.box1</code> 到 <code>.box6</code> 內容設定相同，只有在秒數的內容不同，from 表示起始，也可以用 0% 表示，to 表示結束，也可以用 100% 表示，因為數值範圍是 0%~100%，所以超過這個範圍的都是錯誤的。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.box1</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">top</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"comment\">/* 使方塊置頂 */</span></span><br><span class=\"line\">  <span class=\"attribute\">left</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">animation</span>: boxmove <span class=\"number\">5s</span> infinite;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>參考文章 <a href=\"https://www.oxxostudio.tw/articles/201803/css-animation.html\" target=\"_blank\" rel=\"noopener\">https://www.oxxostudio.tw/articles/201803/css-animation.html</a></p>\n<hr>\n<h2 id=\"JavaScript\"><a href=\"#JavaScript\" class=\"headerlink\" title=\"JavaScript\"></a>JavaScript</h2><p>因為總共有 6 個，使用迴圈套進 box 變數中選取的 .box，去監聽滑鼠事件，只要滑鼠碰到方塊，就會執行 touch 函式。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> box = <span class=\"built_in\">document</span>.querySelectorAll(<span class=\"string\">\".box\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> boxLen = box.length;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(box);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; boxLen; i++) &#123;</span><br><span class=\"line\">  box[i].addEventListener(<span class=\"string\">\"mousemove\"</span>, touch, <span class=\"literal\">false</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">touch</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    alert(<span class=\"string\">\"滑鼠碰到我了\"</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>完整程式碼可以看 codepen: <a href=\"https://codepen.io/hnzxewqw/pen/LYVyEEP\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/LYVyEEP</a></p>\n","categories":["JavaScript"],"tags":["JavaScript"]},{"title":"Vue 筆記 - Slot 插槽","url":"/vue-js/20200921/1737698650/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/vue%20cover.png?alt=media&token=5f8b5aa0-eb3e-4d21-a715-07c5442dafbc\" alt=\"vue.js\"></p>\n<p>拆分元件是為了同一個功能被重複使用，但難免會遇到有特別的獨立資訊要放置在拆分的元件內，這時候就可以利用插槽的方式，在指定要放入的標籤內，替換掉原本的內容。</p>\n<p>關鍵字為 <code>slot</code>。</p>\n<h2 id=\"無插槽狀態\"><a href=\"#無插槽狀態\" class=\"headerlink\" title=\"無插槽狀態\"></a>無插槽狀態</h2><h3 id=\"HTML\"><a href=\"#HTML\" class=\"headerlink\" title=\"HTML\"></a>HTML</h3><p>放入拆分的 x-template。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>沒有插槽可替換的狀態<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">no-slot-component</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">no-slot-component</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"x-template\"><a href=\"#x-template\" class=\"headerlink\" title=\"x-template\"></a>x-template</h3><p>沒有替換用的 <code>slot</code>。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;script type=<span class=\"string\">\"text/x-template\"</span> id=<span class=\"string\">\"noSlotComponent\"</span>&gt;</span><br><span class=\"line\">  &lt;div <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"alert alert-warning\"</span>&gt;</span><br><span class=\"line\">    &lt;h6&gt;我是一個元件&lt;<span class=\"regexp\">/h6&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    &lt;p&gt;這沒有插槽。&lt;/</span>p&gt;</span><br><span class=\"line\">  &lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/</span>script&gt;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Vue-局部元件\"><a href=\"#Vue-局部元件\" class=\"headerlink\" title=\"Vue 局部元件\"></a>Vue 局部元件</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">Vue.component(<span class=\"string\">\"no-slot-component\"</span>, &#123;</span><br><span class=\"line\">  template: <span class=\"string\">\"#noSlotComponent\"</span>,</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"插槽基礎使用\"><a href=\"#插槽基礎使用\" class=\"headerlink\" title=\"插槽基礎使用\"></a>插槽基礎使用</h2><h3 id=\"HTML-1\"><a href=\"#HTML-1\" class=\"headerlink\" title=\"HTML\"></a>HTML</h3><p>放入拆分的 x-template。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">single-slot-component</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>使用這段取代原本的 Slot。<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">single-slot-component</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"x-template-1\"><a href=\"#x-template-1\" class=\"headerlink\" title=\"x-template\"></a>x-template</h3><p>下方元件中的 <code>p</code> 段落是想要替換的內容。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">    &lt;script type=<span class=\"string\">\"text/x-template\"</span> id=<span class=\"string\">\"singleSlotComponent\"</span>&gt;</span><br><span class=\"line\">&lt;div <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"alert alert-warning\"</span>&gt;</span><br><span class=\"line\">  &lt;h6&gt;我是一個元件&lt;<span class=\"regexp\">/h6&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    &lt;p&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    如果沒有內容，則會顯示此段落。</span></span><br><span class=\"line\"><span class=\"regexp\">  &lt;p&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/</span>div&gt;</span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>若要將 HTML 預設的文字替換掉，可以把局部元件的文字標籤，改成 <code>slot</code>，就可以替換掉原本的預設內容，可為下方程式碼。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">    &lt;script type=<span class=\"string\">\"text/x-template\"</span> id=<span class=\"string\">\"singleSlotComponent\"</span>&gt;</span><br><span class=\"line\">&lt;div <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"alert alert-warning\"</span>&gt;</span><br><span class=\"line\">  &lt;h6&gt;我是一個元件&lt;<span class=\"regexp\">/h6&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    &lt;slot&gt; /</span><span class=\"regexp\">/ 修改此處</span></span><br><span class=\"line\"><span class=\"regexp\">    如果沒有內容，則會顯示此段落。</span></span><br><span class=\"line\"><span class=\"regexp\">  &lt;slot&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/</span>div&gt;</span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>這樣就完成了。</p>\n<h3 id=\"Vue-局部元件-1\"><a href=\"#Vue-局部元件-1\" class=\"headerlink\" title=\"Vue 局部元件\"></a>Vue 局部元件</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">Vue.component(<span class=\"string\">\"single-slot-component\"</span>, &#123;</span><br><span class=\"line\">  template: <span class=\"string\">\"#singleSlotComponent\"</span>,</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"具名插槽\"><a href=\"#具名插槽\" class=\"headerlink\" title=\"具名插槽\"></a>具名插槽</h2><p>當重複元件，但是要插入資料較多的內容，又不要動到原本的架構，就可以使用具名插槽來替換，若不想增加 HTML 標籤，可以使用 <code>template</code>，這樣就不會該標籤在 HTML 內。</p>\n<h3 id=\"HTML-2\"><a href=\"#HTML-2\" class=\"headerlink\" title=\"HTML\"></a>HTML</h3><p>放入拆分的 <code>x-template</code>，可以看見上方為沒有要替換的內容，下方是要替換的內容。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>具名插槽<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">named-slot-component</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;/<span class=\"name\">named-slot-component</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">named-slot-component</span>&gt;</span></span><br><span class=\"line\">         <span class=\"tag\">&lt;<span class=\"name\">header</span>&gt;</span>替換的 Header<span class=\"tag\">&lt;/<span class=\"name\">header</span>&gt;</span></span><br><span class=\"line\">         <span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span>替換的 Footer<span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">         <span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span>按鈕內容<span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">         <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>其餘的內容<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;/<span class=\"name\">named-slot-component</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"x-template-2\"><a href=\"#x-template-2\" class=\"headerlink\" title=\"x-template\"></a>x-template</h3><p>下方已將欲替換的插槽設定好，既然是具名插槽，就要給它名字 name=”輸入名稱”。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;script type=<span class=\"string\">\"text/x-template\"</span> id=<span class=\"string\">\"namedSlotComponent\"</span>&gt;</span><br><span class=\"line\">  &lt;div <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"card my-3\"</span>&gt;</span><br><span class=\"line\">    &lt;div <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"card-header\"</span>&gt;</span><br><span class=\"line\">      &lt;slot&gt;這段是預設的文字&lt;<span class=\"regexp\">/slot&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    &lt;/</span>div&gt;</span><br><span class=\"line\">    &lt;div <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"card-body\"</span>&gt;</span><br><span class=\"line\">      &lt;slot&gt;</span><br><span class=\"line\">        &lt;h5 <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"card-title\"</span>&gt;Special title treatment&lt;<span class=\"regexp\">/h5&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;p class=\"card-text\"&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">          With supporting text below as a natural lead-in to additional content.</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;/</span>p&gt;</span><br><span class=\"line\">      &lt;<span class=\"regexp\">/slot&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">      &lt;a href=\"#\" class=\"btn btn-primary\"&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;slot&gt;spanGo somewhere&lt;/</span>slot&gt;</span><br><span class=\"line\">      &lt;<span class=\"regexp\">/a&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    &lt;/</span>div&gt;</span><br><span class=\"line\">    &lt;div <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"card-footer\"</span>&gt;</span><br><span class=\"line\">      &lt;slot&gt;這是預設的 Footer&lt;<span class=\"regexp\">/slot&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    &lt;/</span>div&gt;</span><br><span class=\"line\">  &lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/</span>script&gt;</span><br></pre></td></tr></table></figure>\n\n<p>增加 <code>name</code> 後的 <code>x-template</code>，給予 name 名稱時建議對應標籤的名稱，這樣比較直覺。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">       &lt;script type=<span class=\"string\">\"text/x-template\"</span> id=<span class=\"string\">\"namedSlotComponent\"</span>&gt;</span><br><span class=\"line\">&lt;div <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"card my-3\"</span>&gt;</span><br><span class=\"line\">  &lt;div <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"card-header\"</span>&gt;</span><br><span class=\"line\">    &lt;slot name=<span class=\"string\">\"header\"</span>&gt;這段是預設的文字&lt;<span class=\"regexp\">/slot&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">  &lt;/</span>div&gt;</span><br><span class=\"line\">  &lt;div <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"card-body\"</span>&gt;</span><br><span class=\"line\">    &lt;slot&gt;</span><br><span class=\"line\">      &lt;h5 <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"card-title\"</span>&gt;Special title treatment&lt;<span class=\"regexp\">/h5&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">      &lt;p class=\"card-text\"&gt;With supporting text below as a natural lead-in to additional content.&lt;/</span>p&gt;</span><br><span class=\"line\">    &lt;<span class=\"regexp\">/slot&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    &lt;a href=\"#\" class=\"btn btn-primary\"&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">      &lt;slot name=btn&gt;spanGo somewhere&lt;/</span>slot&gt;</span><br><span class=\"line\">    &lt;<span class=\"regexp\">/a&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">  &lt;/</span>div&gt;</span><br><span class=\"line\">  &lt;div <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"card-footer\"</span>&gt;</span><br><span class=\"line\">    &lt;slot name=<span class=\"string\">\"footer\"</span>&gt;這是預設的 Footer&lt;<span class=\"regexp\">/slot&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">  &lt;/</span>div&gt;</span><br><span class=\"line\">&lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/</span>script&gt;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"替換-HTML\"><a href=\"#替換-HTML\" class=\"headerlink\" title=\"替換 HTML\"></a>替換 HTML</h3><p>將要替換的插槽部分寫成 <code>slot=&quot;對應名稱&quot;</code>，更新後的程式碼如下，</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">named-slot-component</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">header</span> <span class=\"attr\">slot</span>=<span class=\"string\">\"header\"</span>&gt;</span>替換的 Header<span class=\"tag\">&lt;/<span class=\"name\">header</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">slot</span>=<span class=\"string\">\"footer\"</span>&gt;</span>替換的 Footer<span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">slot</span>=<span class=\"string\">\"btn\"</span>&gt;</span>按鈕內容<span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>其餘的內容<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">named-slot-component</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Vue-局部元件-2\"><a href=\"#Vue-局部元件-2\" class=\"headerlink\" title=\"Vue 局部元件\"></a>Vue 局部元件</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">Vue.component(<span class=\"string\">\"named-slot-component\"</span>, &#123;</span><br><span class=\"line\">  template: <span class=\"string\">\"#namedSlotComponent\"</span>,</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<iframe height=\"1300\" style=\"width: 100%;\"  src=\"https://codepen.io/hnzxewqw/embed/jOqQyBg?height=265&theme-id=light&default-tab=html,result\"></iframe>\n","categories":["vue.js"],"tags":["vue.js"]},{"title":"Vue 筆記 - 向外層傳遞事件 emit","url":"/vue-js/20200921/3789156215/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/vue%20cover.png?alt=media&token=5f8b5aa0-eb3e-4d21-a715-07c5442dafbc\" alt=\"vue.js\"></p>\n<p>拆分元件後的資料獨立，好處是彼此不會受影響，只要關注於元件本身即可，但有時候還是需要向外傳遞資料，這時就可以使用 emit 來處理。</p>\n<h2 id=\"練習範例-資料傳遞至父層\"><a href=\"#練習範例-資料傳遞至父層\" class=\"headerlink\" title=\"練習範例 - 資料傳遞至父層\"></a>練習範例 - 資料傳遞至父層</h2><p>點擊子層的按鈕，將累加的資料傳遞到父層來顯示。</p>\n<p>首先先確認在 Vue 的物件實體中是否能實作這個功能，<code>h2</code> 下方加上一個按鈕。</p>\n<h3 id=\"HTML\"><a href=\"#HTML\" class=\"headerlink\" title=\"HTML\"></a>HTML</h3><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>透過 emit 向外傳遞資訊<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">  我透過元件儲值了 &#123;&#123; cash &#125;&#125; 元</span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn btn-primary\"</span>&gt;</span>click<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">button-counter</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">button-counter</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">hr</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">button-counter</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">button-counter</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"局部元件與-Vue-實體\"><a href=\"#局部元件與-Vue-實體\" class=\"headerlink\" title=\"局部元件與 Vue 實體\"></a>局部元件與 Vue 實體</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">  &lt;script type=<span class=\"string\">\"text/x-template\"</span> id=<span class=\"string\">\"buttonCounter\"</span>&gt;</span><br><span class=\"line\">  &lt;div&gt;</span><br><span class=\"line\">    &lt;button @click=<span class=\"string\">\"incrementCounter\"</span> <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"btn btn-outline-primary\"</span>&gt;增加 &#123;&#123; counter &#125;&#125; 元&lt;<span class=\"regexp\">/button&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    &lt;input type=\"number\" class=\"form-control mt-2\" v-model=\"counter\"&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">  &lt;/</span>div&gt;<span class=\"string\">`</span></span><br><span class=\"line\"><span class=\"string\">&lt;/script&gt;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">        &lt;script&gt;</span></span><br><span class=\"line\"><span class=\"string\">          Vue.component('buttonCounter', &#123;</span></span><br><span class=\"line\">            template: `#buttonCounter`,</span><br><span class=\"line\">            data: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">              <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">                counter: <span class=\"number\">1</span></span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            methods: &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">          &#125;);</span><br><span class=\"line\"><span class=\"comment\">//Vue 物件實體</span></span><br><span class=\"line\">          <span class=\"keyword\">var</span> app = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">            el: <span class=\"string\">'#app'</span>,</span><br><span class=\"line\">            data: &#123;</span><br><span class=\"line\">              cash: <span class=\"number\">300</span></span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            methods: &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">          &#125;);</span><br><span class=\"line\">        &lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"觸發事件\"><a href=\"#觸發事件\" class=\"headerlink\" title=\"觸發事件\"></a>觸發事件</h2><p>在 HTML 中要用 <code>button</code> 來觸發事件，使用 <code>v-on:click</code>，並在 <code>methods</code> 中建立方法屬性與要執行的內容。</p>\n<h3 id=\"HTML-1\"><a href=\"#HTML-1\" class=\"headerlink\" title=\"HTML\"></a>HTML</h3><p>建立點擊事件。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>透過 emit 向外傳遞資訊<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">  我透過元件儲值了 &#123;&#123; cash &#125;&#125; 元</span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"incrementTotal\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn btn-primary\"</span>&gt;</span>click<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">button-counter</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"incrementTotal\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">button-counter</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">hr</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">button-counter</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">button-counter</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Vue\"><a href=\"#Vue\" class=\"headerlink\" title=\"Vue\"></a>Vue</h3><p>將對應的方法寫入 <code>methods</code>。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> app = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  el: <span class=\"string\">\"#app\"</span>,</span><br><span class=\"line\">  data: &#123;</span><br><span class=\"line\">    cash: <span class=\"number\">300</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\">    incrementTotal() &#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.cash += <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<iframe height=\"265\" style=\"width: 100%;\"  src=\"https://codepen.io/hnzxewqw/embed/KKzrMqP?height=265&theme-id=light&default-tab=js,result\"></iframe>\n\n<h2 id=\"於局部元件註冊點擊事件\"><a href=\"#於局部元件註冊點擊事件\" class=\"headerlink\" title=\"於局部元件註冊點擊事件\"></a>於局部元件註冊點擊事件</h2><p>確認可以實作累加功能後，在局部元件加入點擊事件，並且啟用上方寫好的 <code>incrementTotal</code> 的方法內容，於局部元件的 vue 物件中寫入該屬性。</p>\n<h3 id=\"HTML-2\"><a href=\"#HTML-2\" class=\"headerlink\" title=\"HTML\"></a>HTML</h3><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>透過 emit 向外傳遞資訊<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">  我透過元件儲值了 &#123;&#123; cash &#125;&#125; 元</span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"incrementTotal\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn btn-primary\"</span>&gt;</span>click<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">button-counter</span> @<span class=\"attr\">increment</span>=<span class=\"string\">\"incrementTotal\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">button-counter</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">hr</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">button-counter</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">button-counter</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"局部元件\"><a href=\"#局部元件\" class=\"headerlink\" title=\"局部元件\"></a>局部元件</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">   &lt;script type=<span class=\"string\">\"text/x-template\"</span> id=<span class=\"string\">\"buttonCounter\"</span>&gt;</span><br><span class=\"line\">  &lt;div&gt;</span><br><span class=\"line\">    &lt;button @click=<span class=\"string\">\"incrementCounter\"</span> <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"btn btn-outline-primary\"</span>&gt;增加 &#123;&#123; counter &#125;&#125; 元&lt;<span class=\"regexp\">/button&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    &lt;input type=\"number\" class=\"form-control mt-2\" v-model=\"counter\"&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">  &lt;/</span>div&gt;<span class=\"string\">`</span></span><br><span class=\"line\"><span class=\"string\">&lt;/script&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Vue-1\"><a href=\"#Vue-1\" class=\"headerlink\" title=\"Vue\"></a>Vue</h3><p>於局部元件內的方法，透過 <code>$emit()</code> 的方式將可以觸發父層的 <code>@click=&quot;incrementTotal&quot;</code> 點擊事件，<code>emit</code> 前面要加一個 <code>$</code> 字號，裡面帶入局部元件的事件名稱(此名稱可自訂)</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">Vue.component(<span class=\"string\">\"buttonCounter\"</span>, &#123;</span><br><span class=\"line\">  template: <span class=\"string\">`#buttonCounter`</span>,</span><br><span class=\"line\">  data: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">      counter: <span class=\"number\">1</span>,</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\">    incrementCounter() &#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.$emit(<span class=\"string\">\"increment\"</span>);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>就完成點擊內部元件觸發外層事件，讓數字可以往上壘加。</p>\n<iframe height=\"265\" style=\"width: 100%;\" src=\"https://codepen.io/hnzxewqw/embed/QWNJEQL?height=265&theme-id=light&default-tab=js,result\"></iframe>\n\n<p><code>emit</code> 是可以傳遞參數的，其參數就是 <code>this.counter</code>，也就是局部元件中的 counter 的值。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">data: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">   counter: <span class=\"number\">1</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>但為了確保傳入的值為<strong>數字型別</strong>，所以外面使用 Number 將 this.counter 包起來。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">methods: &#123;</span><br><span class=\"line\">  incrementCounter()&#123;</span><br><span class=\"line\">     <span class=\"keyword\">this</span>.$emit(<span class=\"string\">'increment'</span><span class=\"built_in\">Number</span>(<span class=\"keyword\">this</span>.counter));</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"改寫-Vue-物件實體\"><a href=\"#改寫-Vue-物件實體\" class=\"headerlink\" title=\"改寫 Vue 物件實體\"></a>改寫 Vue 物件實體</h2><p>如果在另一個按鈕要改變輸入的值，並將其值累加於父層上，在 Vue 物件實體的方法中，帶入參數 newNumber，在將原本累加的程式碼改寫成下方程式碼，就可以完成在子層設定的值，累加到父層上。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> app = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  el: <span class=\"string\">\"#app\"</span>,</span><br><span class=\"line\">  data: &#123;</span><br><span class=\"line\">    cash: <span class=\"number\">300</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\">    incrementTotal(newNumber) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.cash = <span class=\"keyword\">this</span>.cash + newNumber;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<iframe height=\"400\" style=\"width: 100%;\"  src=\"https://codepen.io/hnzxewqw/embed/JjXeKVp?height=265&theme-id=light&default-tab=html,result\"></iframe>\n","categories":["vue.js"],"tags":["vue.js"]},{"title":"Vue 筆記 - 使用 X-template 建立元件","url":"/vue-js/20200920/2506730221/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/vue%20cover.png?alt=media&token=5f8b5aa0-eb3e-4d21-a715-07c5442dafbc\" alt=\"vue.js\"></p>\n<h2 id=\"本次練習重點\"><a href=\"#本次練習重點\" class=\"headerlink\" title=\"本次練習重點\"></a>本次練習重點</h2><p>使用 <code>x-template</code> 的方式建立元件，並且可以使該元件能重複使用，下方有一個 <code>table</code> 的標籤，目前該標籤是可以使用的，假如說今天是做一個後台系統，此元件功能可以被不同頁面使用，這時候共用的元件就很重要了。</p>\n<ul>\n<li>使用 <code>x-template</code> 建立表格元件</li>\n<li>使用 <code>is</code> 掛載 <code>template</code></li>\n<li>使用 <code>prop</code> 傳遞資料</li>\n<li>說明<strong>局部註冊</strong>及<strong>全域註冊</strong></li>\n</ul>\n<h3 id=\"HTML\"><a href=\"#HTML\" class=\"headerlink\" title=\"HTML\"></a>HTML</h3><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">class</span>=<span class=\"string\">\"table\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">thead</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">thead</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tr</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"(item, key) in data\"</span> <span class=\"attr\">:item</span>=<span class=\"string\">\"item\"</span> <span class=\"attr\">:key</span>=<span class=\"string\">\"key\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>&#123;&#123; item.name &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>&#123;&#123; item.cash &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>&#123;&#123; item.icash &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Vue\"><a href=\"#Vue\" class=\"headerlink\" title=\"Vue\"></a>Vue</h3><p>在 Vue 物件中已經有一個 data 資料，共有四筆，</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">data: [</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    name: <span class=\"string\">\"小明\"</span>,</span><br><span class=\"line\">    cash: <span class=\"number\">100</span>,</span><br><span class=\"line\">    icash: <span class=\"number\">500</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    name: <span class=\"string\">\"杰倫\"</span>,</span><br><span class=\"line\">    cash: <span class=\"number\">10000</span>,</span><br><span class=\"line\">    icash: <span class=\"number\">5000</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    name: <span class=\"string\">\"漂亮阿姨\"</span>,</span><br><span class=\"line\">    cash: <span class=\"number\">500</span>,</span><br><span class=\"line\">    icash: <span class=\"number\">500</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    name: <span class=\"string\">\"老媽\"</span>,</span><br><span class=\"line\">    cash: <span class=\"number\">10000</span>,</span><br><span class=\"line\">    icash: <span class=\"number\">100</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">];</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"X-template-起手式\"><a href=\"#X-template-起手式\" class=\"headerlink\" title=\"X-template 起手式\"></a>X-template 起手式</h2><ol>\n<li>首先在 <code>Vue</code> 物件實體上方新增一個 <code>Vue.component()</code> 的方法，記得 Vue 要大寫！</li>\n<li>方法內前面是要輸入新建立的元件名稱，後面的物件要放的是第一個屬性是 <code>template:&#39;newComponentTemplate&#39;</code>，如下方所示。</li>\n<li>在原本的 <code>&lt;script&gt;</code> 標籤上建立一個新的 <code>&lt;script&gt;</code> 標籤，其 <code>id</code> 名稱對應新建立的元件 <code>template</code> 名稱，要使用 <code>#</code> 字號，因為對應的是 HTML 的 <code>id</code>。</li>\n<li>在 HTML 中加入該新元件的名稱標籤。</li>\n</ol>\n<p><code>&lt;script type=&quot;text/x-template&quot; id=&quot;newComponent&quot;&gt;&lt;/script&gt;</code></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">new-component</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">new-component</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">class</span>=<span class=\"string\">\"table\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">thead</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">thead</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">tr</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"(item, key) in data\"</span> <span class=\"attr\">:item</span>=<span class=\"string\">\"item\"</span> <span class=\"attr\">:key</span>=<span class=\"string\">\"key\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>&#123;&#123; item.name &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>&#123;&#123; item.cash &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>&#123;&#123; item.icash &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/x-template\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"newComponent\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"actionscript\">  Vue.component(<span class=\"string\">\"new-component\"</span>, &#123;</span></span><br><span class=\"line\"><span class=\"actionscript\">    template: <span class=\"string\">\"#newComponent\"</span>,</span></span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"actionscript\">  <span class=\"keyword\">var</span> app = <span class=\"keyword\">new</span> Vue(&#123;</span></span><br><span class=\"line\"><span class=\"actionscript\">    el: <span class=\"string\">\"#app\"</span>,</span></span><br><span class=\"line\">    data: &#123;</span><br><span class=\"line\">      data: [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\"><span class=\"actionscript\">          name: <span class=\"string\">\"小明\"</span>,</span></span><br><span class=\"line\">          cash: 100,</span><br><span class=\"line\">          icash: 500,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\"><span class=\"actionscript\">          name: <span class=\"string\">\"杰倫\"</span>,</span></span><br><span class=\"line\">          cash: 10000,</span><br><span class=\"line\">          icash: 5000,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\"><span class=\"actionscript\">          name: <span class=\"string\">\"漂亮阿姨\"</span>,</span></span><br><span class=\"line\">          cash: 500,</span><br><span class=\"line\">          icash: 500,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\"><span class=\"actionscript\">          name: <span class=\"string\">\"老媽\"</span>,</span></span><br><span class=\"line\">          cash: 10000,</span><br><span class=\"line\">          icash: 100,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">      ],</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"整理程式碼\"><a href=\"#整理程式碼\" class=\"headerlink\" title=\"整理程式碼\"></a>整理程式碼</h2><p>建立完後在把原本 HTML 中的 <code>tr</code> 標籤內容也貼到新元件的 <code>&lt;script&gt;</code> 的標籤內，並將 <code>v-for</code> 、 <code>:bind</code> 跟 <code>:key</code> 等綁定的方法移到新元件的 HTML 標籤中，程式碼會如下，</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">class</span>=<span class=\"string\">\"table\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">thead</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">thead</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">new-component</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">v-for</span>=<span class=\"string\">\"(item, key) in data\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">:item</span>=<span class=\"string\">\"item\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">:key</span>=<span class=\"string\">\"key\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      &gt;</span><span class=\"tag\">&lt;/<span class=\"name\">new-component</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/x-template\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"newComponent\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"handlebars\"><span class=\"xml\">  <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"handlebars\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><span class=\"template-variable\">&#123;&#123; item.name &#125;&#125;</span><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"handlebars\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><span class=\"template-variable\">&#123;&#123; item.cash &#125;&#125;</span><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"handlebars\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><span class=\"template-variable\">&#123;&#123; item.icash &#125;&#125;</span><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"handlebars\"><span class=\"xml\">  <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>完成後會發現畫面什麼都沒有…Chrome 的開發者工具會跳錯表示，<code>item</code> 並沒有被定義，但其實是有定義的。</p>\n<p>透過 Vue 的開發者工具可以看到資料的確有讀取到，</p>\n<p><img src=\"https://i.imgur.com/QwCpRpb.png\" alt=\"vue dev\"></p>\n<p>原因是元件之間的資料是獨立且分開的，目前建立的資料是在新的元件內，也因為這個特性，外層的元件當然讀不到資料，之前已經知道如果外層要傳遞資料要給內層的元件使用，要使用 <code>props</code> 方法。</p>\n<h2 id=\"使用-props\"><a href=\"#使用-props\" class=\"headerlink\" title=\"使用 props\"></a>使用 props</h2><h3 id=\"新元件\"><a href=\"#新元件\" class=\"headerlink\" title=\"新元件\"></a>新元件</h3><p>在新元件建立一個接收外部資料屬性，也就是 <code>props</code>，並且給予陣列資料，因為原本的 <code>data</code> 是陣列，實務上也是接收 <code>JSON</code> 資料格式，為了不要搞混，將定義資料屬性名稱為 <code>person</code>，避免跟上方的 <code>item</code> 搞混。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">Vue.component(<span class=\"string\">\"new-component\"</span>, &#123;</span><br><span class=\"line\">  props: [<span class=\"string\">\"person\"</span>], <span class=\"comment\">//新元件接收資料</span></span><br><span class=\"line\">  template: <span class=\"string\">\"#newComponent\"</span>,</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"HTML-1\"><a href=\"#HTML-1\" class=\"headerlink\" title=\"HTML\"></a>HTML</h3><p>新元件定義完後，就將其屬性綁定在標籤上，告訴原本的 <code>v-for</code> 的 <code>item</code> 資料，要傳進 綁定的的 <code>person</code> 屬性，這樣新元件才能接收到資料。</p>\n<p><code>&lt;new-ComponentTemplate v-for=&quot;(item, key) in data&quot; :person=&quot;item&quot; :key=&quot;key&quot;&gt;&lt;/new-ComponentTemplate&gt;</code></p>\n<p>所以新元件中的 <code>item</code> 也要改成 <code>person</code>，因為現在的 <code>item</code> 屬性名稱為 <code>person</code>。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;script type=<span class=\"string\">\"text/x-template\"</span> id=<span class=\"string\">\"newComponent\"</span>&gt;</span><br><span class=\"line\">      &lt;tr&gt;</span><br><span class=\"line\">        &lt;td&gt;&#123;&#123; person.name &#125;&#125;&lt;<span class=\"regexp\">/td&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;td&gt;&#123;&#123; person.cash &#125;&#125;&lt;/</span>td&gt;</span><br><span class=\"line\">        &lt;td&gt;&#123;&#123; person.icash &#125;&#125;&lt;<span class=\"regexp\">/td&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">      &lt;/</span>tr&gt;</span><br><span class=\"line\">    &lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>這時候畫面就會正確顯示於畫面上，但會發現跑版了…</p>\n<p><img src=\"https://i.imgur.com/c3ugdgb.png\" alt=\"view br\"></p>\n<p>從開發人員工具檢視，會看到下方結構變這樣…</p>\n<p><img src=\"https://i.imgur.com/4SLUlDJ.png\" alt=\"tbody\"></p>\n<p>tr 跑到 tbody 外面了，因為在 HTML 的規則中 tbody 內就是放 tr 跟 td，那目前我們是放新元件的標籤，違反了這個規則，所以要調整一下寫法。</p>\n<h2 id=\"使用-is\"><a href=\"#使用-is\" class=\"headerlink\" title=\"使用 is\"></a>使用 is</h2><p>把 <code>tbody</code> 中重新加入 <code>&lt;tr&gt;</code> 標籤，並把元件名稱放在 <code>is</code> 的屬性內，再將 vue 方法加入在 <code>&lt;tr&gt;</code> 中，就會變這樣。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">tr</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">is</span>=<span class=\"string\">\"new-component\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">v-for</span>=<span class=\"string\">\"(item, key) in data\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">:person</span>=<span class=\"string\">\"item\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">:key</span>=<span class=\"string\">\"key\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  &gt;</span><span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">tbody</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>這樣畫面就變為正常且也吃到 CSS 的樣式了！</p>\n<p><img src=\"https://i.imgur.com/FA3Bf1g.png\" alt=\"finish\"></p>\n<p>透過開發者工具也看到 <code>&lt;tr&gt;</code> 正確放入 <code>&lt;tbody&gt;</code> 標籤內。<br><img src=\"https://i.imgur.com/msEBVNy.png\" alt=\"correct html\"></p>\n<p>Vue 的開發者工具也正確顯示透過 <code>is</code> 動態將 <code>&lt;tr&gt;</code> 的標籤在執行時把原本的 <code>&lt;tr&gt;</code> 標籤內容替換掉的結果。</p>\n<p><img src=\"https://i.imgur.com/axA0XVs.png\" alt=\"vue dev2\"></p>\n<p>目前的新元件是全域註冊於 Vue 元件內，若只要<strong>局部註冊</strong>給新元件本身使用要怎麼寫?</p>\n<h2 id=\"局部註冊\"><a href=\"#局部註冊\" class=\"headerlink\" title=\"局部註冊\"></a>局部註冊</h2><p>將原本新元件的內容，透過另一個變數存取，</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Vue.component('new-component', &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//   props: ['person'],</span></span><br><span class=\"line\"><span class=\"comment\">//   template: '#newComponent'</span></span><br><span class=\"line\"><span class=\"comment\">// &#125;);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> childComponent = &#123;</span><br><span class=\"line\">  props: [<span class=\"string\">\"person\"</span>],</span><br><span class=\"line\">  template: <span class=\"string\">\"#newComponent\"</span>,</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p>在 Vue 物件中，再加上一個 <code>components</code> 屬性，其內容為新元件的屬性名稱與變數名稱，這樣的結果與先前的會相同。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">components: &#123;</span><br><span class=\"line\">            <span class=\"string\">'new-component'</span>: childComponent</span><br><span class=\"line\">          &#125;</span><br></pre></td></tr></table></figure>\n","categories":["vue.js"],"tags":["vue.js"]},{"title":"Vue 筆記 - 元件概念介紹","url":"/vue-js/20200919/4209129907/","content":"<p><img src=\"https://i.imgur.com/1Hx3C1e.png\" alt=\"components\"></p>\n<p>如上圖，在網頁上有許多的元件，像是 <code>header</code>，<code>aside</code>，<code>footer</code> 等重複性較高的元件，就可以透過這次要使用 <code>x-template</code> 來引入模組，並重複使用，在專案是就可以省下許多時間，與之前直接拆模組時使用的模板語法不同。</p>\n<h2 id=\"元件資料獨立與傳遞\"><a href=\"#元件資料獨立與傳遞\" class=\"headerlink\" title=\"元件資料獨立與傳遞\"></a>元件資料獨立與傳遞</h2><p><img src=\"https://i.imgur.com/LZWaLe1.png\" alt=\"props\"><br>如上圖所示，每一個元件的資料都是獨立的，只有該元件可以讀取到自己的 data，所以就算命名相同，也不會互相影響，當然在實務開發的時候避免自己搞混，還是會做不一樣的命名方式。</p>\n<p>拆分元件後，因為資料彼此無法給對方使用，如果上圖的 <code>side</code> 資料要給 <code>component</code> 使用該怎麼做？</p>\n<h3 id=\"資料由外層傳向內層-props\"><a href=\"#資料由外層傳向內層-props\" class=\"headerlink\" title=\"資料由外層傳向內層 props\"></a>資料由外層傳向內層 props</h3><p>若要將外層的資料傳給內層的資料，可以使用 <code>props</code> 的方法，當 side 資料更新時，就會同步的更新給 <code>component</code>。</p>\n<blockquote>\n<p>簡單講就是被動技能。</p>\n</blockquote>\n<h3 id=\"資料由內層傳向外層-emit-Event\"><a href=\"#資料由內層傳向外層-emit-Event\" class=\"headerlink\" title=\"資料由內層傳向外層 emit Event\"></a>資料由內層傳向外層 emit Event</h3><p>當內層資料要傳給外層時，可以使用 <code>emit</code> 方法，英文中有包含 <strong>event</strong> 的這個單字，所以它需要一個事件產生，才能使用該方法將資料傳送，並且只有透過<strong>事件產生</strong>時，才會傳遞資料給外層，所以並不是內層資料更新後，就會自動更新給外層的元件。</p>\n<blockquote>\n<p>簡單講就是主動技能。</p>\n</blockquote>\n<p>SPA 的網頁，也是透過元件搭配路由而產生出來的。</p>\n<iframe height=\"600\" style=\"width: 100%;\"  src=\"https://codepen.io/hnzxewqw/embed/rNeQBjb?height=265&theme-id=light&default-tab=html,result\"></iframe>\n","categories":["vue.js"],"tags":["vue.js"]},{"title":"Vue 筆記 - 使表格資料按照資料條件排序","url":"/vue-js/20200919/3037030482/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/vue%20cover.png?alt=media&token=5f8b5aa0-eb3e-4d21-a715-07c5442dafbc\" alt=\"vue.js\"></p>\n<h2 id=\"練習主題\"><a href=\"#練習主題\" class=\"headerlink\" title=\"練習主題\"></a>練習主題</h2><p>有一 <code>table</code> 表格，透過點擊資料條件細目，使 <code>table</code> 項目按照資料順序排列，由小至大或由大至小。</p>\n<ul>\n<li>有 click 事件。</li>\n<li>使用到 sort 的方法。</li>\n<li>使用 v-for 傳入 data 資料。</li>\n<li>使用 v-if 做判斷。</li>\n<li>使用 v-bind 動態增加 class 名稱。</li>\n</ul>\n<h2 id=\"建立-table-表格\"><a href=\"#建立-table-表格\" class=\"headerlink\" title=\"建立 table 表格\"></a>建立 table 表格</h2><p>首先建立一個表單，並把 <code>th</code> 寫好，架構基本上就完成了。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">class</span>=<span class=\"string\">\"table\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">thead</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>品名<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>價格<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>到期日<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">thead</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"建立-data-資料\"><a href=\"#建立-data-資料\" class=\"headerlink\" title=\"建立 data 資料\"></a>建立 data 資料</h2><p>目前範例沒有使用 <code>AJAX</code>，是使用現有的 <code>data</code> 資料，所以建立在 <code>Vue</code> 物件中的 <code>data</code> 屬性中，這個資料是一個 <code>JSON</code> 格式，也將其資料用一個變數 <code>data</code> 存放。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">data: &#123;</span><br><span class=\"line\">  data: [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      name: <span class=\"string\">\"巧呼呼蘇打水\"</span>,</span><br><span class=\"line\">      price: <span class=\"number\">30</span>,</span><br><span class=\"line\">      expiryDate: <span class=\"number\">90</span>,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      name: <span class=\"string\">\"心驚膽跳羊肉飯\"</span>,</span><br><span class=\"line\">      price: <span class=\"number\">65</span>,</span><br><span class=\"line\">      expiryDate: <span class=\"number\">2</span>,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      name: <span class=\"string\">\"郭師傅武功麵包\"</span>,</span><br><span class=\"line\">      price: <span class=\"number\">32</span>,</span><br><span class=\"line\">      expiryDate: <span class=\"number\">1</span>,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      name: <span class=\"string\">\"不太會過期的新鮮牛奶\"</span>,</span><br><span class=\"line\">      price: <span class=\"number\">75</span>,</span><br><span class=\"line\">      expiryDate: <span class=\"number\">600</span>,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      name: <span class=\"string\">\"金殺 巧粒粒\"</span>,</span><br><span class=\"line\">      price: <span class=\"number\">120</span>,</span><br><span class=\"line\">      expiryDate: <span class=\"number\">200</span>,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  ];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"匯入資料\"><a href=\"#匯入資料\" class=\"headerlink\" title=\"匯入資料\"></a>匯入資料</h2><p>使用 <code>v-for</code> 匯入資料，在 <code>td</code> 的外層 <code>tr</code> 中，使用<code>v-for</code>，這樣就會將依序帶入 <code>td</code> 中。</p>\n<blockquote>\n<p>官方文件表示：<code>2.2.0+</code> 的版本里，当在组件上使用 <code>v-for</code> 时，<code>key</code> 现在是必须的。</p>\n</blockquote>\n<p>所以程式碼如下，並於 <code>td</code> 中透過模板語法顯示我們要顯示的內容。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;tr v-<span class=\"keyword\">for</span>=<span class=\"string\">\"item in sortData\"</span> :key=<span class=\"string\">\"item.price\"</span>&gt;</span><br><span class=\"line\">       &lt;td&gt;&#123;&#123; item.name &#125;&#125;&lt;<span class=\"regexp\">/td&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">       &lt;td&gt;&#123;&#123; item.price &#125;&#125;&lt;/</span>td&gt;</span><br><span class=\"line\">       &lt;td&gt;&#123;&#123; item.expiryDate &#125;&#125;&lt;<span class=\"regexp\">/td&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">     &lt;/</span>tr&gt;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"判斷條件\"><a href=\"#判斷條件\" class=\"headerlink\" title=\"判斷條件\"></a>判斷條件</h2><h3 id=\"HTML\"><a href=\"#HTML\" class=\"headerlink\" title=\"HTML\"></a>HTML</h3><p>在要點擊與判斷的項目是加上 <code>click</code> 事件與 <code>v-if</code> 判斷條件，以價格為例：</p>\n<ol>\n<li>點擊事件對應的 <code>changeType()</code> 方法，其參數帶入 <code>price</code> ，要在點擊價錢後會依照價錢的資料多寡要做排序。</li>\n<li>將上下反轉的圖示獨立出來，用 <code>&lt;span&gt;</code> 包住 <code>fontawesome</code> 的標籤，並在 <code>span</code> 上做判斷是否為上或下。</li>\n<li>到期日方式一樣，故照本宣刻。</li>\n<li>因為會使用共同的樣式設定，所以 <code>class</code> 名稱也設定為一樣就可避免重工。</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">th</span> <span class=\"attr\">class</span>=<span class=\"string\">\"click\"</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"changeType('price')\"</span>&gt;</span></span><br><span class=\"line\">  價格</span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- isReverse 為反轉 className --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"icon\"</span> <span class=\"attr\">:class</span>=<span class=\"string\">\"&#123;'inverse': isReverse&#125;\"</span> <span class=\"attr\">v-if</span>=<span class=\"string\">\"sortType == 'price'\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\" fas fa-angle-up text-success\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">th</span> <span class=\"attr\">class</span>=<span class=\"string\">\"click\"</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"changeType('expiryDate')\"</span>&gt;</span></span><br><span class=\"line\">  到期日</span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">span</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">class</span>=<span class=\"string\">\"icon\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">:class</span>=<span class=\"string\">\"&#123;'inverse': isReverse&#125;\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">v-if</span>=<span class=\"string\">\"sortType == 'expiryDate'\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  &gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\" fas fa-angle-up text-success\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Vue\"><a href=\"#Vue\" class=\"headerlink\" title=\"Vue\"></a>Vue</h3><p>建立 <code>methods</code> 跟 <code>computed</code>，因 <code>@click</code> 一定會對應到 <code>methods</code>，</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">data:&#123;</span><br><span class=\"line\">data[...],</span><br><span class=\"line\"> sortType: <span class=\"string\">\"price\"</span>,</span><br><span class=\"line\">    isReverse: <span class=\"literal\">false</span></span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"> methods: &#123;</span><br><span class=\"line\">    changeType: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">type</span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> vm = <span class=\"keyword\">this</span>;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (vm.sortType == type) &#123;</span><br><span class=\"line\">        vm.isReverse = !vm.isReverse;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        vm.isReverse = <span class=\"literal\">false</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      vm.sortType = type;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  computed: &#123;</span><br><span class=\"line\">    sortData() &#123;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> vm = <span class=\"keyword\">this</span>;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> type = vm.sortType;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> vm.data.sort(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">a, b</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (vm.isReverse) <span class=\"keyword\">return</span> b[type] - a[type];</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">return</span> a[type] - b[type];</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n\n<ol>\n<li><p>設定排列類型條件名稱為 <code>sortType</code>，其值設定為 <code>price</code>，<code>isReverse</code> 是設定 <code>font-awesome</code> 圖案的方向初始條件(CSS 是設定為往上)。</p>\n</li>\n<li><p><code>changeType</code> 方法說明：</p>\n<ul>\n<li><code>changeType(type)</code> 宣告一個 <code>vm</code> 變數為自己(<code>this</code>)，如果 <code>vue</code> 物件的 <code>sortType</code> 為 <code>type</code> 的時候，就可以完成開關，若不符合這個條件，則設定值為 false。</li>\n<li>最後面這行 <code>vm.sortType = type;</code> 是同步給<strong>到期日</strong>自己的判斷來使用。</li>\n</ul>\n</li>\n<li><p><code>computed</code> 屬性結果說明：</p>\n<ul>\n<li>宣告 vm 變數為 <code>computed</code> 運算方法本身(<code>this</code>)。<blockquote>\n<p>vue 包裝後的 this，在不同屬性中不會互相影響。</p>\n</blockquote>\n</li>\n<li><code>data</code> 中的 <code>sortType</code> 預設值為 <code>price</code>，所以使用 <code>price</code> 這個順序來排列。</li>\n<li>宣告 <code>type</code> 變數為 <code>vm.sortType</code> 的這個值。</li>\n<li>回傳 data 的排序，使用 sort 的方法，並給予判斷式讓 <code>type</code> 由小至大或是由大至小來排列。</li>\n</ul>\n</li>\n</ol>\n<iframe height=\"400\" style=\"width: 100%;\"  src=\"https://codepen.io/hnzxewqw/embed/wvBQLzW?height=265&theme-id=light&default-tab=js,result\"></iframe>\n","categories":["vue.js"],"tags":["vue.js"]},{"title":"Vue 筆記 - Computed 與 Watch","url":"/vue-js/20200918/1364644613/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/vue%20cover.png?alt=media&token=5f8b5aa0-eb3e-4d21-a715-07c5442dafbc\" alt=\"vue.js\"></p>\n<p>如果想要偵測資料的變動時，可以使用 Watch 來追蹤其變化，使用 watch，是用物件呈現１應將要觀察的屬性帶入函式使用。</p>\n<h2 id=\"練習範例-watch\"><a href=\"#練習範例-watch\" class=\"headerlink\" title=\"練習範例 - watch\"></a>練習範例 - watch</h2><h3 id=\"HTML\"><a href=\"#HTML\" class=\"headerlink\" title=\"HTML\"></a>HTML</h3><p>欲顯示於網頁的樣式</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span>&#123;&#123; fullName &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Vue\"><a href=\"#Vue\" class=\"headerlink\" title=\"Vue\"></a>Vue</h3><p>先設定一組資料 data，透過 watch 來觀察其變化，透過 watch 觀察 <code>firstName</code> 跟 <code>lastName</code>， 而 <code>firstName</code> 跟 <code>lastName</code> 兩個函式所帶入的參數，就是自己的值，並加上另外要組合的函式，所以只要 data 資料變更， watch 就會接收到，並顯示於網頁上。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  el: <span class=\"string\">\"#app\"</span>,</span><br><span class=\"line\">  data: &#123;</span><br><span class=\"line\">    firstName: <span class=\"string\">\"Foo\"</span>,</span><br><span class=\"line\">    lastName: <span class=\"string\">\"Bar\"</span>,</span><br><span class=\"line\">    fullName: <span class=\"string\">\"Foo Bar\"</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  watch: &#123;</span><br><span class=\"line\">    firstName: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">val</span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.fullName = val + <span class=\"string\">\" \"</span> + <span class=\"keyword\">this</span>.lastName;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    lastName: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">val</span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.fullName = <span class=\"keyword\">this</span>.firstName + <span class=\"string\">\" \"</span> + val;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"computed-改寫\"><a href=\"#computed-改寫\" class=\"headerlink\" title=\"computed 改寫\"></a>computed 改寫</h3><p>但這個範例使用 watch，就不太聰明，可以改用 computed，原因是組合名字，是馬上就可以得到的資料，不需要特別觀察後再給予值，若用 computed 改寫後會如下方呈現，直接組合起來即可。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> vm2 = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  el: <span class=\"string\">\"#app2\"</span>,</span><br><span class=\"line\">  data: &#123; <span class=\"attr\">firstName</span>: <span class=\"string\">\"Foo\"</span>, <span class=\"attr\">lastName</span>: <span class=\"string\">\"Bar\"</span> &#125;,</span><br><span class=\"line\">  computed: &#123;</span><br><span class=\"line\">    fullName: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.firstName + <span class=\"string\">\" \"</span> + <span class=\"keyword\">this</span>.lastName;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<iframe height=\"300\" style=\"width: 100%;\" src=\"https://codepen.io/hnzxewqw/embed/jOqvoxR?height=265&theme-id=light&default-tab=js,result\"></iframe>\n\n<h2 id=\"透過-watch-觀察物件後使其恢復原來狀態\"><a href=\"#透過-watch-觀察物件後使其恢復原來狀態\" class=\"headerlink\" title=\"透過 watch 觀察物件後使其恢復原來狀態\"></a>透過 watch 觀察物件後使其恢復原來狀態</h2><p>watch 有趣的地方就可以改變後的結果，例如：我點擊一個按鈕讓網頁元素有個正方形可以旋轉 45 度，透過 <code>watch</code> 讓正方形自動三秒後轉回原本的樣子。</p>\n<h3 id=\"HTML-1\"><a href=\"#HTML-1\" class=\"headerlink\" title=\"HTML\"></a>HTML</h3><p>首先在 <code>.box</code> 綁定 class 名稱與其變數，<code>button</code> 綁定 <code>@click</code> 事件，效果設定為 <code>true</code>。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"box\"</span> <span class=\"attr\">:class</span>=<span class=\"string\">\"&#123;'rotate': trigger &#125;\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn btn-outline-primary\"</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"trigger =true\"</span>&gt;</span>Counter<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Vue-1\"><a href=\"#Vue-1\" class=\"headerlink\" title=\"Vue\"></a>Vue</h3><ol>\n<li><code>data</code> 資料中給予預設的 <code>trigger</code> 變數為 <code>false</code>。</li>\n<li>為了讓 <code>.box</code> 在三秒鐘後自動回復原狀，所以透過 watch 觀察 trigger 這個變數。</li>\n<li>並宣告一個 vm 變數為 this，指的就是 <code>trigger</code> 自己。</li>\n<li>使用到時間關係的動作，就會想到 <code>setTimeout</code>，並透過這個函式，使 <code>trigger</code> 這個變數本身，於三秒後變為 false，也就是原本的狀態。</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> app = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  el: <span class=\"string\">\"#app\"</span>,</span><br><span class=\"line\">  data: &#123;</span><br><span class=\"line\">    trigger: <span class=\"literal\">false</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  watch: &#123;</span><br><span class=\"line\">    trigger() &#123;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> vm = <span class=\"keyword\">this</span>;</span><br><span class=\"line\">      setTimeout(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">        vm.trigger = <span class=\"literal\">false</span>;</span><br><span class=\"line\">      &#125;, <span class=\"number\">3000</span>);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<iframe height=\"400\" style=\"width: 100%;\"  src=\"https://codepen.io/hnzxewqw/embed/vYGzwPd?height=265&theme-id=light&default-tab=css,result\"></iframe>\n","categories":["vue.js"],"tags":["vue.js"]},{"title":"Vue 筆記 - Component 元件化基礎概念","url":"/vue-js/20200917/334940023/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/vue%20cover.png?alt=media&token=5f8b5aa0-eb3e-4d21-a715-07c5442dafbc\" alt=\"vue.js\"></p>\n<p>在網頁中會重複出現一些相同的元素或介面，若可以將此介面獨立出來並反覆使用，就可以大大減少開發的時間與重工，透過元件化的方式將這些重複或是制式的介面獨立出來，在不同的頁面只要做引入就可以使用，是非常方便的事情。</p>\n<p>下方有一個按鈕，若這個按鈕點擊一次，就會使其中的數字 +1，</p>\n<h3 id=\"HTML\"><a href=\"#HTML\" class=\"headerlink\" title=\"HTML\"></a>HTML</h3><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    你已經點擊</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn btn-outline-secondary btn-sm\"</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"counter += 1\"</span>&gt;</span></span><br><span class=\"line\">      &#123;&#123; counter &#125;&#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">    下。</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Vue\"><a href=\"#Vue\" class=\"headerlink\" title=\"Vue\"></a>Vue</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> app = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  el: <span class=\"string\">\"#app\"</span>,</span><br><span class=\"line\">  data: &#123;</span><br><span class=\"line\">    counter: <span class=\"number\">0</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<iframe height=\"265\" style=\"width: 100%;\" src=\"https://codepen.io/hnzxewqw/embed/PoNdJdd?height=265&theme-id=light&default-tab=html,result\"></iframe>\n\n<p>假設要將此元件獨立化可以這樣做：</p>\n<p>先在 vue 的物件上方加入這行元件的名稱與內容，向下方起手式。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">Vue.component(<span class=\"string\">'對應的 html 標籤名稱'</span>,&#123;</span><br><span class=\"line\">data() &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"keyword\">var</span> app = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">...</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<p>因為要複製同一個按鈕的功能，故把名稱自定義為 <code>counter-component</code>，並使用逗點隔開，後方接著一個物件，而這個物件裡面會有一個 data 的函式，跟 vue 初始下方的資料為物件形式不同，再把該功能帶入 data 函式中。</p>\n<p>因為要在網頁上重複使用元件，當然不能少了標籤內容，在 data 下方再給予一個 template 屬性，並用重音符 <code>‵</code>，也就是 ES6 語法外面的反引號，建立 HTML 標籤。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">Vue.component(<span class=\"string\">\"counter-component\"</span>, &#123;</span><br><span class=\"line\">  data() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">      counter: <span class=\"number\">0</span>,</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  template: <span class=\"string\">`</span></span><br><span class=\"line\"><span class=\"string\">            &lt;div&gt;</span></span><br><span class=\"line\"><span class=\"string\">              你已經點擊 &lt;button class=\"btn btn-outline-secondary btn-sm\" @click=\"counter += 1\"&gt;&#123;&#123; counter &#125;&#125;&lt;/button&gt; 下。</span></span><br><span class=\"line\"><span class=\"string\">            &lt;/div&gt;</span></span><br><span class=\"line\"><span class=\"string\">            `</span>,</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>最後在把自定義的標籤放在 html 中，就完成了。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">counter-component</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">counter-component</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>此建立好的元件可以重複使用，所以在 html 多建立幾個標籤，也不會互相影響，資料都是獨立的!</p>\n<iframe height=\"350\" style=\"width: 100%;\"  src=\"https://codepen.io/hnzxewqw/embed/NWNLwWQ?height=265&theme-id=light&default-tab=js,result\"></iframe>\n","categories":["vue.js"],"tags":["vue.js"]},{"title":"Vue 筆記 - Computed 的 get() 與 set()","url":"/vue-js/20200917/2086781732/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/vue%20cover.png?alt=media&token=5f8b5aa0-eb3e-4d21-a715-07c5442dafbc\" alt=\"vue.js\"></p>\n<p>在 Vue 中，<code>computed</code> 的屬性跟 <code>data</code> 的屬性可以視為相同，可以讀取值與設定值，所以可以分成 <code>getter</code>(讀取) 跟 <code>setter</code>(寫入) 兩種。</p>\n<p>在預設的狀態下，因為沒有特別設定 <code>setter</code>，所以會被視為<strong>唯讀</strong>的狀態，不過 Vue 允許開發者自行設定 <code>setter</code>，在 computed 屬性被更新後，原本在 <code>data</code> 內的資料也會被寫回更新。</p>\n<h2 id=\"寫一個雙向匯率計算機\"><a href=\"#寫一個雙向匯率計算機\" class=\"headerlink\" title=\"寫一個雙向匯率計算機\"></a>寫一個雙向匯率計算機</h2><p>延續上一篇 <a href=\"https://hsuchihting.github.io/vue-js/20200917/2215013588/\">Vue 筆記 - computed 與 methods 的差別</a>的匯率計算機，這次透過 <code>getter</code> 與 <code>setter</code> 的資料更新，將其內容更新，做到雙向的資料呈現。</p>\n<h3 id=\"HTML\"><a href=\"#HTML\" class=\"headerlink\" title=\"HTML\"></a>HTML</h3><p>將原本的計算機結構做修改，變成有兩個 input，要做為不同幣值的轉換輸入框。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>1 日幣 = 0.269 台幣<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>日幣 <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">v-model</span>=<span class=\"string\">\"jpy\"</span> /&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>台幣 <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">v-model</span>=<span class=\"string\">\"twd\"</span> /&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Vue\"><a href=\"#Vue\" class=\"headerlink\" title=\"Vue\"></a>Vue</h3><ol>\n<li>在原本的計算中加入 <code>get()</code> 與 <code>set()</code> 兩個函式。</li>\n<li><code>get()</code> 讀取值的函式中回傳的方法是跟之前一樣。</li>\n<li><code>set()</code> 的方法為把原本的得到的值，透過重新寫入的方式，回傳給台幣。</li>\n<li>因為台幣比日幣大，計算時就要變成除日幣匯率，才會正確的讓兩個輸入框的值顯示結果為正確。</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  el: <span class=\"string\">\"#app\"</span>,</span><br><span class=\"line\">  data: &#123;</span><br><span class=\"line\">    jpy: <span class=\"number\">0</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  computed: &#123;</span><br><span class=\"line\">    twd: &#123;</span><br><span class=\"line\">      <span class=\"keyword\">get</span>() &#123;</span><br><span class=\"line\">        <span class=\"comment\">//輸入的日幣</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.jpy * <span class=\"number\">0.269</span>;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"keyword\">set</span>(value) &#123;</span><br><span class=\"line\">        <span class=\"comment\">//換算後的台幣</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> (<span class=\"keyword\">this</span>.jpy = value / <span class=\"number\">0.269</span>);</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<iframe height=\"265\" style=\"width: 100%;\" src=\"https://codepen.io/hnzxewqw/embed/zYqJNZE?height=265&theme-id=light&default-tab=js,result\"></iframe>\n","categories":["vue.js"],"tags":["vue.js"]},{"title":"Vue 筆記 - computed 與 methods 的差別","url":"/vue-js/20200917/2215013588/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/vue%20cover.png?alt=media&token=5f8b5aa0-eb3e-4d21-a715-07c5442dafbc\" alt=\"vue.js\"></p>\n<p>前一篇在 <code>v-on</code> 事件中有使用 <code>methods</code> 屬性，但使用的情境不同，簡單來說如果計算結果不需重複使用，可以使用 <code>computed</code>，若會重複使用則選擇用 <code>methods</code>。</p>\n<h2 id=\"methods\"><a href=\"#methods\" class=\"headerlink\" title=\"methods\"></a>methods</h2><p>前面例子有提到，只要使用 <code>v-on:click</code> 事件就會對應一個 <code>methods</code> 的屬性，而通常會使用在反覆用到的情境中，<a href=\"https://hsuchihting.github.io/vue-js/20200427/1872522243/\">Vue 筆記 - 使用 v-on 處理互動式行為</a>這邊的使用情境都是會反覆運算與執行的，<code>methods</code> 只要重新渲染網頁，就一定會執行當中的 function。</p>\n<h2 id=\"computed\"><a href=\"#computed\" class=\"headerlink\" title=\"computed\"></a>computed</h2><p>雖然執行結果會與 <code>methods</code> 相同，但背後處理的方式不同，尤其是在效能優化處理上有差別，<code>computed</code> 的計算屬性，只有在觀察到透過 <code>this</code> 綁定的屬性變化後才會更新，所以在觀察到之前是不會有運算結果，使用的方式就是在 <code>computed</code> 的屬性中，是以物件做為呈現，並在其中帶入一個函式，並且 <code>return</code> 這個函式的物件內容，重要的地方是， <code>computed</code> 裡面的函式屬性也是一個物件。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">computed:&#123;</span><br><span class=\"line\">fnName:fn()&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"寫一個簡單的計算機\"><a href=\"#寫一個簡單的計算機\" class=\"headerlink\" title=\"寫一個簡單的計算機\"></a>寫一個簡單的計算機</h2><p>有兩個 <code>input</code>，輸入數字後讓其結果自動相加，就可以使用 <code>computed</code>。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">v-model.number</span>=<span class=\"string\">\"num1\"</span> /&gt;</span> +</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">v-model.number</span>=<span class=\"string\">\"num2\"</span> /&gt;</span> = &#123;&#123; sum &#125;&#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>定義好兩個數字起始值為 0，透過雙向綁定使其輸入數值時，也讓資料同時變動，最後透過 <code>computed</code> 加總後得到預期的值，要使用 <code>this</code> 指向資料本身，才會進行運算。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  el: <span class=\"string\">\"#app\"</span>,</span><br><span class=\"line\">  data: &#123;</span><br><span class=\"line\">    num1: <span class=\"number\">0</span>,</span><br><span class=\"line\">    num2: <span class=\"number\">0</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  computed: &#123;</span><br><span class=\"line\">    sum() &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.num1 + <span class=\"keyword\">this</span>.num2;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<iframe height=\"265\" style=\"width: 100%;\" src=\"https://codepen.io/hnzxewqw/embed/ZEbKgVO?height=265&theme-id=light&default-tab=js,result\"></iframe>\n\n<h2 id=\"寫一個匯率計算機\"><a href=\"#寫一個匯率計算機\" class=\"headerlink\" title=\"寫一個匯率計算機\"></a>寫一個匯率計算機</h2><p>因為計算匯率不需要反覆計算，只要計算一次就可以得到結果，所以這邊使用 <code>computed</code> 做為計算的屬性。</p>\n<p>匯率查詢連結 -<a href=\"https://rate.bot.com.tw/xrt?Lang=zh-TW\" target=\"_blank\" rel=\"noopener\">台灣銀行牌告匯率</a></p>\n<h3 id=\"HTML\"><a href=\"#HTML\" class=\"headerlink\" title=\"HTML\"></a>HTML</h3><p>先寫好表單架構與要帶入的模板語法，因為我今天要轉換的是日幣換台幣，所以起始的幣值是日幣。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>1 日幣 = 0.269 台幣<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>日幣 <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">v-model</span>=<span class=\"string\">\"jpy\"</span> /&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>約 &#123;&#123; twd &#125;&#125; 元新台幣<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Vue\"><a href=\"#Vue\" class=\"headerlink\" title=\"Vue\"></a>Vue</h3><ol>\n<li>因為要計算的是日幣轉換成台幣匯率，所以輸入的是日幣的初始值。</li>\n<li>在資料中先給予日幣值為 0，計算轉換為台幣。</li>\n<li><code>computed</code> 中給予一個 twd 的屬性名稱，裡面是一個函式，回傳的結果是 twd 這個值為日幣資料本身去 * 0.269，就會得到預期的運算結果。</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  el: <span class=\"string\">'#app'</span>,</span><br><span class=\"line\">  data: &#123;</span><br><span class=\"line\">        jpy: <span class=\"number\">0</span>;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  computed: &#123;</span><br><span class=\"line\">    twd: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> twd = <span class=\"keyword\">this</span>.jpy * <span class=\"number\">0.292</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<iframe height=\"265\" style=\"width: 100%;\" src=\"https://codepen.io/hnzxewqw/embed/qBZMqQX?height=265&theme-id=light&default-tab=js,result\">\n</iframe>\n","categories":["vue.js"],"tags":["vue.js"]},{"title":"JS 筆記 - blur 離開焦點","url":"/javascript/20200915/2757140016/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/JavaScript%20note-01.jpg?alt=media&token=7bee0261-72ac-4de4-9f5a-f39d58735b7d\" alt=\"JavaScript Note\"></p>\n<p>input 中，要輸入資料時，會看到有個藍色外框，這是 focus 效果，focus 有焦點，聚焦的意思，而 blur 英文單字中這是模糊的意思，這樣聯想，就會比較好知道這兩個效果的關聯性。</p>\n<hr>\n<h2 id=\"練習主題\"><a href=\"#練習主題\" class=\"headerlink\" title=\"練習主題\"></a>練習主題</h2><p>寫一個 <code>input</code>，在點擊後<strong>但未輸入資料</strong>，在移開後，產生 <code>alert</code> 視窗告知填寫資料。</p>\n<p>先寫架構</p>\n<h3 id=\"HTML\"><a href=\"#HTML\" class=\"headerlink\" title=\"HTML\"></a>HTML</h3><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width, initial-scale=1.0\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>blur<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"input\"</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">\"請輸入資料\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn\"</span>&gt;</span>送出<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"js/all.js\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>送出的按紐，盡量習慣用 <code>button</code></p>\n</blockquote>\n<h3 id=\"JavaScript\"><a href=\"#JavaScript\" class=\"headerlink\" title=\"JavaScript\"></a>JavaScript</h3><p>先綁定 <code>.input</code>，並且設定監聽事件。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> input = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\".input\"</span>); <span class=\"comment\">//選取到 .input</span></span><br><span class=\"line\">input.addEventListener(<span class=\"string\">\"blur\"</span>, checkContent, <span class=\"literal\">false</span>); <span class=\"comment\">//建立監聽</span></span><br></pre></td></tr></table></figure>\n\n<p>建立函式</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">checkContent</span>(<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">//事件監聽</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> str = e.target.value; <span class=\"comment\">//宣告字串在這個事件中，目標為值</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (str == <span class=\"string\">\"\"</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//倘若值是空的，記得是要使用運算判斷</span></span><br><span class=\"line\">    alert(<span class=\"string\">\"請輸入資料\"</span>); <span class=\"comment\">//就跳出 alert</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>如此，就完成倘若點選表單，沒輸入內容，點選到旁邊的位置，就會跳出 alert 視窗，產生互動。</p>\n<p>CodePen: <a href=\"https://codepen.io/hnzxewqw/pen/bGdqXMM\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/bGdqXMM</a></p>\n","categories":["JavaScript"],"tags":["JavaScript"]},{"title":"Angular 筆記 - 寫一個時鐘","url":"/angular/20200914/2445569370/","content":"<p><img src=\"https://i.imgur.com/87pBpoJ.jpg\" alt=\"angular\"></p>\n<p>先前有寫過一篇<a href=\"https://hsuchihting.github.io/javascript/20200807/92265520/\">用 JavaScript 寫一個電子鐘</a></p>\n<p>這次要用 Angular 做一個電子鐘，要有日期跟時間，並且時間會一秒跳一次。</p>\n<h2 id=\"練習重點\"><a href=\"#練習重點\" class=\"headerlink\" title=\"練習重點\"></a>練習重點</h2><ul>\n<li>取到目前時間，並且秒數一秒跳一次。</li>\n<li>取道目前日期</li>\n</ul>\n<h2 id=\"使用-date\"><a href=\"#使用-date\" class=\"headerlink\" title=\"使用 date\"></a>使用 date</h2><p>先設定抓到今天的日期，首先在 <strong>app.component.html</strong> 寫入一個 <code>today</code> 的變數，並且後面使用 pipe 的 <code>date</code> 元件，其格式內容可以參考[]這篇()</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"time\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>&#123;&#123;today | date:'hh:mm:ss'&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"date\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>&#123;&#123;today | date&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>這樣就完成上方是目前時間，下方為今天日期的物件。</p>\n<h3 id=\"TS\"><a href=\"#TS\" class=\"headerlink\" title=\"TS\"></a>TS</h3><p>如之前 JS 原生寫法可以知道，跟時間有關係就要用 <code>setTimeout</code> 或是 <code>setInterval</code>，因為是要讓秒數無限循環的一秒跳一次，所以使用 <code>setInterval</code>，但問題來了， JS 的寫法跟 ng 寫法是不同的，無法直接把 JS 的程式碼當作參考來用 <del>(想偷懶被抓包</del>)。</p>\n<p>在 ng 要改這樣寫。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">today: <span class=\"built_in\">Date</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">constructor</span>() &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  ngOnInit(): <span class=\"keyword\">void</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// this.timeObservable$ = interval(1000);</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.today = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>();</span><br><span class=\"line\">    setInterval(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.today = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>();</span><br><span class=\"line\">    &#125;, <span class=\"number\">1000</span>);</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n\n<p>剛剛在 html 已經有定義一個變數，所以要給這個變數一個類別，這個類別為時間。<br>因為打開頁面就要顯示時鐘，所以把程式碼寫在 <code>ngOnInit()</code> 這個方法內，裡面的程式碼是這樣的：</p>\n<ul>\n<li>today 這個變數本身的值是一個 <code>new Date()</code> 的物件(這跟 JS 原生的方式一樣)。</li>\n<li>使用 <code>setInterval()</code> 這個函式，讓這個 <code>today</code> 的物件內容一秒跑一次。</li>\n</ul>\n<p><a href=\"https://stackblitz.com/edit/angular-ivy-jbwqas?file=src/app/app.component.ts\" target=\"_blank\" rel=\"noopener\">Demo</a></p>\n<h2 id=\"結語\"><a href=\"#結語\" class=\"headerlink\" title=\"結語\"></a>結語</h2><p>原本以為會跟原生的一樣多行，但因為 Angular 已經包裝好 date 的方法，所以不必再寫到那麼多的程式碼，算是一個有趣的寫法。也透過這個練習比較了解 Angular 關注點分離的好處!</p>\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><p><a href=\"https://blog.csdn.net/qq_36451496/article/details/103294597\" target=\"_blank\" rel=\"noopener\">Angular：實現一個簡單的時鐘</a></p>\n","categories":["Angular"],"tags":["Angular"]},{"title":"Angular 筆記 - Pipe 管線元件：date","url":"/angular/20200913/2198414702/","content":"<p><img src=\"https://i.imgur.com/87pBpoJ.jpg\" alt=\"angular\"></p>\n<p>根據區域設定規則格式化日期值，在 JS 原本寫日期有點瑣碎，但透過這個 datePipe 讓日期變得更簡單，而且還可以無痛轉換地區，真是太棒了。</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;&#123; value_expression | <span class=\"built_in\">date</span> [ : <span class=\"built_in\">format</span> [ : timezone [ : locale ] ] ] &#125;&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>date：JS 的 Date 物件。</li>\n<li>format：要包含的日期、時間部分的格式，預設值是 <code>mediumDate</code>。</li>\n<li>timezone：預設為本地端的時間，也就是如果我在台灣就是顯示台灣時間，加上 ‘+0430’ 代碼，會在格林威治標準時間加上 4 小時 30 分。</li>\n<li>locale：當地格式。</li>\n</ul>\n<p>其他預設值：</p>\n<ul>\n<li>short: 等價於 ‘M/d/yy, h:mm a’ (6/15/15, 9:03 AM).</li>\n<li>medium: 等價於 ‘MMM d, y, h:mm:ss a’ (Jun 15, 2015, 9:03:01 AM).</li>\n<li>long: 等價於 ‘MMMM d, y, h:mm:ss a z’ (June 15, 2015 at 9:03:01 AM GMT+1)</li>\n<li>full: 等價於 ‘EEEE, MMMM d, y, h:mm:ss a zzzz’ (Monday, June 15, 2015 at</li>\n<li>9:03:01 AM GMT+01:00)</li>\n<li>‘shortDate’: 等價於 ‘M/d/yy’ (6/15/15).</li>\n<li>mediumDate: 等價於 ‘MMM d, y’ (Jun 15, 2015).</li>\n<li>longDate: 等價於 ‘MMMM d, y’ (June 15, 2015).</li>\n<li>fullDate: 等價於 ‘EEEE, MMMM d, y’ (Monday, June 15, 2015).</li>\n<li>shortTime: 等價於 ‘h:mm a’ (9:03 AM).</li>\n<li>mediumTime: 等價於 ‘h:mm:ss a’ (9:03:01 AM).</li>\n<li>longTime: 等價於 ‘h:mm:ss a z’ (9:03:01 AM GMT+1).</li>\n<li>fullTime: 等價於 ‘h:mm:ss a zzzz’ (9:03:01 AM GMT+01:00).</li>\n</ul>\n<h3 id=\"HTML\"><a href=\"#HTML\" class=\"headerlink\" title=\"HTML\"></a>HTML</h3><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Today is &#123;&#123;today | date&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Or if you prefer, &#123;&#123;today | date:'fullDate'&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>The time is &#123;&#123;today | date:'h:mm a z'&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"TS\"><a href=\"#TS\" class=\"headerlink\" title=\"TS\"></a>TS</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">today = <span class=\"built_in\">Date</span>.now();</span><br></pre></td></tr></table></figure>\n\n<p><a href=\"https://stackblitz.com/edit/angular-ivy-1wq8up?file=src/app/app.component.html\" target=\"_blank\" rel=\"noopener\">Demo</a></p>\n","categories":["Angular"],"tags":["Angular"]},{"title":"Angular 筆記 - Pipe 管線元件：percent","url":"/angular/20200913/1812397448/","content":"<p><img src=\"https://i.imgur.com/87pBpoJ.jpg\" alt=\"angular\"></p>\n<h2 id=\"percent-百分比\"><a href=\"#percent-百分比\" class=\"headerlink\" title=\"percent 百分比\"></a>percent 百分比</h2><p>把數字轉換成百分比字串，</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;&#123; value_expression | percent [ : digitsInfo [ : locale ] ] &#125;&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p><code>digitsInfo</code> 與 <code>locale</code> 與 <code>DecimalPipe</code> 用法相同，只是 <code>digitsInfo</code> 的預設格式不同，會把百分比整理成整數。</p>\n</blockquote>\n<h3 id=\"HTML\"><a href=\"#HTML\" class=\"headerlink\" title=\"HTML\"></a>HTML</h3><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>轉成百分比: &#123;&#123;b | percent&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>轉成百分比，小數點前四位數，小數點後兩位： &#123;&#123;b | percent:'4.3-5'&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>百分比轉為法國格式: &#123;&#123;b | percent:'4.3-5':'fr'&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"TS\"><a href=\"#TS\" class=\"headerlink\" title=\"TS\"></a>TS</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">b = <span class=\"number\">0.259</span>;</span><br></pre></td></tr></table></figure>\n\n<p><a href=\"https://stackblitz.com/edit/angular-ivy-ghe2ua?file=src/app/app.component.html\" target=\"_blank\" rel=\"noopener\">Demo</a></p>\n","categories":["Angular"],"tags":["Angular"]},{"title":"Angular 筆記 - Pipe 管線元件：currency","url":"/angular/20200913/3577592664/","content":"<p><img src=\"https://i.imgur.com/87pBpoJ.jpg\" alt=\"angular\"></p>\n<h2 id=\"currency-貨幣\"><a href=\"#currency-貨幣\" class=\"headerlink\" title=\"currency 貨幣\"></a>currency 貨幣</h2><p>把數字轉換成金額字串的格式，使用方法如下：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;&#123; value_expression | currency [ : currencyCode [ : display [ : digitsInfo [ : locale ] ] ] ] &#125;&#125;</span><br></pre></td></tr></table></figure>\n\n<p>傳入的值 <code>| currency[:貨幣格式[:貨幣指示器 [:數字呈現選項 [:本地化格式]]]]</code></p>\n<h3 id=\"currencyCode-貨幣格式\"><a href=\"#currencyCode-貨幣格式\" class=\"headerlink\" title=\"currencyCode 貨幣格式\"></a>currencyCode 貨幣格式</h3><ul>\n<li>型別為 <code>string</code>。</li>\n<li>預設格式為美金 USD。</li>\n<li>currency 貨幣格式採用 <strong>ISO4217</strong> 的貨幣程式碼。</li>\n</ul>\n<h3 id=\"display-是否顯示貨幣代碼\"><a href=\"#display-是否顯示貨幣代碼\" class=\"headerlink\" title=\"display 是否顯示貨幣代碼\"></a>display 是否顯示貨幣代碼</h3><ul>\n<li>型別為 <code>string</code>、<code>boolean。</code></li>\n<li><code>code</code>: 貨幣程式碼（如 USD）。</li>\n<li><code>symbol(default)</code>: 展示貨幣符號（如 <code>\\$</code>）。</li>\n<li><code>symbol-narrow</code>: 使用區域的窄化符號，它包括兩個符號。 比如，加拿大元的符號是 <code>CA$</code>，而其窄化符號是 <code>$</code>。如果該區域沒有窄化符號，則使用它的標準符號。</li>\n<li><code>String</code>: 使用指定的字串值代替貨幣程式碼或符號。 比如，空字串將會去掉貨幣程式碼或符號。</li>\n</ul>\n<h3 id=\"digitsInfo-數字呈現樣式\"><a href=\"#digitsInfo-數字呈現樣式\" class=\"headerlink\" title=\"digitsInfo 數字呈現樣式\"></a>digitsInfo 數字呈現樣式</h3><ul>\n<li>型別為 <code>string</code>。</li>\n<li>{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}。</li>\n<li><code>minIntegerDigits</code>：在小數點前的最小位數。預設為 1。</li>\n<li><code>minFractionDigits</code>：小數點後的最小位數。預設為 0。</li>\n<li><code>maxFractionDigits</code>：小數點後的最大為數，預設為 3。</li>\n<li>若沒有提供則會根據 <strong>ISO 4217</strong> 規則判別。</li>\n</ul>\n<h3 id=\"locale-本地化\"><a href=\"#locale-本地化\" class=\"headerlink\" title=\"locale 本地化\"></a>locale 本地化</h3><ul>\n<li>型別為 <code>string。</code></li>\n<li>要使用的<strong>本地化</strong>格式程式碼。 如果未提供，則使用 <strong>LOCALE_ID</strong> 的值，預設為 <code>en-US</code>。 應用設定地區（locale）可參考<a href=\"https://angular.tw/guide/i18n#setting-up-the-locale-of-your-app\" target=\"_blank\" rel=\"noopener\">官網文件</a></li>\n</ul>\n<p><strong>預設值是 undefined</strong>。<br>台幣是 <code>TWD</code>。</p>\n<h3 id=\"HTML\"><a href=\"#HTML\" class=\"headerlink\" title=\"HTML\"></a>HTML</h3><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>預設為美金：&#123;&#123;a | currency&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>改為新台幣：&#123;&#123;a | currency:'TWD'&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>顯示貨幣格式碼： &#123;&#123;a | currency:'TWD':'code'&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>小數點前四位，小數點後兩位： &#123;&#123;a | currency:'TWD':'symbol':'4.2-2'&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>改為窄化符號 NT$： &#123;&#123;a | currency:'TWD':'symbol-narrow':'4.2-2'&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>改成日本貨幣：&#123;&#123;a | currency:'TWD':'symbol':'3.1-5':'jp'&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"TS\"><a href=\"#TS\" class=\"headerlink\" title=\"TS\"></a>TS</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">a: number = <span class=\"number\">100</span>;</span><br></pre></td></tr></table></figure>\n\n<p><a href=\"https://stackblitz.com/edit/angular-ivy-7kw9kc?file=src/app/app.component.css\" target=\"_blank\" rel=\"noopener\">Demo</a></p>\n","categories":["Angular"],"tags":["Angular"]},{"title":"Angular 筆記 - Pipe 管線元件：DecimalPipe","url":"/angular/20200913/417753607/","content":"<p><img src=\"https://i.imgur.com/87pBpoJ.jpg\" alt=\"angular\"></p>\n<h2 id=\"DecimalPipe-小數點\"><a href=\"#DecimalPipe-小數點\" class=\"headerlink\" title=\"DecimalPipe 小數點\"></a>DecimalPipe 小數點</h2><p>把<strong>數字</strong>轉換成<strong>字串</strong>， 根據本地化規則進行格式化，這些規則會決定分組大小和分組分隔符、小數點字元以及其它與本地化環境有關的配置項。</p>\n<p>官網範例：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;&#123; value_expression | number [ : digitsInfo [ : locale ] ] &#125;&#125;</span><br></pre></td></tr></table></figure>\n\n<p>雖然這個管道名字叫做 <code>DecimalPipe</code>，但用在 <code>template</code> 的名稱卻是 <code>number</code>，比較需要注意的是這點。</p>\n<p>另外可以看到 <code>number</code> 後方有兩個可選擇使用的引數，若沒有加上的話則為預設值，兩個引數都是<strong>字串</strong>的形式。</p>\n<h3 id=\"digitsInfo-數字格式\"><a href=\"#digitsInfo-數字格式\" class=\"headerlink\" title=\"digitsInfo 數字格式\"></a>digitsInfo 數字格式</h3><p>有以下格式可以選擇：</p>\n<ul>\n<li>{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}。</li>\n<li><code>minIntegerDigits</code>：在小數點前的最小位數。預設為 1。</li>\n<li><code>minFractionDigits</code>：小數點後的最小位數。預設為 0。</li>\n<li><code>maxFractionDigits</code>：小數點後的最大為數，預設為 3。</li>\n</ul>\n<p><strong>預設值是 undefined</strong>。</p>\n<h3 id=\"locale-本地化\"><a href=\"#locale-本地化\" class=\"headerlink\" title=\"locale 本地化\"></a>locale 本地化</h3><p>要使用的<strong>本地化</strong>格式程式碼。 如果未提供，則使用 <strong>LOCALE_ID</strong> 的值，預設為 <code>en-US</code>。 應用設定地區（<code>locale</code>）可參考<a href=\"https://angular.tw/guide/i18n#setting-up-the-locale-of-your-app\" target=\"_blank\" rel=\"noopener\">官網文件</a></p>\n<p><strong>預設值是 undefined</strong>。<br>台灣是 <code>zh-TW</code>。</p>\n<p>下方是官方範例，先在 <strong>app.component.ts</strong> 匯入兩個預設值。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">pi: number = <span class=\"number\">3.14</span>;</span><br><span class=\"line\">e: number = <span class=\"number\">2.718281828459045</span>;</span><br></pre></td></tr></table></figure>\n\n<p>帶入 template。</p>\n<h3 id=\"HTML\"><a href=\"#HTML\" class=\"headerlink\" title=\"HTML\"></a>HTML</h3><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!--output '2.718'--&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>e (沒有套入引數): &#123;&#123;e | number&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">&lt;!--output '002.71828'--&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>e (3.1-5): &#123;&#123;e | number:'3.1-5'&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">&lt;!--output '0,002.71828'--&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>e (4.5-5): &#123;&#123;e | number:'4.5-5'&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">&lt;!--output '0 002,71828'--&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>e (french): &#123;&#123;e | number:'4.5-5':'fr'&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">&lt;!--output '3.14'--&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>pi (no formatting): &#123;&#123;pi | number&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">&lt;!--output '003.14'--&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>pi (3.1-5): &#123;&#123;pi | number:'3.1-5'&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">&lt;!--output '003.14000'--&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>pi (3.5-5): &#123;&#123;pi | number:'3.5-5'&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">&lt;!--output '-3' / unlike '-2' by Math.round()--&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>-2.5 (1.0-0): &#123;&#123;-2.5 | number:'1.0-0'&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><a href=\"https://stackblitz.com/edit/angular-ivy-rpskqo?file=src/app/app.component.html\" target=\"_blank\" rel=\"noopener\">Demo</a></p>\n","categories":["Angular"],"tags":["Angular"]},{"title":"Angular 筆記 - Pipe 管線元件：Uppercase 與 Lowercase","url":"/angular/20200913/437284889/","content":"<p><img src=\"https://i.imgur.com/87pBpoJ.jpg\" alt=\"angular\"></p>\n<p><code>Pipe</code>，是在 Angular 中的一個好用的功能，其使用是在 <code>template</code> 使用，加上 <code>|</code> 這個符號，後面放上其函式，就可以直接使用並渲染於網頁上。</p>\n<blockquote>\n<p>管道用來對字串、貨幣金額、日期和其他顯示資料進行轉換和格式化。管道是一些簡單的函式，可以用來接受輸入值並返回一個轉換後的值。例如，你可以使用一個 Pipe 把日期顯示為 1988 年 4 月 15 日，而不是其原始字串格式。</p>\n</blockquote>\n<p>Angular 為典型的資料轉換提供了內建的管道，包括國際化的轉換（i18n），它使用本地化資訊來格式化資料。資料格式化常用的內建管道如下：</p>\n<ul>\n<li><code>DatePipe</code>：根據本地環境中的規則格式化日期值。</li>\n<li><code>UpperCasePipe</code>：把文字全部轉換成大寫。</li>\n<li><code>LowerCasePipe</code> ：把文字全部轉換成小寫。</li>\n<li><code>CurrencyPipe</code> ：把數字轉換成貨幣字串，根據本地環境中的規則進行格式化。</li>\n<li><code>DecimalPipe</code>：把數字轉換成帶小數點的字串，根據本地環境中的規則進行格式化。</li>\n<li><code>PercentPipe</code> ：把數字轉換成百分比字串，根據本地環境中的規則進行格式化。</li>\n</ul>\n<h2 id=\"Uppercase-與-Lowercase\"><a href=\"#Uppercase-與-Lowercase\" class=\"headerlink\" title=\"Uppercase 與 Lowercase\"></a>Uppercase 與 Lowercase</h2><p>把下方 template 的英文字母，全部轉成大寫跟小寫。</p>\n<h3 id=\"HTML\"><a href=\"#HTML\" class=\"headerlink\" title=\"HTML\"></a>HTML</h3><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>&#123;&#123;title&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AppComponent</span> </span>&#123;</span><br><span class=\"line\">  title = <span class=\"string\">\"This is Angular Practice\"</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>只要在 template 的元件型指令中的變數後方加上 <code>| uppercase</code> 或是 <code>| lowercase</code> 就會把標題全部改成大寫或是小寫囉~!!</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>&#123;&#123;title | uppercase&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>&#123;&#123;title | lowercase&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><a href=\"https://stackblitz.com/edit/angular-ivy-fjr1tw?file=src/app/app.component.html\" target=\"_blank\" rel=\"noopener\">Demo</a></p>\n","categories":["Angular"],"tags":["Angular"]},{"title":"Angular 筆記 - @injectable 裝飾器與注入 HttpClient 服務元件","url":"/angular/20200913/2155444350/","content":"<p><img src=\"https://i.imgur.com/87pBpoJ.jpg\" alt=\"angular\"></p>\n<h2 id=\"什麼是裝飾器\"><a href=\"#什麼是裝飾器\" class=\"headerlink\" title=\"什麼是裝飾器\"></a>什麼是裝飾器</h2><p>從前面元件的練習可以看到在 <code>app.component.ts</code> 的檔案中會有一個 <code>Component</code> 的裝飾器，代表裝載著這個元件資料夾內對應的路徑。</p>\n<p>而服務元件中的裝飾器叫做 <code>@Injectable</code>，用來注入需要的服務元件，像之前提到的<a href=\"https://hsuchihting.github.io/angular/20200826/4137699075/\">Angular 筆記 - Service 服務元件的基本認識</a>就有出現。</p>\n<p>除了共用的程式邏輯會使用到服務元件外，串接 API 也會需要使用服務元件，而這個服務元件在 Angular 已經建立好，稱為 <code>HttpClient</code>。</p>\n<h3 id=\"建立-HttpClientModule\"><a href=\"#建立-HttpClientModule\" class=\"headerlink\" title=\"建立 HttpClientModule\"></a>建立 HttpClientModule</h3><p>首先先建立一個新的服務元件，名為 <code>http.service.ts</code>，<code>HttpClient</code> 是從 <code>HttpModule</code> 來的，要同步注入到 <code>app.module.ts</code> 的 <code>imports</code> 屬性中。</p>\n<p><img src=\"https://i.imgur.com/K2PhsWF.png\" alt=\"http\"></p>\n<h3 id=\"ngModule\"><a href=\"#ngModule\" class=\"headerlink\" title=\"ngModule\"></a>ngModule</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">imports: [BrowserModule, HttpClientModule, AppRoutingModule, FormsModule]</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>注意：要加入在 <code>BrowserModule</code> 後方才能成功使用。</p>\n</blockquote>\n<p>注入完成後，最上方的 <code>import</code> 也會自動完成注入，如此就可以準備開始使用 <code>HttpClient</code> 服務元件了。</p>\n<h2 id=\"注入-HttpClient-服務元件\"><a href=\"#注入-HttpClient-服務元件\" class=\"headerlink\" title=\"注入 HttpClient 服務元件\"></a>注入 HttpClient 服務元件</h2><p>分別要 <code>import</code> 跟在 <strong>建構式 (constructor)</strong> 裡面注入 <code>HttpClient</code> 服務元件，不用自己逐字輸入，輸入關鍵幾個字就可以看到相對應的選項，必且後面要注意有 <code>import</code> 字樣的，就是會自動 <code>import</code> 到上方區域，</p>\n<p><img src=\"https://i.imgur.com/2M5Lzww.png\" alt=\"import\"></p>\n<p>完成後如下圖。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; Injectable &#125; <span class=\"keyword\">from</span> <span class=\"string\">'@angular/core'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; HttpClient &#125; <span class=\"keyword\">from</span> <span class=\"string\">'@angular/common/http'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">@Injectable(&#123;</span><br><span class=\"line\">  providedIn: <span class=\"string\">'root'</span>,</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HttpService</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>(private http: HttpClient) &#123;&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"取得-API-資料\"><a href=\"#取得-API-資料\" class=\"headerlink\" title=\"取得 API 資料\"></a>取得 API 資料</h2><p>在練習 <code>ngFor</code> 的時候有下載這支 <a href=\"https://data.taipei/opendata/datalist/apiAccess?scope=resourceAquire&rid=e6831708-02b4-4ef8-98fa-4b4ce53459d9\" target=\"_blank\" rel=\"noopener\">API</a> 來取得資料。</p>\n<p>基本的 <code>httpClient</code> 取得使用 <code>get()</code> 方法，只要在 constructor 內輸入，</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">this</span>.http.get(<span class=\"string\">\"url\"</span>);</span><br></pre></td></tr></table></figure>\n\n<p>就會把資料抓回來，在 Angular 中的 <code>AJAX</code> 都是非同步的，也不可能在這邊讀到取得的結果結果，還要透過一個 <a href=\"https://angular.tw/guide/rx-library\" target=\"_blank\" rel=\"noopener\">Rxjs</a> 幫忙訂閱 <code>get()</code> 之後的結果。滑鼠移到 http 上會看到提示資料類型是一個 <code>Observable&lt;object&gt;</code> 觀察者物件資料，所有的觀察者物件都要透過一個 <code>subscribe()</code> 方法來訂閱其結果，</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">this</span>.http.get(<span class=\"string\">\"url\"</span>).subscribe();</span><br></pre></td></tr></table></figure>\n\n<p>比較簡單的做法是在 <code>subscribe</code> 會透過一個 <code>callback function</code> 取得結果，其 <code>callback</code> 參數就是我們要取回的值，裡面要做的事情就是，這個 data 為我們帶進來的參數值。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">this</span>.http.get(<span class=\"string\">\"url\"</span>).subscribe(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.data = res;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>完整的程式碼會是這樣，</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">constructor</span>(private http: HttpClient) &#123;</span><br><span class=\"line\">   <span class=\"keyword\">this</span>.http.get(<span class=\"string\">'url'</span>).subscribe(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">     <span class=\"keyword\">this</span>.data = res;</span><br><span class=\"line\">     <span class=\"built_in\">console</span>.log(res);</span><br><span class=\"line\">   &#125;);</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n","categories":["Angular"],"tags":["Angular"]},{"title":"JS 筆記 - KeyCode 事件","url":"/javascript/20200908/3879475582/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/JavaScript%20note-01.jpg?alt=media&token=7bee0261-72ac-4de4-9f5a-f39d58735b7d\" alt=\"JavaScript Note\"></p>\n<p>keyCode 事件很多會用來做遊戲或是網頁互動的功能，很有意思的語法。</p>\n<h2 id=\"本次主題\"><a href=\"#本次主題\" class=\"headerlink\" title=\"本次主題\"></a>本次主題</h2><p>使用鍵盤數字 1, 2, 3 使元素向上飛出螢幕外。</p>\n<p>先來寫結構，有三個元素，程式碼如下:</p>\n<h3 id=\"HTML\"><a href=\"#HTML\" class=\"headerlink\" title=\"HTML\"></a>HTML</h3><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"group\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"box box1\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"box box2\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"box box3\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<hr>\n<ul>\n<li>有三個元素，有一些是共同項目，所以就用 <code>.box</code> 寫在一起，當中為了要讓球飛出去，使用 <code>transition</code> 的特性做動畫，其中速率調整有一個貝茲曲線的語法，可以透過 <code>F12</code> 開發人員工具，去調整喜歡的數值。</li>\n<li>因為是使用整個瀏覽器，所以只要在 <code>.box</code> 中直接寫上 <code>position: absolute;</code> 絕對定位在 body 中，並且 <code>bottom:0;</code> 使初始狀態在螢幕最底下。</li>\n<li>分別把三個 <code>.box1</code>, <code>.box2</code>, <code>.box3</code> 靠左間距各差 <code>200px</code>，這個是邊調整邊看螢幕的距離，可以自己調整成喜歡的距離。</li>\n</ul>\n<h3 id=\"CSS\"><a href=\"#CSS\" class=\"headerlink\" title=\"CSS\"></a>CSS</h3><figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.box</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">  <span class=\"attribute\">bottom</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: all <span class=\"number\">3s</span> <span class=\"built_in\">cubic-bezier</span>(<span class=\"number\">1</span>, -<span class=\"number\">0.01</span>, <span class=\"number\">0</span>, <span class=\"number\">0.99</span>);</span><br><span class=\"line\">  <span class=\"comment\">/* 貝茲曲線 */</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.box1</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">left</span>: <span class=\"number\">30px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#d2ff55</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.box2</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">left</span>: <span class=\"number\">230px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: orange;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.box3</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">left</span>: <span class=\"number\">430px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: red;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<p>再來寫互動，先選取到 <code>body</code>，原因是 <code>body</code> 內互動</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> body = <span class=\"built_in\">document</span>.body; <span class=\"comment\">//指整個瀏覽器</span></span><br></pre></td></tr></table></figure>\n\n<p>在 body 中新增一個監聽事件，屬性為 keydown，也就是要用按下鍵盤的行為。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">body.addEventListener(<span class=\"string\">\"keydown\"</span>, boxFly, <span class=\"literal\">false</span>);</span><br><span class=\"line\"><span class=\"comment\">//在瀏覽器新增監聽事件，使用 keydown 的語法，function 名稱為 boxFly。</span></span><br></pre></td></tr></table></figure>\n\n<p>函式名稱為 <code>boxFly</code>，便在下方建立一個函式，並來確認一下按鍵的編號。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">boxFly</span>(<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(e.keyCode); <span class=\"comment\">//確認鍵盤的編號</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>透過 <code>console.log</code> 查詢後可以得到鍵盤編號，為了符合筆電跟桌電鍵盤都可以使用，項目較多，可以使用 <code>switch</code>，作為物件的選擇，希望在按下按鍵後才啟動行為，所以每一個 <code>case</code> 後面都加上 <code>break</code>，避免按一下就全部啟動了。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">switch</span> (</span><br><span class=\"line\">  e.keyCode <span class=\"comment\">//因為項目多，可使用 switch</span></span><br><span class=\"line\">) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">case</span> <span class=\"number\">49</span>: <span class=\"comment\">//上排數字鍵盤 1</span></span><br><span class=\"line\">    <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\".box1\"</span>).style.bottom = <span class=\"string\">\"5000px\"</span>;</span><br><span class=\"line\">    <span class=\"comment\">//選擇 .box1 當中的 CSS 裡面的 bottom 設定值動態改成 5000px</span></span><br><span class=\"line\">    <span class=\"keyword\">break</span>; <span class=\"comment\">//跑完後就不再跑</span></span><br><span class=\"line\">  <span class=\"keyword\">case</span> <span class=\"number\">50</span>: <span class=\"comment\">//上排數字鍵盤 2</span></span><br><span class=\"line\">    <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\".box2\"</span>).style.bottom = <span class=\"string\">\"5000px\"</span>;</span><br><span class=\"line\">    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">  <span class=\"keyword\">case</span> <span class=\"number\">51</span>: <span class=\"comment\">//上排數字鍵盤 3</span></span><br><span class=\"line\">    <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\".box3\"</span>).style.bottom = <span class=\"string\">\"5000px\"</span>;</span><br><span class=\"line\">    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">  <span class=\"keyword\">case</span> <span class=\"number\">97</span>: <span class=\"comment\">//數字鍵盤 1</span></span><br><span class=\"line\">    <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\".box1\"</span>).style.bottom = <span class=\"string\">\"5000px\"</span>;</span><br><span class=\"line\">    <span class=\"keyword\">break</span>; <span class=\"comment\">//跑完後就不再跑</span></span><br><span class=\"line\">  <span class=\"keyword\">case</span> <span class=\"number\">98</span>: <span class=\"comment\">//數字鍵盤 2</span></span><br><span class=\"line\">    <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\".box2\"</span>).style.bottom = <span class=\"string\">\"5000px\"</span>;</span><br><span class=\"line\">    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">  <span class=\"keyword\">case</span> <span class=\"number\">99</span>: <span class=\"comment\">//數字鍵盤 3</span></span><br><span class=\"line\">    <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\".box3\"</span>).style.bottom = <span class=\"string\">\"5000px\"</span>;</span><br><span class=\"line\">    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"JavaScript\"><a href=\"#JavaScript\" class=\"headerlink\" title=\"JavaScript\"></a>JavaScript</h3><p>完整程式碼:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> body = <span class=\"built_in\">document</span>.body; <span class=\"comment\">//指整個瀏覽器</span></span><br><span class=\"line\"></span><br><span class=\"line\">body.addEventListener(<span class=\"string\">\"keydown\"</span>, boxFly, <span class=\"literal\">false</span>);</span><br><span class=\"line\"><span class=\"comment\">//在瀏覽器新增監聽事件，使用 keydown 的語法，function 名稱為 boxFly。</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">boxFly</span>(<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(e.keyCode); <span class=\"comment\">//確認鍵盤的編號</span></span><br><span class=\"line\">  <span class=\"keyword\">switch</span> (</span><br><span class=\"line\">    e.keyCode <span class=\"comment\">//因為項目多，可使用 switch</span></span><br><span class=\"line\">  ) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">49</span>: <span class=\"comment\">//上排數字鍵盤 1</span></span><br><span class=\"line\">      <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\".box1\"</span>).style.bottom = <span class=\"string\">\"5000px\"</span>;</span><br><span class=\"line\">      <span class=\"comment\">//選擇 .box1 當中的 CSS 裡面的 bottom 設定值動態改成 5000px</span></span><br><span class=\"line\">      <span class=\"keyword\">break</span>; <span class=\"comment\">//跑完後就不再跑</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">50</span>: <span class=\"comment\">//上排數字鍵盤 2</span></span><br><span class=\"line\">      <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\".box2\"</span>).style.bottom = <span class=\"string\">\"5000px\"</span>;</span><br><span class=\"line\">      <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">51</span>: <span class=\"comment\">//上排數字鍵盤 3</span></span><br><span class=\"line\">      <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\".box3\"</span>).style.bottom = <span class=\"string\">\"5000px\"</span>;</span><br><span class=\"line\">      <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">97</span>: <span class=\"comment\">//數字鍵盤 1</span></span><br><span class=\"line\">      <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\".box1\"</span>).style.bottom = <span class=\"string\">\"5000px\"</span>;</span><br><span class=\"line\">      <span class=\"keyword\">break</span>; <span class=\"comment\">//跑完後就不再跑</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">98</span>: <span class=\"comment\">//數字鍵盤 2</span></span><br><span class=\"line\">      <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\".box2\"</span>).style.bottom = <span class=\"string\">\"5000px\"</span>;</span><br><span class=\"line\">      <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">99</span>: <span class=\"comment\">//數字鍵盤 3</span></span><br><span class=\"line\">      <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\".box3\"</span>).style.bottom = <span class=\"string\">\"5000px\"</span>;</span><br><span class=\"line\">      <span class=\"keyword\">break</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>來 CodePen 玩一下: <a href=\"https://codepen.io/hnzxewqw/full/oNXZROM\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/full/oNXZROM</a></p>\n<p>同場加映，從左到右的效果: <a href=\"https://codepen.io/hnzxewqw/pen/KKpWjby\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/KKpWjby</a></p>\n","categories":["JavaScript"],"tags":["JavaScript"]},{"title":"Angular 筆記 - 結構型指令 ngFor","url":"/angular/20200903/2141622735/","content":"<p><img src=\"https://i.imgur.com/87pBpoJ.jpg\" alt=\"angular\"></p>\n<p>ngFor 的功能非常強大，也是使用非常頻繁的指令，時常會透過 API 取得 JSON 資料，並取出所需要顯示在網頁上的資訊。</p>\n<h2 id=\"練習重點\"><a href=\"#練習重點\" class=\"headerlink\" title=\"練習重點\"></a>練習重點</h2><p>這邊有一支全台雨量的 <a href=\"https://data.taipei/opendata/datalist/apiAccess?scope=resourceAquire&rid=e6831708-02b4-4ef8-98fa-4b4ce53459d9\" target=\"_blank\" rel=\"noopener\">API</a>，要透過 ngFor 迴圈取得資料內容後渲染在網頁上。</p>\n<h2 id=\"複製-API-內容\"><a href=\"#複製-API-內容\" class=\"headerlink\" title=\"複製 API 內容\"></a>複製 API 內容</h2><p>本篇先不講到如何使用 AJAX 方式取得 API，先著重於 <code>ngFor</code> 的內容介紹，所以先將 API 的內容複製下來，放到 <strong>app.component.ts</strong> 裡面，並給予一個變數為 <code>data</code>。</p>\n<p>在 <strong>app.component.html</strong> 中建立一個標籤裡面放入 <code>ngFor</code>。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> *<span class=\"attr\">ngFor</span>=<span class=\"string\">\"let item of list\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>但因為我們命名的變數為 <code>data</code>，所以要將 <code>list</code> 改為 <code>data</code>，不然會無法取得 <code>data</code> 資料。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> *<span class=\"attr\">ngFor</span>=<span class=\"string\">\"let item of data\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>跟在寫 JS 原生 for 語法雷同，這一行的意思大概是 <strong>item 是資料的變數，是從 data 這個地方來</strong>。</p>\n<h2 id=\"ngFor-的作用範圍\"><a href=\"#ngFor-的作用範圍\" class=\"headerlink\" title=\"ngFor 的作用範圍\"></a>ngFor 的作用範圍</h2><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> *<span class=\"attr\">ngFor</span>=<span class=\"string\">\"let item of data\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><code>ngFor</code> 的作用範圍，就只有在這個 <code>&lt;div&gt;</code> 裡面而已，透過 <code>ngFor</code> 會在 <code>data</code> 資料中跑回圈，取出我們要的屬性資料內容，套用到 <code>item</code> 這個變數，並渲染在網頁上。</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"function\">parameterName2: \"24\",</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">parameterUnit2</span>: \"<span class=\"title\">C</span>\",</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">parameterName1</span>: \"多雲短暫陣雨或雷雨\",</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">parameterUnit3</span>: \"<span class=\"title\">C</span>\",</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">parameterName3</span>: \"23\",</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">parameterValue1</span>: \"15\",</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">locationName</span>: \"臺北市\",</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">endTime</span>: \"2020-05-21<span class=\"title\">T06</span>:00:00+08:00\",</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">startTime</span>: \"2020-05-21<span class=\"title\">T00</span>:00:00+08:00\",</span></span><br><span class=\"line\"><span class=\"function\">\\<span class=\"title\">_id</span>: 1</span></span><br><span class=\"line\"><span class=\"function\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>這次我們資料的其中一筆物件內容如上，所以只要透過之前講過的四個資料繫結方法，就可以取得想要的資料內容。</p>\n<p>所以 <code>app.component.html</code> 就會變這樣。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> *<span class=\"attr\">ngFor</span>=<span class=\"string\">\"let item of data\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>&#123;&#123;item.locationName&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>最低溫：&#123;&#123;item.parameterName3&#125;&#125; °C<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>最高溫：&#123;&#123;item.parameterName2&#125;&#125; °C<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>天氣狀況：&#123;&#123;item.parameterName1&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>這樣就可以取得想要的資料囉!</p>\n<h2 id=\"Demo\"><a href=\"#Demo\" class=\"headerlink\" title=\"Demo\"></a>Demo</h2><p><a href=\"https://stackblitz.com/edit/angular-ivy-f15t2j?file=src%2Fapp%2Fapp.component.ts\" target=\"_blank\" rel=\"noopener\">https://stackblitz.com/edit/angular-ivy-f15t2j?file=src%2Fapp%2Fapp.component.ts</a></p>\n","categories":["Angular"],"tags":["Angular"]},{"title":"Angular 筆記 - 結構型指令 ngSwitch","url":"/angular/20200902/3901701089/","content":"<p><img src=\"https://i.imgur.com/87pBpoJ.jpg\" alt=\"angular\"></p>\n<p>ngSwitch 也是切換狀態的一種，延續<a href=\"https://hsuchihting.github.io/angular/20200902/1035116659/\">上一篇的例子</a>這次改用 ngSwitch 來改寫。</p>\n<h2 id=\"ngSwitch-起手式\"><a href=\"#ngSwitch-起手式\" class=\"headerlink\" title=\"ngSwitch 起手式\"></a>ngSwitch 起手式</h2><p>透過保哥寫的<a href=\"https://marketplace.visualstudio.com/items?itemName=doggy8088.angular-extension-pack\" target=\"_blank\" rel=\"noopener\">套件</a>可以快速產生指令內容，產生後會看到以下結果。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> [<span class=\"attr\">ngSwitch</span>]=<span class=\"string\">\"conditionExpression\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> *<span class=\"attr\">ngSwitchCase</span>=<span class=\"string\">\"expression\"</span>&gt;</span>output<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> *<span class=\"attr\">ngSwitchDefault</span>&gt;</span>output2<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">&gt;</span><br></pre></td></tr></table></figure>\n\n<p>看到三個 <code>&lt;div&gt;</code> ：</p>\n<ol>\n<li>最外層的是綁定屬性 <code>[ngSwitch]=&quot;值的主要狀態&quot;</code>。</li>\n<li>中間的 <code>ngSwitchCase</code> 的值也是狀態，但給予的是 <code>0</code> 或 <code>1</code> 以上，可以想像成是 switch 的寫法，這樣比較好理解，可以有多個狀態。</li>\n<li>最後一個 <code>ngSwitchDefault</code>，可以給予若都不符條件的結果。</li>\n</ol>\n<blockquote>\n<p><del>真的跟 switch 有 87% 像</del>，特別注意的是，內層的選項都有加上星號 <code>*</code> 。</p>\n</blockquote>\n<p>這次要切換兩組圖案，就改寫成下方樣式：</p>\n<h3 id=\"HTML\"><a href=\"#HTML\" class=\"headerlink\" title=\"HTML\"></a>HTML</h3><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> (<span class=\"attr\">click</span>)=<span class=\"string\">\"addCounter()\"</span>&gt;</span>click to Switch<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> [<span class=\"attr\">ngSwitch</span>]=<span class=\"string\">\"counter%2\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> *<span class=\"attr\">ngSwitchCase</span>=<span class=\"string\">\"0\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">\"circle red\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>1<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">\"circle orange\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>2<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">\"circle yellow\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>3<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> *<span class=\"attr\">ngSwitchCase</span>=<span class=\"string\">\"1\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">\"circle green\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>4<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">\"circle blue\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>5<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">\"circle purple\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>6<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> *<span class=\"attr\">ngSwitchDefault</span>&gt;</span>N/A<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">&gt;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"TS\"><a href=\"#TS\" class=\"headerlink\" title=\"TS\"></a>TS</h3><figure class=\"highlight typescript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">class</span> AppComponent &#123;</span><br><span class=\"line\">  counter = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>(<span class=\"params\"></span>) &#123;&#125;</span><br><span class=\"line\">  addCounter() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.counter++;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>這樣就完成了，滿好理解的。</p>\n<p><a href=\"https://stackblitz.com/edit/angular-ivy-f3efnq?file=src%2Fapp%2Fapp.component.ts\" target=\"_blank\" rel=\"noopener\">Demo</a></p>\n","categories":["Angular"],"tags":["Angular"]},{"title":"Angular 筆記 - 結構型指令 ngIf","url":"/angular/20200902/1035116659/","content":"<p><img src=\"https://i.imgur.com/87pBpoJ.jpg\" alt=\"angular\"></p>\n<p>會透過指令來新增或刪除 DOM 元素和改變 DOM 結構，例如 <code>ngIf</code>、<code>ngFor</code> 或 <code>ngSwitch</code> 皆可控制 DOM 結構。</p>\n<ul>\n<li><code>ngSwitch</code> 前面<strong>不要</strong>加 <code>*</code> 星號。</li>\n<li><code>ngIf</code>、<code>ngFor</code>、<code>ngSwitchDefault</code> 以及 <code>ngSwitchCase</code> 前面<strong>要</strong>加上 <code>*</code> 星號。</li>\n</ul>\n<h2 id=\"ngIf\"><a href=\"#ngIf\" class=\"headerlink\" title=\"ngIf\"></a>ngIf</h2><p>目前有六個圓形，編號為 1~6，透過 ngIf 指令，要完成以下事情，</p>\n<ol>\n<li>擊次數為基數時，留下 1~3 的圓形。</li>\n<li>點擊次數為偶數時，留下 4~6 圓形。</li>\n</ol>\n<p>首先建立 html 所需要的內容。</p>\n<p><strong>app.component.html</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>ngIf<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span>click<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">\"circle red\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>1<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">\"circle orange\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>2<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">\"circle yellow\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>3<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">\"circle green\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>4<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">\"circle blue\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>5<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">\"circle purple\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>6<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"加入-ngIf\"><a href=\"#加入-ngIf\" class=\"headerlink\" title=\"加入 ngIf\"></a>加入 ngIf</h3><p>因為是基偶數更換時，要更換一組 <code>ul</code>，所以 <code>ngIf</code> 要寫在 <code>ul</code> 標籤上，就會變成下方程式碼，並且帶入上一篇寫過的 <code>addCounter()</code> 的方法。。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>ngIf<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> (<span class=\"attr\">click</span>)=<span class=\"string\">\"addCounter()\"</span>&gt;</span>click<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> *<span class=\"attr\">ngIf</span>=<span class=\"string\">\"counter % 2 == 0\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">\"circle red\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>1<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">\"circle orange\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>2<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">\"circle yellow\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>3<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> *<span class=\"attr\">ngIf</span>=<span class=\"string\">\"counter % 2 == 1\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">\"circle green\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>4<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">\"circle blue\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>5<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">\"circle purple\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>6<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>app.component.ts</strong></p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">class</span> AppComponent &#123;</span><br><span class=\"line\">  counter = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>(<span class=\"params\"></span>) &#123;&#125;</span><br><span class=\"line\">  addCounter() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.counter++;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>app.component.css</strong><br>不在本次陳述重點，又因為有點長，故不贅述。</p>\n<h2 id=\"注意事項\"><a href=\"#注意事項\" class=\"headerlink\" title=\"注意事項\"></a>注意事項</h2><p><code>ngIf</code> 是會移除整個 <code>template</code> 的內容，並不是單純隱藏，所以包含在 <code>ngIf</code> 中的 <code>template</code>，會因為此指令關係整個都會被移除或新增回來，在使用上要注意此規則。</p>\n<h2 id=\"Demo\"><a href=\"#Demo\" class=\"headerlink\" title=\"Demo\"></a>Demo</h2><p><a href=\"https://stackblitz.com/edit/angular-ivy-hhxay5?file=src/app/app.component.html\" target=\"_blank\" rel=\"noopener\">https://stackblitz.com/edit/angular-ivy-hhxay5?file=src/app/app.component.html</a></p>\n","categories":["Angular"],"tags":["Angular"]},{"title":"Angular 筆記 - 屬性型指令","url":"/angular/20200902/2131994993/","content":"<p><img src=\"https://i.imgur.com/87pBpoJ.jpg\" alt=\"angular\"></p>\n<p>屬性型指令有一個特性，就是不會有自己的 Template，但套用此指令會修改元素的外觀或行為，內建有 ngModel、 <code>ngStyle</code> 跟 <code>ngClass</code> 便可以自由地變更元素的樣式。</p>\n<h2 id=\"ngModel\"><a href=\"#ngModel\" class=\"headerlink\" title=\"ngModel\"></a>ngModel</h2><p>也就是<a href=\"https://hsuchihting.github.io/angular/20200825/1020258751/\">雙向繫結</a>，此篇便不贅述。</p>\n<h3 id=\"透過雙向綁定實現網頁互動\"><a href=\"#透過雙向綁定實現網頁互動\" class=\"headerlink\" title=\"透過雙向綁定實現網頁互動\"></a>透過雙向綁定實現網頁互動</h3><p>假如今天有一個按鈕，在點擊 +1 一次，就會使網頁標題的數字 +1，點擊 reset 就可以歸零，可以這樣寫。</p>\n<p>在 HTML 中寫入一個按鈕跟文字，並雙向綁定該文字為 <code>counter</code>，</p>\n<h4 id=\"app-component-html\"><a href=\"#app-component-html\" class=\"headerlink\" title=\"app.component.html\"></a>app.component.html</h4><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>點擊按鈕後數字會加總 &#123;&#123;counter&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> (<span class=\"attr\">click</span>)=<span class=\"string\">\"addCounter()\"</span>&gt;</span>+1<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> (<span class=\"attr\">click</span>)=<span class=\"string\">\"reset()\"</span>&gt;</span>reset<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"app-component-ts\"><a href=\"#app-component-ts\" class=\"headerlink\" title=\"app.component.ts\"></a>app.component.ts</h4><p>寫入方法。</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">class</span> AppComponent &#123;</span><br><span class=\"line\">  counter = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>(<span class=\"params\"></span>) &#123;&#125;</span><br><span class=\"line\">  addCounter() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.counter++;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  reset() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.counter = <span class=\"number\">0</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"ngStyle\"><a href=\"#ngStyle\" class=\"headerlink\" title=\"ngStyle\"></a>ngStyle</h2><p>點擊 <code>font-size +1pt</code> 按鈕一下，就讓字體變大，反之，點擊 <code>font-size -1pt</code>，字體變小。</p>\n<h3 id=\"app-component-html-1\"><a href=\"#app-component-html-1\" class=\"headerlink\" title=\"app.component.html\"></a>app.component.html</h3><p>在要變大的 <code>&lt;h3&gt;</code> 上加上 ngStyle，並綁定屬性與要給予的值，fontSize 要增加的變數，單位要用引號括住才會有效果。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>ngStyle<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h3</span> [<span class=\"attr\">ngStyle</span>]=<span class=\"string\">\"getStyle()\"</span>&gt;</span>點擊按鈕使字體變大<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>字體從 12pt 起跳<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> (<span class=\"attr\">click</span>)=<span class=\"string\">\"addFontSize()\"</span>&gt;</span>font-size + 1pt<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> (<span class=\"attr\">click</span>)=<span class=\"string\">\"minusFontSize()\"</span>&gt;</span>font-size -1pt<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"app-component-ts-1\"><a href=\"#app-component-ts-1\" class=\"headerlink\" title=\"app.component.ts\"></a>app.component.ts</h3><p>把加總的方法寫入。</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"code\"><pre><span class=\"line\">addFontSize() &#123;</span><br><span class=\"line\">   <span class=\"keyword\">this</span>.fontSize++;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"> minusFontSize() &#123;</span><br><span class=\"line\">   <span class=\"keyword\">this</span>.fontSize -= <span class=\"number\">1</span>;</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"改寫-ngStyle\"><a href=\"#改寫-ngStyle\" class=\"headerlink\" title=\"改寫 ngStyle\"></a>改寫 ngStyle</h3><p>但如果把物件寫在 HTML 裡面，會有點長又有點亂，可以將 <code>ngStyle</code> 改寫，先在 <strong>app.component.ts</strong> 建立一個方法，命名為 <code>getStyle()</code> 的方法，並將 <code>ngStyle</code> 裡面的物件貼到 <code>component</code> 中，並且要記得在 <code>fontSize</code> 前要加一個 <code>this</code>，代表指向這個變數，當讀取到這個方法時，就 <code>return</code> 這個值。</p>\n<p><strong>app.component.ts</strong></p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"code\"><pre><span class=\"line\">getStyle() &#123;</span><br><span class=\"line\">   <span class=\"keyword\">return</span> &#123; <span class=\"string\">'font-size'</span>: <span class=\"number\">12</span> + <span class=\"keyword\">this</span>.fontSize + <span class=\"string\">'pt'</span> &#125;;</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>app.component.html</strong></p>\n<p>HTML 就把原本放物件的地方改成方法。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h3</span> [<span class=\"attr\">ngStyle</span>]=<span class=\"string\">\"getStyle()\"</span>&gt;</span>點擊按鈕使字體變大<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"ngClass\"><a href=\"#ngClass\" class=\"headerlink\" title=\"ngClass\"></a>ngClass</h2><p>用法跟 <code>ngStyle</code> 很像，輸入 <code>ngClass</code>，就會出現要綁定的 <code>className</code> 跟屬性欄位，這邊命名 <code>className</code> 是 <code>highlight</code>，其值為可以<strong>被 2 整除</strong>的時候改變顏色，要注意的是 <code>className</code> 要用引號包住。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>ngClass<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h3</span> [<span class=\"attr\">ngClass</span>]=<span class=\"string\">\"&#123;'highlight': counter % 2 == 0&#125;\"</span>&gt;</span></span><br><span class=\"line\">  點擊偶數值的時候修改標題顏色</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> (<span class=\"attr\">click</span>)=<span class=\"string\">\"addCounter()\"</span>&gt;</span>Change Color<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>同步增加 CSS 的內容</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.highlight</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: red;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>方法沿用 <code>addCounter()</code>，方法，所以在 Demo 頁中會看到數字為偶數時，有綁定 <code>ngClass</code> 屬性型指令的標題會變成紅色。</p>\n<h2 id=\"Demo\"><a href=\"#Demo\" class=\"headerlink\" title=\"Demo\"></a>Demo</h2><p><a href=\"https://stackblitz.com/edit/angular-ivy-lxdvik?file=src/app/app.component.html\" target=\"_blank\" rel=\"noopener\">https://stackblitz.com/edit/angular-ivy-lxdvik?file=src/app/app.component.html</a></p>\n","categories":["Angular"],"tags":["Angular"]},{"title":"Angular 筆記 - 元件型指令","url":"/angular/20200901/1987789839/","content":"<p><img src=\"https://i.imgur.com/87pBpoJ.jpg\" alt=\"angular\"></p>\n<h2 id=\"基本認識\"><a href=\"#基本認識\" class=\"headerlink\" title=\"基本認識\"></a>基本認識</h2><p>預設「元件」就是含有樣板的指令(最常見)，既是 template 也是 component，一般來說提到元件都會先想到 class 類別這個部分。最常直接在網頁標籤中呈現。</p>\n<h2 id=\"使用方式\"><a href=\"#使用方式\" class=\"headerlink\" title=\"使用方式\"></a>使用方式</h2><p>之前拆分元件的指令 <code>&lt;app-header&gt;&lt;/app-header&gt;</code> 這類的 directive，也是代表著一個 component。</p>\n<h2 id=\"元件內容介紹\"><a href=\"#元件內容介紹\" class=\"headerlink\" title=\"元件內容介紹\"></a>元件內容介紹</h2><p>假設我有一個元件叫做 <code>&lt;app-home&gt;&lt;/app-home&gt;</code>，這樣就產生了一個元件型指令，並且可取用到裡面的元件內容。</p>\n<ol>\n<li>會有至少一個 import 對應這個元件的內容。</li>\n<li>會有一個元件的裝飾器，其名稱為 @Component。</li>\n<li><code>selector</code>： 為元件型指令的選擇器，也是拆分元件時要匯入的標籤名稱。</li>\n<li><code>templateUrl</code>： 則是對應 HTML 的內容，也可以使用 <strong>ES6 樣板語法</strong>寫入這裡，若改這樣寫，前面的屬性要改成 <code>template</code>，但一般不會建議這樣寫，因為這樣程式碼太雜亂，在 component 內的程式碼單純一點會比較好。</li>\n<li><code>styleUrls</code>： 是這一頁的 CSS 樣式，可以放入多個 CSS，只有這個元件可以使用這個 CSS 樣式，並不會渲染到其他元件。</li>\n</ol>\n<figure class=\"highlight typescript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; Component, OnInit &#125; <span class=\"keyword\">from</span> <span class=\"string\">\"@angular/core\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Component</span>(&#123;</span><br><span class=\"line\">  selector: <span class=\"string\">\"app-home\"</span>,</span><br><span class=\"line\">  templateUrl: <span class=\"string\">\"./home.component.html\"</span>,</span><br><span class=\"line\">  styleUrls: [<span class=\"string\">\"./home.component.scss\"</span>],</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">class</span> HomeComponent <span class=\"keyword\">implements</span> OnInit &#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>(<span class=\"params\"></span>) &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  ngOnInit(): <span class=\"built_in\">void</span> &#123;&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","categories":["Angular"],"tags":["Angular"]},{"title":"JS 筆記 - Change 事件","url":"/javascript/20200831/3887618237/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/JavaScript%20note-01.jpg?alt=media&token=7bee0261-72ac-4de4-9f5a-f39d58735b7d\" alt=\"JavaScript Note\"></p>\n<p>change 在 JavaScript 中是好用的工具，尤其是在多項選項的時候</p>\n<h3 id=\"練習主題\"><a href=\"#練習主題\" class=\"headerlink\" title=\"練習主題:\"></a>練習主題:</h3><p>今天要找到支持的球隊裡面的明星球員，以下為球隊與球員資料：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> data = [</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    team: <span class=\"string\">\"湖人隊\"</span>,</span><br><span class=\"line\">    player: <span class=\"string\">\"Shaquille O'Neal\"</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    team: <span class=\"string\">\"公牛隊\"</span>,</span><br><span class=\"line\">    player: <span class=\"string\">\"Michael Jordan\"</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    team: <span class=\"string\">\"爵士隊\"</span>,</span><br><span class=\"line\">    player: <span class=\"string\">\"Karl Marlon\"</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">];</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>經典 90 年球隊與球員</p>\n</blockquote>\n<h4 id=\"HTML-架構\"><a href=\"#HTML-架構\" class=\"headerlink\" title=\"HTML 架構\"></a>HTML 架構</h4><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- change 選單 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">\"teamId\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"湖人隊\"</span>&gt;</span>湖人隊<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"公牛隊\"</span>&gt;</span>公牛隊<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"爵士隊\"</span>&gt;</span>爵士隊<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 清單內容 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"list\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>可以看到有一選單，裡面有三個選項，並且下方有一個空的 <code>ul</code>，等等要把 JSON 資料透過 <code>change</code> 選單渲染上去。</p>\n<h4 id=\"JS-起手式\"><a href=\"#JS-起手式\" class=\"headerlink\" title=\"JS 起手式\"></a>JS 起手式</h4><p>先建立好 JS 要做的內容:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> team = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"teamId\"</span>); <span class=\"comment\">//change 選單</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> list = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\".list\"</span>); <span class=\"comment\">// 清單內容</span></span><br><span class=\"line\"><span class=\"comment\">//在change選單，建立好 function 名稱</span></span><br><span class=\"line\">team.addEventListener(<span class=\"string\">\"change\"</span>, updateList, <span class=\"literal\">false</span>);</span><br></pre></td></tr></table></figure>\n\n<p>主題是要透過 updateList 這個函式中找到支持球隊裡面的明星球員，函式可以這樣寫：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">updateList</span>(<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> select = e.target.value; <span class=\"comment\">//宣告這個事件中的目標為選單的值</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> str = <span class=\"string\">\"\"</span>; <span class=\"comment\">//組一個字串</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; dataLen; i++) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//用 for 迴圈篩選資料</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (select == data[i].team) &#123;</span><br><span class=\"line\">      <span class=\"comment\">//如選單當中找到 team</span></span><br><span class=\"line\">      str += <span class=\"string\">\"&lt;li&gt;\"</span> + data[i].player + <span class=\"string\">\"&lt;/li&gt;\"</span>; <span class=\"comment\">//球員名稱字串</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  list.innerHTML = str; <span class=\"comment\">//將 list 內容丟回字串，印在網頁上</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>建立一個名稱為 updateList 的 function，並且宣告 select 的選單<em>(習慣把變數名稱跟主要功能名稱一樣，比較好對照。)</em> ，並且在 function(e) 參數當中放入 event ，告訴這是一個事件。</li>\n<li>事件中的目標為選單的值。</li>\n<li>組一個空字串，透過 for 迴圈篩選後，填入選出的值。</li>\n<li>字串加總球員名稱。</li>\n<li>將 list 內容丟回字串，選染在網頁上。</li>\n</ul>\n<p>完整 JS 程式碼:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> team = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"teamId\"</span>); <span class=\"comment\">//change 選單</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> list = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\".list\"</span>); <span class=\"comment\">// 清單內容</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//在change選單，建立好 function 名稱</span></span><br><span class=\"line\">team.addEventListener(<span class=\"string\">\"change\"</span>, updateList, <span class=\"literal\">false</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> dataLen = data.length;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">updateList</span>(<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> select = e.target.value; <span class=\"comment\">//宣告這個事件中的目標為選單的值</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> str = <span class=\"string\">\"\"</span>; <span class=\"comment\">//組一個字串</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; dataLen; i++) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//用 for 迴圈篩選資料</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (select == data[i].team) &#123;</span><br><span class=\"line\">      <span class=\"comment\">//如選單當中找到 team</span></span><br><span class=\"line\">      str += <span class=\"string\">\"&lt;li&gt;\"</span> + data[i].player + <span class=\"string\">\"&lt;/li&gt;\"</span>; <span class=\"comment\">//球員名稱字串</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  list.innerHTML = str; <span class=\"comment\">//將 list 內容丟回字串，印在網頁上</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>這樣就可以透過 Change 選出選項，並且對應相對的內容。<br>CodePen: <a href=\"https://codepen.io/hnzxewqw/pen/oNXZyNw\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/oNXZyNw</a></p>\n<h2 id=\"心得\"><a href=\"#心得\" class=\"headerlink\" title=\"心得\"></a>心得</h2><p>透過 change 的 function 內容的建立，執行的順序要一個口令一個動作，拆解流程就會比較好思考。</p>\n<ul>\n<li>自己整理的步驟</li>\n</ul>\n<ol>\n<li>點選自己的選項的值。</li>\n<li>選到自己後，要組字串給清單用。(資料來自於 for)</li>\n<li>for 裡面馬上接判斷式，給予要選擇的條件。</li>\n<li>在條件內建立要顯示的字串。</li>\n<li>並在 for 迴圈外，將要顯示的變數內容，透過 innerHTML = str(資料就會丟回空字串中)。</li>\n</ol>\n","categories":["JavaScript"],"tags":["JavaScript"]},{"title":"Angular 筆記 - 範本參考變數基本認識","url":"/angular/20200831/2129198187/","content":"<p><img src=\"https://i.imgur.com/87pBpoJ.jpg\" alt=\"angular\"></p>\n<h2 id=\"範本參考變數\"><a href=\"#範本參考變數\" class=\"headerlink\" title=\"範本參考變數\"></a>範本參考變數</h2><p>在想命名的變數前面加上一個井字號，命給與自定義名稱，就可以完成，EX. <code>#name</code>，為避免與其他命名的變數相同，建議前面加一個任意英文字，我學習保哥的方式，在變數前面加上一個小寫 t，EX. <code>#tName</code>。</p>\n<p>假設範本變數為 <code>#tName</code> 要注意的地方如下：</p>\n<ol>\n<li>範本內會建立一個名為 #tName 的區域變數。</li>\n<li>該 tName 區域變數只能用於目前元件範本中。</li>\n<li>該 tName 區域變數會儲存於該標籤的 DOM 物件。</li>\n<li>可透過「<a href=\"https://hsuchihting.github.io/angular/20200825/4153138698/\">事件繫結</a>」將任意 DOM 物件中的任意屬性傳回元件類別中。</li>\n</ol>\n<p><code>#tName</code> = <code>ref-tName</code>，使用 <code>#</code> 是語法糖。</p>\n<h2 id=\"使用的地方\"><a href=\"#使用的地方\" class=\"headerlink\" title=\"使用的地方\"></a>使用的地方</h2><h3 id=\"可以使用在任意標籤上\"><a href=\"#可以使用在任意標籤上\" class=\"headerlink\" title=\"可以使用在任意標籤上\"></a>可以使用在任意標籤上</h3><p>如下方範例，只要在標籤上加上<strong>範本參考變數</strong>就可以使用了。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> #<span class=\"attr\">tKeyword</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"可使用於指令\"><a href=\"#可使用於指令\" class=\"headerlink\" title=\"可使用於指令\"></a>可使用於指令</h3><p>可以使用在指令標籤，如下方 <code>header</code> 已經被拆分成元件，但在指令標籤中加入範本參考變數 <code>#tHeader</code>，透過<strong>事件繫結</strong>的<strong>點擊事件</strong>將範本參考變數作為其值，也可以<strong>取用</strong>到其指令中定義的方法。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">app-header</span> #<span class=\"attr\">tHeader</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">app-header</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"content\"</span> (<span class=\"attr\">click</span>)=<span class=\"string\">\"tHeader\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">\"搜尋框\"</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    您的難以規劃，你也卻是計劃時候走向作者所在，決定工資專題各自此刻你還歡迎光臨，認為下載一名雲林二手模糊優化足夠請大家那些我的心這個問題，到達鐵路進去對象，你好過了高效屬於當地把你輸入東京不在害怕免費電影運行平台，玄幻基礎偉大學歷合作進口一番，她說清除，把。</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>DEMO: <a href=\"https://stackblitz.com/edit/angular-ivy-svrzip?embed=1&amp;file=src/app/app.component.html\" target=\"_blank\" rel=\"noopener\">https://stackblitz.com/edit/angular-ivy-svrzip?embed=1&amp;file=src/app/app.component.html</a></p>\n","categories":["Angular"],"tags":["Angular"]},{"title":"Angular 筆記 - 實作一個側欄選單與 SPA 頁面","url":"/angular/20200828/836833992/","content":"<p><img src=\"https://i.imgur.com/87pBpoJ.jpg\" alt=\"angular\"></p>\n<h2 id=\"本次練習主題\"><a href=\"#本次練習主題\" class=\"headerlink\" title=\"本次練習主題\"></a>本次練習主題</h2><ul>\n<li>可收合的側欄選單。</li>\n<li>建立 service 共享元件功能。</li>\n<li>元件與畫面的分類。</li>\n<li>路由與子路由的 SPA 應用。</li>\n</ul>\n<h2 id=\"頁面分類練習\"><a href=\"#頁面分類練習\" class=\"headerlink\" title=\"頁面分類練習\"></a>頁面分類練習</h2><p>這次練習的過程中釐清了一個觀念就是元件與畫面的分離，別於之前所見即所得的寫法，現在要拆成元件與畫面分離，什麼意思? 前輩簡單教我一個記憶法：</p>\n<blockquote>\n<p>要給使用者看到的稱作畫面，不需要看到的稱為元件。</p>\n</blockquote>\n<p>所以先看一下資料夾內容：</p>\n<p><img src=\"https://i.imgur.com/HjZ5Fxk.png\" alt=\"folder\"></p>\n<p>可看到資料夾分成 <strong>component</strong> 跟 <strong>page</strong>，下方一堆 <code>app</code> 開頭的是這支程式的<strong>母元件</strong>與路由，最下面的 <code>index.html</code> 是整個網頁的入口。</p>\n<h3 id=\"重點在元件與頁面這兩個資料夾\"><a href=\"#重點在元件與頁面這兩個資料夾\" class=\"headerlink\" title=\"重點在元件與頁面這兩個資料夾\"></a>重點在元件與頁面這兩個資料夾</h3><p>先看一下這次練習的畫面：</p>\n<p><img src=\"https://i.imgur.com/qm9Qhei.png\" alt=\"index\"></p>\n<p>看起來相當簡單的畫面，目前預設為 Home 的內容，當我選擇 System 標籤，下方會出現兩個選項，點擊該選項後會跑出相對應的內容。</p>\n<p><strong>Home</strong></p>\n<p><img src=\"https://i.imgur.com/qYqqJy3.png\" alt=\"home\"></p>\n<p><strong>System/User</strong></p>\n<p><img src=\"https://i.imgur.com/6NLMVYK.png\" alt=\"user\"></p>\n<p><strong>System/Group</strong></p>\n<p><img src=\"https://i.imgur.com/D3hcUst.png\" alt=\"group\"></p>\n<p>點擊選單右上角的標籤也會進行收合，</p>\n<p><img src=\"https://i.imgur.com/ICafSA7.png\" alt=\"close\"></p>\n<h3 id=\"元件資料夾\"><a href=\"#元件資料夾\" class=\"headerlink\" title=\"元件資料夾\"></a>元件資料夾</h3><p>下方為元件資料夾的內容，這邊分類的內容就是 aside 的惻欄部分，</p>\n<p><img src=\"https://i.imgur.com/vWmf6S7.png\" alt=\"component\"></p>\n<p>因為這兩個部分只有單純元件顯示，不是一直改變的內容，所以區分成在元件，而在元件部分又再將上方的 LOGO 與下方的選單拆成兩個元件，也就是 aside 主元件跟 aside-nav 子元件。</p>\n<h2 id=\"建立-service-共用功能\"><a href=\"#建立-service-共用功能\" class=\"headerlink\" title=\"建立 service 共用功能\"></a>建立 service 共用功能</h2><p>在<a href=\"https://hsuchihting.github.io/angular/20200826/4137699075/\">Angular 筆記 - Service 服務元件的基本認識</a>有紀錄如何建立服務元件，而在這邊的服務元件中寫入點擊事件跟判斷是否收合選單，因為兩個介面都使用類似的邏輯，所以就寫在同一個服務元件內。</p>\n<h3 id=\"aside-nav-HTML\"><a href=\"#aside-nav-HTML\" class=\"headerlink\" title=\"aside-nav HTML\"></a>aside-nav HTML</h3><p>可看見有事件繫結與屬性繫結的寫法，概念有點像寫 jQuery 在 CSS 中給予對應的 className，然後在用程式邏輯判斷增加 className 後的效果。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"nav\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">routerLink</span>=<span class=\"string\">\"/home/home-text\"</span>&gt;</span>Home<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">\"button\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn\"</span> (<span class=\"attr\">click</span>)=<span class=\"string\">\"featureSvc.toggleList()\"</span>&gt;</span></span><br><span class=\"line\">      System</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"systemList\"</span> [<span class=\"attr\">class.show</span>]=<span class=\"string\">\"featureSvc.showList()\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btnUser\"</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">routerLink</span>=<span class=\"string\">\"/system/system-user\"</span> <span class=\"attr\">routerLinkActive</span>=<span class=\"string\">\"active\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            &gt;</span>User</span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btnGroup\"</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">routerLink</span>=<span class=\"string\">\"/system/system-group\"</span> <span class=\"attr\">routerLinkActive</span>=<span class=\"string\">\"active\"</span>&gt;</span></span><br><span class=\"line\">            Group<span class=\"tag\">&lt;/<span class=\"name\">a</span></span></span><br><span class=\"line\"><span class=\"tag\">          &gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"service-服務元件\"><a href=\"#service-服務元件\" class=\"headerlink\" title=\"service 服務元件\"></a>service 服務元件</h3><p>service 宣告變數不用使用 let 或 const，也可以建立。</p>\n<blockquote>\n<p>在 vue 的 data 物件中宣告的變數概念相同。</p>\n</blockquote>\n<figure class=\"highlight typescript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">class</span> FeatureService &#123;</span><br><span class=\"line\">  close = <span class=\"literal\">false</span>; <span class=\"comment\">// nav 是否關閉</span></span><br><span class=\"line\">  show = <span class=\"literal\">false</span>; <span class=\"comment\">// 是否出現選單</span></span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>(<span class=\"params\"></span>) &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  asideToggle() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.close; <span class=\"comment\">//回傳點擊後布林值</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  asideSwitch() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.close = !<span class=\"keyword\">this</span>.close; <span class=\"comment\">//側欄選單開關</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  showList() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.show; <span class=\"comment\">//回傳 nav 選單點擊後的布林值</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  toggleList() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.show = !<span class=\"keyword\">this</span>.show; <span class=\"comment\">//nav 選單開關</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>這樣就完成了收合選單與項目清單開闔的功能。</p>\n<h2 id=\"路由與子路由呈現-SPA\"><a href=\"#路由與子路由呈現-SPA\" class=\"headerlink\" title=\"路由與子路由呈現 SPA\"></a>路由與子路由呈現 SPA</h2><p>再來也是這次練習的重頭戲之一，點擊選項讓右邊的畫面呈現對應的內容。</p>\n<p>先來看一下路由架構，主要分成以下三大類：</p>\n<ol>\n<li>login 路由。</li>\n<li>index 路由，沒有寫 path 的原因是預設為起始畫面。</li>\n<li>404 not found 萬用路由</li>\n<li>不管怎麼樣都會回到 home 頁面的萬用路由。</li>\n</ol>\n<p>路由的順序是從上讀到下，若找到對應的路徑就會將內容渲染於網頁上。</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> routes: Routes = [</span><br><span class=\"line\">  &#123; path: <span class=\"string\">\"login\"</span>, component: LoginComponent &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    path: <span class=\"string\">\"\"</span>,</span><br><span class=\"line\">    component: IndexComponent,</span><br><span class=\"line\">    children: [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        path: <span class=\"string\">\"home\"</span>,</span><br><span class=\"line\">        component: HomeComponent,</span><br><span class=\"line\">        children: [</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            path: <span class=\"string\">\"home-text\"</span>,</span><br><span class=\"line\">            component: HomeTextComponent,</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          &#123; path: <span class=\"string\">\"**\"</span>, redirectTo: <span class=\"string\">\"home-text\"</span>, pathMatch: <span class=\"string\">\"full\"</span> &#125;,</span><br><span class=\"line\">        ],</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        path: <span class=\"string\">\"system\"</span>,</span><br><span class=\"line\">        component: SystemComponent,</span><br><span class=\"line\">        children: [</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            path: <span class=\"string\">\"system-user\"</span>,</span><br><span class=\"line\">            component: SystemUserComponent,</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          &#123; path: <span class=\"string\">\"system-group\"</span>, component: SystemGroupComponent &#125;,</span><br><span class=\"line\">        ],</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123; path: <span class=\"string\">\"**\"</span>, redirectTo: <span class=\"string\">\"login\"</span>, pathMatch: <span class=\"string\">\"full\"</span> &#125;,</span><br><span class=\"line\">    ],</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123; path: <span class=\"string\">\"**\"</span>, component: PageNotFoundComponent &#125;,</span><br><span class=\"line\">  &#123; path: <span class=\"string\">\"**\"</span>, redirectTo: <span class=\"string\">\"login\"</span>, pathMatch: <span class=\"string\">\"full\"</span> &#125;,</span><br><span class=\"line\">];</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"最複雜的串路由來了\"><a href=\"#最複雜的串路由來了\" class=\"headerlink\" title=\"最複雜的串路由來了\"></a>最複雜的串路由來了</h3><p>先來看一下頁面資料夾的架構，</p>\n<p><img src=\"https://i.imgur.com/hONerBC.png\" alt=\"page\"></p>\n<p>就是將父與子層的頁面做歸納與相依整理，<code>content</code> 資料夾就是整個右側內容的主資料夾，其中會更換頁面的就是 <code>home</code> 跟 <code>content-main</code> 資料夾，但 <code>content-main</code> 其實都沒有寫任何東西。</p>\n<h3 id=\"HOME-頁面\"><a href=\"#HOME-頁面\" class=\"headerlink\" title=\"HOME 頁面\"></a>HOME 頁面</h3><p><code>Home</code> 頁面又拆了 <code>home-text</code> 的元件，當中就是 component 的串接而已，也就是把 <code>&lt;home-text&gt;</code> 的內容注入在 home 的 html 中。</p>\n<h3 id=\"System\"><a href=\"#System\" class=\"headerlink\" title=\"System\"></a>System</h3><p>因為此標籤下面有兩個選項要呈現對應的內容，所以這邊為路由的接口，所以要放 <code>&lt;router-outlet&gt;</code> 標籤。</p>\n<h3 id=\"System-User-與-System-Group\"><a href=\"#System-User-與-System-Group\" class=\"headerlink\" title=\"System-User 與 System-Group\"></a>System-User 與 System-Group</h3><p>就分別顯示預設的文字。</p>\n<h3 id=\"index-主頁面\"><a href=\"#index-主頁面\" class=\"headerlink\" title=\"index 主頁面\"></a>index 主頁面</h3><p>最重要的就是這一頁了，因為更換內容是在 index 裡面，所以 <code>app-content-main</code> 被替換成 <code>&lt;router-outlet&gt;</code> 標籤，做為入口，其它因為不會更動，就只要元件串接就可以。。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"index\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">app-aside</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">app-aside</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"content\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">app-content-header</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">app-content-header</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">router-outlet</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">router-outlet</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">app-content-footer</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">app-content-footer</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"結語\"><a href=\"#結語\" class=\"headerlink\" title=\"結語\"></a>結語</h2><p>這次練習學習到路由要想著哪一個是頁面進入的接口，並父與子層的關係先建構好，路由也建構完成，彼此的相依順序要釐清，這樣在寫 SPA 與元件拆分才不會搞混，目前架構還沒有寫得非常好，就記錄本次練習做為參考。</p>\n","categories":["Angular"],"tags":["Angular"]},{"title":"Angular 筆記 - Service 服務元件的基本認識","url":"/angular/20200826/4137699075/","content":"<p><img src=\"https://i.imgur.com/87pBpoJ.jpg\" alt=\"angular\"></p>\n<h2 id=\"什麼服務元件\"><a href=\"#什麼服務元件\" class=\"headerlink\" title=\"什麼服務元件\"></a>什麼服務元件</h2><p>service 元件是可以把共用的行為或程式邏輯放在此元件中，並且透過相依注入的方法，使其他元件可以取用。</p>\n<h2 id=\"建立服務元件\"><a href=\"#建立服務元件\" class=\"headerlink\" title=\"建立服務元件\"></a>建立服務元件</h2><h3 id=\"本次範例\"><a href=\"#本次範例\" class=\"headerlink\" title=\"本次範例\"></a>本次範例</h3><p>本次範例路徑如下圖，所使用為 app 資料夾底下的 app.module.ts 以及 feature.service.ts。</p>\n<p><img src=\"https://i.imgur.com/R0MolAn.png\" alt=\"app\"></p>\n<p>建立服務元件的起手式程式碼，不需要打 service，只要打元件名稱即可。</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">ng g s 元件名稱</span><br></pre></td></tr></table></figure>\n\n<p>EX. 自定義命名一個功能服務元件，只要在終端機輸入 <code>ng g s feature</code>，就會建立一個名稱為 feature 的服務元件。</p>\n<p><img src=\"https://i.imgur.com/e38WzPH.png\" alt=\"feature\"></p>\n<p>裡面預設程式碼如下，因為也是元件，所以結構看起來很相似。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; Injectable &#125; <span class=\"keyword\">from</span> <span class=\"string\">\"@angular/core\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">@Injectable(&#123;</span><br><span class=\"line\">  providedIn: <span class=\"string\">\"root\"</span>,</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FeatureService</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>() &#123;&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>其實服務元件也是一個類別，裡面放的內容只有兩個，<strong>屬性</strong>或是<strong>方法</strong>。</p>\n<h2 id=\"注入-service\"><a href=\"#注入-service\" class=\"headerlink\" title=\"注入 service\"></a>注入 service</h2><p>建立好 <code>service</code> 後，要回到 <code>app.module.ts</code> 中，注入 <code>service</code>，Angular 10 很貼心的在我們新增 service 後會自動幫我們建立一個 <code>providers</code> 的屬性，其組成為陣列，代表可以放多個 service。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">@NgModule(&#123;</span><br><span class=\"line\">  declarations: [</span><br><span class=\"line\">    AppComponent,</span><br><span class=\"line\">    HomeComponent,</span><br><span class=\"line\">    SecondComponent,</span><br><span class=\"line\">    Home1Component,</span><br><span class=\"line\">    Home2Component,</span><br><span class=\"line\">  ],</span><br><span class=\"line\">  imports: [BrowserModule, AppRoutingModule, FormsModule], <span class=\"comment\">// 加入倒 imports</span></span><br><span class=\"line\">  providers: [], <span class=\"comment\">// service 使用</span></span><br><span class=\"line\">  bootstrap: [AppComponent],</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<p>雖然已經建立好，但還沒放入我們剛剛建立的 <code>service</code>，所以要手動輸入剛剛建立的 <code>service</code> 名稱，所以只要把 <code>featureService</code> 放入陣列即可，放入後也會自動 import 到 <code>app.module.ts</code> 內。</p>\n<blockquote>\n<p>因為 VScode 有內建 IntelliSense 功能，所以只要打關鍵字就會出現相對應的選項，選到想要的選項後按下 tab 就可以完成囉！</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; FeatureService &#125; <span class=\"keyword\">from</span> <span class=\"string\">'./feature.service'</span>; <span class=\"comment\">// service 新增</span></span><br><span class=\"line\"></span><br><span class=\"line\">@NgModule(&#123;</span><br><span class=\"line\">  declarations: [</span><br><span class=\"line\">    AppComponent,</span><br><span class=\"line\">    HomeComponent,</span><br><span class=\"line\">    SecondComponent,</span><br><span class=\"line\">    Home1Component,</span><br><span class=\"line\">    Home2Component,</span><br><span class=\"line\">  ],</span><br><span class=\"line\">  imports: [BrowserModule, AppRoutingModule, FormsModule], <span class=\"comment\">// 加入倒 imports</span></span><br><span class=\"line\">  providers: [FeatureService], <span class=\"comment\">// service 使用</span></span><br><span class=\"line\">  bootstrap: [AppComponent],</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<p><strong>需要注意的地方是 <code>providers</code> 一定要把 service 元件註冊到 module 中，不然後續要相依性注入的時候會不能進行。</strong></p>\n<h2 id=\"相依性注入-service\"><a href=\"#相依性注入-service\" class=\"headerlink\" title=\"相依性注入 service\"></a>相依性注入 service</h2><p>註冊完 <code>service</code> 後，最重要的就是要注入 <code>service</code>，因為為了就是要共用其行為與邏輯。</p>\n<h3 id=\"feature-service-ts\"><a href=\"#feature-service-ts\" class=\"headerlink\" title=\"feature.service.ts\"></a>feature.service.ts</h3><p>假設在 <code>service</code> 裡面寫一個方法叫做 <code>run()</code>，</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FeatureService</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>() &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  run() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"featureService\"</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"home-component-ts\"><a href=\"#home-component-ts\" class=\"headerlink\" title=\"home.component.ts\"></a>home.component.ts</h3><ol>\n<li><p>將 <code>featureService</code> 注入到 <code>home.component.ts</code> 中，因為註冊到父層就可以讓子層的 home1 跟 home2 元件使用。</p>\n</li>\n<li><p>首先在 <code>constructor</code> 建構式裡面宣告一個變數，這邊設定為 <code>featureSvc，透過</code> TS 宣告型別為 <code>featureService，在完成的過程中，import</code> 也會自動完成。</p>\n</li>\n<li><p>在 <code>constructor</code> 上宣告一個 <code>featureService</code> 的屬性。</p>\n</li>\n<li><p>如果注入成功後，<code>featureSvc</code> 其屬性的值，就是 <code>featureSvc</code> 本身。</p>\n</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; FeatureService &#125; <span class=\"keyword\">from</span> <span class=\"string\">'./../feature.service'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HomeComponent</span> <span class=\"title\">implements</span> <span class=\"title\">OnInit</span> </span>&#123;</span><br><span class=\"line\">  featureSvc: FeatureService;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>(featureSvc: FeatureService) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.featureSvc = featureSvc;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>當注入 <code>featureService</code> 時，透過建構式已經製作了一個實體物件，而且只會建構一次，所以得到的是唯一且可以共用的實體元件，所以未來需要共用的資料或是程式邏輯，都可以透過此元件來共享。</p>\n</blockquote>\n<p>上方可看到要透過三行程式碼才能做出一個 <code>featureService</code> 的建構方式，但在 TS 有更簡潔的寫法，也就是加上其物件是否作為公開或是私有的方法，可改寫成下方這樣，</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HomeComponent</span> <span class=\"title\">implements</span> <span class=\"title\">OnInit</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>(public featureSvc: FeatureService) &#123;&#125;<span class=\"comment\">// 一行解決</span></span><br><span class=\"line\"></span><br><span class=\"line\">  ngOnInit(): <span class=\"keyword\">void</span> &#123;&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<ul>\n<li>public: 公開方法，任何程式碼都可以取用。</li>\n<li>private: 私有方法，只限於其物件下使用。</li>\n</ul>\n</blockquote>\n<p>透過 <code>ngOnInit()</code> 為例，要使用在 <code>service</code> 建立的方法會變這樣寫：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HomeComponent</span> <span class=\"title\">implements</span> <span class=\"title\">OnInit</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>(public featureSvc: FeatureService) &#123;&#125;<span class=\"comment\">// 一行解決</span></span><br><span class=\"line\"></span><br><span class=\"line\">  ngOnInit(): <span class=\"keyword\">void</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.featureSvc.run(); <span class=\"comment\">// 呼叫在 service 建立的方法</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/1mwsPdr.png\" alt=\"featureService\"></p>\n<p>可以看到方法已經從 <code>feature.service.ts</code> 被呼叫了!</p>\n","categories":["Angular"],"tags":["Angular"]},{"title":"JS 筆記 - e.target 與 nodeName","url":"/javascript/20200825/1659915209/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/JavaScript%20note-01.jpg?alt=media&token=7bee0261-72ac-4de4-9f5a-f39d58735b7d\" alt=\"JavaScript Note\"></p>\n<p><code>target</code> 在英文中，是目標的意思，在網頁上是指目前所在元素的位置，舉個例子來說，有一個 <code>ul</code>, <code>li</code> 的清單，當中有一個 <code>a</code> 連結，命名一個 <code>link</code> 名稱，程式碼如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;ul&gt;</span><br><span class=\"line\">  &lt;li&gt;</span><br><span class=\"line\">    &lt;a href=<span class=\"string\">\"#\"</span> <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"link\"</span>&gt;</span><br><span class=\"line\">      這是一個連結</span><br><span class=\"line\">    &lt;<span class=\"regexp\">/a&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">  &lt;/</span>li&gt;</span><br><span class=\"line\">&lt;<span class=\"regexp\">/ul&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>先前有紀錄 <code>event</code> 事件中，在 <code>window</code> 裡面會有許多物件事件，其中有兩個會很常使用，一個是 <code>target</code>，另一個是 <code>nodeName</code>。</p>\n<h1 id=\"target\"><a href=\"#target\" class=\"headerlink\" title=\"target\"></a>target</h1><p>在 JS 增加一個 addEventListener 語法，來找下 <code>e</code> 裡面的事件，就可以看到 <code>target</code>，如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> link = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\".box\"</span>);</span><br><span class=\"line\">link.addEventListener(</span><br><span class=\"line\">  <span class=\"string\">\"click\"</span>,</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(e);</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"literal\">false</span></span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n\n<p>這時候點擊 <code>a</code> 連結，就會看到下方這一整排資訊，</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">MouseEvent &#123;<span class=\"attr\">isTrusted</span>: <span class=\"literal\">true</span>, <span class=\"attr\">screenX</span>: <span class=\"number\">135</span>, <span class=\"attr\">screenY</span>: <span class=\"number\">565</span>, <span class=\"attr\">clientX</span>: <span class=\"number\">135</span>, <span class=\"attr\">clientY</span>: <span class=\"number\">30</span>, …&#125;</span><br><span class=\"line\">isTrusted: <span class=\"literal\">true</span></span><br><span class=\"line\">screenX: <span class=\"number\">135</span></span><br><span class=\"line\">screenY: <span class=\"number\">565</span></span><br><span class=\"line\">clientX: <span class=\"number\">135</span></span><br><span class=\"line\">clientY: <span class=\"number\">30</span></span><br><span class=\"line\">ctrlKey: <span class=\"literal\">false</span></span><br><span class=\"line\">shiftKey: <span class=\"literal\">false</span></span><br><span class=\"line\">altKey: <span class=\"literal\">false</span></span><br><span class=\"line\">metaKey: <span class=\"literal\">false</span></span><br><span class=\"line\">button: <span class=\"number\">0</span></span><br><span class=\"line\">buttons: <span class=\"number\">0</span></span><br><span class=\"line\">relatedTarget: <span class=\"literal\">null</span></span><br><span class=\"line\">pageX: <span class=\"number\">135</span></span><br><span class=\"line\">pageY: <span class=\"number\">30</span></span><br><span class=\"line\">x: <span class=\"number\">135</span></span><br><span class=\"line\">y: <span class=\"number\">30</span></span><br><span class=\"line\">offsetX: <span class=\"number\">87</span></span><br><span class=\"line\">offsetY: <span class=\"number\">10</span></span><br><span class=\"line\">movementX: <span class=\"number\">0</span></span><br><span class=\"line\">movementY: <span class=\"number\">0</span></span><br><span class=\"line\">fromElement: <span class=\"literal\">null</span></span><br><span class=\"line\">toElement: a.link</span><br><span class=\"line\">layerX: <span class=\"number\">135</span></span><br><span class=\"line\">layerY: <span class=\"number\">30</span></span><br><span class=\"line\">view: Window &#123;<span class=\"attr\">parent</span>: global, <span class=\"attr\">opener</span>: <span class=\"literal\">null</span>, <span class=\"attr\">top</span>: global, <span class=\"attr\">length</span>: <span class=\"number\">0</span>, <span class=\"attr\">frames</span>: Window, …&#125;</span><br><span class=\"line\">detail: <span class=\"number\">1</span></span><br><span class=\"line\">sourceCapabilities: InputDeviceCapabilities &#123;<span class=\"attr\">firesTouchEvents</span>: <span class=\"literal\">false</span>&#125;</span><br><span class=\"line\">which: <span class=\"number\">1</span></span><br><span class=\"line\">type: <span class=\"string\">\"click\"</span></span><br><span class=\"line\">target: a.link <span class=\"comment\">//就在這裡</span></span><br><span class=\"line\">currentTarget: <span class=\"literal\">null</span></span><br><span class=\"line\">eventPhase: <span class=\"number\">0</span></span><br><span class=\"line\">bubbles: <span class=\"literal\">true</span></span><br><span class=\"line\">cancelable: <span class=\"literal\">true</span></span><br><span class=\"line\">defaultPrevented: <span class=\"literal\">false</span></span><br><span class=\"line\">composed: <span class=\"literal\">true</span></span><br><span class=\"line\">timeStamp: <span class=\"number\">3037.2799999895506</span></span><br><span class=\"line\">srcElement: a.link</span><br><span class=\"line\">returnValue: <span class=\"literal\">true</span></span><br><span class=\"line\">cancelBubble: <span class=\"literal\">false</span></span><br><span class=\"line\">path: (<span class=\"number\">7</span>) [a.link, li, ul, body, html, <span class=\"built_in\">document</span>, Window]</span><br><span class=\"line\">__proto__: MouseEvent</span><br></pre></td></tr></table></figure>\n\n<p>之後接觸到 this 的時候，就會很常使用了。</p>\n<h2 id=\"nodeName\"><a href=\"#nodeName\" class=\"headerlink\" title=\"nodeName\"></a>nodeName</h2><p>nodeName 上網 google 是找不到這個名詞的，但有發現 Name 的開頭是大寫，代表應該是兩個英文名詞串起來的，果不其然，找一下字典</p>\n<ul>\n<li>node 節點 (植物相關叫做莖結)</li>\n<li>name 名字</li>\n</ul>\n<p>在網頁上有節點名稱的意思，代表 DOM 元素點擊到的節點。</p>\n<p>這時候在 <code>console.log</code> 內，繼續輸入以下程式碼:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(e.target.nodeName);</span><br></pre></td></tr></table></figure>\n\n<p>就會找到 nodeName，會發現會是用英文大寫呈現，所以如果會使用到的話，也要打成大寫，才能順利執行。</p>\n<p>codepen: <a href=\"https://codepen.io/hnzxewqw/pen/jOPBGpW\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/jOPBGpW</a></p>\n","categories":["JavaScript"],"tags":["JavaScript"]},{"title":"Angular 筆記 - Router 路由基礎認識","url":"/angular/20200825/595101447/","content":"<p><img src=\"https://i.imgur.com/87pBpoJ.jpg\" alt=\"angular\"></p>\n<p>SPA - Single Page Application 單頁應用程式網頁，就是透過 Router 技術達成的，最經典的例子就是 <code>Gmail</code>。</p>\n<h2 id=\"設定-Router\"><a href=\"#設定-Router\" class=\"headerlink\" title=\"設定 Router\"></a>設定 Router</h2><p>在 Angular 10 的 CLI 創建中一開始已經可以選擇是否建立 router 模組，所以建置好後會得到一個 <code>app-routing.module.ts</code> 檔案。</p>\n<p>打開會看到預設建置完成的樣子。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; NgModule &#125; <span class=\"keyword\">from</span> <span class=\"string\">\"@angular/core\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; Routes, RouterModule &#125; <span class=\"keyword\">from</span> <span class=\"string\">\"@angular/router\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> routes: Routes = []; <span class=\"comment\">// 主要寫其他路由的地方</span></span><br><span class=\"line\"></span><br><span class=\"line\">@NgModule(&#123;</span><br><span class=\"line\">  imports: [RouterModule.forRoot(routes)],</span><br><span class=\"line\">  exports: [RouterModule],</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AppRoutingModule</span> </span>&#123;&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Angular-路由在取得-URL-後五個核心動作\"><a href=\"#Angular-路由在取得-URL-後五個核心動作\" class=\"headerlink\" title=\"Angular 路由在取得 URL 後五個核心動作\"></a>Angular 路由在取得 URL 後五個核心動作</h2><ol>\n<li>套用轉址設定。(Applying Redirect)</li>\n<li>從 URL 識別路由狀態。(Recognizing States)</li>\n<li>從路由狀態解析出路由資訊。(Running Guards &amp; Resolving Data)</li>\n<li>依據路由資訊產生元件實體。(Activating Components)</li>\n<li>套用導覽動作，從目前狀態移轉至下一個狀態。(Navigation)</li>\n</ol>\n<h2 id=\"建立路由與存放標籤\"><a href=\"#建立路由與存放標籤\" class=\"headerlink\" title=\"建立路由與存放標籤\"></a>建立路由與存放標籤</h2><p>透過指令 <code>ng g c home</code> 跟 <code>ng g c second</code>，建立成功後要設定路徑，</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Angular Router<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">hr</span> /&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> [<span class=\"attr\">routerLink</span>]=<span class=\"string\">\"['/home']\"</span>&gt;</span>home<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> [<span class=\"attr\">routerLink</span>]=<span class=\"string\">\"[ '/second']\"</span>&gt;</span>second<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">router-outlet</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">router-outlet</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>設定兩個連結，並且指向指定頁面，最後要加上 <code>&lt;router-outlet&gt;</code> 來存放路由，到此已經把基本路由的方式寫完了，接著要把路由建立起來。</p>\n<p>要將路由設定寫在這個<strong>陣列</strong>中，並用<strong>物件</strong>呈現。</p>\n<p><code>const routes: Routes = [];</code></p>\n<h3 id=\"建立路由\"><a href=\"#建立路由\" class=\"headerlink\" title=\"建立路由\"></a>建立路由</h3><p>在建立 component 的過程中， Angular 已經自動將新增的兩個元件加入到 app.module.ts 的元件中，所以就不需做任何的設定，只要專心設定路由就可以了。</p>\n<p>路由設定有兩組基本的屬性與值，一個是 path 路徑，另一個是要連結的元件。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> routes: Routes = [</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    path: <span class=\"string\">\"home\"</span>,</span><br><span class=\"line\">    component: HomeComponent,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    path: <span class=\"string\">\"second\"</span>,</span><br><span class=\"line\">    component: SecondComponent,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">];</span><br></pre></td></tr></table></figure>\n\n<p>完整路由程式碼</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 官方元件</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; NgModule &#125; <span class=\"keyword\">from</span> <span class=\"string\">\"@angular/core\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; Routes, RouterModule &#125; <span class=\"keyword\">from</span> <span class=\"string\">\"@angular/router\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 自動新增自訂元件</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; HomeComponent &#125; <span class=\"keyword\">from</span> <span class=\"string\">\"./home/home.component\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; SecondComponent &#125; <span class=\"keyword\">from</span> <span class=\"string\">\"./second/second.component\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> routes: Routes = [</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    path: <span class=\"string\">\"home\"</span>,</span><br><span class=\"line\">    component: HomeComponent,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    path: <span class=\"string\">\"second\"</span>,</span><br><span class=\"line\">    component: SecondComponent,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">];</span><br><span class=\"line\"></span><br><span class=\"line\">@NgModule(&#123;</span><br><span class=\"line\">  imports: [RouterModule.forRoot(routes)],</span><br><span class=\"line\">  exports: [RouterModule],</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AppRoutingModule</span> </span>&#123;&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"路由其他進階設定\"><a href=\"#路由其他進階設定\" class=\"headerlink\" title=\"路由其他進階設定\"></a>路由其他進階設定</h2><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> routes: Routes = [</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    path: <span class=\"string\">\"\"</span>,</span><br><span class=\"line\">    redirectTo: <span class=\"string\">\"/home\"</span>,</span><br><span class=\"line\">    pathMatch: <span class=\"string\">\"full\"</span>, <span class=\"comment\">// 當路徑是空的時候轉址到 home</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    path: <span class=\"string\">\"home\"</span>,</span><br><span class=\"line\">    component: HomeComponent,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    path: <span class=\"string\">\"second\"</span>,</span><br><span class=\"line\">    component: SecondComponent,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    path: <span class=\"string\">\"**\"</span>,</span><br><span class=\"line\">    component: HomeComponent, <span class=\"comment\">// 萬用路徑，路由沒有比對到，永遠會執行</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">];</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"設定子路由-Child-Routing\"><a href=\"#設定子路由-Child-Routing\" class=\"headerlink\" title=\"設定子路由 Child Routing\"></a>設定子路由 Child Routing</h2><p>這是路由比較進階的作法，就是在原本的路由下再建立更多的路由；也就是有些頁面下還會有其他子頁面。</p>\n<p>設定指令如下：</p>\n<ol>\n<li>建立 HOME 元件下的 home1 頁面。</li>\n</ol>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">ng g c home/home1</span><br></pre></td></tr></table></figure>\n\n<p>2.建立 HOME 元件下的 home1 頁面。</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">ng g c home/home2</span><br></pre></td></tr></table></figure>\n\n<p>輸入後就會在 home 資料夾中增加兩個子資料夾，分別為 home1，home2，裡面的元件也都會自動建立好。</p>\n<p>接著在 <code>home.component.html</code> 中建立下方路由程式碼，因為 home1 跟 home2 是相依在 home 的下方，建立完路由後一樣要給予 <code>&lt;router-outlet&gt;</code> 這個標籤做接口。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>home works!<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">hr</span> /&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> [<span class=\"attr\">routerLink</span>]=<span class=\"string\">\"['/home/home1']\"</span>&gt;</span>Home1<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> [<span class=\"attr\">routerLink</span>]=<span class=\"string\">\"['/home/home2']\"</span>&gt;</span>Home2<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">router-outlet</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">router-outlet</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>完成後來看到 <code>home.component.ts</code>，我在 home1 建立了路由後，要在這邊加上子路由的設定，寫法跟路由很相似。</p>\n<p>下方可以看到在 <code>HomeComponent</code> 後面直接加上一個 children 的陣列，裡面包著物件，這跟原本的路由設定概念相同，很重要的地方是子路由第一個 <code>path</code> 一定要寫，並給予空值，代表不管怎麼樣一定都會跑這行，不然後面的子路由會讀不到。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">   path: <span class=\"string\">'home'</span>,</span><br><span class=\"line\">   component: HomeComponent,</span><br><span class=\"line\">   children: [</span><br><span class=\"line\">     &#123;</span><br><span class=\"line\">       path: <span class=\"string\">''</span>, <span class=\"comment\">// 一定要加這行</span></span><br><span class=\"line\">     &#125;,</span><br><span class=\"line\">     &#123;</span><br><span class=\"line\">       path: <span class=\"string\">'home1'</span>,</span><br><span class=\"line\">       component: Home1Component,</span><br><span class=\"line\">     &#125;,</span><br><span class=\"line\">     &#123;</span><br><span class=\"line\">       path: <span class=\"string\">'home2'</span>,</span><br><span class=\"line\">       component: Home2Component,</span><br><span class=\"line\">     &#125;,</span><br><span class=\"line\">   ],</span><br><span class=\"line\"> &#125;,</span><br></pre></td></tr></table></figure>\n\n<p>這樣在點擊 home，就會出現 home1 跟 home2，並且顯示其內容。</p>\n<p>完整路由寫法：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> routes: Routes = [</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    path: <span class=\"string\">'home'</span>,</span><br><span class=\"line\">    component: HomeComponent,</span><br><span class=\"line\">    children: [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        path: <span class=\"string\">'home1'</span>,</span><br><span class=\"line\">        component: Home1Component,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        path: <span class=\"string\">'home2'</span>,</span><br><span class=\"line\">        component: Home2Component,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    ],</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    path: <span class=\"string\">'second'</span>,</span><br><span class=\"line\">    component: SecondComponent,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    path: <span class=\"string\">'**'</span>,</span><br><span class=\"line\">    redirectTo: <span class=\"string\">'home'</span>,</span><br><span class=\"line\">    pathMatch: <span class=\"string\">'full'</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">];</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><ul>\n<li><a href=\"https://www.youtube.com/watch?v=sQx9s6fGI8E&fbclid=IwAR0KTfnMr4hhqTrvWWez3W6fzQIGree_wTMR0yqi849R-R08IsuffAHFnW4\" target=\"_blank\" rel=\"noopener\">使用 Angular 2 Router 快速建構 SPA 網站</a></li>\n</ul>\n","categories":["Angular"],"tags":["Angular"]},{"title":"Angular 筆記 - 雙向繫結 Two-way Binding","url":"/angular/20200825/1020258751/","content":"<p><img src=\"https://i.imgur.com/8B8zeGR.jpg\" alt=\"合體\"></p>\n<h2 id=\"基礎認識\"><a href=\"#基礎認識\" class=\"headerlink\" title=\"基礎認識\"></a>基礎認識</h2><p>雙向繫結簡單來說就是內嵌細節與屬性繫結的合體技，寫法為 EX. <code>[(ngModel)]=&quot;keyword&quot;</code>，外側為中括號，內側為小括號，裡面加上屬性，順序不能相反，若相反則無法執行。</p>\n<h2 id=\"同步綁定\"><a href=\"#同步綁定\" class=\"headerlink\" title=\"同步綁定\"></a>同步綁定</h2><blockquote>\n<p>使用情境大多在表單</p>\n</blockquote>\n<p>倘若今天有一個表單，希望可以在表單輸入的時候同時改變資料內的值，或是當我改變 component 的資料時，同時改變表單內的值，可以這樣寫。</p>\n<h3 id=\"HTML-標籤\"><a href=\"#HTML-標籤\" class=\"headerlink\" title=\"HTML 標籤\"></a>HTML 標籤</h3><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> [(<span class=\"attr\">ngModel</span>)]=<span class=\"string\">\"keyword\"</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"component\"><a href=\"#component\" class=\"headerlink\" title=\"component\"></a>component</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; Component &#125; <span class=\"keyword\">from</span> <span class=\"string\">\"@angular/core\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">@Component(&#123;</span><br><span class=\"line\">  selector: <span class=\"string\">\"app-root\"</span>,</span><br><span class=\"line\">  templateUrl: <span class=\"string\">\"./app.component.html\"</span>,</span><br><span class=\"line\">  styleUrls: [<span class=\"string\">\"./app.component.scss\"</span>],</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AppComponent</span> </span>&#123;</span><br><span class=\"line\">  keyword = <span class=\"string\">\"\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>() &#123;&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>匯入之後會發現網頁無法執行，會看到 VSCode 有一個問題，寫的是：</p>\n<blockquote>\n<p>Can’t bind to ‘ngModel’ since it isn’t a known property of ‘input’.<br>在 input 中不認識 ngModel 這個屬性。</p>\n</blockquote>\n<p>所以要將 <code>FormModule</code> 其匯入 <code>app.module.ts</code> 內，才能實現雙向綁定。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; BrowserModule &#125; <span class=\"keyword\">from</span> <span class=\"string\">\"@angular/platform-browser\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; NgModule &#125; <span class=\"keyword\">from</span> <span class=\"string\">\"@angular/core\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; AppRoutingModule &#125; <span class=\"keyword\">from</span> <span class=\"string\">\"./app-routing.module\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; AppComponent &#125; <span class=\"keyword\">from</span> <span class=\"string\">\"./app.component\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; FormsModule &#125; <span class=\"keyword\">from</span> <span class=\"string\">\"@angular/forms\"</span>; <span class=\"comment\">// 新增此 import</span></span><br><span class=\"line\"></span><br><span class=\"line\">@NgModule(&#123;</span><br><span class=\"line\">  declarations: [AppComponent],</span><br><span class=\"line\">  imports: [BrowserModule, AppRoutingModule, FormsModule], <span class=\"comment\">// 加到 import</span></span><br><span class=\"line\">  providers: [],</span><br><span class=\"line\">  bootstrap: [AppComponent],</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AppModule</span> </span>&#123;&#125;</span><br></pre></td></tr></table></figure>\n\n<p>新增 Angular 本身就內建的的 <code>formModule</code>，所以只要在 from 後面輸入 <code>@angular/...</code>，就會出現 <code>forms</code> 選項，在跳到前面的大括號內輸入 Form 關鍵字，就會跳出 <code>FormsModule</code> 的選項可以選，所以都不用自己打喔~!!</p>\n<p>最後在 import <del>複製貼上</del>增加 <code>FormsModule</code> 就可以了。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> [(<span class=\"attr\">ngModel</span>)]=<span class=\"string\">\"keyword\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>關鍵字： &#123;&#123;keyword&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>文字長度：&#123;&#123;keyword.length&#125;&#125; 個字元<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/SeC7Kjo.png\" alt=\"twoways\"></p>\n<p>這樣就得到預期的結果。</p>\n<h3 id=\"使用-ESC-清空輸入框內容\"><a href=\"#使用-ESC-清空輸入框內容\" class=\"headerlink\" title=\"使用 ESC 清空輸入框內容\"></a>使用 ESC 清空輸入框內容</h3><p>使用 keyup 事件，帶入 esc 按鍵全名。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> [(<span class=\"attr\">ngModel</span>)]=<span class=\"string\">\"keyword\"</span> (<span class=\"attr\">keyup.escape</span>)=<span class=\"string\">\"keywordReset()\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>關鍵字： &#123;&#123;keyword&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>文字長度：&#123;&#123;keyword.length&#125;&#125; 個字元<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>component 加入方法，在練習當下我只有在方法中輸入 keyword，Angular 就自動幫我加上 this。(太神奇了)</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; Component &#125; <span class=\"keyword\">from</span> <span class=\"string\">\"@angular/core\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">@Component(&#123;</span><br><span class=\"line\">  selector: <span class=\"string\">\"app-root\"</span>,</span><br><span class=\"line\">  templateUrl: <span class=\"string\">\"./app.component.html\"</span>,</span><br><span class=\"line\">  styleUrls: [<span class=\"string\">\"./app.component.scss\"</span>],</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AppComponent</span> </span>&#123;</span><br><span class=\"line\">  keyword = <span class=\"string\">\"\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>() &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  keywordReset() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.keyword = <span class=\"string\">\"\"</span>; <span class=\"comment\">// 清空輸入框</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>DEMO: <a href=\"https://stackblitz.com/edit/angular-ivy-5kjeyt?embed=1&amp;file=src/app/app.component.html\" target=\"_blank\" rel=\"noopener\">https://stackblitz.com/edit/angular-ivy-5kjeyt?embed=1&amp;file=src/app/app.component.html</a></p>\n<h2 id=\"補充\"><a href=\"#補充\" class=\"headerlink\" title=\"補充\"></a>補充</h2><p>後有用 Vue 開發一小段時間，對照於 Angular 的位置，在建構式上方宣告的變數內容，同等於是 Vue 的 data 物件，下方的方法，就同等於 methods 物件，所以方法內要使用變數，記得要加上 this。</p>\n<h2 id=\"小結\"><a href=\"#小結\" class=\"headerlink\" title=\"小結\"></a>小結</h2><p>雙向繫結方便歸方便，大多使用在表單情境，因為在畫面與資料同步下效能會較低，如果網頁資料龐大，使用雙向繫結可能會變慢，不過也要看網頁設計而定，若觀念有誤還請不吝指教。</p>\n","categories":["Angular"],"tags":["Angular"]},{"title":"Angular 筆記 - 事件繫結 Event Binding","url":"/angular/20200825/4153138698/","content":"<p><img src=\"https://i.imgur.com/87pBpoJ.jpg\" alt=\"angular\"></p>\n<h2 id=\"基礎認識\"><a href=\"#基礎認識\" class=\"headerlink\" title=\"基礎認識\"></a>基礎認識</h2><p>在寫 jQuery 或是原生 JS 的點擊事件會使用下方來撰寫點擊事件。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn\"</span> <span class=\"attr\">onclick</span>=<span class=\"string\">\"click()\"</span>&gt;</span>點擊按鈕<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Angular-的寫法\"><a href=\"#Angular-的寫法\" class=\"headerlink\" title=\"Angular 的寫法\"></a>Angular 的寫法</h2><h3 id=\"on-click\"><a href=\"#on-click\" class=\"headerlink\" title=\"on-click\"></a>on-click</h3><p>最簡單的 Angular 設定點擊方法，就是將把 onclick 改寫成 on-click，就可以了，</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn\"</span> <span class=\"attr\">on-click</span>=<span class=\"string\">\"clickBtn()\"</span>&gt;</span>點擊按鈕<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>並且對應 component 的內容：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; Component &#125; <span class=\"keyword\">from</span> <span class=\"string\">\"@angular/core\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">@Component(&#123;</span><br><span class=\"line\">  selector: <span class=\"string\">\"app-root\"</span>,</span><br><span class=\"line\">  templateUrl: <span class=\"string\">\"./app.component.html\"</span>,</span><br><span class=\"line\">  styleUrls: [<span class=\"string\">\"./app.component.scss\"</span>],</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AppComponent</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>() &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  clickBtn() &#123;</span><br><span class=\"line\">    alert(<span class=\"string\">\"click\"</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"click\"><a href=\"#click\" class=\"headerlink\" title=\"(click)\"></a>(click)</h3><p>實務上更推薦也是大部分開發者會使用的寫法，可讀性更高，更好維護：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn\"</span> (<span class=\"attr\">click</span>)=<span class=\"string\">\"clickBtn()\"</span>&gt;</span>點擊按鈕<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"使用-event-參數\"><a href=\"#使用-event-參數\" class=\"headerlink\" title=\"使用 $event 參數\"></a>使用 $event 參數</h2><p>一般在註冊事件的時候不需帶入參數，但透過 <code>$event</code> 參數可以得知更詳細的資訊。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn\"</span> (<span class=\"attr\">click</span>)=<span class=\"string\">\"clickBtn($event)\"</span>&gt;</span>點擊按鈕<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>透過 <code>console.log</code> 去得到 <code>$event</code> 的值。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; Component &#125; <span class=\"keyword\">from</span> <span class=\"string\">\"@angular/core\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">@Component(&#123;</span><br><span class=\"line\">  selector: <span class=\"string\">\"app-root\"</span>,</span><br><span class=\"line\">  templateUrl: <span class=\"string\">\"./app.component.html\"</span>,</span><br><span class=\"line\">  styleUrls: [<span class=\"string\">\"./app.component.scss\"</span>],</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AppComponent</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>() &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  clickBtn($event) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log($event);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>當點擊按鈕後，透過開發人員工具可以看到許多詳細資訊，所得到的 event 就是 DOM 下的滑鼠事件。</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">MouseEvent &#123;isTrusted: true, screenX: <span class=\"number\">39</span>, screenY: <span class=\"number\">122</span>, clientX: <span class=\"number\">39</span>, clientY: <span class=\"number\">19</span>, …&#125;</span><br><span class=\"line\"><span class=\"function\">altKey: <span class=\"title\">false</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">bubbles</span>: <span class=\"title\">true</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">button</span>: 0</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">buttons</span>: 0</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">cancelBubble</span>: <span class=\"title\">false</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">cancelable</span>: <span class=\"title\">true</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">clientX</span>: 39</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">clientY</span>: 19</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">composed</span>: <span class=\"title\">true</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">ctrlKey</span>: <span class=\"title\">false</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">currentTarget</span>: <span class=\"title\">null</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">defaultPrevented</span>: <span class=\"title\">false</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">detail</span>: 1</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">eventPhase</span>: 0</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">fromElement</span>: <span class=\"title\">null</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">isTrusted</span>: <span class=\"title\">true</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">layerX</span>: 39</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">layerY</span>: 19</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">metaKey</span>: <span class=\"title\">false</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">movementX</span>: 0</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">movementY</span>: 0</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">offsetX</span>: 29</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">offsetY</span>: 9</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">pageX</span>: 39</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">pageY</span>: 19</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">path</span>: (6) [<span class=\"title\">button.btn</span>, <span class=\"title\">app</span>-<span class=\"title\">root</span>, <span class=\"title\">body</span>, <span class=\"title\">html</span>, <span class=\"title\">document</span>, <span class=\"title\">Window</span>]</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">relatedTarget</span>: <span class=\"title\">null</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">returnValue</span>: <span class=\"title\">true</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">screenX</span>: 39</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">screenY</span>: 122</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">shiftKey</span>: <span class=\"title\">false</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">sourceCapabilities</span>: <span class=\"title\">InputDeviceCapabilities</span> &#123;<span class=\"title\">firesTouchEvents</span>: <span class=\"title\">false</span>&#125;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">srcElement</span>: <span class=\"title\">button.btn</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">target</span>: <span class=\"title\">button.btn</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">timeStamp</span>: 10022.204999811947</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">toElement</span>: <span class=\"title\">button.btn</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">type</span>: \"<span class=\"title\">click</span>\"</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">view</span>: <span class=\"title\">Window</span> &#123;<span class=\"title\">parent</span>: <span class=\"title\">Window</span>, <span class=\"title\">opener</span>: <span class=\"title\">null</span>, <span class=\"title\">top</span>: <span class=\"title\">Window</span>, <span class=\"title\">length</span>: 0, <span class=\"title\">frames</span>: <span class=\"title\">Window</span>, …&#125;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">which</span>: 1</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">x</span>: 39</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">y</span>: 19</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">__proto__</span>: <span class=\"title\">MouseEvent</span></span></span><br></pre></td></tr></table></figure>\n\n<p>假設今天要設定按下 <code>ALT</code>/<code>option</code> 鍵，在點擊滑鼠產生事件可以寫一個判斷式，當我按下 <code>Alt</code> 鍵再點擊滑鼠時，就會得到預期的結果，並且在滑鼠事件會得到的 <code>altKey:true</code>。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; Component &#125; <span class=\"keyword\">from</span> <span class=\"string\">\"@angular/core\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">@Component(&#123;</span><br><span class=\"line\">  selector: <span class=\"string\">\"app-root\"</span>,</span><br><span class=\"line\">  templateUrl: <span class=\"string\">\"./app.component.html\"</span>,</span><br><span class=\"line\">  styleUrls: [<span class=\"string\">\"./app.component.scss\"</span>],</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AppComponent</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>() &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  clickBtn($event: MouseEvent) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ($event.altKey) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">\"click altKey\"</span>); <span class=\"comment\">// click altKey</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log($event); <span class=\"comment\">// 得到滑鼠事件</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>因 Angular 是使用 TS 開發，而 TS 是強型別的語言，VScode 再開發時也支援這個功能，滑鼠移動到 altKey 會看到說明為布林值，所以也可以重構程式碼變得更簡潔。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn\"</span> (<span class=\"attr\">click</span>)=<span class=\"string\">\"clickBtn($event.altKey)\"</span>&gt;</span>點擊按鈕<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>已將標籤的事件參數加上 altKey 事件，再將 component 改寫成下方樣子，變得可讀性更高。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; Component &#125; <span class=\"keyword\">from</span> <span class=\"string\">\"@angular/core\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">@Component(&#123;</span><br><span class=\"line\">  selector: <span class=\"string\">\"app-root\"</span>,</span><br><span class=\"line\">  templateUrl: <span class=\"string\">\"./app.component.html\"</span>,</span><br><span class=\"line\">  styleUrls: [<span class=\"string\">\"./app.component.scss\"</span>],</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AppComponent</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>() &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  clickBtn(altKey: boolean) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (altKey) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 當 altKey 為 true</span></span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">\"click altKey\"</span>); <span class=\"comment\">// click altKey</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>當然，沒有最好的寫法，只有最適合的寫法，選擇好維護的寫法，在未來維護或共同協作上更順利，就是最棒的寫法了！</p>\n","categories":["Angular"],"tags":["Angular"]},{"title":"Angular 筆記 - 屬性繫結 Property Binding","url":"/angular/20200825/2522965862/","content":"<p><img src=\"https://i.imgur.com/87pBpoJ.jpg\" alt=\"angular\"></p>\n<h2 id=\"基礎認識\"><a href=\"#基礎認識\" class=\"headerlink\" title=\"基礎認識\"></a>基礎認識</h2><p>屬性使用<strong>中括號</strong>包住，並等於一個陳述式，使用<strong>引號</strong>包住，EX. <code>[屬性]=&#39;陳述內容&#39;</code>。</p>\n<p>延續內嵌繫結來改寫，將 <code>href</code> 改成<strong>屬繫繫結</strong>，其值為 url，url 的值就是原本的連結內容。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> [<span class=\"attr\">href</span>]=<span class=\"string\">\"url\"</span>&gt;</span>屬性繫結<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>component 的內容沒有改變。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; Component &#125; <span class=\"keyword\">from</span> <span class=\"string\">\"@angular/core\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">@Component(&#123;</span><br><span class=\"line\">  selector: <span class=\"string\">\"app-root\"</span>,</span><br><span class=\"line\">  templateUrl: <span class=\"string\">\"./app.component.html\"</span>,</span><br><span class=\"line\">  styleUrls: [<span class=\"string\">\"./app.component.scss\"</span>],</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AppComponent</span> </span>&#123;</span><br><span class=\"line\">  title = <span class=\"string\">\"property binding\"</span>;</span><br><span class=\"line\">  url = <span class=\"string\">\"https://hsuchihting.github.io/\"</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"延伸使用\"><a href=\"#延伸使用\" class=\"headerlink\" title=\"延伸使用\"></a>延伸使用</h2><p>這個方法好用的地方是當<strong>屬性內容會改變</strong>時，就可以善加利用屬性繫結去做撰寫，例如：</p>\n<ol>\n<li>滑鼠移動到圖片上顯示 title 內容。</li>\n<li>圖片為變動圖片連結時。</li>\n</ol>\n<p>原本圖片連結與加入 title 寫法是這樣：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">title</span>=<span class=\"string\">\"pic title\"</span> <span class=\"attr\">src</span>=<span class=\"string\">\"https://url.joor.net/ckY\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"pic\"</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>使用屬性繫結的方法改寫後會變這樣：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> [<span class=\"attr\">title</span>]=<span class=\"string\">\"str\"</span> [<span class=\"attr\">src</span>]=<span class=\"string\">\"imgUrl\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"pic\"</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>相對應的 component 的內容如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; Component &#125; <span class=\"keyword\">from</span> <span class=\"string\">\"@angular/core\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">@Component(&#123;</span><br><span class=\"line\">  selector: <span class=\"string\">\"app-root\"</span>,</span><br><span class=\"line\">  templateUrl: <span class=\"string\">\"./app.component.html\"</span>,</span><br><span class=\"line\">  styleUrls: [<span class=\"string\">\"./app.component.scss\"</span>],</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AppComponent</span> </span>&#123;</span><br><span class=\"line\">  title = <span class=\"string\">\"property binding\"</span>;</span><br><span class=\"line\">  url = <span class=\"string\">\"https://hsuchihting.github.io/\"</span>;</span><br><span class=\"line\">  str = <span class=\"string\">\"pic title\"</span>;</span><br><span class=\"line\">  imgUrl = <span class=\"string\">\"https://url.joor.net/ckY\"</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"property-與-attribute-是不同的\"><a href=\"#property-與-attribute-是不同的\" class=\"headerlink\" title=\"property 與 attribute 是不同的\"></a>property 與 attribute 是不同的</h2><p>雖然 property 與 attribute 的中文都翻譯成「屬性」，但在 HTML5 中，attribute 是可以自定義的，例如： <code>data-setAttributeName</code>，可是無法作為屬性繫結。</p>\n<p>那實際差別是什麼?</p>\n<h3 id=\"attribute\"><a href=\"#attribute\" class=\"headerlink\" title=\"attribute\"></a>attribute</h3><p>簡單來說 <code>atrribute</code> 是標籤的屬性，以下方這行標籤為例：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">title</span>=<span class=\"string\">\"pic title\"</span> <span class=\"attr\">src</span>=<span class=\"string\">\"https://url.joor.net/ckY\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"pic\"</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>像是 <code>img</code>、<code>src</code>、<code>title</code>、<code>alt</code> 為標籤屬性，另外還有很常見的 <code>href</code>、<code>class</code>…等。</p>\n<h3 id=\"property\"><a href=\"#property\" class=\"headerlink\" title=\"property\"></a>property</h3><p>如果是想要看見 img 這個 DOM 元素底下有什麼屬性可以使用，所以屬於 JavaScript 底下的 property，可以透過開發人員工具中的 properties 找到許多這個 img 這個網頁元素可以使用的屬性，所以屬性繫結是綁定 DOM 元素底下可以使用的屬性，非 attribute。</p>\n<p>所以如果要用屬性繫結一樣的方法去綁定自定義的屬性名稱是沒有辦法的，因為會找不到，但是可以在前面加上一個 attr 就可以使用自定義的屬性囉!其值內容也可以從 component 而來。</p>\n<p>EX. <code>[attr.data-setName]=&#39;statement&#39;</code></p>\n","categories":["Angular"],"tags":["Angular"]},{"title":"Angular 筆記 - 內嵌繫結 Interpolation","url":"/angular/20200825/2144420813/","content":"<p><img src=\"https://i.imgur.com/87pBpoJ.jpg\" alt=\"angular\"></p>\n<h2 id=\"基礎認識\"><a href=\"#基礎認識\" class=\"headerlink\" title=\"基礎認識\"></a>基礎認識</h2><p>使用兩個大括號的語法就稱為內嵌繫結，屬於單向的繫結，只有將元件中 component 的資料傳送到網頁元素 template 上顯示。</p>\n<h2 id=\"將文字與連結內容呈現於網頁上\"><a href=\"#將文字與連結內容呈現於網頁上\" class=\"headerlink\" title=\"將文字與連結內容呈現於網頁上\"></a>將文字與連結內容呈現於網頁上</h2><p>目前在 HTML 程式碼如下：<br><strong>HTML</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>&#123;&#123;title&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>app.component.ts</strong> 內容如下：<br><strong>TS</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; Component &#125; <span class=\"keyword\">from</span> <span class=\"string\">\"@angular/core\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">@Component(&#123;</span><br><span class=\"line\">  selector: <span class=\"string\">\"app-root\"</span>,</span><br><span class=\"line\">  templateUrl: <span class=\"string\">\"./app.component.html\"</span>,</span><br><span class=\"line\">  styleUrls: [<span class=\"string\">\"./app.component.scss\"</span>],</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AppComponent</span> </span>&#123;</span><br><span class=\"line\">  title = <span class=\"string\">\"提姆寫程式 Tim Coding Blog\"</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>基本上透過 Angular CLI 已經建置好大多數的程式碼，對應的路徑也都已經設定好，沒有意外是不需要特別更動，修改的只有在 export class AppComponent 這個物件中的屬性與其值。</p>\n<p>可以看到使用內嵌繫結，將 component 的值給予 Angular Title，透過雙括號的對應，就會同步顯示於網頁上。</p>\n<h2 id=\"將連結改為雙括號形式寫法\"><a href=\"#將連結改為雙括號形式寫法\" class=\"headerlink\" title=\"將連結改為雙括號形式寫法\"></a>將連結改為雙括號形式寫法</h2><p><strong>HTML</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"&#123;&#123;url&#125;&#125;\"</span> <span class=\"attr\">target</span>=<span class=\"string\">\"_blank\"</span>&gt;</span>提姆寫程式<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>TS</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; Component &#125; <span class=\"keyword\">from</span> <span class=\"string\">\"@angular/core\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">@Component(&#123;</span><br><span class=\"line\">  selector: <span class=\"string\">\"app-root\"</span>,</span><br><span class=\"line\">  templateUrl: <span class=\"string\">\"./app.component.html\"</span>,</span><br><span class=\"line\">  styleUrls: [<span class=\"string\">\"./app.component.scss\"</span>],</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AppComponent</span> </span>&#123;</span><br><span class=\"line\">  title = <span class=\"string\">\"Angular Title\"</span>;</span><br><span class=\"line\">  url = <span class=\"string\">\"https://hsuchihting.github.io/\"</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>DEMO: <a href=\"https://stackblitz.com/edit/angular-ivy-yf4ayv?embed=1&amp;file=src/app/app.component.ts\" target=\"_blank\" rel=\"noopener\">https://stackblitz.com/edit/angular-ivy-yf4ayv?embed=1&amp;file=src/app/app.component.ts</a></p>\n","categories":["Angular"],"tags":["Angular"]},{"title":"JS 筆記 - 終止冒泡事件 stopPropagation 與 取消預設觸發行為 preventDefault","url":"/javascript/20200819/2369373932/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/JavaScript%20note-01.jpg?alt=media&token=7bee0261-72ac-4de4-9f5a-f39d58735b7d\" alt=\"JavaScript Note\"></p>\n<h2 id=\"冒泡事件-Event-Bubbling-與-捕獲事件-Event-Capturing\"><a href=\"#冒泡事件-Event-Bubbling-與-捕獲事件-Event-Capturing\" class=\"headerlink\" title=\"冒泡事件 Event Bubbling 與 捕獲事件 Event Capturing\"></a>冒泡事件 Event Bubbling 與 捕獲事件 Event Capturing</h2><p>在 <code>addEventListener</code> 中有提到 <code>false</code> 為預設的冒泡事件，這篇學習指定元素終止冒泡事件。<br>情境會用在倘若有兩個元素重疊的時候，就可以使用這個語法。</p>\n<p>複習一下 <code>addEventListener</code> 的寫法，以<code>click</code> 為例:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">el.addEventListener(</span><br><span class=\"line\">  <span class=\"string\">\"click\"</span>,</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    alert(<span class=\"string\">\"click here\"</span>);</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"literal\">false</span></span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n\n<p>最後面出現的布林值的意思是:</p>\n<ul>\n<li>false (冒泡事件 Event Bubbling): 從指定的元素往外找 (預設為 false)</li>\n<li>true (捕獲事件 Event Capturing): 從最外層找到指定元素</li>\n</ul>\n<p>舉一個例子，</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span> <span class=\"attr\">class</span>=<span class=\"string\">\"body\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"box\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>目前看到有一個 <code>.box</code>，他的最外層也有一個 <code>.body</code>，共兩個元素，透過 <code>addEventListener</code> 的多選特性，在 JS 寫下兩個語法，目前都是設定為從指定元素往外找:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> el = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\".box\"</span>);</span><br><span class=\"line\">el.addEventListener(</span><br><span class=\"line\">  <span class=\"string\">\"click\"</span>,</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    alert(<span class=\"string\">\"click box\"</span>);</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"literal\">false</span></span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> bodyEl = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\".body\"</span>);</span><br><span class=\"line\">bodyEl.addEventListener(</span><br><span class=\"line\">  <span class=\"string\">\"click\"</span>,</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    alert(<span class=\"string\">\"click body\"</span>);</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"literal\">false</span></span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n\n<p>如果寫這樣，當點擊 <code>.box</code> 區域時，<code>alert</code> 就會彈出兩次，因為 <code>.box</code> 是在 <code>.body</code> 的內層，布林值為 <code>false</code> ，所以電腦會往外層找。</p>\n<p>codepen: <a href=\"https://codepen.io/hnzxewqw/pen/gOpmWZN\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/gOpmWZN</a></p>\n<h2 id=\"使用終止冒泡事件-stopPropogation\"><a href=\"#使用終止冒泡事件-stopPropogation\" class=\"headerlink\" title=\"使用終止冒泡事件 stopPropogation\"></a>使用終止冒泡事件 stopPropogation</h2><p>這時要在指定的元素中寫上<strong>終止冒泡事件 ()</strong>的語法，讓 alert 在指定元素後就終止冒泡事件，在指定元素的 function 的小括號，要告訴它有一個事件，所以會變這樣寫：</p>\n<p><code>function(e)</code> 或是 <code>function(event)</code>，</p>\n<p>並加上這段語法:<br><code>e.stopPropogation();</code>告訴瀏覽器，除了這個 function 的事件外，都不要啟動冒泡事件。</p>\n<p>所以完整的程式碼如下:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> el = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\".box\"</span>);</span><br><span class=\"line\">el.addEventListener(</span><br><span class=\"line\">  <span class=\"string\">\"click\"</span>,</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">    e.stopPropogation(); <span class=\"comment\">//終止冒泡事件語法</span></span><br><span class=\"line\">    alert(<span class=\"string\">\"click box\"</span>);</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"literal\">false</span></span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n\n<p>codepen: <a href=\"https://codepen.io/hnzxewqw/pen/XWbMgdE\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/XWbMgdE</a></p>\n<h2 id=\"preventDefault-取消預設觸發行為\"><a href=\"#preventDefault-取消預設觸發行為\" class=\"headerlink\" title=\"preventDefault 取消預設觸發行為\"></a>preventDefault 取消預設觸發行為</h2><p><strong>preventDefault 取消預設觸發行為</strong> 跟 <strong>stopPropogation 終止冒泡事件</strong>，兩個在網頁上呈現很像，但用法不太一樣。</p>\n<p><code>preventDefault</code> 是取消原本標籤預設的功能，像是取消 a 連結在點擊後會前往指定網頁，或是 submit 按鈕會傳送資料到資料庫去的功能…等等。</p>\n<p>寫法跟 <code>stopPropogation</code> 的位置一樣，如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">el.addEventListener(</span><br><span class=\"line\">  <span class=\"string\">\"click\"</span>,</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">    e.preventDefault(); <span class=\"comment\">//取消預設觸發行為</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"literal\">false</span></span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n\n<p>是直接告訴 function 第一件要執行的內容，並且在後方在寫入想要進行的語法，這樣的好處是，可以自訂義想要執行的功能，就不會受到預設值的影響。</p>\n<p>codepen: <a href=\"https://codepen.io/hnzxewqw/pen/dyovRKb\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/dyovRKb</a></p>\n","categories":["JavaScript"],"tags":["JavaScript"]},{"title":"Angular 筆記 - 應用程式啟動流程","url":"/angular/20200819/2240445654/","content":"<p><img src=\"https://i.imgur.com/87pBpoJ.jpg\" alt=\"angular\"></p>\n<p>Angular 的啟動流程需要依靠一些固定指令。</p>\n<h2 id=\"install\"><a href=\"#install\" class=\"headerlink\" title=\"install\"></a>install</h2><p>當 CLI 建置好後，要啟動目前專案，要先輸入：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm <span class=\"built_in\">start</span></span><br></pre></td></tr></table></figure>\n\n<p>然後這個指令是執行 <code>npm serve</code> 這個命令，啟動本地端的伺服器，並執行專案，會看到下方畫面：</p>\n<p><img src=\"https://i.imgur.com/rNlurK3.png\" alt=\"npm start\"></p>\n<p>並透過 webpack 將 TS 編譯成 JS，讓瀏覽器可以運行，同時也編譯出五個 JS 檔案。</p>\n<ul>\n<li>main</li>\n<li>polyfills</li>\n<li>runtime</li>\n<li>styles</li>\n<li>vendor</li>\n</ul>\n<p>啟動後，會自動載入這五支 JS 檔案，並動態將 HTML 標籤渲染在網頁上，打開瀏覽器的檢查原始碼會看到下圖呈現，</p>\n<p><img src=\"https://i.imgur.com/YQWAosv.png\" alt=\"origin code\"></p>\n<p>透過開發人員工具看到的會是下圖，</p>\n<p><img src=\"https://i.imgur.com/BBMkq9F.png\" alt=\"F12\"></p>\n<p>但在編輯器看到的卻是下圖，</p>\n<p><img src=\"https://i.imgur.com/M4p8vJc.png\" alt=\"vscode\"></p>\n<p>會發現在編輯器中其實是沒有另外寫入 JS 的，但執行後 webpack 就自動動態加入 JS 元件，並且渲染網頁。</p>\n<h2 id=\"main-ts\"><a href=\"#main-ts\" class=\"headerlink\" title=\"main.ts\"></a>main.ts</h2><p>程式都會有一個進入點才能執行，第一支執行的就是 <code>main.ts</code>，前面的 import 是 npm 執行後載入的元件，透過 <code>platformBrowserDynamic</code> 來啟動模組，再到 <code>AppModule</code> 去執行。</p>\n<p><img src=\"https://i.imgur.com/CTdgI9f.png\" alt=\"platformBrowserDynamic\"></p>\n<p>在 <code>AppModule</code> 上按一下 <code>F12</code>，會自動轉跳到 app 資料夾中的 <code>app.module.ts</code> 這支程式，也是整個專案最重要的程式。</p>\n<p><img src=\"https://i.imgur.com/PcZHPtz.png\" alt=\"appModule\"></p>\n<p>上方有看到在 AppModule 是一個 class，並且裡面沒有程式碼，一般也不用寫東西在裡面，只要設定一個 <code>declarations</code> 並在裡面給予數個屬性 (property) ，並宣告一個 @NgModule，代表這是代表 Angular 的 module。</p>\n<h3 id=\"NgModule-屬性介紹\"><a href=\"#NgModule-屬性介紹\" class=\"headerlink\" title=\"NgModule 屬性介紹\"></a>NgModule 屬性介紹</h3><ul>\n<li><code>declarations</code>：是<strong>聲明</strong>跟 view 有關的 <code>AppComponent</code> 元件，匯入進來。</li>\n<li><code>imports</code>：<strong>匯入</strong>這個模組會用到的其他模組，模組是元件的集合，這裡有兩個模組，<code>BrowserModule</code> 跟 <code>AppRoutingModule</code>。</li>\n<li><code>providers</code>：註冊一些服務的<strong>提供者</strong>。</li>\n<li><code>bootstrap</code>：啟動<strong>根元件</strong>。</li>\n</ul>\n<h3 id=\"AppComponent\"><a href=\"#AppComponent\" class=\"headerlink\" title=\"AppComponent\"></a>AppComponent</h3><p>AppComponent 是專案當中最上面的一支程式，會看到程式碼如下：</p>\n<p><img src=\"https://i.imgur.com/0riN3ZF.png\" alt=\"appComponent\"></p>\n<p>可以看到此元件也是一個 class，而上面的 <code>declarations</code> 名稱為 <code>component</code>，代表 <code>AppComponent</code> 是一個元件，這支程式預設有一個屬性叫做 <code>title</code>，其值為 <code>index</code>。</p>\n<p>而這支元件有三個屬性，宣告於其內：</p>\n<ul>\n<li>selector：是一個選取器，會選到 <code>app-root</code> 這個標籤，官方建議使用網頁標籤作為選擇，不要改成 <code>class</code> 或是 <code>id</code>。</li>\n<li>templateUrl：指的是 <code>app.component.html</code> 這支檔案。</li>\n<li>styleUrls：對應的 CSS 樣式。</li>\n</ul>\n<blockquote>\n<p>每一個 <code>component</code> 都會對應一個 <code>template</code></p>\n</blockquote>\n<h2 id=\"結語\"><a href=\"#結語\" class=\"headerlink\" title=\"結語\"></a>結語</h2><p>未來會新增越來越多的 component，但對應的 template 只會對應在該 component 當中，其他並不會影響到，所以就會相當好管理。</p>\n","categories":["Angular"],"tags":["Angular","Angular CLI"]},{"title":"Angular 筆記 - Angular CLI 安裝與基本認識","url":"/angular/20200818/419544592/","content":"<p><img src=\"https://i.imgur.com/87pBpoJ.jpg\" alt=\"angular\"></p>\n<h2 id=\"簡介\"><a href=\"#簡介\" class=\"headerlink\" title=\"簡介\"></a>簡介</h2><p>Angular 是 Google 開發出來一款開源 JavaScript 框架，用來開發單一頁面應用程式（single page application, SPA）。目前已經到 Angular 10 版本，預計今年 11 月還會有 11 的版本釋出 ，第一版正名為 AngularJS ，而第 2 版後稱為 Angular。兩者架構差異很大，簡單來說 AngularJS 本身有些缺點，後來受到 React 的刺激後，Angular 便被開發出來與之抗衡。</p>\n<p>Angular 採用 MVC 模式，涵蓋了 M、V、C/VM 等層面，不需要組合、評估其它技術就能完成大部分前端開發任務。這是因為她已經將各種技術封裝在框架中，隔離了瀏覽器的細節，讓你不用關心它的實現細節。此外所有需要使用的套件、模組 Angular 都已經幫你打包好了，不像是 React 或 Vue 要自己去架構模組。</p>\n<blockquote>\n<p><a href=\"https://url.joor.net/ckF\" target=\"_blank\" rel=\"noopener\">引用內文</a></p>\n</blockquote>\n<h2 id=\"開發環境\"><a href=\"#開發環境\" class=\"headerlink\" title=\"開發環境\"></a>開發環境</h2><ul>\n<li>win10 64bit</li>\n<li>npm 6.12.1</li>\n<li>node.js v12.13.1</li>\n<li>Git 2.23.0.windows.1</li>\n<li>vscode 1.48.0 x64</li>\n</ul>\n<h2 id=\"安裝前準備\"><a href=\"#安裝前準備\" class=\"headerlink\" title=\"安裝前準備\"></a>安裝前準備</h2><p>使用 Angular 開發會需要安裝以下軟體：</p>\n<ul>\n<li>Node.js</li>\n<li>Git</li>\n<li>Visual Studio Code</li>\n</ul>\n<h2 id=\"建立-Angular-專案\"><a href=\"#建立-Angular-專案\" class=\"headerlink\" title=\"建立 Angular 專案\"></a>建立 Angular 專案</h2><ul>\n<li>新增一個資料夾。</li>\n<li>將路徑指向資料夾。<br><code>cd F:/angular</code></li>\n<li>透過 npm 安裝 Angular CLI，輸入：</li>\n</ul>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm i -g @angular/cli</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"MAC\"><a href=\"#MAC\" class=\"headerlink\" title=\"MAC\"></a>MAC</h3><p>OS 後來改版後，目前遇到的狀況是，第一次建立 CLI，新增一個資料夾，然後要將指令改成</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo npm i -g @angular/cli</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>i 就是 install 的意思，-g 是全域 global 的意思。</p>\n</blockquote>\n<p>安裝後會出現以下訊息，輸入 <code>y</code>，就可以完成安裝，目前安裝版本為 10.0.6。</p>\n<p><img src=\"https://i.imgur.com/ZgObGRC.png\" alt=\"ngInstall\"></p>\n<p>確認是否安裝成功，輸入 <code>ng -v</code> 就會得到下方畫面，就代表安裝成功並告知我有什麼命令可以使用。</p>\n<p><img src=\"https://i.imgur.com/7DgBfAn.png\" alt=\"angularVersion\"></p>\n<h2 id=\"開發好用套件大補帖\"><a href=\"#開發好用套件大補帖\" class=\"headerlink\" title=\"開發好用套件大補帖\"></a>開發好用套件大補帖</h2><p>可以在 VSCode 擴充套件工具欄位中搜尋 angular，並在前幾名可以看到 Will 保哥開發的好用 Angular Extension Pack 套件。</p>\n<p><img src=\"https://i.imgur.com/DzlojbC.png\" alt=\"will\"></p>\n<p>如果是全新手要找 Angular 的開發套件，推薦可以使用此大補帖，便可以安裝基本所需的套件喔!已經有 11 萬下載人次了呢!</p>\n<h2 id=\"建立專案骨架\"><a href=\"#建立專案骨架\" class=\"headerlink\" title=\"建立專案骨架\"></a>建立專案骨架</h2><p>在剛剛建立好的目錄資料夾中，輸入以下指令：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">ng new index</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>index 為專案名稱，可自訂義。</p>\n</blockquote>\n<p>輸入後會問兩個問題：</p>\n<p><img src=\"https://i.imgur.com/9iwou7h.png\" alt=\"install\"></p>\n<ul>\n<li>請問你想要新增 Angular Routor 嗎? Y</li>\n<li>哪個 stylesheet 是你想要使用的？SCSS</li>\n</ul>\n<blockquote>\n<p>CSS 我習慣用 SCSS 預處理器編譯。</p>\n</blockquote>\n<p>這時候看到骨架已經完成，但程式還在安裝，原因是 npm 正在做 install 的動作，安裝之後要開發的元件。</p>\n<p><img src=\"https://i.imgur.com/kyoDx7E.png\" alt=\"install finish\"></p>\n<p>在將資料夾放到 VScode 中，會看到專案已建立完成。</p>\n<p><img src=\"https://i.imgur.com/UDR7HLC.png\" alt=\"project is complete\"></p>\n<h2 id=\"如何確認專案建置成功\"><a href=\"#如何確認專案建置成功\" class=\"headerlink\" title=\"如何確認專案建置成功\"></a>如何確認專案建置成功</h2><p>因為剛剛我有新增專案名稱，所以要將路徑改成專案資料夾的名稱，<br><img src=\"https://i.imgur.com/F59BJ1J.png\" alt=\"npmStart\"></p>\n<p>剛剛看起來都建置完成，但如果跑不起來也是白搭，所以透過以下指令測試：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm <span class=\"built_in\">start</span></span><br></pre></td></tr></table></figure>\n\n<p>輸入完後會自己跑 <code>npm serve</code>，這時候都不用做任何事情。</p>\n<h3 id=\"MAC-1\"><a href=\"#MAC-1\" class=\"headerlink\" title=\"MAC\"></a>MAC</h3><p>要先啟動 npm，所以要先跑 <code>npm install</code></p>\n<p><img src=\"https://i.imgur.com/5FP6aza.png\" alt=\"question\"></p>\n<p>跑完後會出現這段問題，就輸入 <code>y</code> 即可，跑一下子會得到一個 localhost 的位置，已下圖為例是 localhost:4200，把這段複製到網頁上即可。</p>\n<p><img src=\"https://i.imgur.com/p1OvLP2.png\" alt=\"localhost\"></p>\n<p>如果看到以下畫面，就代表建置成功了!!</p>\n<p><img src=\"https://i.imgur.com/NVvviCU.png\" alt=\"complete\"></p>\n","categories":["Angular"],"tags":["Angular","Angular CLI"]},{"title":"JS 筆記 - ES6： 箭頭函式與傳統函式之差異","url":"/javascript/20200813/289345854/","content":"<p><img src=\"https://images.unsplash.com/photo-1525011268546-bf3f9b007f6a?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80\" alt=\"arrow\"></p>\n<h2 id=\"箭頭函式沒有-arguments\"><a href=\"#箭頭函式沒有-arguments\" class=\"headerlink\" title=\"箭頭函式沒有 arguments\"></a>箭頭函式沒有 arguments</h2><p>arguments 是類陣列，跟一般陣列不同，但在查驗結果時會是用陣列的型態顯示資料，下方有一函式，在傳統函式會自動新增 arguments 這個參數，會將參數的值帶入其中。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> nums = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"built_in\">arguments</span>);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">nums(<span class=\"number\">10</span>, <span class=\"number\">20</span>, <span class=\"number\">30</span>, <span class=\"number\">40</span>, <span class=\"number\">50</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">500</span>);</span><br></pre></td></tr></table></figure>\n\n<p>透過 console 可以看到結果：<br><img src=\"https://i.imgur.com/vqu79xB.png\" alt=\"arguments\"></p>\n<p>但如果改用箭頭函式的話會跳錯，原因就是箭頭函式沒有 arguments 的參數。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> nums = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"built_in\">arguments</span>);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">nums(<span class=\"number\">10</span>, <span class=\"number\">20</span>, <span class=\"number\">30</span>, <span class=\"number\">40</span>, <span class=\"number\">50</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">500</span>);</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/mCnHOoA.png\" alt=\"error\"></p>\n<h2 id=\"this-綁定的差異\"><a href=\"#this-綁定的差異\" class=\"headerlink\" title=\"this 綁定的差異\"></a>this 綁定的差異</h2><h3 id=\"傳統函式的-this\"><a href=\"#傳統函式的-this\" class=\"headerlink\" title=\"傳統函式的 this\"></a>傳統函式的 this</h3><p>之前有提過 this 是跟呼叫的方法有關，與定義無關。可參考<a href=\"https://hsuchihting.github.io/javascript/20200804/1536824481/\">JS 核心觀念筆記 - 什麼是 this</a></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> myName = <span class=\"string\">\"全域\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> person = &#123;</span><br><span class=\"line\">  myName: <span class=\"string\">\"小明\"</span>,</span><br><span class=\"line\">  callName: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"1\"</span>, <span class=\"keyword\">this</span>.myName); <span class=\"comment\">//小明</span></span><br><span class=\"line\">    setTimeout(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">\"2\"</span>, <span class=\"keyword\">this</span>.myName); <span class=\"comment\">//全域</span></span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">\"3\"</span>, <span class=\"keyword\">this</span>); <span class=\"comment\">//window</span></span><br><span class=\"line\">    &#125;, <span class=\"number\">10</span>);</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">person.callName();</span><br></pre></td></tr></table></figure>\n\n<p>所以上方得到的結果就滿清楚的。</p>\n<h3 id=\"箭頭函式的-this\"><a href=\"#箭頭函式的-this\" class=\"headerlink\" title=\"箭頭函式的 this\"></a>箭頭函式的 this</h3><p>但在箭頭函式就有些許不同，箭頭函式沒有自己的 this。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> myName = <span class=\"string\">\"全域\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> person = &#123;</span><br><span class=\"line\">  myName: <span class=\"string\">\"小明\"</span>,</span><br><span class=\"line\">  callName: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"1\"</span>, <span class=\"keyword\">this</span>.myName); <span class=\"comment\">//小明</span></span><br><span class=\"line\">    setTimeout(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">\"2\"</span>, <span class=\"keyword\">this</span>.myName); <span class=\"comment\">//小明</span></span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">\"3\"</span>, <span class=\"keyword\">this</span>); <span class=\"comment\">//外面的 person 物件</span></span><br><span class=\"line\">    &#125;, <span class=\"number\">10</span>);</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">person.callName();</span><br></pre></td></tr></table></figure>\n\n<p>將下方 setTimeout 的函式改成箭頭函式後，會發現箭頭函式的 this 會向外一層查找的屬性的值。</p>\n<h3 id=\"DOM-的-this\"><a href=\"#DOM-的-this\" class=\"headerlink\" title=\"DOM 的 this\"></a>DOM 的 this</h3><p>傳統函式的 this，會選到該 DOM 元素。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;p&gt;點擊這段文字&lt;<span class=\"regexp\">/p&gt;;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">let p = document.querySelector(\"p\");</span></span><br><span class=\"line\"><span class=\"regexp\">p.addEventListener(\"click\", function () &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">  console.log(this); /</span><span class=\"regexp\">/&lt;p&gt;點擊這段文字&lt;/</span>p&gt;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>但箭頭函式則會指向 window。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;p&gt;點擊這段文字&lt;<span class=\"regexp\">/p&gt;;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">let p = document.querySelector(\"p\");</span></span><br><span class=\"line\"><span class=\"regexp\">p.addEventListener(\"click\", () =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">  console.log(this); /</span><span class=\"regexp\">/window 物件</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;);</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"無法透過-call-apply-bind-重新給予-this\"><a href=\"#無法透過-call-apply-bind-重新給予-this\" class=\"headerlink\" title=\"無法透過 call(),apply(),bind() 重新給予 this\"></a>無法透過 call(),apply(),bind() 重新給予 this</h3><p>傳統函式可使用方法呼叫 this</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> family = &#123;</span><br><span class=\"line\">  myName: <span class=\"string\">\"小明家\"</span>,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">const</span> fn = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">a, b</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>, a, b);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">fn.call(family, <span class=\"number\">1</span>, <span class=\"number\">2</span>); <span class=\"comment\">//&#123;myName: \"小明家\"&#125; 1 2</span></span><br></pre></td></tr></table></figure>\n\n<p>箭頭函式則無法使用呼叫方法，會指向全域的物件。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> family = &#123;</span><br><span class=\"line\">  myName: <span class=\"string\">\"小明家\"</span>,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">const</span> fn = <span class=\"function\">(<span class=\"params\">a, b</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>, a, b);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">fn.call(family, <span class=\"number\">1</span>, <span class=\"number\">2</span>); <span class=\"comment\">//window 物件 1 2</span></span><br></pre></td></tr></table></figure>\n","categories":["JavaScript"],"tags":["JavaScript","ES6"]},{"title":"JS 筆記 - ES6：箭頭函式","url":"/javascript/20200813/2662831726/","content":"<p><img src=\"https://images.unsplash.com/photo-1525011268546-bf3f9b007f6a?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80\" alt=\"arrow\"></p>\n<p>箭頭函式是 ES6 新增的語法，分成兩大類：</p>\n<ul>\n<li>語法糖：讓函式撰寫更精簡，但運作邏輯跟觀念跟傳統函式相同。</li>\n<li>新方法：讀起來也更直觀、簡便，邏輯執行上會稍有不同。<br>本篇來記錄如何將傳統函式改寫成箭頭函式。</li>\n</ul>\n<h2 id=\"箭頭函式基本認識與改寫\"><a href=\"#箭頭函式基本認識與改寫\" class=\"headerlink\" title=\"箭頭函式基本認識與改寫\"></a>箭頭函式基本認識與改寫</h2><p>下方有一個函式：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> fnA = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">params</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">\"字串\"</span> + params;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(fnA(<span class=\"string\">\"string\"</span>));</span><br></pre></td></tr></table></figure>\n\n<p>最常見到的改寫方式就是把函式這個關鍵字 <code>function</code> 用 <code>=&gt;</code> 代替，並移到<strong>參數</strong>後方。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> fnA = <span class=\"function\">(<span class=\"params\">params</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">\"字串\"</span> + params;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(fnA(<span class=\"string\">\"string\"</span>));</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"當程式碼為表達式時可縮寫\"><a href=\"#當程式碼為表達式時可縮寫\" class=\"headerlink\" title=\"當程式碼為表達式時可縮寫\"></a>當程式碼為表達式時可縮寫</h3><blockquote>\n<p>表達式就是會 <code>return</code> 一個值的就是表達式，以原本的程式碼繼續改寫就是 <code>return</code> 這行，當只有回傳一個值，沒有其他內容，就可以進行縮寫。</p>\n</blockquote>\n<ul>\n<li>首先就先改成一行，並把<code>大括號</code>與 <code>return</code> 去掉。</li>\n<li>拿掉大括號與 return 時，箭頭函式會自動 return 該結果。</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> fnA = <span class=\"function\">(<span class=\"params\">params</span>) =&gt;</span> <span class=\"string\">\"字串\"</span> + params;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(fnA(<span class=\"string\">\"string\"</span>));</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"當只有一個參數時可縮寫\"><a href=\"#當只有一個參數時可縮寫\" class=\"headerlink\" title=\"當只有一個參數時可縮寫\"></a>當只有一個參數時可縮寫</h3><blockquote>\n<p>當表達式只有一個參數的時候，參數外的括號可以拿掉。</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> fnA = <span class=\"function\">(<span class=\"params\">params</span>) =&gt;</span> <span class=\"string\">\"字串\"</span> + params;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(fnA(<span class=\"string\">\"string\"</span>));</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"當沒有參數時縮寫\"><a href=\"#當沒有參數時縮寫\" class=\"headerlink\" title=\"當沒有參數時縮寫\"></a>當沒有參數時縮寫</h3><p>上方提到只有一個參數可省略小括號，可是沒有參數時，括號不可省略，不然會跳錯。</p>\n<blockquote>\n<p>記得後方參數的屬性也要拿掉。</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> fnA = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> <span class=\"string\">\"字串\"</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(fnA(<span class=\"string\">\"string\"</span>));</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"當有兩個參數時縮寫\"><a href=\"#當有兩個參數時縮寫\" class=\"headerlink\" title=\"當有兩個參數時縮寫\"></a>當有兩個參數時縮寫</h3><p>只有一個參數才能省略小括號，若參數有包含過兩個以上，就需要小括號。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> fnA = <span class=\"function\">(<span class=\"params\">a, b</span>) =&gt;</span> <span class=\"string\">\"字串\"</span> + a + b;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(fnA(<span class=\"string\">\"string\"</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>));</span><br></pre></td></tr></table></figure>\n","categories":["JavaScript"],"tags":["JavaScript","ES6"]},{"title":"JS 筆記 - 取得 AJAX 的三種寫法，XHR、Fetch、axios","url":"/javascript/20200813/3250845021/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/js-login.jpeg?alt=media&token=8effb2b7-5830-47ed-85b8-47493b9d1063\" alt=\"Login\"></p>\n<h2 id=\"資源使用\"><a href=\"#資源使用\" class=\"headerlink\" title=\"資源使用\"></a>資源使用</h2><p>API 連結與欲呈現的資料格式</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> url = <span class=\"string\">\"https://hexschool-tutorial.herokuapp.com/api/signup\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> user = &#123;</span><br><span class=\"line\">  email: <span class=\"string\">\"123e@gmail.com\"</span>,</span><br><span class=\"line\">  password: <span class=\"string\">\"123456\"</span>,</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"XHR-傳統寫法\"><a href=\"#XHR-傳統寫法\" class=\"headerlink\" title=\"XHR 傳統寫法\"></a>XHR 傳統寫法</h2><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">xhr = <span class=\"keyword\">new</span> XMLHttpRequest();</span><br><span class=\"line\">xhr.open(<span class=\"string\">\"post\"</span>, url, <span class=\"literal\">true</span>);</span><br><span class=\"line\">xhr.setRequestHeader(<span class=\"string\">\"Content-type\"</span>, <span class=\"string\">\"application/json\"</span>);</span><br><span class=\"line\">xhr.send(<span class=\"built_in\">JSON</span>.stringify(user));</span><br><span class=\"line\">response = <span class=\"built_in\">JSON</span>.parse(xhr.response);</span><br><span class=\"line\">report.innerHTML = response.message;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"ES6：Fetch\"><a href=\"#ES6：Fetch\" class=\"headerlink\" title=\"ES6：Fetch\"></a>ES6：Fetch</h2><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">fetch(url, user)</span><br><span class=\"line\">  .then(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res.json();</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  .then(<span class=\"function\">(<span class=\"params\">jsonData</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(jsonData);</span><br><span class=\"line\">  &#125;);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"axios\"><a href=\"#axios\" class=\"headerlink\" title=\"axios\"></a>axios</h2><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">axios.post(url, user).then(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  report.innerHTML = res.data.message;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>CodePen：<a href=\"https://codepen.io/hnzxewqw/pen/eYZJBYa\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/eYZJBYa</a></p>\n","categories":["JavaScript"],"tags":["JavaScript","AJAX"]},{"title":"JS 筆記 - 寫一個註冊與登入的欄位","url":"/javascript/20200813/122919015/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/js-login.jpeg?alt=media&token=8effb2b7-5830-47ed-85b8-47493b9d1063\" alt=\"Login\"></p>\n<p>這次練習透過傳統表單的格式加上 AJAX 傳遞資料到後端，完成一個註冊與登入頁。<br>會使用到:</p>\n<blockquote>\n<ul>\n<li>form 表單格式。</li>\n<li>input 屬性。</li>\n<li>AJAX 串接。</li>\n<li>註冊與登入功能。</li>\n<li>帳號驗證。</li>\n</ul>\n</blockquote>\n<p>先在畫面寫出一個表單。</p>\n<h2 id=\"HTML-架構\"><a href=\"#HTML-架構\" class=\"headerlink\" title=\"HTML 架構\"></a>HTML 架構</h2><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"wrap\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>請選擇註冊或是登入<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">action</span>=<span class=\"string\">\"form.html\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">\"email\"</span>&gt;</span>請輸入信箱<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"email\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"email\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"email\"</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">\"請輸入信箱\"</span>&gt;</span>\\</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">\"password\"</span>&gt;</span>請輸入密碼<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"password\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"password\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"password\"</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">\"請輸入密碼\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"btn\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"button\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"註冊\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"signUp\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"button\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"登入\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"logIn\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>因為會用<strong>監聽功能</strong>，所以按鈕就不用 <code>submit</code>，而是使用 <code>button</code>，在要監聽的 <code>input</code> 加入 <code>class</code>。</p>\n<h2 id=\"JavaScript-行為\"><a href=\"#JavaScript-行為\" class=\"headerlink\" title=\"JavaScript 行為\"></a>JavaScript 行為</h2><blockquote>\n<p>分析:<br>要使用的地方是輸入 <code>input</code> 後，透過<strong>點擊</strong> <code>button</code> 後，才會產生事件，所以要綁定的是 <code>button</code> 的 <code>class</code>。( click 事件)</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> signUpBtn = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\".signUp\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> logInBtn = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\".logIn\"</span>);</span><br></pre></td></tr></table></figure>\n\n<p>綁定後，對這兩個按鈕新增 click 事件。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">signUpBtn.addEventListener(<span class=\"string\">\"click\"</span>, signUpcheck, <span class=\"literal\">false</span>);</span><br><span class=\"line\">logInBtn.addEventListener(<span class=\"string\">\"click\"</span>, logIncheck, <span class=\"literal\">false</span>);</span><br></pre></td></tr></table></figure>\n\n<p>因為兩者的功能相似，紀錄其中一個為代表，有差的地方是 API 不同，還有 API 中的 <code>message</code>　資訊不同。</p>\n<p>建立 <code>signUpcheck</code> 監聽事件：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">signUpcheck</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    consolo.log(alert(<span class=\"string\">'AA'</span>)); <span class=\"comment\">//確認有監聽成功，得到 alert 視窗，內容為 AA。</span></span><br><span class=\"line\">｝</span><br></pre></td></tr></table></figure>\n\n<p>因為這個監聽是要輸入<strong>帳號</strong>、<strong>密碼</strong>之後，所得到的值，所以選到 <code>email</code> 跟 <code>password</code> 的值，假設今天後端需要 JSON 格式的資料，所以就新的宣告的變數 <code>account</code> 為一個物件，用這個物件帶入前台輸入的資料。</p>\n<blockquote>\n<p>前提是要看後端所需要的內容而定，並非都是 JSON 的格式，但有些後端會說給他 JSON 就好。</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> emailStr = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\".email\"</span>).value;</span><br><span class=\"line\"><span class=\"keyword\">var</span> passwordStr = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\".password\"</span>).value;</span><br><span class=\"line\"><span class=\"keyword\">var</span> account = &#123;&#125;; <span class=\"comment\">//輸入的資料，填入空物件</span></span><br><span class=\"line\">account.email = emailStr; <span class=\"comment\">//填入的 email</span></span><br><span class=\"line\">account.password = passwordStr; <span class=\"comment\">//填入的密碼</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"串接-AJAX\"><a href=\"#串接-AJAX\" class=\"headerlink\" title=\"串接 AJAX\"></a>串接 AJAX</h2><p>資料建立好後，就可以串接 AJAX，因為是要把輸入的值丟給後端，告訴後端 <code>xhr.setRequestHeader</code> 的格式是 <code>JSON</code>，因為前後端接收的都是字串，JSON 格式是物件，所以要透過 <code>stringify</code> 轉成字串。完成後就可以把這個 <code>data</code> 送出到後端。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> xhr = <span class=\"keyword\">new</span> XMLHttpRequest();</span><br><span class=\"line\">xhr.open(<span class=\"string\">\"post\"</span>, <span class=\"string\">\"https://hexschool-tutorial.herokuapp.com/api/signup\"</span>, <span class=\"literal\">true</span>);</span><br><span class=\"line\">xhr.setRequestHeader(<span class=\"string\">\"Content-type\"</span>, <span class=\"string\">\"application/json\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> data = <span class=\"built_in\">JSON</span>.stringify(account); <span class=\"comment\">//因為格式是 JSON，所以要轉字串</span></span><br><span class=\"line\">xhr.send(data);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"onload\"><a href=\"#onload\" class=\"headerlink\" title=\"onload\"></a>onload</h2><p>再透過 <code>onload</code> 把想要行為寫在裡面。剛剛提到前後端所要的資料格式為字串，所以要給後端的時候，但因為要比對字串的內容，而比對的資料是 JSON ，所以回傳的資料要用 <code>parse</code>，並命名一個變數，代表物件回傳的 <code>message</code>，並做判斷，如果符合 <code>message</code> 中的內容，就跳出「帳號註冊成功」，其他結果則跳出「帳號已被使用」。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">xhr.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> callbackData = <span class=\"built_in\">JSON</span>.parse(xhr.responseText); <span class=\"comment\">//因為輸入資料目前是字串，要轉成物件才能使用</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> str = callbackData.message;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (str == <span class=\"string\">\"帳號註冊成功\"</span>) &#123;</span><br><span class=\"line\">    alert(<span class=\"string\">\"帳號註冊成功\"</span>);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    alert(<span class=\"string\">\"帳號已被使用\"</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p>完整內容於 Codepen <a href=\"https://codepen.io/hnzxewqw/pen/NWqXrEe\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/NWqXrEe</a></p>\n<h2 id=\"心得\"><a href=\"#心得\" class=\"headerlink\" title=\"心得\"></a>心得</h2><p>先分析目前所有的內容是資料(Model)、事件(event)、視覺(view)。比較可以釐清目前程式碼的邏輯與撰寫，比較知道遇到 Bug 的時候卡關在哪裡。</p>\n<p>前後端收到的都是字串，而是在比對的資料為 JSON，所以這邊的資料轉型觀念就很重要，不過現在有很多套件可以使用，但觀念具備很重要！</p>\n","categories":["JavaScript"],"tags":["JavaScript","AJAX"]},{"title":"JS 筆記 - 將本地端 JSON 用 AJAX 傳給後端","url":"/javascript/20200813/2829794569/","content":"<p><img src=\"https://images.unsplash.com/photo-1526374965328-7f61d4dc18c5?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1350&q=80\" alt=\"ajax\"></p>\n<p>透過 <code>get</code> 取得 <code>AJAX</code> 資料後，一定也會有資料要傳給後端，可以使用 <code>post</code>。</p>\n<p>假如目前有一個會員資料物件:</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">var account = &#123;</span><br><span class=\"line\"><span class=\"function\">  email: '<span class=\"title\">name123</span>@<span class=\"title\">email.com</span>',</span></span><br><span class=\"line\"><span class=\"function\">  <span class=\"title\">password</span>: '123<span class=\"title\">xxxx</span>'</span></span><br><span class=\"line\"><span class=\"function\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>方法跟取得 AJAX 很像，程式碼如下:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> xhr = <span class=\"keyword\">new</span> XMLHttpRequest();</span><br><span class=\"line\">xhr.open(<span class=\"string\">\"post\"</span>, <span class=\"string\">\"https://hexschool-tutorial.herokuapp.com/api/signin\"</span>, <span class=\"literal\">true</span>); <span class=\"comment\">//post 告知後端</span></span><br><span class=\"line\">xhr.setRequestHeader(<span class=\"string\">\"Content-type\"</span>, <span class=\"string\">\"application/json\"</span>); <span class=\"comment\">//告訴後端是用 JSON 格式</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> data = <span class=\"built_in\">JSON</span>.stringify(account); <span class=\"comment\">//將物件資料轉成字串</span></span><br><span class=\"line\">xhr.send(data); <span class=\"comment\">//送出字串</span></span><br></pre></td></tr></table></figure>\n\n<p>在 console 中輸入 xhr 會看到收到資料的狀態:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">XMLHttpRequest &#123;<span class=\"attr\">onreadystatechange</span>: <span class=\"literal\">null</span>, <span class=\"attr\">readyState</span>: <span class=\"number\">4</span>, <span class=\"attr\">timeout</span>: <span class=\"number\">0</span>, <span class=\"attr\">withCredentials</span>: <span class=\"literal\">false</span>, <span class=\"attr\">upload</span>: XMLHttpRequestUpload, …&#125;</span><br><span class=\"line\">onreadystatechange: <span class=\"literal\">null</span></span><br><span class=\"line\">readyState: <span class=\"number\">4</span> <span class=\"comment\">//以完全接收到數據資料</span></span><br><span class=\"line\">timeout: <span class=\"number\">0</span></span><br><span class=\"line\">withCredentials: <span class=\"literal\">false</span></span><br><span class=\"line\">upload: XMLHttpRequestUpload &#123;<span class=\"attr\">onloadstart</span>: <span class=\"literal\">null</span>, <span class=\"attr\">onprogress</span>: <span class=\"literal\">null</span>, <span class=\"attr\">onabort</span>: <span class=\"literal\">null</span>, <span class=\"attr\">onerror</span>: <span class=\"literal\">null</span>, <span class=\"attr\">onload</span>: <span class=\"literal\">null</span>, …&#125;</span><br><span class=\"line\">responseURL: <span class=\"string\">\"https://hexschool-tutorial.herokuapp.com/api/signin\"</span></span><br><span class=\"line\">status: <span class=\"number\">200</span> <span class=\"comment\">//正確，有收到資料。</span></span><br><span class=\"line\">statusText: <span class=\"string\">\"OK\"</span></span><br><span class=\"line\">responseType: <span class=\"string\">\"\"</span></span><br><span class=\"line\">response: <span class=\"string\">\"&#123;\"</span>success<span class=\"string\">\":false,\"</span>result<span class=\"string\">\":&#123;&#125;,\"</span>message<span class=\"string\">\":\"</span>此帳號不存在或帳號密碼錯誤<span class=\"string\">\"&#125;\"</span></span><br><span class=\"line\">responseText: <span class=\"string\">\"&#123;\"</span>success<span class=\"string\">\":false,\"</span>result<span class=\"string\">\":&#123;&#125;,\"</span>message<span class=\"string\">\":\"</span>此帳號不存在或帳號密碼錯誤<span class=\"string\">\"&#125;\"</span></span><br><span class=\"line\">responseXML: <span class=\"literal\">null</span></span><br><span class=\"line\">onloadstart: <span class=\"literal\">null</span></span><br><span class=\"line\">onprogress: <span class=\"literal\">null</span></span><br><span class=\"line\">onabort: <span class=\"literal\">null</span></span><br><span class=\"line\">onerror: <span class=\"literal\">null</span></span><br><span class=\"line\">onload: <span class=\"literal\">null</span></span><br><span class=\"line\">ontimeout: <span class=\"literal\">null</span></span><br><span class=\"line\">onloadend: <span class=\"literal\">null</span></span><br><span class=\"line\">__proto__: XMLHttpRequest</span><br></pre></td></tr></table></figure>\n","categories":["JavaScript"],"tags":["JavaScript","AJAX"]},{"title":"JS 筆記 - 傳統 form 表格與 AJAX POST 寫法","url":"/javascript/20200813/3135340488/","content":"<p><img src=\"https://images.unsplash.com/photo-1526374965328-7f61d4dc18c5?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1350&q=80\" alt=\"ajax\"></p>\n<p>在許多電商網頁上，會有會員登入的頁面，那會遇到一個情形，就是在輸入資料時，會有驗證功能，若有重複的 email 就會告知「帳號重複使用」，並會給予建議的帳號名稱，這怎麼做到的呢?</p>\n<h2 id=\"傳統表單資料的傳送方式\"><a href=\"#傳統表單資料的傳送方式\" class=\"headerlink\" title=\"傳統表單資料的傳送方式\"></a>傳統表單資料的傳送方式</h2><p>以下是一個傳統表單的範例：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">action</span>=<span class=\"string\">\"form.html\"</span>&gt;</span></span><br><span class=\"line\">  帳號:</span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"account\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">  密碼:</span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"password\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"password\"</span>&gt;</span> <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"button\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"送出\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>並且輸入帳號密碼後，會在原網址後面出現這串程式碼，</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">form.html?account=name%<span class=\"number\">40</span>email.com&amp;password=<span class=\"number\">12345</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>要在本地端測試時才會出現。</p>\n</blockquote>\n<p>意思是:</p>\n<ol>\n<li><code>?</code> 是用來連結前面的網址。</li>\n<li>所輸入的帳號密碼也會在其中，並且有多項資訊會用 <code>&amp;</code> 符號連接。</li>\n</ol>\n<h2 id=\"AJAX-POST-API\"><a href=\"#AJAX-POST-API\" class=\"headerlink\" title=\"AJAX POST API\"></a>AJAX POST API</h2><p>複習一下 AJAX 起手式:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">xhr = <span class=\"keyword\">new</span> XMLHttpRequest();</span><br><span class=\"line\">xhr.open(<span class=\"string\">\"get\"</span>, API網址, <span class=\"literal\">true</span>);</span><br><span class=\"line\">xhr.send(<span class=\"literal\">null</span>);</span><br><span class=\"line\">xhr.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;&#125;;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"串接-API\"><a href=\"#串接-API\" class=\"headerlink\" title=\"串接 API\"></a>串接 API</h2><blockquote>\n<p><a href=\"https://github.com/hexschool/nodejs_ajax_tutorial\" target=\"_blank\" rel=\"noopener\">本次練習 API</a> (六角學院提供。</p>\n</blockquote>\n<p>但這次是要把註冊的資料送到後端做驗證，所以 <code>get</code> 要改成 <code>post</code></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">xhr.open(<span class=\"string\">\"post\"</span>, <span class=\"string\">\"https://hexschool-tutorial.herokuapp.com/api/signup\"</span>, <span class=\"literal\">true</span>);</span><br></pre></td></tr></table></figure>\n\n<p>這時再用開發人員工具輸入 <code>xhr</code> 會得到 <code>readyState:1</code>，代表有抓到資料。</p>\n<h2 id=\"傳統表單獲取資料-setRequestHeader\"><a href=\"#傳統表單獲取資料-setRequestHeader\" class=\"headerlink\" title=\"傳統表單獲取資料 setRequestHeader\"></a>傳統表單獲取資料 setRequestHeader</h2><p>並且要用一個 <code>setRequestHeader</code> 格式，記錄好輸入的資料，告訴後端我要傳送這個資料，程式碼為:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">xhr.setRequestHeader(<span class=\"string\">\"Content-type\"</span>, <span class=\"string\">\"application/x-www-form-urlencoded\"</span>);</span><br></pre></td></tr></table></figure>\n\n<p>來了解一下英文的意思，來幫助記憶(以下為自行翻譯的記憶方式):</p>\n<ol>\n<li>setRequestHeader: <code>set</code> 有設定的意思，<code>Request</code> 是請求，<code>Header</code> 為抬頭，所以是要設定一個<strong>請求抬頭給後端準備要資料</strong>。</li>\n<li>前面的參數: <code>Content-type</code>，字面意思就是<strong>內容類型</strong>。</li>\n<li>後面的參數:<strong>應用程式中網址的編碼</strong>。</li>\n</ol>\n<ul>\n<li><code>application</code>: 應用程式。</li>\n<li><code>url</code>: 網址。</li>\n<li><code>encoded</code>: 編碼的。</li>\n</ul>\n<blockquote>\n<p>這樣就比較不會忘記。</p>\n</blockquote>\n<p>之前因為只是 <code>get</code> 資料，所以參數是 <code>null</code>，如今要把註冊的資訊傳給後端，後端的資料有兩種內容，所以要把剛剛在 form 資料加入到參數中。先來看一下後端資料格式:</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">Data:</span></span><br><span class=\"line\"><span class=\"function\">&#123;</span></span><br><span class=\"line\"><span class=\"function\">  <span class=\"title\">email</span>: '<span class=\"title\">lovef2e</span>@<span class=\"title\">hexschool.com</span>',</span></span><br><span class=\"line\"><span class=\"function\">  <span class=\"title\">password</span>: '12345678'</span></span><br><span class=\"line\"><span class=\"function\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>所以就是要傳這樣的格式內容資料給後端。</p>\n<h2 id=\"send\"><a href=\"#send\" class=\"headerlink\" title=\"send\"></a>send</h2><p>所以要給 <code>email</code> 跟 <code>password</code>，所以 <code>send</code> 的參數內容就要寫入剛剛填入的資料:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">xhr.send(<span class=\"string\">\"email=name@email.com&amp;password=12345\"</span>);</span><br></pre></td></tr></table></figure>\n\n<p>如此就可以完成註冊的資料了。</p>\n<p>完整程式碼:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> xhr = <span class=\"keyword\">new</span> XMLHttpRequest();</span><br><span class=\"line\">xhr.open(<span class=\"string\">\"post\"</span>, <span class=\"string\">\"https://hexschool-tutorial.herokuapp.com/api/signup\"</span>, <span class=\"literal\">true</span>);</span><br><span class=\"line\">xhr.setRequestHeader(<span class=\"string\">\"Content-type\"</span>, <span class=\"string\">\"application/x-www-form-urlencoded\"</span>);</span><br><span class=\"line\">xhr.send(<span class=\"string\">\"email=name@email.com&amp;password=12345\"</span>); <span class=\"comment\">//send 裡面要用組字串</span></span><br></pre></td></tr></table></figure>\n\n<p>傳送資料後，就可以在用 <code>xhr.onload=function(){...}</code> 去寫想要達到的效果了。</p>\n","categories":["JavaScript"],"tags":["JavaScript","AJAX"]},{"title":"JS 筆記 - 認識 AJAX、同步與非同步、HTTP狀態碼","url":"/javascript/20200813/3210023058/","content":"<p><img src=\"https://images.unsplash.com/photo-1526374965328-7f61d4dc18c5?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1350&q=80\" alt=\"ajax\"></p>\n<h2 id=\"什麼是-AJAX\"><a href=\"#什麼是-AJAX\" class=\"headerlink\" title=\"什麼是 AJAX\"></a>什麼是 AJAX</h2><p>AJAX ，英文全名是「<strong>A</strong>synchronous <strong>J</strong>avaScript <strong>a</strong>nd <strong>X</strong>ML」（非同步的 JavaScript 與 XML 技術）。</p>\n<p>傳統的 Web 應用允許用戶端填寫表單（form），當送出表單時就向網頁伺服器傳送一個請求。伺服器接收並處理傳來的表單，然後送回一個新的網頁，但這個做法浪費了許多頻寬，因為在前後兩個頁面中的大部分 HTML 碼往往是相同的。由於每次應用的溝通都需要向伺服器傳送請求，應用的回應時間依賴於伺服器的回應時間。這導致了使用者介面的回應比本機應用慢得多。</p>\n<p>與此不同，AJAX 應用可以僅向伺服器傳送並取回必須的資料，並在客戶端採用 JavaScript 處理來自伺服器的回應。因為在伺服器和瀏覽器之間交換的資料大量減少，伺服器回應更快了。同時，很多的處理工作可以在發出請求的客戶端機器上完成，因此 Web 伺服器的負荷也減少了。</p>\n<h3 id=\"應用\"><a href=\"#應用\" class=\"headerlink\" title=\"應用\"></a>應用</h3><blockquote>\n<ul>\n<li>運用 XHTML+CSS 來表達資訊；</li>\n<li>運用 JavaScript 操作 DOM（Document Object Model）來執行動態效果；</li>\n<li>運用 XML 和 XSLT 操作資料</li>\n<li>運用 XMLHttpRequest 或新的 Fetch API 與網頁伺服器進行非同步資料交換；</li>\n</ul>\n</blockquote>\n<p>更簡單來說，就是取得遠端數據庫的資料。</p>\n<h2 id=\"透過-XMLHttpRequest-撈資料\"><a href=\"#透過-XMLHttpRequest-撈資料\" class=\"headerlink\" title=\"透過 XMLHttpRequest 撈資料\"></a>透過 XMLHttpRequest 撈資料</h2><p>如何使用 <code>XMLHttpRequest</code> 是物件跨瀏覽器撈資料，起手式程式碼:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> xhr = <span class=\"keyword\">new</span> XMLHttpRequest();</span><br></pre></td></tr></table></figure>\n\n<p>另外在開方人員工具 <code>console</code> 中打上 <code>xhr</code>，會看到下方物件，會看到一個 <code>readyState</code> 是 0，<br>代表已經產生一個 <code>XMLHttpRequest</code>，但還沒有連到要取得的資料。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">XMLHttpRequest &#123;<span class=\"attr\">onreadystatechange</span>: <span class=\"literal\">null</span>, <span class=\"attr\">readyState</span>: <span class=\"number\">0</span>, <span class=\"attr\">timeout</span>: <span class=\"number\">0</span>, <span class=\"attr\">withCredentials</span>: <span class=\"literal\">false</span>, <span class=\"attr\">upload</span>: XMLHttpRequestUpload, …&#125;</span><br><span class=\"line\">onreadystatechange: <span class=\"literal\">null</span></span><br><span class=\"line\">readyState: <span class=\"number\">0</span> <span class=\"comment\">//還沒有取得資料</span></span><br><span class=\"line\">timeout: <span class=\"number\">0</span></span><br><span class=\"line\">withCredentials: <span class=\"literal\">false</span></span><br><span class=\"line\">upload: XMLHttpRequestUpload &#123;<span class=\"attr\">onloadstart</span>: <span class=\"literal\">null</span>, <span class=\"attr\">onprogress</span>: <span class=\"literal\">null</span>, <span class=\"attr\">onabort</span>: <span class=\"literal\">null</span>, <span class=\"attr\">onerror</span>: <span class=\"literal\">null</span>, <span class=\"attr\">onload</span>: <span class=\"literal\">null</span>, …&#125;</span><br><span class=\"line\">responseURL: <span class=\"string\">\"\"</span> <span class=\"comment\">//AJAX 網址</span></span><br><span class=\"line\">status: <span class=\"number\">0</span></span><br><span class=\"line\">statusText: <span class=\"string\">\"\"</span></span><br><span class=\"line\">responseType: <span class=\"string\">\"\"</span></span><br><span class=\"line\">response: <span class=\"string\">\"\"</span> <span class=\"comment\">//收到的內容</span></span><br><span class=\"line\">responseText: <span class=\"string\">\"\"</span> <span class=\"comment\">//收到遠端資料的文字</span></span><br><span class=\"line\">responseXML: <span class=\"literal\">null</span></span><br><span class=\"line\">onloadstart: <span class=\"literal\">null</span></span><br><span class=\"line\">onprogress: <span class=\"literal\">null</span></span><br><span class=\"line\">onabort: <span class=\"literal\">null</span></span><br><span class=\"line\">onerror: <span class=\"literal\">null</span></span><br><span class=\"line\">onload: <span class=\"literal\">null</span></span><br><span class=\"line\">ontimeout: <span class=\"literal\">null</span></span><br><span class=\"line\">onloadend: <span class=\"literal\">null</span></span><br><span class=\"line\">__proto__: XMLHttpRequest</span><br></pre></td></tr></table></figure>\n\n<p>要跟遠端資料庫要資料，一定要有這個 <code>XMLHttpRequest</code> 物件，告訴伺服器，我要跟你要資料了。再來透過宣告後的 <code>xhr</code> 變數來要資料，程式碼會這樣寫：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">xhr.open(<span class=\"string\">\"格式\"</span>, <span class=\"string\">\"AJAX 網址\"</span>, 同步非同步);</span><br></pre></td></tr></table></figure>\n\n<p>格式的部分比較常見會有下方兩個:</p>\n<ul>\n<li>get: 從 API 或後端資料。</li>\n<li>post: 傳送資料到伺服器跟後端要資料。</li>\n<li>true: 非同步 / false: 同步</li>\n</ul>\n<blockquote>\n<p>‘格式’ 與 ‘AJAX 網址’ 要有引號，不然不會執行。</p>\n</blockquote>\n<p>倘若今天要去撈台北市中有多少<a href=\"https://data.taipei/opendata/datalist/apiAccess?scope=resourceAquire&rid=5941f46b-4115-49b9-a511-18ea5b427676\" target=\"_blank\" rel=\"noopener\">哺乳室</a>的資料，程式碼會如下:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">xhr.open(</span><br><span class=\"line\">  <span class=\"string\">\"get\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"https://data.taipei/opendata/datalist/apiAccess?scope=resourceAquire&amp;rid=5941f46b-4115-49b9-a511-18ea5b427676\"</span>,</span><br><span class=\"line\">  <span class=\"literal\">true</span></span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"open-開啟-XMLHttpRequest-物件\"><a href=\"#open-開啟-XMLHttpRequest-物件\" class=\"headerlink\" title=\"open 開啟 XMLHttpRequest 物件\"></a>open 開啟 XMLHttpRequest 物件</h3><p>這時在 <code>console</code> 中打入 <code>xhr</code>，會發現原本的 <code>readyState</code> 變成 1，代表有使用 <code>open</code>開啟這個物件，但還沒有把資料傳送過去。</p>\n<h3 id=\"send-傳送資料\"><a href=\"#send-傳送資料\" class=\"headerlink\" title=\"send 傳送資料\"></a>send 傳送資料</h3><p>要把資料傳過去，要給 xhr.send 指令，因為這次只是要撈資料，沒有要傳送任何東西給數據庫，所以內容可以打成空值 (空的資料) (null)，程式碼會長這樣:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">xhr.send(<span class=\"literal\">null</span>);</span><br></pre></td></tr></table></figure>\n\n<p>這時的 <code>readyState</code> 會是 4 ，代表已經完全接到數據資料，並把取得的資料放在 <code>responseText</code>。</p>\n<blockquote>\n<p><strong>readyState 代碼解釋</strong></p>\n<ul>\n<li>0 - 產生一個 XMLHttpRequest，但還沒連接到想要取得的資料。</li>\n<li>1 - 偵測到使用 open()，但尚未將資料送到資料庫。</li>\n<li>2 - 偵測到使用 send 狀態。</li>\n<li>3 - loading 狀態。(如果資料很大就會顯示，如果資料很小就會直接跳成 4 。</li>\n<li>4 - 已經完全接到數據資料。</li>\n</ul>\n</blockquote>\n<p>完整程式碼:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> xhr = <span class=\"keyword\">new</span> XMLHttpRequest();</span><br><span class=\"line\">xhr.open(</span><br><span class=\"line\">  <span class=\"string\">\"get\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"https://data.taipei/opendata/datalist/apiAccess?scope=resourceAquire&amp;rid=e6831708-02b4-4ef8-98fa-4b4ce53459d9\"</span>,</span><br><span class=\"line\">  <span class=\"literal\">true</span></span><br><span class=\"line\">);</span><br><span class=\"line\">xhr.send(<span class=\"literal\">null</span>);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"false-同步與-true-非同步的\"><a href=\"#false-同步與-true-非同步的\" class=\"headerlink\" title=\"false 同步與 true 非同步的\"></a>false 同步與 true 非同步的</h2><p>以剛剛程式碼作為延續:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> xhr = <span class=\"keyword\">new</span> XMLHttpRequest();</span><br><span class=\"line\">xhr.open(</span><br><span class=\"line\">  <span class=\"string\">\"get\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"https://data.taipei/opendata/datalist/apiAccess?scope=resourceAquire&amp;rid=e6831708-02b4-4ef8-98fa-4b4ce53459d9\"</span>,</span><br><span class=\"line\">  <span class=\"literal\">true</span></span><br><span class=\"line\">);</span><br><span class=\"line\">xhr.send(<span class=\"literal\">null</span>);</span><br></pre></td></tr></table></figure>\n\n<p>這時使用 <code>console.log(xhr.responseText);</code> 確認一下是否有撈到資料，理論是應該會撈到資料，但在開發人員工具中會顯示為沒有資訊，</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/JS-true.png?alt=media&token=7f0cabdc-a104-41b2-afc6-b8b82392aa87\" alt=\"非同步 true\"></p>\n<p>原因是在第三個參數是同步與非同步的關係，<br>true 是<strong>非同步</strong>，不會等資料回傳，就繼續進行程式碼。<br>false 是<strong>同步</strong> 就會等到資料回傳，再繼續進行程式碼。如下圖:</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/JS-false.png?alt=media&token=71fa7dba-bf9b-414e-a5ff-717b77743c26\" alt=\"同步 false\"></p>\n<p>但是一般專案為了網頁瀏覽順利，會先進行網頁讀取，讓資料陸續下載，所以大部分會使用 true，不然使用者會覺得網頁壞掉了。</p>\n<h2 id=\"onload-載入資料\"><a href=\"#onload-載入資料\" class=\"headerlink\" title=\"onload 載入資料\"></a>onload 載入資料</h2><p>因為 <code>true</code> 非同步不會馬上載到資料，所以會在新增一個語法，叫做 <code>onload</code>，在上方透過開發人員工具中打入 xhr 也會看到物件 <code>onload</code>，程式碼這樣寫:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">xhr.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(xhr.responseText); <span class=\"comment\">//會撈到資料</span></span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p><code>onload</code> 是被動的語法，指的是在 <code>send</code> 後，收到資料回傳，就執行這個 <code>onload</code> 物件，這時就會進行資料下載。</p>\n</blockquote>\n<p>在 HTML 先設定一個 <code>.list</code>，作為等等顯示資料用。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"list\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>倘若說今天要撈去 API 中的 資料，程式碼內容就可以設立這樣的條件：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">xhr.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(xhr.responseText); <span class=\"comment\">//有撈到資料</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> data = <span class=\"built_in\">JSON</span>.parse(xhr.responseText); <span class=\"comment\">//字串轉成資料</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(data);</span><br><span class=\"line\">  <span class=\"keyword\">var</span> dataLen = data.result.results.length;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(dataLen);</span><br><span class=\"line\">  <span class=\"keyword\">var</span> str = <span class=\"string\">\"\"</span>; <span class=\"comment\">//組字串</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; dataLen; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> location = data.result.results[i].locationName; <span class=\"comment\">//城市</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> lowTemp = data.result.results[i].parameterName3; <span class=\"comment\">//最低溫</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> highTemp = data.result.results[i].parameterName2; <span class=\"comment\">//最高溫</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> weather = data.result.results[i].parameterName1; <span class=\"comment\">//天氣狀況</span></span><br><span class=\"line\">    str +=</span><br><span class=\"line\">      <span class=\"string\">\"&lt;li&gt;\"</span> +</span><br><span class=\"line\">      location +</span><br><span class=\"line\">      <span class=\"string\">\"氣溫: \"</span> +</span><br><span class=\"line\">      lowTemp +</span><br><span class=\"line\">      <span class=\"string\">\"~\"</span> +</span><br><span class=\"line\">      highTemp +</span><br><span class=\"line\">      <span class=\"string\">\"°C, 天氣: \"</span> +</span><br><span class=\"line\">      weather +</span><br><span class=\"line\">      <span class=\"string\">\"&lt;/li&gt;\"</span>; <span class=\"comment\">//字串加總</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  list.innerHTML = str; <span class=\"comment\">//渲染在網頁上</span></span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p>這樣就能得到一串 AJAX 所撈出的資料，並列出清單。</p>\n<p>codepen: <a href=\"https://codepen.io/hnzxewqw/pen/NWqwaGp\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/NWqwaGp</a></p>\n<ul>\n<li>AJAX 主要做了以下幾件事情:</li>\n</ul>\n<ol>\n<li>建立一個 XMLHttpRequest。(open)</li>\n<li>跟對方要資料。(send)</li>\n<li>回傳資料到自己的瀏覽器。(onload)</li>\n<li>拿到資料後處理資料。</li>\n</ol>\n<h2 id=\"HTTP-狀態碼與-CORS-跨網域\"><a href=\"#HTTP-狀態碼與-CORS-跨網域\" class=\"headerlink\" title=\"HTTP 狀態碼與 CORS 跨網域\"></a>HTTP 狀態碼與 CORS 跨網域</h2><p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/404%20ERROR.png?alt=media&token=6195e133-4654-446b-a3b2-1f4acc61e899\" alt=\"404 ERROR\"></p>\n<p>比較常見到的有兩個狀態碼：<br>200-正確，有收到資料。<br>404-錯誤，找不到資料。</p>\n<p>其他還有更多狀態碼可看<a href=\"https://blog.miniasp.com/post/2009/01/16/Web-developer-should-know-about-HTTP-Status-Code\" target=\"_blank\" rel=\"noopener\">保哥的文章 The Will Will Web</a></p>\n<h2 id=\"CORS-跨來源資源共用\"><a href=\"#CORS-跨來源資源共用\" class=\"headerlink\" title=\"CORS 跨來源資源共用\"></a>CORS 跨來源資源共用</h2><p>CORS 跨來源資源共用，英文為 <strong>C</strong>ross-<strong>O</strong>rigin <strong>R</strong>esource <strong>S</strong>haring，是一種使用額外 HTTP 標頭令目前瀏覽網站的使用者代理取得存取其他來源（網域）伺服器特定資源權限的機制。當使用者代理請求一個不是目前文件來源——例如來自於不同網域（domain）、通訊協定（protocol）或通訊埠（port）的資源時，會建立一個跨來源 HTTP 請求（cross-origin HTTP request）。</p>\n<p>於安全性考量，程式碼所發出的跨來源 HTTP 請求會受到限制。例如，XMLHttpRequest 及 Fetch 都遵守同源政策（same-origin policy）。這代表網路應用程式所使用的 API 除非使用 CORS 標頭，否則只能請求與應用程式相同網域的 HTTP 資源。</p>\n<hr>\n<h2 id=\"參考文章\"><a href=\"#參考文章\" class=\"headerlink\" title=\"參考文章:\"></a>參考文章:</h2><p>維基百科 <a href=\"https://zh.wikipedia.org/wiki/AJAX\" target=\"_blank\" rel=\"noopener\">https://zh.wikipedia.org/wiki/AJAX</a><br>MDN <a href=\"https://developer.mozilla.org/zh-TW/docs/Web/HTTP/CORS\" target=\"_blank\" rel=\"noopener\">https://developer.mozilla.org/zh-TW/docs/Web/HTTP/CORS</a></p>\n","categories":["JavaScript"],"tags":["JavaScript","AJAX"]},{"title":"JS 核心觀念筆記 - 閉包基本認識、工廠模式與私有方法","url":"/javascript/20200812/3642687092/","content":"<p><img src=\"https://i.imgur.com/RvAfQKY.jpg\" alt=\"core\"></p>\n<h2 id=\"閉包定義\"><a href=\"#閉包定義\" class=\"headerlink\" title=\"閉包定義\"></a>閉包定義</h2><p>Closure 這個字詞是由 Close 與字尾 -ure 所構成，-ure 有<strong>動作</strong>、進<strong>行</strong>或<strong>結果</strong>的意思，如果 close 是<strong>關閉</strong>的意思，<strong>clousure 就是關閉的結果或動作</strong>，它可以作為名詞或動詞使用，中文有<strong>封閉</strong>、<strong>終止</strong>或<strong>結束</strong>的意思。</p>\n<p>在 JavaScript 中每當函式被建立時，一個閉包就會被產生，閉包是一個函式建立時的就有的自然特性。</p>\n<h2 id=\"直接呼叫內層函式\"><a href=\"#直接呼叫內層函式\" class=\"headerlink\" title=\"直接呼叫內層函式\"></a>直接呼叫內層函式</h2><p>閉包的概念就是呼叫函式中的函式，以下方程式碼為例，</p>\n<ul>\n<li>宣告一個函式，裡面做兩件事。</li>\n<li>宣告一個變數。</li>\n<li>回傳的值帶入內部的函式。</li>\n<li>內部的函釋內容為變數 myMoney 等於 myMoney - price(帶回外部的參數到內部函式的值)。</li>\n<li>然後再回傳到 myMoney。</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">buyItem</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> myMoney = <span class=\"number\">1000</span>;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">price</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 這裡就是一個閉包，不過目前只會使用一次</span></span><br><span class=\"line\">    myMoney = myMoney - price; <span class=\"comment\">//myMoney = 1000 -100，回傳結果的值等於 myMoney</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> myMoney;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">let</span> balance = buyItem()(<span class=\"number\">100</span>); <span class=\"comment\">// 存取內部函式的變數</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(balance); <span class=\"comment\">//900</span></span><br></pre></td></tr></table></figure>\n\n<p>因為變數在函式內，無法重複取得，所以一次後就會釋放記憶體，也無法取用變數。</p>\n<h2 id=\"工廠模式\"><a href=\"#工廠模式\" class=\"headerlink\" title=\"工廠模式\"></a>工廠模式</h2><p>不要直接呼叫，而是讓函式賦予在另一個變數上，就會將 <code>myMoney</code> 變數存在內層的作用域，在每次執行後不斷更新此值。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">buyItem</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> myMoney = <span class=\"number\">1000</span>;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">price</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 這裡就是一個閉包，不過目前只會使用一次</span></span><br><span class=\"line\">    myMoney = myMoney - price;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> myMoney;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">let</span> balance = buyItem(); <span class=\"comment\">// 存取內部函式的變數</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(balance(<span class=\"number\">100</span>)); <span class=\"comment\">//900</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(balance(<span class=\"number\">200</span>)); <span class=\"comment\">//700</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(balance(<span class=\"number\">300</span>)); <span class=\"comment\">//400</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>不能使用 <code>buyItem()</code> 呼叫，因為執行結果會出現 <code>function ... 的物件</code>，沒辦法直接使用。</li>\n<li>透過 <code>balance</code> 變數，將 <code>buyItem()</code> 的值賦予給其變數，使其可以不斷的反覆呼叫，且內層記憶體不會被釋放。</li>\n<li><code>balance</code> 每次執行時，只會執行內層的函式，在內層記憶體沒有被釋放的情況下，<code>myMoney</code> 變數會不斷的被更新。</li>\n<li>透過給予預設值與固定流程，帶入參數後會得到值的執行過程，類似工廠一樣，又稱為工廠模式。</li>\n</ul>\n<h2 id=\"私有方法\"><a href=\"#私有方法\" class=\"headerlink\" title=\"私有方法\"></a>私有方法</h2><p>別於工廠模式只有單一種方法，私有方法是將結果傳入到另一個物件內，物件內的屬性都是一段函式，在將要使用的方法寫入其內，並可在外部取用該方法得到想要的運算結果。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">buyItem</span>(<span class=\"params\">initValue</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> myMoney = initValue || <span class=\"number\">1000</span>;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    increase: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">price</span>) </span>&#123;</span><br><span class=\"line\">      myMoney += price;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    decrease: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">price</span>) </span>&#123;</span><br><span class=\"line\">      myMoney -= price;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    value: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> myMoney;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> balance = buyItem(<span class=\"number\">100</span>);</span><br><span class=\"line\">balance.increase(<span class=\"number\">1000</span>);</span><br><span class=\"line\">balance.decrease(<span class=\"number\">500</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(balance.value());</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"結語\"><a href=\"#結語\" class=\"headerlink\" title=\"結語\"></a>結語</h2><p>要了解閉包，就要了解函式的<strong>作用域</strong>、<strong>變數的作用域</strong>及<strong>函式的運作原理</strong>，就不會被專有名詞搞得團團轉。</p>\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><ul>\n<li><a href=\"https://wcc723.github.io/javascript/2017/12/13/javascript-closure/\" target=\"_blank\" rel=\"noopener\">鐵人賽：另一種方式介紹 JavaScript 閉包</a></li>\n<li><a href=\"https://eyesofkids.gitbooks.io/javascript-start-from-es6/content/part4/closure.html\" target=\"_blank\" rel=\"noopener\">從 ES6 開始的 JavaScript 學習生活 - Closure 閉包</a></li>\n<li><a href=\"https://ithelp.ithome.com.tw/articles/10193009\" target=\"_blank\" rel=\"noopener\">重新認識 JavaScript: Day 19 閉包 Closure</a></li>\n</ul>\n","categories":["JavaScript"],"tags":["JavaScript","JS core"]},{"title":"JS 核心觀念筆記 - 立即函式 IIFE","url":"/javascript/20200812/1317194214/","content":"<p><img src=\"https://i.imgur.com/RvAfQKY.jpg\" alt=\"core\"></p>\n<h2 id=\"什麼是立即函式\"><a href=\"#什麼是立即函式\" class=\"headerlink\" title=\"什麼是立即函式\"></a>什麼是立即函式</h2><blockquote>\n<p>MDN 說明：立即函式的英文縮寫為 IIFE (<strong>I</strong>mmediately <strong>I</strong>nvoked <strong>F</strong>unction <strong>E</strong>xpression) 是一個定義完馬上就執行的函式。<br><del>(非常白話)</del></p>\n</blockquote>\n<h2 id=\"立即函式起手式\"><a href=\"#立即函式起手式\" class=\"headerlink\" title=\"立即函式起手式\"></a>立即函式起手式</h2><p>前面一篇已經知道有具名與匿名的函式，都要透過呼叫來使用其函式，具名函式如果把名稱拿掉，編譯器會提醒錯誤資訊，且無法執行。但如果想要不要呼叫立刻執行該怎麼寫?</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">IIFE</span>(<span class=\"params\"></span>) </span>&#123;&#125;</span><br></pre></td></tr></table></figure>\n\n<p>上方為一個函式，如果不要呼叫就要讓函式立刻執行，可以這樣寫：</p>\n<ul>\n<li>這個函式最外面加上一個小括號</li>\n<li>在函式的大括號後面加上一個小括號。</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">IIFE</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">\"立即函式\"</span>);</span><br><span class=\"line\">&#125;)();</span><br></pre></td></tr></table></figure>\n\n<p>或是</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">IIFE</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">\"立即函式\"</span>);</span><br><span class=\"line\">&#125;)();</span><br></pre></td></tr></table></figure>\n\n<p>以上得到的結果是一樣的。</p>\n<h3 id=\"立即函式有兩個特性\"><a href=\"#立即函式有兩個特性\" class=\"headerlink\" title=\"立即函式有兩個特性\"></a>立即函式有兩個特性</h3><ul>\n<li>立刻執行。</li>\n<li>無法在函式外被再次執行。</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">IIFE</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">\"立即函式\"</span>);</span><br><span class=\"line\">&#125;)();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(IIFE); <span class=\"comment\">//會跳錯</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"立即函式使用情境\"><a href=\"#立即函式使用情境\" class=\"headerlink\" title=\"立即函式使用情境\"></a>立即函式使用情境</h2><h3 id=\"限制變數作用域\"><a href=\"#限制變數作用域\" class=\"headerlink\" title=\"限制變數作用域\"></a>限制變數作用域</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> Tim = <span class=\"string\">\"提姆\"</span>;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(Tim);</span><br><span class=\"line\">&#125;)();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(Tim);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"亦可帶參數\"><a href=\"#亦可帶參數\" class=\"headerlink\" title=\"亦可帶參數\"></a>亦可帶參數</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">Tim</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(Tim);</span><br><span class=\"line\">&#125;)(<span class=\"string\">\"Tim is here\"</span>);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"可搭配匿名函式使用\"><a href=\"#可搭配匿名函式使用\" class=\"headerlink\" title=\"可搭配匿名函式使用\"></a>可搭配匿名函式使用</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> whereTim = (<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">Tim</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(Tim);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> Tim;</span><br><span class=\"line\">&#125;)(<span class=\"string\">\"Tim is here\"</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(whereTim);</span><br></pre></td></tr></table></figure>\n","categories":["JavaScript"],"tags":["JavaScript","JS core"]},{"title":"JS 核心觀念筆記 - 具名函式與匿名函式的基本認識","url":"/javascript/20200812/1474477581/","content":"<p><img src=\"https://i.imgur.com/RvAfQKY.jpg\" alt=\"core\"></p>\n<h2 id=\"函式的基本認識\"><a href=\"#函式的基本認識\" class=\"headerlink\" title=\"函式的基本認識\"></a>函式的基本認識</h2><p>先前<a href=\"https://hsuchihting.github.io/javascript/20200211/3165847303/\">JS 筆記 - 認識函式 function 與使用</a>有基本的介紹，本篇會更詳盡介紹具名函式與匿名函式的差異與用法。</p>\n<h3 id=\"函式具有以下特性\"><a href=\"#函式具有以下特性\" class=\"headerlink\" title=\"函式具有以下特性\"></a>函式具有以下特性</h3><ul>\n<li>可被呼叫。</li>\n<li>具有片段程式碼。</li>\n<li>可擁有名稱。</li>\n</ul>\n<p>下方有一個範例程式碼：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fnA</span>(<span class=\"params\">param</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> localVar = <span class=\"string\">\"區域變數\"</span>;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>, localVar); <span class=\"comment\">//Window \"區域變數\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> param; <span class=\"comment\">//函式有回傳的功能</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> data = fnA(<span class=\"string\">\"參數\"</span>); <span class=\"comment\">//帶入的參數會放入函式使用</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(data); <span class=\"comment\">//參數</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"函式類型\"><a href=\"#函式類型\" class=\"headerlink\" title=\"函式類型\"></a>函式類型</h2><h3 id=\"函式陳述式\"><a href=\"#函式陳述式\" class=\"headerlink\" title=\"函式陳述式\"></a>函式陳述式</h3><ul>\n<li>也稱為具名函式。</li>\n<li>可被呼叫，並且有片段程式碼。</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fnA</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">\"函式陳述式\"</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">fnA();</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"函式表達式\"><a href=\"#函式表達式\" class=\"headerlink\" title=\"函式表達式\"></a>函式表達式</h3><ul>\n<li>也稱為匿名函式。</li>\n<li>宣告一個變數，其值為函式，可不具名，並且得到的值賦予到左邊的變數上。</li>\n<li>再透過呼叫變數來執行函式內容。<blockquote>\n<p>並非所有的匿名函式都是函式表達式。</p>\n</blockquote>\n</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> fnB = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">\"函式表達式\"</span>);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">fnB();</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"具名函式可以在函式內被調用\"><a href=\"#具名函式可以在函式內被調用\" class=\"headerlink\" title=\"具名函式可以在函式內被調用\"></a>具名函式可以在函式內被調用</h2><ul>\n<li>宣告變數後方為具名函式，呼叫變數 fnC 後，取得的值會是 fnD 函式的內容，因 fnC 是變數，fnD 是變數的值。</li>\n<li>fnD 只能在內容只能在 fnD 中被調用。</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> fnC = <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fnD</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(fnC, fnD);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">fnC();</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/l54Gi11.png\" alt=\"具名函式可在函式內被調用\"></p>\n<p>如果把 console 移到函式外面則跳錯。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> fnC = <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fnD</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(fnC, fnD);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">fnC();</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(fnC, fnD);</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/JRv2L8Z.png\" alt=\"fnD\"></p>\n","categories":["JavaScript"],"tags":["JavaScript","JS core"]},{"title":"JS 核心觀念筆記 - 物件屬性與參考特性","url":"/javascript/20200812/506656834/","content":"<p><img src=\"https://i.imgur.com/RvAfQKY.jpg\" alt=\"core\"></p>\n<h2 id=\"未定義的物件屬性與預設值\"><a href=\"#未定義的物件屬性與預設值\" class=\"headerlink\" title=\"未定義的物件屬性與預設值\"></a>未定義的物件屬性與預設值</h2><p>下方有一物件，前面已經知道如果要取其值的方法，</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> family = &#123;</span><br><span class=\"line\">  name: <span class=\"string\">\"提姆家\"</span>,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(family.name); <span class=\"comment\">//提姆家</span></span><br></pre></td></tr></table></figure>\n\n<p>但無法在<strong>未定義的屬性</strong>下取得值，也就是說沒有在物件中先給予的屬性，沒有辦法在外部給值。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> family = &#123;</span><br><span class=\"line\">  name: <span class=\"string\">\"提姆家\"</span>,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log((family.room.Tim = <span class=\"string\">\"提姆的房間\"</span>));</span><br></pre></td></tr></table></figure>\n\n<p>如上方所示，在 <code>family</code> 物件中並沒有 <code>room</code> 這個屬性，所以也無法給予 <code>Tim</code> 這個屬性與值。</p>\n<p><img src=\"https://i.imgur.com/AmTv8jD.png\" alt=\"undefined\"></p>\n<p>但如果要解決這個問題，就要先在物件中寫入其物件屬性，就可以新增其屬性值了。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> family = &#123;</span><br><span class=\"line\">  name: <span class=\"string\">\"提姆家\"</span>,</span><br><span class=\"line\">  room: &#123;&#125;, <span class=\"comment\">//新增的物件屬性</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log((family.room.Tim = <span class=\"string\">\"提姆的房間\"</span>)); <span class=\"comment\">//提姆的房間</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"物件的參考特性\"><a href=\"#物件的參考特性\" class=\"headerlink\" title=\"物件的參考特性\"></a>物件的參考特性</h2><p>了解物件參考特性前，先來兩個範例。</p>\n<h3 id=\"傳純值\"><a href=\"#傳純值\" class=\"headerlink\" title=\"傳純值\"></a>傳純值</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> person = <span class=\"string\">\"提姆\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> person2 = person;</span><br><span class=\"line\">person2 = <span class=\"string\">\"Tim\"</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(person, person2); <span class=\"comment\">//提姆 Tim</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"物件傳參考\"><a href=\"#物件傳參考\" class=\"headerlink\" title=\"物件傳參考\"></a>物件傳參考</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> person = &#123;</span><br><span class=\"line\">  name: <span class=\"string\">\"提姆\"</span>,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> person2 = person;</span><br><span class=\"line\">person2.name = <span class=\"string\">\"Tim\"</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(person, person2); <span class=\"comment\">//得到兩個相同的物件，name 的值皆為 Tim。</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(person === person2); <span class=\"comment\">//true</span></span><br></pre></td></tr></table></figure>\n\n<p>上方兩個看起來是很像的範例，但傳純值跟傳參考的方式是不同的。</p>\n<p>如果將上方程式改成這樣：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> person = &#123;</span><br><span class=\"line\">  name: <span class=\"string\">\"提姆\"</span>,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> person2 = person;</span><br><span class=\"line\"></span><br><span class=\"line\">person2 = &#123;</span><br><span class=\"line\">  name: <span class=\"string\">\"提姆\"</span>,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(person, person2); <span class=\"comment\">//得到兩個相同的物件，name 的值相同。</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(person === person2); <span class=\"comment\">//false</span></span><br></pre></td></tr></table></figure>\n\n<p>兩個物件雖然內容的屬性與值都相同，但得到的結果卻是 false，原因是這兩物件本身已經是不同的物件，並非使用同一個物件參考。</p>\n<h3 id=\"傳值\"><a href=\"#傳值\" class=\"headerlink\" title=\"傳值\"></a>傳值</h3><ul>\n<li>Boolean</li>\n<li>Null</li>\n<li>Undefined</li>\n<li>Number</li>\n<li>String</li>\n<li>…</li>\n</ul>\n<h3 id=\"傳參考\"><a href=\"#傳參考\" class=\"headerlink\" title=\"傳參考\"></a>傳參考</h3><ul>\n<li>物件(包含函式與陣列)</li>\n</ul>\n<blockquote>\n<p>觀念：除了純值外，其他都可以看成物件。</p>\n</blockquote>\n","categories":["JavaScript"],"tags":["JavaScript","JS core"]},{"title":"JS 核心觀念筆記 - 變數與物件的差異","url":"/javascript/20200812/231435913/","content":"<p><img src=\"https://i.imgur.com/RvAfQKY.jpg\" alt=\"core\"></p>\n<h2 id=\"變數不可刪除、但屬性可以\"><a href=\"#變數不可刪除、但屬性可以\" class=\"headerlink\" title=\"變數不可刪除、但屬性可以\"></a>變數不可刪除、但屬性可以</h2><p>下方宣告一個變數 a 跟一個屬性 b ，並給予值。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">1</span>;</span><br><span class=\"line\">b = <span class=\"number\">2</span>;</span><br></pre></td></tr></table></figure>\n\n<p>打開開發人員工具輸入 window 物件，可以看到有新增這兩筆物件資料。</p>\n<p><img src=\"https://i.imgur.com/79Ad5FE.png\" alt=\"add\"></p>\n<p>透過<a href=\"https://hsuchihting.github.io/javascript/20200331/3067475316/\">JS 筆記 - Object 物件的基本認識</a>知道新增與刪除的方法。</p>\n<p>透過一元運算子來刪除這兩筆資料，並輸入 window 檢視，</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">delete</span> a;</span><br><span class=\"line\"><span class=\"keyword\">delete</span> b;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/1F3QqpI.png\" alt=\"delete\"></p>\n<p>發現 b 不見了，a 還在。</p>\n<p>如果不刪除 a 跟 b，透過 console 檢視的話，會看到此狀態。</p>\n<p><img src=\"https://i.imgur.com/94uEcQH.png\" alt=\"check\"></p>\n<p>b 可以刪除的原因是，其實 b 的存在形是是 window.b 的形式存在，並非變數型式。</p>\n","categories":["JavaScript"],"tags":["JavaScript","JS core"]},{"title":"JSP 筆記 - window.location 的應用","url":"/javascript/20200812/659541423/","content":"<p><img src=\"https://images.unsplash.com/photo-1590668403480-3f132175b409?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1350&q=80\" alt=\"location\"></p>\n<p><a href=\"https://hsuchihting.github.io/javascript/20200812/1152801206/\">location 的基本認識</a>可以知道一些方法，下方筆記這次特訓的案例。</p>\n<h2 id=\"使用-JavaScript-語法，操控點擊後，能夠轉址到對應網站\"><a href=\"#使用-JavaScript-語法，操控點擊後，能夠轉址到對應網站\" class=\"headerlink\" title=\"使用 JavaScript 語法，操控點擊後，能夠轉址到對應網站\"></a>使用 JavaScript 語法，操控點擊後，能夠轉址到對應網站</h2><p>有兩個按鈕，分別帶入兩個不同的網址，並用 location.href 的方式跳至連結，這之前做<a href=\"https://hsuchihting.github.io/Hotel_booking/hotel_index.html\">旅館訂房網頁</a>時有使用過。</p>\n<h3 id=\"HTML-架構\"><a href=\"#HTML-架構\" class=\"headerlink\" title=\"HTML 架構\"></a>HTML 架構</h3><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn btn_google\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"btnGoogle\"</span> <span class=\"attr\">title</span>=<span class=\"string\">\"Google\"</span>&gt;</span>Google<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn btn_yahoo\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"btnYahoo\"</span> <span class=\"attr\">title</span>=<span class=\"string\">\"Yahoo\"</span>&gt;</span>Yahoo<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"JavaScript-行為\"><a href=\"#JavaScript-行為\" class=\"headerlink\" title=\"JavaScript 行為\"></a>JavaScript 行為</h3><p>分別綁定兩個按鈕，並給予跳轉連結的方法，使用點擊事件完成。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> btnGoogle = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\"#btnGoogle\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">let</span> btnYahoo = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\"#btnYahoo\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">googleLink</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  location.href = <span class=\"string\">\"https://www.google.com.tw/\"</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">yahooLink</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  location.href = <span class=\"string\">\"https://tw.yahoo.com/\"</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">btnGoogle.addEventListener(<span class=\"string\">\"click\"</span>, googleLink);</span><br><span class=\"line\">btnYahoo.addEventListener(<span class=\"string\">\"click\"</span>, yahooLink);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"有兩顆按鈕，是部落格推薦連結，請抓取-data-id-的值後進行轉址\"><a href=\"#有兩顆按鈕，是部落格推薦連結，請抓取-data-id-的值後進行轉址\" class=\"headerlink\" title=\"有兩顆按鈕，是部落格推薦連結，請抓取 data-id 的值後進行轉址\"></a>有兩顆按鈕，是部落格推薦連結，請抓取 data-id 的值後進行轉址</h2><p><code>data-set</code> 的單元後續會介紹到，這邊先筆記一下用法。</p>\n<blockquote>\n<p>限制條件如下：</p>\n<ol>\n<li>點擊 Tom 時，網址為 <a href=\"https://www.hexschool.com/?recommend=tom\" target=\"_blank\" rel=\"noopener\">https://www.hexschool.com/?recommend=tom</a></li>\n<li>點擊 John 時，網址為 <a href=\"https://www.hexschool.com/?recommend=John\" target=\"_blank\" rel=\"noopener\">https://www.hexschool.com/?recommend=John</a></li>\n</ol>\n</blockquote>\n<h3 id=\"HTML-兩顆按鈕\"><a href=\"#HTML-兩顆按鈕\" class=\"headerlink\" title=\"HTML 兩顆按鈕\"></a>HTML 兩顆按鈕</h3><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"google jq-google\"</span> <span class=\"attr\">title</span>=<span class=\"string\">\"Tom 推薦六角學院\"</span> <span class=\"attr\">data-id</span>=<span class=\"string\">\"tom\"</span>&gt;</span></span><br><span class=\"line\">  Tom 推薦六角學院</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"yahoo jq-yahoo\"</span> <span class=\"attr\">title</span>=<span class=\"string\">\"John 推薦六角學院\"</span> <span class=\"attr\">data-id</span>=<span class=\"string\">\"John\"</span>&gt;</span></span><br><span class=\"line\">  John 推薦六角學院</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"JavaScript-行為-1\"><a href=\"#JavaScript-行為-1\" class=\"headerlink\" title=\"JavaScript 行為\"></a>JavaScript 行為</h3><p>這裡比較特別的是要取得屬性為 data-id。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> jqGoogle = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\".jq-google\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">let</span> jqYahoo = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\".jq-yahoo\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> hexSchoolUrl = <span class=\"string\">\"https://www.hexschool.com/\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> googleId = jqGoogle.getAttribute(<span class=\"string\">\"data-id\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">let</span> yahooId = jqYahoo.getAttribute(<span class=\"string\">\"data-id\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">tomLink</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  location.href = <span class=\"string\">`<span class=\"subst\">$&#123;hexSchoolUrl&#125;</span>?recommend=<span class=\"subst\">$&#123;googleId&#125;</span>`</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">jqGoogle.addEventListener(<span class=\"string\">\"click\"</span>, tomLink);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">johnLink</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  location.href = <span class=\"string\">`<span class=\"subst\">$&#123;hexSchoolUrl&#125;</span>?recommend=<span class=\"subst\">$&#123;yahooId&#125;</span>`</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">jqYahoo.addEventListener(<span class=\"string\">\"click\"</span>, johnLink);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"延伸：如果網址規則是-https-www-hexschool-com-recommend-quot-值-quot-，該如何取出-recommend-的值\"><a href=\"#延伸：如果網址規則是-https-www-hexschool-com-recommend-quot-值-quot-，該如何取出-recommend-的值\" class=\"headerlink\" title=\"延伸：如果網址規則是 https://www.hexschool.com/?recommend=&quot;值&quot;，該如何取出 recommend 的值\"></a>延伸：如果網址規則是 <a href=\"https://www.hexschool.com/?recommend=&quot;值&quot;，該如何取出\" target=\"_blank\" rel=\"noopener\">https://www.hexschool.com/?recommend=&quot;值&quot;，該如何取出</a> recommend 的值</h2><p>按鈕方法雷同，就不再贅述。</p>\n<h3 id=\"JavaScript-取得參數\"><a href=\"#JavaScript-取得參數\" class=\"headerlink\" title=\"JavaScript 取得參數\"></a>JavaScript 取得參數</h3><p>這裡使用到 pathname 取得當前網址路徑的方法，下方為取得單一與多個的寫法。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> setSingleParamUrl = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\"#singleParams\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">let</span> setMultiParamUrl = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\"#multiParams\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//取得單一參數</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">singleParams</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  location.href = location.pathname + <span class=\"string\">\"?recommend=userName\"</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">setSingleParamUrl.addEventListener(<span class=\"string\">\"click\"</span>, singleParams);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//取得多個參數</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">multiParams</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  location.href =</span><br><span class=\"line\">    location.pathname + <span class=\"string\">\"?recommend=userName&amp;param2=88&amp;param3=abc\"</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">setMultiParamUrl.addEventListener(<span class=\"string\">\"click\"</span>, multiParams);</span><br></pre></td></tr></table></figure>\n","categories":["JavaScript"],"tags":["JavaScript"]},{"title":"JS 筆記 - 事件監聽優化","url":"/javascript/20200812/797688854/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/JavaScript%20note-01.jpg?alt=media&token=7bee0261-72ac-4de4-9f5a-f39d58735b7d\" alt=\"JavaScript Note\"></p>\n<p>這次來練習一個透過選取父元素來監聽子元素的內容，這邊有一個選單，裡面有兩個選項。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"list\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>炸雞上校<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>漢堡王子<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>之前有學習到，如果要透過監聽事件，管理 <code>li</code> 選項，則會這樣寫:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> list = <span class=\"built_in\">document</span>.querySelectorAll(<span class=\"string\">\".list li\"</span>);</span><br></pre></td></tr></table></figure>\n\n<p>但這樣有一個麻煩的地方，<code>querySelectorAll</code>只會選擇到第一個元素，也就是這邊有兩個 <code>li</code>，它只會選到第一個，後面的都要另外宣告變數來管理，如果 <code>li</code> 有 100 個，那就要宣告 100 個變數，但這樣會導致效能降低。</p>\n<p>透過父元素的管理，不只讓效能提高，也可以精簡寫法，<br>選取父元素如下方寫法:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> list = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\".list\"</span>); <span class=\"comment\">//選取 list</span></span><br><span class=\"line\"></span><br><span class=\"line\">list.addEventListener(<span class=\"string\">\"click\"</span>, checkName, <span class=\"literal\">false</span>); <span class=\"comment\">//建立監聽</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">checkName</span>(<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (e.target.nodeName !== <span class=\"string\">\"LI\"</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(e.target.textContent);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>函式內容說明:</p>\n<ul>\n<li>設定判斷式，若事件中的目標的節點名稱<strong>不是</strong> LI ，就回傳內容。</li>\n</ul>\n<p>CodePen: <a href=\"https://codepen.io/hnzxewqw/pen/VwLWvRO\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/VwLWvRO</a></p>\n","categories":["JavaScript"],"tags":["JavaScript"]},{"title":"JS 筆記 - location 認識","url":"/javascript/20200812/1152801206/","content":"<p><img src=\"https://images.unsplash.com/photo-1590668403480-3f132175b409?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1350&q=80\" alt=\"location\"><br>JavaScript 原生有處理頁面跳轉方法，因為基本上都是在全域的方式下使用，完整寫法為：</p>\n<p><code>window.location.使用方法</code>，但因為是全域物件下使用，<code>window</code> 可以省略。</p>\n<p>以下筆記幾個常用的。</p>\n<h2 id=\"href-取得當前網頁的網址\"><a href=\"#href-取得當前網頁的網址\" class=\"headerlink\" title=\"href 取得當前網頁的網址\"></a>href 取得當前網頁的網址</h2><p>通常會使用指定的連結或是按鈕，常用於 function 內。</p>\n<p>寫法為 <code>location.href=&#39;網址路徑&#39;</code>，</p>\n<p>EX. <code>location.href=&#39;https://hsuchihting.github.io/&#39;</code></p>\n<h2 id=\"hostname-取得當前網頁的網域名稱\"><a href=\"#hostname-取得當前網頁的網域名稱\" class=\"headerlink\" title=\"hostname 取得當前網頁的網域名稱\"></a>hostname 取得當前網頁的網域名稱</h2><p>使用方法如下：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">location.hostname</span><br></pre></td></tr></table></figure>\n\n<p>就是只要這麼短就可以取得目前網頁的網域名稱。<br>CodePen <a href=\"https://codepen.io/hnzxewqw/pen/gOraZLw\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/gOraZLw</a></p>\n<h2 id=\"pathname-取得當前網頁的網址路徑\"><a href=\"#pathname-取得當前網頁的網址路徑\" class=\"headerlink\" title=\"pathname 取得當前網頁的網址路徑\"></a>pathname 取得當前網頁的網址路徑</h2><p>跟取得 hostname 的方法異曲同工，是取得目前網址。</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">location.pathname</span><br></pre></td></tr></table></figure>\n\n<p>CodePen <a href=\"https://codepen.io/hnzxewqw/pen/zYqvyNe\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/zYqvyNe</a></p>\n<h2 id=\"search-取得當前網頁的網址參數\"><a href=\"#search-取得當前網頁的網址參數\" class=\"headerlink\" title=\"search 取得當前網頁的網址參數\"></a>search 取得當前網頁的網址參數</h2><p>如果沒有網址參數則會返回<strong>空字串</strong>，返回的參數包含問號 <code>?</code>。EX. <code>?參數</code><br><code>location.search</code> 不僅可以用來<strong>讀取</strong>，還可以用來<strong>改變</strong>網址參數（會重新載入新網頁）。</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">location.search</span><br></pre></td></tr></table></figure>\n\n<p>CodePen <a href=\"https://codepen.io/hnzxewqw/pen/dyMYwWP\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/dyMYwWP</a></p>\n<h2 id=\"hash-取得當前網址的-hash-值\"><a href=\"#hash-取得當前網址的-hash-值\" class=\"headerlink\" title=\"hash 取得當前網址的 hash 值\"></a>hash 取得當前網址的 hash 值</h2><p>取得網址後面為 <code>#</code> 字號的值。</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">location.hash</span><br></pre></td></tr></table></figure>\n\n<p>CodePen <a href=\"https://codepen.io/hnzxewqw/pen/qBZOLPW\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/qBZOLPW</a></p>\n<h2 id=\"protocol-返回使用的-Web-協定\"><a href=\"#protocol-返回使用的-Web-協定\" class=\"headerlink\" title=\"protocol 返回使用的 Web 協定\"></a>protocol 返回使用的 Web 協定</h2><p>取得目前的網路協定。</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">location.protocol</span><br></pre></td></tr></table></figure>\n\n<p>CodePen <a href=\"https://codepen.io/hnzxewqw/pen/YzqydEq\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/YzqydEq</a></p>\n<h2 id=\"assign-載入新文件\"><a href=\"#assign-載入新文件\" class=\"headerlink\" title=\"assign() 載入新文件\"></a>assign() 載入新文件</h2><p><code>location.assign()</code> 方法跟 <code>location.href</code> 用法相近，可在當前視窗載入一個新的網頁。</p>\n<p>語法：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">location.assign(url);</span><br></pre></td></tr></table></figure>\n\n<p>用法：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">location.assign('https://hsuchihting.github.io/');</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"reload-重新載入頁面\"><a href=\"#reload-重新載入頁面\" class=\"headerlink\" title=\"reload() 重新載入頁面\"></a>reload() 重新載入頁面</h2><p><code>Location.reload()</code> 方法可以用來重新整理網頁。</p>\n<p>語法：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">location.reload(forcedReload);</span><br></pre></td></tr></table></figure>\n\n<p>參數 forcedReload 是一個布林值 (boolean)，如果是 true 用來強制瀏覽器從 server 取得最新的資料；預設是 false，會優先從瀏覽器暫存檔 (cache) 中取得網頁資料。</p>\n<p>用法：</p>\n<p><code>location.reload(true);</code></p>\n<h2 id=\"location-replace\"><a href=\"#location-replace\" class=\"headerlink\" title=\"location.replace()\"></a>location.replace()</h2><p><code>location.replace()</code> 也是用來在當前視窗載入一個新的網頁，但和 <code>location.assign()</code> 的差別在於，使用此方法當前網頁的瀏覽紀錄 (History) 會被<strong>新的網頁取代掉</strong>，也就是讓使用者沒辦法按「上一頁」回去。</p>\n<p>語法：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">location.<span class=\"built_in\">replace</span>(url);</span><br></pre></td></tr></table></figure>\n\n<p>用法：</p>\n<p>location.replace(‘<a href=\"https://hsuchihting.github.io/&#39;\">https://hsuchihting.github.io/&#39;</a>);</p>\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><ul>\n<li><a href=\"https://www.fooish.com/javascript/location.html\" target=\"_blank\" rel=\"noopener\">//Fooish 程式技術// JavaScript location Object</a></li>\n<li><a href=\"https://www.w3schools.com/jsref/obj_location.asp\" target=\"_blank\" rel=\"noopener\">W3School - The Location Object</a></li>\n</ul>\n","categories":["JavaScript"],"tags":["JavaScript"]},{"title":"JS 筆記 - 用 JavaScript 寫一個電子鐘","url":"/javascript/20200807/92265520/","content":"<p><img src=\"https://images.unsplash.com/photo-1560999719-79563481ad6a?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1267&q=80\" alt=\"this is clock\"></p>\n<p>這次來練習透過 JS 原生的方式來取得日期與時間。</p>\n<h2 id=\"起手式\"><a href=\"#起手式\" class=\"headerlink\" title=\"起手式\"></a>起手式</h2><p>要先建構一個 Date 的物件才能取得當前時間。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> newDate = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>();</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(newDate); <span class=\"comment\">//Thu Aug 06 2020 09:50:01 GMT+0800 (台北標準時間)</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"取得日期與時間的基本方式\"><a href=\"#取得日期與時間的基本方式\" class=\"headerlink\" title=\"取得日期與時間的基本方式\"></a>取得日期與時間的基本方式</h2><blockquote>\n<p>Date 物件中包含了許多對日期時間處理方法，大致上可以分成以下幾類:<br>getter: 獲取某種時間格式，例如 getFullYear 是回傳西元年。<br>setter: 設定某種時間格式，例如 setFullYear 設定西元年。<br>格式化的 getter: 通常是要獲取不同地區的日期(或時間)格式，以及轉換成各種資料格式。</p>\n</blockquote>\n<h2 id=\"此次使用的方法\"><a href=\"#此次使用的方法\" class=\"headerlink\" title=\"此次使用的方法\"></a>此次使用的方法</h2><ul>\n<li>這次要做一個電子鐘，要取得當前日期：年、月、日、時、分、秒。</li>\n<li>要讓秒數一秒跳一次。</li>\n</ul>\n<p>依照官網的方法介紹，我先宣告一個 Date 的物件，並取用裡面的年、月、日、時、分、秒，並用 ES6 的寫法組成我要的格式，並渲染在網頁上。</p>\n<blockquote>\n<p>month 這個地方比較奇怪，是從 0 開始，其他都從 1 開始。</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> newDate = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>();</span><br><span class=\"line\"><span class=\"keyword\">let</span> year = newDate.getFullYear();</span><br><span class=\"line\"><span class=\"keyword\">let</span> month = newDate.getMonth() + <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> days = newDate.getDate();</span><br><span class=\"line\"><span class=\"keyword\">let</span> hour = newDate.getHours();</span><br><span class=\"line\"><span class=\"keyword\">let</span> mins = newDate.getMinutes();</span><br><span class=\"line\"><span class=\"keyword\">let</span> sec = newDate.getSeconds();</span><br><span class=\"line\"><span class=\"keyword\">let</span> clockJSRead = <span class=\"string\">`<span class=\"subst\">$&#123;year&#125;</span>/<span class=\"subst\">$&#123;month&#125;</span>/<span class=\"subst\">$&#123;days&#125;</span> <span class=\"subst\">$&#123;hour&#125;</span>:<span class=\"subst\">$&#123;mins&#125;</span>:<span class=\"subst\">$&#123;sec&#125;</span>`</span>;</span><br><span class=\"line\">date.textContent = clockJSRead;</span><br></pre></td></tr></table></figure>\n\n<p>看起來已經寫完了，也成功渲染在網頁上，但問題來了，這樣並不會一秒跳一次，呈現一個靜止的電子鐘…</p>\n<p>既然有時間差會想到的就是 <code>setTimeout</code> 跟 <code>setInterval</code>，兩者不同的地方為：</p>\n<ul>\n<li>setTimeout： 只會執行一次就結束。</li>\n<li>setInterval：會在間隔固定的時間不斷重複。</li>\n</ul>\n<p>更多可以參考<a href=\"https://kuro.tw/posts/2019/02/23/%E8%AB%87%E8%AB%87-JavaScript-%E7%9A%84-setTimeout-%E8%88%87-setInterval/\" target=\"_blank\" rel=\"noopener\">談談 JavaScript 的 setTimeout 與 setInterval</a></p>\n<p>既然要持續一秒跳一次，就要選擇 <code>setInterval()</code> 這個方法，並且給予 1000 毫秒，讓其 1 秒鐘更新一次。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> date = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\"#date\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">setInterval(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> newDate = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>();</span><br><span class=\"line\">  <span class=\"keyword\">let</span> year = newDate.getFullYear();</span><br><span class=\"line\">  <span class=\"keyword\">let</span> month = newDate.getMonth() + <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> days = newDate.getDate();</span><br><span class=\"line\">  <span class=\"keyword\">let</span> hour = newDate.getHours();</span><br><span class=\"line\">  <span class=\"keyword\">let</span> mins = newDate.getMinutes();</span><br><span class=\"line\">  <span class=\"keyword\">let</span> sec = newDate.getSeconds();</span><br><span class=\"line\">  <span class=\"keyword\">let</span> clockJSRead = <span class=\"string\">`<span class=\"subst\">$&#123;year&#125;</span>/<span class=\"subst\">$&#123;month&#125;</span>/<span class=\"subst\">$&#123;days&#125;</span> <span class=\"subst\">$&#123;hour&#125;</span>:<span class=\"subst\">$&#123;mins&#125;</span>:<span class=\"subst\">$&#123;sec&#125;</span>`</span>;</span><br><span class=\"line\">  date.textContent = clockJSRead;</span><br><span class=\"line\">&#125;, <span class=\"number\">1000</span>);</span><br></pre></td></tr></table></figure>\n\n<p>這樣就完成了，不過上方程式碼看起來很髒，所以這邊改寫成下方這樣：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> date = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\"#date\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">updateDate</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> newDate = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>();</span><br><span class=\"line\">  <span class=\"keyword\">let</span> year = newDate.getFullYear();</span><br><span class=\"line\">  <span class=\"keyword\">let</span> month = newDate.getMonth() + <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> days = newDate.getDate();</span><br><span class=\"line\">  <span class=\"keyword\">let</span> hour = newDate.getHours();</span><br><span class=\"line\">  <span class=\"keyword\">let</span> mins = newDate.getMinutes();</span><br><span class=\"line\">  <span class=\"keyword\">let</span> sec = newDate.getSeconds();</span><br><span class=\"line\">  <span class=\"keyword\">let</span> clockJSRead = <span class=\"string\">`<span class=\"subst\">$&#123;year&#125;</span>/<span class=\"subst\">$&#123;month&#125;</span>/<span class=\"subst\">$&#123;days&#125;</span> <span class=\"subst\">$&#123;hour&#125;</span>:<span class=\"subst\">$&#123;mins&#125;</span>:<span class=\"subst\">$&#123;sec&#125;</span>`</span>;</span><br><span class=\"line\">  date.textContent = clockJSRead;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">setInterval(updateDate, <span class=\"number\">1000</span>);</span><br></pre></td></tr></table></figure>\n\n<p>CodePen: <a href=\"https://codepen.io/hnzxewqw/pen/KKzwVRO\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/KKzwVRO</a></p>\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><ul>\n<li><a href=\"https://eyesofkids.gitbooks.io/javascript-start-from-es6/content/part3/datetime.html\" target=\"_blank\" rel=\"noopener\">從 ES6 開始的 JavaScript 學習生活 - 日期與時間</a></li>\n<li><a href=\"https://blog.miniasp.com/post/2016/09/25/JavaScript-Date-usage-in-details\" target=\"_blank\" rel=\"noopener\">前端工程研究：關於 JavaScript 中 Date 型別的常見地雷與建議作法</a></li>\n</ul>\n","categories":["JavaScript"],"tags":["JavaScript"]},{"title":"JS 核心觀念筆記 - Truthy and Falsy","url":"/javascript/20200806/841234265/","content":"<p><img src=\"https://i.imgur.com/RvAfQKY.jpg\" alt=\"core\"></p>\n<h2 id=\"Truthy-真值\"><a href=\"#Truthy-真值\" class=\"headerlink\" title=\"Truthy 真值\"></a>Truthy 真值</h2><p>下方有一個 if 判斷式，若判斷內容為 True 就會執行 console 內容。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"number\">1</span> == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">\"正確就會執行文字\"</span>); <span class=\"comment\">//正確就會執行文字</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>若改成這樣也是會正確執行。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"number\">5</span>) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">\"正確就會執行文字\"</span>); <span class=\"comment\">//正確就會執行文字</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>原因是因為 if 判斷內容為<a href=\"https://developer.mozilla.org/zh-CN/docs/Glossary/Truthy\" target=\"_blank\" rel=\"noopener\">真值</a>。</p>\n<h2 id=\"falsy\"><a href=\"#falsy\" class=\"headerlink\" title=\"falsy\"></a>falsy</h2><p>但如果將判斷的內容改為<code>空值</code>或 <code>undefined</code> 或 0，屬於 falsy，就會執行 else。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"string\">\"\"</span>) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">\"正確就會執行文字\"</span>);</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">\"執行 else\"</span>); <span class=\"comment\">//執行 else</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>但如果引號中有任何值(包含空白)，就會變成 truthy。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"string\">\" \"</span>) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">\"正確就會執行文字\"</span>); <span class=\"comment\">//正確就會執行文字</span></span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">\"執行 else\"</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>上方判斷中插入空白，就會執行 Truthy 內容。</p>\n<h2 id=\"你以為是-falsy-但其實是-truthy\"><a href=\"#你以為是-falsy-但其實是-truthy\" class=\"headerlink\" title=\"你以為是 falsy 但其實是 truthy\"></a>你以為是 falsy 但其實是 truthy</h2><p>以下幾個例子。</p>\n<p>判斷內容為空陣列。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> ([]) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">\"正確就會執行文字\"</span>); <span class=\"comment\">//truthy</span></span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">\"執行 else\"</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>判斷內容為空物件。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (&#123;&#125;) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">\"正確就會執行文字\"</span>); <span class=\"comment\">//truthy</span></span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">\"執行 else\"</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>那這個呢?</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">new</span> <span class=\"built_in\">Number</span>(<span class=\"number\">0</span>)) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">\"正確就會執行文字\"</span>);</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">\"執行 else\"</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>答案是 Truthy，原因是 new Number(0)，是一個物件，但判斷內容不要使用<strong>包裹物件</strong>的形式。</p>\n<blockquote>\n<p>所以上方最後一個判斷方式不建議使用。</p>\n</blockquote>\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><ul>\n<li><a href=\"https://dorey.github.io/JavaScript-Equality-Table/\" target=\"_blank\" rel=\"noopener\">A standard IF statement</a></li>\n</ul>\n","categories":["JavaScript"],"tags":["JavaScript","JS core"]},{"title":"jQuery 筆記 - loader.css 實務應用","url":"/jQuery/20200805/875307558/","content":"<p><img src=\"https://images.unsplash.com/photo-1482775907821-a56ec43344fc?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1352&q=80\" alt=\"clock\"></p>\n<p>Loader.css 的基本認識可看<a href=\"https://hsuchihting.github.io/css/20200711/1366382220/\">這篇</a>。</p>\n<h2 id=\"專案實務應用-等待遠端資料文字出現前顯示-loader，載入資料後讓-loader-消失\"><a href=\"#專案實務應用-等待遠端資料文字出現前顯示-loader，載入資料後讓-loader-消失\" class=\"headerlink\" title=\"專案實務應用 - 等待遠端資料文字出現前顯示 loader，載入資料後讓 loader 消失\"></a>專案實務應用 - 等待遠端資料文字出現前顯示 loader，載入資料後讓 loader 消失</h2><p>這次專案遇到的一個要求，就是點擊按鈕後要先跑 loader，跑完 loader 在顯示文字。</p>\n<p>先確認要執行的架構順序。</p>\n<h3 id=\"HTML-架構\"><a href=\"#HTML-架構\" class=\"headerlink\" title=\"HTML 架構\"></a>HTML 架構</h3><p>因為是在文字區塊內先顯示 loader，在顯示文字，所以 loader 放在 <code>p</code> 前面。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"wrap\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn\"</span>&gt;</span>請點擊我<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"textBox\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"title\"</span>&gt;</span></span><br><span class=\"line\">      等待遠端資料文字出現前顯示 loader，載入資料後讓 loader 消失</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"loader-inner ball-spin-fade-loader\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">      Lorem ipsum dolor sit amet consectetur adipisicing elit. Eius dolor minus</span><br><span class=\"line\">      doloribus qui voluptas est nesciunt sunt accusamus alias eos, possimus</span><br><span class=\"line\">      similique doloremque dolore eaque repudiandae velit ducimus quidem ipsam.</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"CSS-樣式\"><a href=\"#CSS-樣式\" class=\"headerlink\" title=\"CSS 樣式\"></a>CSS 樣式</h3><p>主要值得記錄是這兩行，但也好像還好，就是把 loader 位置使用絕對定位固定，然後文字一開始不顯示。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.loader-inner</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">  <span class=\"attribute\">left</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">top</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: none;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"JavaScript-控制時間差\"><a href=\"#JavaScript-控制時間差\" class=\"headerlink\" title=\"JavaScript 控制時間差\"></a>JavaScript 控制時間差</h3><p>點擊按鈕後要做的事情：</p>\n<ul>\n<li>使 .textBox 淡入。</li>\n<li>先讀取 loader 並且使 loader 樣式在 一秒後淡出。</li>\n<li>接著讓文字於 2 秒後淡入。</li>\n</ul>\n<p>透過時間差就會看起來有連續的感覺。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">\".btn\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  $(<span class=\"string\">\".textBox\"</span>).fadeIn();</span><br><span class=\"line\">  setTimeout(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    $(<span class=\"string\">\".loader-inner\"</span>).loaders();</span><br><span class=\"line\">    $(<span class=\"string\">\".ball-spin-fade-loader\"</span>).fadeOut(<span class=\"number\">800</span>);</span><br><span class=\"line\">  &#125;, <span class=\"number\">1000</span>);</span><br><span class=\"line\">  <span class=\"comment\">//box 的淡入時間</span></span><br><span class=\"line\">  setTimeout(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    $(<span class=\"string\">\"p\"</span>).fadeIn();</span><br><span class=\"line\">  &#125;, <span class=\"number\">2000</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>CodePen <a href=\"https://codepen.io/hnzxewqw/pen/LYNYdLY\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/LYNYdLY</a></p>\n<h2 id=\"結語\"><a href=\"#結語\" class=\"headerlink\" title=\"結語\"></a>結語</h2><p>其實這個思維並不難，小卡關的地方是執行的順序還有 HTML 的架構順序要放對。</p>\n","categories":["jQuery"],"tags":["JavaScript","jQuery"]},{"title":"JS 核心觀念筆記 -  this 的呼叫方式：call、apply、bind","url":"/javascript/20200804/4095833756/","content":"<p><img src=\"https://images.unsplash.com/photo-1507652955-f3dcef5a3be5?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1350&q=80\" alt=\"this\"></p>\n<h2 id=\"Simple-Call\"><a href=\"#Simple-Call\" class=\"headerlink\" title=\"Simple Call\"></a>Simple Call</h2><p>簡易呼叫已經知道將 this 指向全域 window 的物件，下方程式碼為範例。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> vm = <span class=\"string\">\"全域\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> family = &#123;</span><br><span class=\"line\">  vm: <span class=\"string\">\"小明\"</span>,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">home</span>(<span class=\"params\">para1, para2</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>, para1, para2);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">home(<span class=\"number\">1</span>, <span class=\"number\">2</span>);</span><br></pre></td></tr></table></figure>\n\n<p>呼叫 home 這個函式並帶入參數內容，會得到一個全域物件跟帶入的參數值。</p>\n<p><img src=\"https://i.imgur.com/kUkKLtw.png\" alt=\"callback\"></p>\n<h2 id=\"call\"><a href=\"#call\" class=\"headerlink\" title=\"call\"></a>call</h2><p>使用 call 的方法來呼叫 this 的話，可以改這樣寫。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> vm = <span class=\"string\">\"全域\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> family = &#123;</span><br><span class=\"line\">  vm: <span class=\"string\">\"小明\"</span>,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">home</span>(<span class=\"params\">para1, para2</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>, para1, para2); <span class=\"comment\">//小明，3,4</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">home.call(family, <span class=\"number\">3</span>, <span class=\"number\">4</span>);</span><br></pre></td></tr></table></figure>\n\n<p>呼叫 home 函式，並使用 call 的方法，將 family 物件取代 this，這個 this 就會指向 family，所以得到的值就會是 family 裡面的 vm。</p>\n<h2 id=\"apply\"><a href=\"#apply\" class=\"headerlink\" title=\"apply\"></a>apply</h2><p>與 call 的方式相似，只是呼叫時帶入參數的格式不同，是用陣列表示。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> vm = <span class=\"string\">\"全域\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> family = &#123;</span><br><span class=\"line\">  vm: <span class=\"string\">\"小明\"</span>,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">home</span>(<span class=\"params\">para1, para2</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>, para1, para2); <span class=\"comment\">//小明，5, 6</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">home.apply(family, [<span class=\"number\">5</span>, <span class=\"number\">6</span>]);</span><br></pre></td></tr></table></figure>\n\n<p>call 跟 apply 的調用方法非常相似，且會立刻執行。</p>\n<h2 id=\"bind\"><a href=\"#bind\" class=\"headerlink\" title=\"bind\"></a>bind</h2><p>別於上方兩個方法，bind 不會立刻執行，調用參數的方法與 call 相同。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> vm = <span class=\"string\">\"全域\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> family = &#123;</span><br><span class=\"line\">  vm: <span class=\"string\">\"小明\"</span>,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">home</span>(<span class=\"params\">para1, para2</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>, para1, para2); <span class=\"comment\">//小明，7, 8</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> otherHome = home.bind(family, <span class=\"number\">7</span>, <span class=\"number\">8</span>);</span><br><span class=\"line\">otherHome();</span><br></pre></td></tr></table></figure>\n\n<p>使用 bind 的方法時，要先宣告一個變數，其值為呼叫函式並使用 bind，調用參數的方法與 call 相同，但並不會執行，而是要呼叫剛剛宣告的變數才會執行其函式，並把 this 替換掉。</p>\n<p>容易被誤解的地方是呼叫的樣子跟 simple call 很像，但因為在使用 bind 方法時，已經決定呼叫的方法，所以不會跟 simpel call 的結果相同。</p>\n<p>因為已經決定呼叫方式，所以在 otherHome 函式中加入參數，並不會改變其結果，但可以部分帶入參數，如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> vm = <span class=\"string\">\"全域\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> family = &#123;</span><br><span class=\"line\">  vm: <span class=\"string\">\"小明\"</span>,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">home</span>(<span class=\"params\">para1, para2</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>, para1, para2); <span class=\"comment\">//小明，9，1</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> otherHome = home.bind(family, <span class=\"number\">9</span>);</span><br><span class=\"line\">otherHome(<span class=\"number\">1</span>, <span class=\"number\">2</span>);</span><br></pre></td></tr></table></figure>\n\n<p>可見到如果 bind 方法只帶入一個<code>參數 9</code>，第二個參數的位置會帶入函式中新帶入的第一個<code>參數 1</code>，新帶入的第二個<code>參數 2</code>，並不會被帶入。</p>\n<h2 id=\"進階觀念\"><a href=\"#進階觀念\" class=\"headerlink\" title=\"進階觀念\"></a>進階觀念</h2><p>前面 this 都是物件形態出現，這邊透過 call 的方法給予純值的話會變怎麼樣?</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> vm = <span class=\"string\">\"全域\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> family = &#123;</span><br><span class=\"line\">  vm: <span class=\"string\">\"小明\"</span>,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">home</span>(<span class=\"params\">para1, para2</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>, para1, para2);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">home.call(<span class=\"number\">1</span>, <span class=\"string\">\"參數1\"</span>, <span class=\"string\">\"參數2\"</span>);</span><br></pre></td></tr></table></figure>\n\n<p>會看到得到的結果是：</p>\n<p><img src=\"https://i.imgur.com/R6AryO4.png\" alt=\"call\"></p>\n<p>this 變成一個建構式的樣子呈現 this，如果使用 <code>typeof(this)</code> 查看，會得到一個 object 的類型。</p>\n<p>如果傳入文字，就會得到一個 string 的物件，那如果傳入 <code>undefined</code>，結果則會指向 window 物件。</p>\n<blockquote>\n<p><a href=\"https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Function/call\" target=\"_blank\" rel=\"noopener\">MDN</a> 的說明：</p>\n<p>若這個函數是在非嚴苛模式( non-strict mode ), <code>null</code> 、<code>undefined</code> 將會被置換成全域變數，而原生型態的值將會被封裝</p>\n</blockquote>\n<h2 id=\"嚴格模式-use-strict\"><a href=\"#嚴格模式-use-strict\" class=\"headerlink\" title=\"嚴格模式 use strict\"></a>嚴格模式 use strict</h2><p>因為 JavaScript 是弱型別的語言，規則上較為寬鬆，所以使用嚴格模式可以排除一些原本不會顯示的錯誤。</p>\n<ul>\n<li>使用 ‘use strict’ 啟用嚴格模式。</li>\n<li>對於沒支援嚴格模式的瀏覽器不影響。</li>\n<li>可依照要執行嚴格模式的程式碼片段上方加入 ‘use strict’ 這個表達式。</li>\n<li>可以排除一些不好的程式撰寫習慣。</li>\n<li>不能使用未來被 ECMAScript 定義的關鍵字。</li>\n</ul>\n<p>下方使用立即函式做為範例，並給予嚴格模式，來限制其執行環境，如下方程式碼：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\"><span class=\"meta\">  \"use strict\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;)();</span><br></pre></td></tr></table></figure>\n\n<p>在立即函式中給一個變數與值，結果會跳錯，原因是在嚴格模式下不能直接讓變數賦予值，而是要先宣告一個變數再給予值。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\"><span class=\"meta\">  \"use strict\"</span>;</span><br><span class=\"line\">  a = <span class=\"number\">1</span>; <span class=\"comment\">// is not defined</span></span><br><span class=\"line\">&#125;)();</span><br></pre></td></tr></table></figure>\n\n<p>反之，如果把嚴格模式移除，就不會跳錯，但也不會執行。</p>\n<blockquote>\n<p>嚴格模式在不同的瀏覽器所執行的結果會些許不同。</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">callStrict</span>(<span class=\"params\">param01, param02</span>) </span>&#123;</span><br><span class=\"line\"><span class=\"meta\">  \"use strict\"</span>;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>, <span class=\"keyword\">typeof</span> <span class=\"keyword\">this</span>, param01, param02); <span class=\"comment\">//1 \"number\" \"參數1\" \"參數2\"</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">callStrict.call(<span class=\"number\">1</span>, <span class=\"string\">\"參數1\"</span>, <span class=\"string\">\"參數2\"</span>);</span><br></pre></td></tr></table></figure>\n\n<p>嚴格模式下可以看到 console 的結果就不會用建構式的方式呈現，就會按照原本的型別出現，如果 this 用 <code>undefined</code> 傳入也會得到 <code>undefined</code> 的值與型別。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">callStrict</span>(<span class=\"params\">param01, param02</span>) </span>&#123;</span><br><span class=\"line\"><span class=\"meta\">  \"use strict\"</span>;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>, <span class=\"keyword\">typeof</span> <span class=\"keyword\">this</span>, param01, param02); <span class=\"comment\">//1 \"number\" \"參數1\" \"參數2\"</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">callStrict.call(<span class=\"number\">1</span>, <span class=\"string\">\"參數1\"</span>, <span class=\"string\">\"參數2\"</span>); <span class=\"comment\">//1 \"number\" \"參數1\" \"參數2\"</span></span><br><span class=\"line\">callStrict.call(<span class=\"literal\">undefined</span>, <span class=\"string\">\"參數1\"</span>, <span class=\"string\">\"參數2\"</span>); <span class=\"comment\">//undefined \"undefined\" \"參數1\" \"參數2\"</span></span><br></pre></td></tr></table></figure>\n\n<p>如果在嚴格模式下使用 simple call 會變怎樣?</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">callStrict</span>(<span class=\"params\">param01, param02</span>) </span>&#123;</span><br><span class=\"line\"><span class=\"meta\">  \"use strict\"</span>;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>, <span class=\"keyword\">typeof</span> <span class=\"keyword\">this</span>, param01, param02);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">callStrict.call(<span class=\"number\">1</span>, <span class=\"string\">\"參數1\"</span>, <span class=\"string\">\"參數2\"</span>); <span class=\"comment\">//1 \"number\" \"參數1\" \"參數2\"</span></span><br><span class=\"line\">callStrict(<span class=\"string\">\"參數1\"</span>, <span class=\"string\">\"參數2\"</span>); <span class=\"comment\">//undefined \"undefined\" \"參數1\" \"參數2\"</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"盡量不要使用-simple-call-的-this-原因\"><a href=\"#盡量不要使用-simple-call-的-this-原因\" class=\"headerlink\" title=\"盡量不要使用 simple call 的 this 原因\"></a>盡量不要使用 simple call 的 this 原因</h2><p>有發現到就跟 <code>undefined</code> 是一樣的結果，所以得知，simple call 的 this 其實指向的就是 <code>undefined</code>，所以盡量不要使用 simple call 的 this 的原因在此。</p>\n<h2 id=\"資料參考\"><a href=\"#資料參考\" class=\"headerlink\" title=\"資料參考\"></a>資料參考</h2><ol>\n<li><a href=\"https://wcc723.github.io/javascript/2017/12/12/javascript-this/\" target=\"_blank\" rel=\"noopener\">鐵人賽：JavaScript 的 this 到底是誰？</a></li>\n<li><a href=\"https://wcc723.github.io/javascript/2019/03/21/this-why-window/\" target=\"_blank\" rel=\"noopener\">JavaScript This 系列文：this 為什麼指向 window</a></li>\n<li><a href=\"https://wcc723.github.io/javascript/2019/03/18/JS-THIS/\" target=\"_blank\" rel=\"noopener\">JavaScript This 系列文：this 與物件的關係</a></li>\n<li><a href=\"https://ithelp.ithome.com.tw/articles/10193193\" target=\"_blank\" rel=\"noopener\">重新認識 JavaScript: Day 20 What’s “THIS” in JavaScript (鐵人精華版)</a></li>\n</ol>\n","categories":["JavaScript"],"tags":["JavaScript","JS core"]},{"title":"JS 核心觀念筆記 -  this 簡單呼叫 Simple Call","url":"/javascript/20200804/614528617/","content":"<p><img src=\"https://images.unsplash.com/photo-1507652955-f3dcef5a3be5?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1350&q=80\" alt=\"this\"></p>\n<h2 id=\"Simple-Call-簡易呼叫\"><a href=\"#Simple-Call-簡易呼叫\" class=\"headerlink\" title=\"Simple Call 簡易呼叫\"></a>Simple Call 簡易呼叫</h2><p>下方這個方式就是 this 的簡易呼叫，但請<strong>盡量不要</strong>使用簡易呼叫的 this。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> vm = <span class=\"string\">\"全域\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">callName</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.vm);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">callName();</span><br></pre></td></tr></table></figure>\n\n<p>最簡單判斷是不是 Simple Call 的方式就是看到直接呼叫函式這個方法(如上方程式碼範例)。</p>\n<h2 id=\"以下為-Simple-Call-的情境\"><a href=\"#以下為-Simple-Call-的情境\" class=\"headerlink\" title=\"以下為 Simple Call 的情境\"></a>以下為 Simple Call 的情境</h2><h3 id=\"IIFE-立即函式\"><a href=\"#IIFE-立即函式\" class=\"headerlink\" title=\"IIFE 立即函式\"></a>IIFE 立即函式</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> vm = <span class=\"string\">\"全域\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">callName</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.vm);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//IIFE</span></span><br><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.vm); <span class=\"comment\">//全域</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">callSomeone</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.vm); <span class=\"comment\">//全域</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  callSomeone();</span><br><span class=\"line\">&#125;)();</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>立即函式是定義後就會直接執行，這邊並沒有另外定義一個變數給立即函式，所以他會找到外層的全域變數。</li>\n<li>立即函式有再定義一個函式並直接呼叫他，因為前面也沒有給予定義的變數或物件，所以它也會直接找到外層的變數並使用它。</li>\n<li>通常全域變數的會定義在 window 這個全域物件下，但 Simple Call 並不是 <code>window.simpleCall()</code> 這個概念下被呼叫。</li>\n<li>不是看呼叫的位置，而是呼叫的方式來決定 this 指向的是誰。</li>\n</ul>\n<h3 id=\"閉包-Closure\"><a href=\"#閉包-Closure\" class=\"headerlink\" title=\"閉包 Closure\"></a>閉包 Closure</h3><p>閉包的概念是在函式內再宣告一個函式，並使其內部函式去調用外層函式內的變數。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> vm = <span class=\"string\">\"全域\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">easyCard</span>(<span class=\"params\">base</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> money = base;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> card = <span class=\"string\">\"悠遊卡\"</span>;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">update</span>) </span>&#123;</span><br><span class=\"line\">    money = money + update;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.vm, money); <span class=\"comment\">//全域 110</span></span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> myEasyCard = easyCard(<span class=\"number\">100</span>);</span><br><span class=\"line\">myEasyCard(<span class=\"number\">10</span>);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Callback\"><a href=\"#Callback\" class=\"headerlink\" title=\"Callback\"></a>Callback</h3><p>就是把 A 函式傳到 B 函式內，並在 B 函式內執行，執行後會指向全域的變數。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> vm = <span class=\"string\">\"全域\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">myEasyCard</span>(<span class=\"params\">callback</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> money = <span class=\"number\">100</span>;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> callback(money);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">myEasyCard(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">money</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.vm, money + <span class=\"number\">100</span>); <span class=\"comment\">//全域 200</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"forEach\"><a href=\"#forEach\" class=\"headerlink\" title=\"forEach\"></a>forEach</h4><p>下方有一陣列，取得資料可用 forEach 相當方便，forEach 也是一個 callback function，this 也會指向全域的變數，而 i 會取得陣列中的資料。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> vm = <span class=\"string\">\"全域\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>];</span><br><span class=\"line\">a.forEach(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">i</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.vm, i); <span class=\"comment\">// 全域 1，全域 2，全域 3</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"函式中直接定義-this\"><a href=\"#函式中直接定義-this\" class=\"headerlink\" title=\"函式中直接定義 this\"></a>函式中直接定義 this</h3><ul>\n<li>下方有一個物件裡面有一個 callName 的函式，當中在執行 setTimeout 的函式，而這個 SetTimeout 函式屬於 callback function，this 會指向全域變數。</li>\n<li>因為其呼叫方式的是直接在全域下呼叫，所以不管所定義的位置在哪裡，都會指向全域。</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> vm = <span class=\"string\">\"全域\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> family = &#123;</span><br><span class=\"line\">  vm: <span class=\"string\">\"小明\"</span>,</span><br><span class=\"line\">  callName: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    setTimeout(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.vm); <span class=\"comment\">//全域</span></span><br><span class=\"line\">    &#125;, <span class=\"number\">1000</span>);</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">family.callName();</span><br></pre></td></tr></table></figure>\n\n<p>如果想要取得物件 family 物件中的變數可以在裡面直接定義 this，如下方程式碼。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> vm = <span class=\"string\">\"全域\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> family = &#123;</span><br><span class=\"line\">  vm: <span class=\"string\">\"小明\"</span>,</span><br><span class=\"line\">  callName: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> self = <span class=\"keyword\">this</span>; <span class=\"comment\">//定義 this</span></span><br><span class=\"line\">    setTimeout(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(self.vm); <span class=\"comment\">//將原本的 this 改為 Self，得到 小明</span></span><br><span class=\"line\">    &#125;, <span class=\"number\">1000</span>);</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">family.callName();</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"資料參考\"><a href=\"#資料參考\" class=\"headerlink\" title=\"資料參考\"></a>資料參考</h2><ol>\n<li><a href=\"https://wcc723.github.io/javascript/2017/12/12/javascript-this/\" target=\"_blank\" rel=\"noopener\">鐵人賽：JavaScript 的 this 到底是誰？</a></li>\n<li><a href=\"https://wcc723.github.io/javascript/2019/03/21/this-why-window/\" target=\"_blank\" rel=\"noopener\">JavaScript This 系列文：this 為什麼指向 window</a></li>\n<li><a href=\"https://wcc723.github.io/javascript/2019/03/18/JS-THIS/\" target=\"_blank\" rel=\"noopener\">JavaScript This 系列文：this 與物件的關係</a></li>\n<li><a href=\"https://ithelp.ithome.com.tw/articles/10193193\" target=\"_blank\" rel=\"noopener\">重新認識 JavaScript: Day 20 What’s “THIS” in JavaScript (鐵人精華版)</a></li>\n<li><a href=\"https://cythilya.github.io/2018/10/22/closure/\" target=\"_blank\" rel=\"noopener\">你懂 JavaScript 嗎？#15 閉包（Closure）</a></li>\n</ol>\n","categories":["JavaScript"],"tags":["JavaScript","JS core"]},{"title":"JS 核心觀念筆記 - 什麼是 this","url":"/javascript/20200804/1536824481/","content":"<p><img src=\"https://images.unsplash.com/photo-1507652955-f3dcef5a3be5?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1350&q=80\" alt=\"this\"></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> vm = <span class=\"string\">\"全域\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">callName</span>(<span class=\"params\"></span>) </span>&#123;&#125;</span><br><span class=\"line\">callName();</span><br></pre></td></tr></table></figure>\n\n<p>上方有一個全域變數與函式，函式內沒有任何東西，當呼叫此函式時，執行堆疊會看到作用域中產生 this 並指向 window。</p>\n<p><img src=\"https://i.imgur.com/J8TanZu.png\" alt=\"this\"></p>\n<p>而這個 this 的指向與如何呼叫此函式的方式有很大的關連性。</p>\n<p>修改函式內容：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> vm = <span class=\"string\">\"全域\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">callName</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.vm); <span class=\"comment\">//全域</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">callName();</span><br></pre></td></tr></table></figure>\n\n<p>此時函式中執行的 console 中是指向全域的變數，所以得到的是 vm 的值，由此可知函式中會自動升成 this。</p>\n<h2 id=\"this-的基本觀念\"><a href=\"#this-的基本觀念\" class=\"headerlink\" title=\"this 的基本觀念\"></a>this 的基本觀念</h2><ul>\n<li>不管是全域或是特定函式，都可以直接調用 this 這個關鍵字，而 this 會在每個執行環境都會存在，所以會容易被誤會為指向該函式本身。但函式能提供的方法很有限，故比較不會使用 this 調用函式本身，this 比較常被拿來指向該物件，但因為函式本身也是物件，所以這是造成誤解的原因。</li>\n<li>每個環境都有自己的 this 關鍵字。</li>\n<li>this 與函式如何宣告<strong>沒有關連性</strong>，僅與呼叫方式有關。</li>\n<li><strong>嚴格模式下</strong>，簡易呼叫會有很大的改變。</li>\n</ul>\n<h3 id=\"影響函式-this-的調用方式\"><a href=\"#影響函式-this-的調用方式\" class=\"headerlink\" title=\"影響函式 this 的調用方式\"></a>影響函式 this 的調用方式</h3><ul>\n<li>做為物件方法(最常使用)。</li>\n<li>簡易呼叫(絕大多數的呼叫方式，要避免使用此呼叫方式來調用 this)。</li>\n<li>bind,apply,call 將 this 綁定的特定方法。</li>\n<li>new 一個物件(建構式的運算子)。</li>\n<li>DOM 事件處理器。</li>\n<li>箭頭函式(ES6)。</li>\n</ul>\n<h3 id=\"this-的用途\"><a href=\"#this-的用途\" class=\"headerlink\" title=\"this 的用途\"></a>this 的用途</h3><ul>\n<li>可略過函式的定義方式，改依據執行的方式取用特定物件。</li>\n</ul>\n<h2 id=\"this-物件方法的調用-最常使用\"><a href=\"#this-物件方法的調用-最常使用\" class=\"headerlink\" title=\"this 物件方法的調用(最常使用)\"></a>this 物件方法的調用(最常使用)</h2><ul>\n<li>this 與函式如何宣告<strong>沒有關連性</strong>，僅與呼叫方法有關。</li>\n<li>物件的方法調用時，僅需要關注的是<strong>哪一個物件下</strong>呼叫。</li>\n</ul>\n<p><img src=\"https://i.imgur.com/Bw2oUbs.png\" alt=\"thisObj\"></p>\n<blockquote>\n<p>示意圖如上，掌握此概念就能使用大部份的 this。</p>\n</blockquote>\n<h3 id=\"範例一\"><a href=\"#範例一\" class=\"headerlink\" title=\"範例一\"></a>範例一</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> vm = <span class=\"string\">\"全域\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">callName</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.vm);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> ming = &#123;</span><br><span class=\"line\">  vm: <span class=\"string\">\"區域\"</span>,</span><br><span class=\"line\">  callName: callName,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">ming.callName(); <span class=\"comment\">//區域</span></span><br></pre></td></tr></table></figure>\n\n<p>上方有兩個物件，一個是函式，一個是物件，執行是由 ming 這個物件來呼叫函式，所以得到的 vm 直為區域變數的值。</p>\n<h3 id=\"範例二\"><a href=\"#範例二\" class=\"headerlink\" title=\"範例二\"></a>範例二</h3><p>若今天在函式中還有一個函式，如前面所說，不需要管函式怎麼定義，只要知道是哪個物件呼叫 this，第一個函式呼叫的結果就會是區域，第二個函式呼叫後是在 name 被呼叫，所以所得的值會是 name 裡面的 vm。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> vm = <span class=\"string\">\"全域\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">callName</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.vm);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> ming = &#123;</span><br><span class=\"line\">  vm: <span class=\"string\">\"區域\"</span>,</span><br><span class=\"line\">  callName: callName,</span><br><span class=\"line\">  name: &#123;</span><br><span class=\"line\">    vm: <span class=\"string\">\"區域中的區域\"</span>,</span><br><span class=\"line\">    callName: callName,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">ming.callName(); <span class=\"comment\">//區域</span></span><br><span class=\"line\">ming.name.callName(); <span class=\"comment\">//區域中的區域</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"範例三\"><a href=\"#範例三\" class=\"headerlink\" title=\"範例三\"></a>範例三</h3><p>今天在物件中宣告一個函式，並且宣告一個變數來存取物件中函式的值，但因為函式宣告前面並沒有使用物件，所以 this 會指向全域(window)，所以得出來的值會是最外層全域的 vm 的值。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> vm = <span class=\"string\">\"全域\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> ming = &#123;</span><br><span class=\"line\">  vm: <span class=\"string\">\"區域\"</span>,</span><br><span class=\"line\">  callName: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.vm);</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> callName = ming.callName;</span><br><span class=\"line\">callName(); <span class=\"comment\">//全域</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"資料參考\"><a href=\"#資料參考\" class=\"headerlink\" title=\"資料參考\"></a>資料參考</h2><ol>\n<li><a href=\"https://wcc723.github.io/javascript/2017/12/12/javascript-this/\" target=\"_blank\" rel=\"noopener\">鐵人賽：JavaScript 的 this 到底是誰？</a></li>\n<li><a href=\"https://wcc723.github.io/javascript/2019/03/21/this-why-window/\" target=\"_blank\" rel=\"noopener\">JavaScript This 系列文：this 為什麼指向 window</a></li>\n<li><a href=\"https://wcc723.github.io/javascript/2019/03/18/JS-THIS/\" target=\"_blank\" rel=\"noopener\">JavaScript This 系列文：this 與物件的關係</a></li>\n<li><a href=\"https://ithelp.ithome.com.tw/articles/10193193\" target=\"_blank\" rel=\"noopener\">重新認識 JavaScript: Day 20 What’s “THIS” in JavaScript (鐵人精華版)</a></li>\n</ol>\n","categories":["JavaScript"],"tags":["JavaScript","JS core"]},{"title":"JS 核心觀念筆記 - 運算子","url":"/javascript/20200804/1583316046/","content":"<p><img src=\"https://i.imgur.com/RvAfQKY.jpg\" alt=\"core\"></p>\n<p>MDN 中運算子的介紹：</p>\n<ul>\n<li>賦值運算子</li>\n<li>比較運算子</li>\n<li>算術運算子</li>\n<li>位元運算子</li>\n<li>邏輯運算子</li>\n<li>字串運算子</li>\n<li>條件(三元)運算子</li>\n<li>逗點運算子</li>\n<li>一元運算子</li>\n<li>關係運算子</li>\n</ul>\n<p>大部分都是二元運算子，少部分為一元運算子跟三元運算子</p>\n<h2 id=\"二元運算子-最常見\"><a href=\"#二元運算子-最常見\" class=\"headerlink\" title=\"二元運算子(最常見)\"></a>二元運算子(最常見)</h2><p>JavaScript 同時具有二元運算子及一元運算子， 以及一種特殊的 三元運算子，也就是 條件運算子。 一個二元運算子需要具備兩個運算元， 一個在運算元之前，一個在運算元之後:</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">運算元<span class=\"number\">1</span> 運算子 運算元<span class=\"number\">2</span></span><br><span class=\"line\">例如, <span class=\"number\">3</span>+<span class=\"number\">4</span> 或 x*y.</span><br></pre></td></tr></table></figure>\n\n<p>一個 一元運算子 需要一個運算元， 位於運算子之前或之後:</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">運算子 運算元</span><br></pre></td></tr></table></figure>\n\n<p>或</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">運算元 運算子</span><br><span class=\"line\">例如， x++ 或 ++x.</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"一元運算子\"><a href=\"#一元運算子\" class=\"headerlink\" title=\"一元運算子\"></a>一元運算子</h2><p>一元運算 是只需要一個運算元的運算，大概<strong>單字</strong>形態比較多。</p>\n<h3 id=\"delete\"><a href=\"#delete\" class=\"headerlink\" title=\"delete\"></a>delete</h3><p>delete 運算子會刪除物件，物件的性質，或是陣列中指定 index 的物件。 語法是:</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">delete 物件名稱;</span><br><span class=\"line\">delete 物件名稱.性質;</span><br><span class=\"line\">delete 物件名稱[索引];</span><br><span class=\"line\">delete 性質; // 只有在 with 陳述句中可以使用</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"typeof\"><a href=\"#typeof\" class=\"headerlink\" title=\"typeof\"></a>typeof</h3><p>能以下列任一方式使用:</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">typeof 運算元</span><br><span class=\"line\">typeof (運算元)</span><br></pre></td></tr></table></figure>\n<p><code>typeof</code> 運算子會回傳代表運算元類型的字串。運算元能是<strong>字串</strong>，<strong>變數</strong>，<strong>關鍵字</strong>，或是會回傳型態的<strong>物件</strong>。括號可加可不加。</p>\n<h2 id=\"三元運算子\"><a href=\"#三元運算子\" class=\"headerlink\" title=\"三元運算子\"></a>三元運算子</h2><p>是 JavaScript 中唯一需要三個運算元的運算子。 這個運算子接受兩個運算元作為值且一個運算元作為條件。 語法是:</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">條件 ? 值<span class=\"number\">1</span> : 值<span class=\"number\">2</span></span><br></pre></td></tr></table></figure>\n<p>如果判斷條件為 <code>true</code>，運算子回傳 <code>值1</code>， <code>false</code> 則回傳 <code>值2</code>。</p>\n<p>例如，</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> age = <span class=\"number\">19</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">status</span>(<span class=\"params\">age</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (age &gt;= <span class=\"number\">18</span>) ? <span class=\"string\">'大人'</span> : <span class=\"string\">'小孩'</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(status()); <span class=\"comment\">//小孩</span></span><br></pre></td></tr></table></figure>","categories":["JavaScript"],"tags":["JavaScript","JS core"]},{"title":"JS 核心觀念筆記 - 原始型別與物件型別","url":"/javascript/20200804/863415365/","content":"<p><img src=\"https://i.imgur.com/RvAfQKY.jpg\" alt=\"core\"></p>\n<p>懶人記法：除了原始型別外其他都是物件型別。</p>\n<h2 id=\"原始型別\"><a href=\"#原始型別\" class=\"headerlink\" title=\"原始型別\"></a>原始型別</h2><ul>\n<li><strong>string</strong></li>\n<li><strong>number</strong></li>\n<li><strong>boolean</strong></li>\n<li><strong>null</strong></li>\n<li><strong>undefinded</strong></li>\n<li>bigInt(new)</li>\n<li>symbol(new)</li>\n</ul>\n<p>以上型別除了 null 跟 undefinded 外，都有包裹物件 <code>(_proto)</code> 可以使用。</p>\n<h3 id=\"typeof\"><a href=\"#typeof\" class=\"headerlink\" title=\"typeof\"></a>typeof</h3><p>使用 typeof 可以判斷型別的類型，</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> a = <span class=\"string\">\"Tim\"</span>; <span class=\"comment\">//string</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> b = <span class=\"number\">23</span>; <span class=\"comment\">//number</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> c = <span class=\"literal\">true</span>; <span class=\"comment\">//boolean</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> d = &#123;&#125;; <span class=\"comment\">//object</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> e = <span class=\"literal\">null</span>; <span class=\"comment\">//object</span></span><br></pre></td></tr></table></figure>\n\n<p>若各自使用 <code>typeof()</code> 會得到後方註解的值。</p>\n<p>其中 d 為物件型別，非原始型別。</p>\n<p>可是 null 得到的值應該是空值，但卻得到是物件型別，這其實是 JS 長期以來的錯誤，但卻未被修正，原因是已經有許多網站都已經沿用 null 這個錯誤的型別進行網站開發，如果改變其型別，可能許多開發案件會出現許多問題，所以遲遲沒有修正。</p>\n<h3 id=\"對於-not-defined-的保護措施\"><a href=\"#對於-not-defined-的保護措施\" class=\"headerlink\" title=\"對於 not defined 的保護措施\"></a>對於 not defined 的保護措施</h3><p>目前沒有宣告 var f 這個變數，如果使用 <code>console.log(f);</code> 會跳錯，若用型別檢視 <code>console.log(typeof f);</code> 則會出現 <code>undefined</code>，這是 JS 對於 not defined 的保護措施。</p>\n<h2 id=\"物件型別\"><a href=\"#物件型別\" class=\"headerlink\" title=\"物件型別\"></a>物件型別</h2><p>上方提到除了原始型別外，其他都是物件型別，若將上方變數來使用，可以透過該物件的包裹物件方法來檢視這個變數，例如：</p>\n<h3 id=\"檢視物件長度-length\"><a href=\"#檢視物件長度-length\" class=\"headerlink\" title=\"檢視物件長度 length\"></a>檢視物件長度 length</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> a = <span class=\"string\">\"Tim\"</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a.length); <span class=\"comment\">//3</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"將其值改成大寫-toUpperCase\"><a href=\"#將其值改成大寫-toUpperCase\" class=\"headerlink\" title=\"將其值改成大寫 toUpperCase()\"></a>將其值改成大寫 toUpperCase()</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> a = <span class=\"string\">\"Tim\"</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a.toUpperCase()); <span class=\"comment\">//TIM</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"消除空格-trim\"><a href=\"#消除空格-trim\" class=\"headerlink\" title=\"消除空格 trim()\"></a>消除空格 trim()</h3><p>在 Tim 後面加上空白，透過 <code>trim();</code> 將空格消除。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> a = <span class=\"string\">\"Tim \"</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a.trim()); <span class=\"comment\">//Tim</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>可自行複製到瀏覽器中的 console 試試看</p>\n</blockquote>\n<h3 id=\"檢視物件型別的方法\"><a href=\"#檢視物件型別的方法\" class=\"headerlink\" title=\"檢視物件型別的方法\"></a>檢視物件型別的方法</h3><p>下方有一個物件，透過 <code>console.log</code> 後，會看到瀏覽器有 <code>__proto__</code></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> obj = &#123;</span><br><span class=\"line\">  name: <span class=\"string\">\"Tim\"</span>,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(obj);</span><br></pre></td></tr></table></figure>\n\n<p>其中就會看到我可以使用的方法了。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;<span class=\"attr\">name</span>: <span class=\"string\">\"Tim\"</span>&#125;</span><br><span class=\"line\">name: <span class=\"string\">\"Tim\"</span></span><br><span class=\"line\">__proto__:</span><br><span class=\"line\"><span class=\"keyword\">constructor</span>: ƒ Object()</span><br><span class=\"line\">hasOwnProperty: ƒ hasOwnProperty()</span><br><span class=\"line\">isPrototypeOf: ƒ isPrototypeOf()</span><br><span class=\"line\">propertyIsEnumerable: ƒ propertyIsEnumerable()</span><br><span class=\"line\">toLocaleString: ƒ toLocaleString()</span><br><span class=\"line\">toString: ƒ toString()</span><br><span class=\"line\">valueOf: ƒ valueOf()</span><br><span class=\"line\">__defineGetter__: ƒ __defineGetter__()</span><br><span class=\"line\">__defineSetter__: ƒ __defineSetter__()</span><br><span class=\"line\">__lookupGetter__: ƒ __lookupGetter__()</span><br><span class=\"line\">__lookupSetter__: ƒ __lookupSetter__()</span><br><span class=\"line\"><span class=\"keyword\">get</span> __proto__: ƒ __proto__()</span><br><span class=\"line\"><span class=\"keyword\">set</span> __proto__: ƒ __proto__()</span><br></pre></td></tr></table></figure>\n","categories":["JavaScript"],"tags":["JavaScript","JS core"]},{"title":"JS 核心觀念筆記 - 陳述式與表達式","url":"/javascript/20200804/5304762/","content":"<p><img src=\"https://i.imgur.com/RvAfQKY.jpg\" alt=\"core\"></p>\n<h2 id=\"陳述式-Statement\"><a href=\"#陳述式-Statement\" class=\"headerlink\" title=\"陳述式 Statement\"></a>陳述式 Statement</h2><p>JS 的語句類型，用於命令執行指定的一系列操作，最大的特徵則是不會回傳結果。</p>\n<p>舉例：</p>\n<ul>\n<li>block</li>\n<li>變數宣告 var, let, const</li>\n<li>if…else 判斷</li>\n<li>函式</li>\n<li>for 迴圈</li>\n</ul>\n<p>簡單來說就單純陳述一個過程或是動作，但不會取得其值。</p>\n<h3 id=\"block\"><a href=\"#block\" class=\"headerlink\" title=\"block\"></a>block</h3><p>就是大括號 <code>{ }</code> 的區塊，可分成以下 block，</p>\n<p>一般陳述式，這樣寫是正確的，需要搭配函式使用。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> name = <span class=\"string\">\"提姆\"</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>物件實字，一種 JS 存取物件的方式。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">name:<span class=\"string\">'提姆'</span>,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>所以可以給予一個變數來儲存這個物件實字，就變成一般常見的物件。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> obj = &#123;</span><br><span class=\"line\">  name: <span class=\"string\">\"提姆\"</span>,</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"變數宣告\"><a href=\"#變數宣告\" class=\"headerlink\" title=\"變數宣告\"></a>變數宣告</h3><p>單純宣告變數，但不給予其值。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> name; <span class=\"comment\">//undefinded</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"if…else\"><a href=\"#if…else\" class=\"headerlink\" title=\"if…else\"></a>if…else</h3><p>給予判斷。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"number\">1</span>===<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"函式\"><a href=\"#函式\" class=\"headerlink\" title=\"函式\"></a>函式</h3><p>建立函式，這只有建立，不會執行。另外函式又分成兩種，具名函式與匿名函式。下方這個函式為具名函式。</p>\n<p><strong>具名函式</strong>(又稱: 函式陳述式)</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">funName</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>匿名函式</strong> (函式表達式)</p>\n<p>先宣告一個變數，其後方函式賦於其值到前面的變數。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> funName = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>這兩種的提升 hoisting 也不同。</p>\n<h2 id=\"表達式-Expression\"><a href=\"#表達式-Expression\" class=\"headerlink\" title=\"表達式 Expression\"></a>表達式 Expression</h2><p>又稱為表示式或運算式，經常透過一些符號結合上下語句，去運算及回傳結果，又分成兩種類型：</p>\n<blockquote>\n<p>MDN 解釋</p>\n</blockquote>\n<ol>\n<li>運算式是任何一段可以取得一個值的程式碼。例: <code>x = 7</code></li>\n<li>任何合乎語法的運算式都能取得一個值，概念上，有兩種不同型態的運算式:有副作用的 (例如: 將一個值指定給一個變數) 以及只為了取得值而解析的運算式。例： <code>3 + 4</code></li>\n</ol>\n<p>JavaScript 運算式有下列種類:</p>\n<ul>\n<li><strong>算術</strong>: 解析出數字， 例如 3.14159. (通常使用 算術運算子.)</li>\n<li><strong>字串</strong>: 解析出字串， 例如 “Fred” or “234”。 (通常使用 字串運算子.)</li>\n<li><strong>邏輯</strong>: 解析出 True 或 False (通常與 邏輯運算子 相關。)</li>\n<li><strong>主流運算式</strong>: JavaScript 基本的關鍵字及運算式。</li>\n<li><strong>左側運算式</strong>: 左側是指定值的對象。</li>\n</ul>\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><ul>\n<li><a href=\"https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Statements\" target=\"_blank\" rel=\"noopener\">MDN-陳述式與宣告分類</a></li>\n<li><a href=\"https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Guide/Expressions_and_Operators\" target=\"_blank\" rel=\"noopener\">MDN-運算式與運算子</a></li>\n</ul>\n","categories":["JavaScript"],"tags":["JavaScript","JS core"]},{"title":"JS 核心觀念筆記 - 執行緒與同步、非同步","url":"/javascript/20200804/4152028929/","content":"<p><img src=\"https://i.imgur.com/RvAfQKY.jpg\" alt=\"core\"></p>\n<p>有單執行緒就有多執行緒，多執行緒就是可以在同個時間執行多個函式，可是 JavaScript 是單執行緒的程式語言，所以若給予一個以上的函式，會分開且按照順序執行，<br>例如：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">A</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'work A'</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">B</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'work B'</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">C</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'work C'</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">D</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  A();</span><br><span class=\"line\">  B();</span><br><span class=\"line\">  C();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">D();</span><br></pre></td></tr></table></figure>\n\n<p>但 JS 有<strong>同步</strong>與<strong>非同步</strong>(Async)可以使用。而單執行緒是對於系統的執行，非同步是對於程式語言本身來執行，上方例子就是一個同步的範例，會按照給予的順序來進行，不會 <code>A();</code> 執行完就去執行 <code>C();</code>，非同步的執行就是把<strong>原本要執行的內容往後放</strong>，這裡的現象稱為事件佇列(Event Queue)。</p>\n<h2 id=\"事件佇列-Event-Queue\"><a href=\"#事件佇列-Event-Queue\" class=\"headerlink\" title=\"事件佇列 Event Queue\"></a>事件佇列 Event Queue</h2><p>倘若下方有個函式，當中有一個非同步事件，非同步事件就會先移到事件佇列中，然後等到其他含是依序完成後，詳細解釋就是說<strong>當執行到 <code>school()</code>，時，<code>setTimout()</code>會先跳過不執行，等到 <code>Go()</code> 執行完後，才會執行 setTimeout 的事件佇列。</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">toilet</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'上廁所'</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Eat</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'吃早餐'</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">school</span>(<span class=\"params\">doSomething</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'上學'</span>);</span><br><span class=\"line\">  setTimeout(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'揹書包'</span> + doSomething);</span><br><span class=\"line\">  &#125;, <span class=\"number\">1000</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Go</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  toilet();</span><br><span class=\"line\">  Eat();</span><br><span class=\"line\">  school();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">Go();</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"監聽事件的非同步\"><a href=\"#監聽事件的非同步\" class=\"headerlink\" title=\"監聽事件的非同步\"></a>監聽事件的非同步</h2><p>很常使用的就是點擊事件這個監聽，原生的 JS 會寫綁定 DOM 元素，並給予監聽，最後會給個 false 或 true，預設是給 false ，原因是要先點擊後才會執行事件。</p>\n<p>CodePen <a href=\"https://codepen.io/hnzxewqw/pen/YzqzKrb\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/YzqzKrb</a></p>\n","categories":["JavaScript"],"tags":["JavaScript","JS core"]},{"title":"JS 核心觀念筆記 - 執行環境與執行堆疊","url":"/javascript/20200804/2767134678/","content":"<p><img src=\"https://i.imgur.com/RvAfQKY.jpg\" alt=\"core\"></p>\n<p>JavaScript 是語法作用域，而函式的作用域是就是限制在 function 內，如下程式碼，</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">callMe</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"關於執行環境\"><a href=\"#關於執行環境\" class=\"headerlink\" title=\"關於執行環境\"></a>關於執行環境</h2><p>宣告變數在上方函式內，其變數的作用範圍就只有在這個函式內，若沒有執行函式，變數不會有作用，只要執行一次函式，就會產生一次的執行環境，若執行兩次，就會產生兩次的執行環境，以此類推，並且會產生自己的 <code>this</code>。<br>因為函式一執行完後，就會被釋放掉。</p>\n<h2 id=\"全域執行環境\"><a href=\"#全域執行環境\" class=\"headerlink\" title=\"全域執行環境\"></a>全域執行環境</h2><p>當打開瀏覽器就會產生一個全域執行環境，指的就是瀏覽器本身，會產生 <code>window</code> 以及 <code>global</code> 的執行環境。</p>\n<ul>\n<li>window - 開啟瀏覽器後產生。</li>\n<li>global - 啟動 node.js 時產生。</li>\n<li>this - 指的是上方兩者。</li>\n</ul>\n<h2 id=\"範例程式碼\"><a href=\"#範例程式碼\" class=\"headerlink\" title=\"範例程式碼\"></a>範例程式碼</h2><p>打開瀏覽器，按 F12，在 <code>console</code> 內輸入 <code>window</code> 或 <code>this</code>，所得到的物件內容皆相同。</p>\n<p><img src=\"https://i.imgur.com/GQq1Bsx.png\" alt=\"console\"></p>\n<blockquote>\n<p>需要注意的是，<code>this</code> 會因為執行環境不同而指向不同的對象。</p>\n</blockquote>\n<p>下方有兩個函式，</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">sayHi</span>(<span class=\"params\">name</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> greeting = <span class=\"string\">\"hi\"</span>;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> greeting + <span class=\"string\">\" ! \"</span> + name; <span class=\"comment\">//1 \"hi ! Mary\"</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">doSomething</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> mom = <span class=\"string\">\"Mary\"</span>;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"number\">1</span>, sayHi(mom));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">doSomething();</span><br></pre></td></tr></table></figure>\n\n<p>若沒有宣告，會沒有任何作用，先執行 <code>doSomething();</code>，就會執行 <code>var mom = &#39;Mary&#39;;</code>，<code>console.log</code> 中會在執行 <code>sayHi();</code> 這個函式，並且帶入參數 <code>mom</code>，帶入到 sayHi(); 函式會得到結果，<code>1 &quot;hi ! Mary&quot;</code>。</p>\n<h2 id=\"執行堆疊\"><a href=\"#執行堆疊\" class=\"headerlink\" title=\"執行堆疊\"></a>執行堆疊</h2><p>執行堆疊的進行是會最先呼叫全域執行環境，</p>\n<p><img src=\"https://i.imgur.com/pD5Jdm9.png\" alt=\"scope\"></p>\n<p>再來呼叫 doSomething 時，就會在執行該執行環境，</p>\n<p><img src=\"https://i.imgur.com/XN0AxTe.png\" alt=\"scope\"></p>\n<p>最後再呼叫 sayHi，就會在堆疊在 doSomething 上面，</p>\n<p><img src=\"https://i.imgur.com/GoT8DTI.png\" alt=\"scope\"></p>\n<p>執行結束後也就會依照最後執行的依序回到全域執行環境，所以執行堆疊的概念，就是呼叫一個函式就會一直往上疊，釋放後就會離開，依序回到全域執行環境的狀態。</p>\n<p>可以使用開發人員工具中的 source 點選 F11 依序看到 call stack 讀取程式碼順序的進行模式。</p>\n","categories":["JavaScript"],"tags":["JavaScript","JS core"]},{"title":"JS 核心觀念筆記 - function 的語法作用域 Lexical Scope","url":"/javascript/20200804/739860840/","content":"<p><img src=\"https://i.imgur.com/RvAfQKY.jpg\" alt=\"core\"></p>\n<h2 id=\"JavaScript-是使用語法作用域的程式語言\"><a href=\"#JavaScript-是使用語法作用域的程式語言\" class=\"headerlink\" title=\"JavaScript 是使用語法作用域的程式語言\"></a>JavaScript 是使用語法作用域的程式語言</h2><p>下方有一個具名函式為 <code>peopleName</code>，裡面有一個變數並賦予其值，確認結果下一個 <code>console.log();</code>，並且執行這個函式，結果會得到預期的答案。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">peopleName</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> boy = <span class=\"string\">\"男生\"</span>;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(boy); <span class=\"comment\">//男生</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">peopleName();</span><br></pre></td></tr></table></figure>\n\n<p>但如果改成這樣，結果就讀不到變數了，</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">peopleName</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> boy = <span class=\"string\">\"男生\"</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">peopleName();</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(boy); <span class=\"comment\">//boy is not defined</span></span><br></pre></td></tr></table></figure>\n\n<p>原因是 JS 是語法作用域的程式語言，要運行其中內容，要在 function 的大括號內才能運行，離開大括號就無法運行。</p>\n<p><img src=\"https://i.imgur.com/R3pDEfR.png\" alt=\"scope\"></p>\n<h3 id=\"靜態作用域\"><a href=\"#靜態作用域\" class=\"headerlink\" title=\"靜態作用域\"></a>靜態作用域</h3><p>JS 是一個直譯式語言，<strong>語法作用域</strong>也稱<strong>靜態作用域</strong>，在語法解析時就已經確定作用域，也就是說當我在寫函式的過程中已經確認靜態作用域已經生成。變數的作用域在語法解析時，就已經確定作用域，且不會再改變。</p>\n<h3 id=\"動態作用域\"><a href=\"#動態作用域\" class=\"headerlink\" title=\"動態作用域\"></a>動態作用域</h3><p>動態作用域的意思就是當變數的作用域調用函式的時候，才會生成。</p>\n<h2 id=\"函式運行方式\"><a href=\"#函式運行方式\" class=\"headerlink\" title=\"函式運行方式\"></a>函式運行方式</h2><p>函式的作用域基本上是各自獨立的，但倘若今天內部需要一個特定的變數，但函式內部自己沒有這個特定變數時，就會向外查找是否能在全域中找到變數，所以函式的找尋變數的方式式向外查找的，倘若連全域都找不到特定要使用的變數，就會出現 <code>ReferenceError: variable is not defined</code> 的警告訊息。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> name = Tim;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">myName</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">...</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">urName</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"靜態作用域中函式的運作方式\"><a href=\"#靜態作用域中函式的運作方式\" class=\"headerlink\" title=\"靜態作用域中函式的運作方式\"></a>靜態作用域中函式的運作方式</h3><p>答案會是什麼?</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> value = <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fn1</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(value);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fn2</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> value = <span class=\"number\">2</span>;</span><br><span class=\"line\">  fn1();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">fn2();</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>答案是 1。</p>\n</blockquote>\n<p>原因：</p>\n<ul>\n<li>在全域命名一個變數為 1。</li>\n<li>執行 <code>fn2();</code>，裡面重新宣告變數為 2，並且再執行 <code>fn1();</code>。</li>\n<li>但因為語法作用域的關係， <code>var value = 2;</code> 只會在 <code>fn2();</code> 裡面取得。</li>\n<li>後又在 <code>fn2();</code> 內執行 <code>fn1();</code>。</li>\n<li>而 <code>fn1();</code> 是直接向外查找特定變數值。</li>\n<li>所以找到了全域的變數，故答案為 1 。</li>\n</ul>\n<h3 id=\"動態作用域中函式的運作方式\"><a href=\"#動態作用域中函式的運作方式\" class=\"headerlink\" title=\"動態作用域中函式的運作方式\"></a>動態作用域中函式的運作方式</h3><p>答案會是什麼?</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> value = <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fn1</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(value);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fn2</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> value = <span class=\"number\">2</span>;</span><br><span class=\"line\">  fn1();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">fn2();</span><br></pre></td></tr></table></figure>\n\n<p>因為動態作用域的是在函式調用時才會執行，所以在這個作用域下函式調用會找到的值是 2。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> value = <span class=\"number\">2</span>; <span class=\"comment\">//動態作用域會找上一層的變數</span></span><br><span class=\"line\">fn1();</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"結語\"><a href=\"#結語\" class=\"headerlink\" title=\"結語\"></a>結語</h2><p>但因為 JavaScript 是靜態作用域的語言，所以這題答案會是 1。</p>\n","categories":["JavaScript"],"tags":["JavaScript","JS core"]},{"title":"JS 核心觀念筆記 - 執行環境與作用域","url":"/javascript/20200804/2865347228/","content":"<p><img src=\"https://i.imgur.com/RvAfQKY.jpg\" alt=\"core\"></p>\n<p>宣告變數在 JavaScript 中並不陌生，但執行環境與運行跟 function 作用域有相大的關係，下方有一個變數，</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> Name = <span class=\"string\">\"Tim\"</span>;</span><br></pre></td></tr></table></figure>\n\n<p>再了解變數運行先知道下方小知識，</p>\n<h2 id=\"LHS、RHS\"><a href=\"#LHS、RHS\" class=\"headerlink\" title=\"LHS、RHS\"></a>LHS、RHS</h2><p>JavaScipt 中有分成 LHS 跟 RHS，用英文全名來看很容易理解：</p>\n<ul>\n<li>Left Hand Side(左手邊):將值賦予到左邊的變數。</li>\n<li>Right Hand Side(右手邊):取值來自於右側的變數。</li>\n</ul>\n<h3 id=\"LHS-的運作\"><a href=\"#LHS-的運作\" class=\"headerlink\" title=\"LHS 的運作\"></a>LHS 的運作</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> Name;</span><br><span class=\"line\">Name = <span class=\"string\">\"Tim\"</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(Name); <span class=\"comment\">//Tim</span></span><br></pre></td></tr></table></figure>\n\n<p>上方變數就是標準的 LHS，將值賦於到左邊的變數上，</p>\n<p>但如果這樣寫，</p>\n<p><code>&#39;Tim&#39;=1;</code></p>\n<p><code>console</code> 就會跳錯， <code>Invalid left-hand side in assignment</code>，表示左邊不是變數所以沒辦法給予值。</p>\n<blockquote>\n<p>LHS 在編譯的過程就已經確立。</p>\n</blockquote>\n<h3 id=\"RHS-的運作\"><a href=\"#RHS-的運作\" class=\"headerlink\" title=\"RHS 的運作\"></a>RHS 的運作</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> man = Name;</span><br></pre></td></tr></table></figure>\n\n<p>這裡就是標準的 RHS 的運作方式，變數 <code>man</code> 的值，取自於右邊的 <code>Name</code> 的值。另一個經典的 RHS 就是函式，最常見的就是 <code>console.log(value);</code> 這個例子。</p>\n<blockquote>\n<p>需要注意是，RHS 是在運作時才會執行，當有錯誤提示的時候，務必要修正，不然後面的程式碼就不會運行。</p>\n</blockquote>\n<h2 id=\"結語\"><a href=\"#結語\" class=\"headerlink\" title=\"結語\"></a>結語</h2><p>基本認識 LHS 跟 RHS，對於 debug 是很有幫助的。</p>\n","categories":["JavaScript"],"tags":["JavaScript","JS core"]},{"title":"JS 筆記 - 事件監聽 addEventListener","url":"/javascript/20200803/2079929796/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/JavaScript%20note-01.jpg?alt=media&token=7bee0261-72ac-4de4-9f5a-f39d58735b7d\" alt=\"JavaScript Note\"></p>\n<h2 id=\"在-HTML-標籤寫入-onclick-事件\"><a href=\"#在-HTML-標籤寫入-onclick-事件\" class=\"headerlink\" title=\"在 HTML 標籤寫入 onclick() 事件\"></a>在 HTML 標籤寫入 onclick() 事件</h2><p>在 addEventListener 的寫法出現前，是在 HTML 的標籤內直接寫入事件，假如要寫入一個 click 事件，會這樣寫：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"button\"</span>  <span class=\"attr\">onclick</span>=<span class=\"string\">\"clickBtn()\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"button\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"CLICK\"</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>就像在 <code>input</code> 標籤上直接加入一個 function，再透過 JS 把這個 function 內容寫出來：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">clickBtn</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  alert(<span class=\"string\">\"hello world!\"</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>點擊 <code>button</code> 的時候，就會出現彈跳視窗。</p>\n<p>CodePen: <a href=\"https://codepen.io/hnzxewqw/pen/xxGgmXV\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/xxGgmXV</a></p>\n<p>不過這是比較舊的寫法，至今還有人這樣寫，也沒什麼不對，那現在前端為了避免 XSS 攻擊事件，所以都盡量不在 HTML 標籤上寫上 script 相關標籤，以免被埋入程式碼。</p>\n<p>關於 <a href=\"https://zh.wikipedia.org/wiki/%E8%B7%A8%E7%B6%B2%E7%AB%99%E6%8C%87%E4%BB%A4%E7%A2%BC\" target=\"_blank\" rel=\"noopener\">XSS 攻擊事件</a></p>\n<h2 id=\"addEventListener-的寫法\"><a href=\"#addEventListener-的寫法\" class=\"headerlink\" title=\"addEventListener 的寫法\"></a>addEventListener 的寫法</h2><p>比較新的新增事件的寫法如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"button\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"CLICK\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"button\"</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>對比之下，少了 <code>onclick</code> 這個事件在標籤上，但使用選取器 <code>querySelector</code> 的方式，變成下方程式碼寫法：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> button = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\".button\"</span>);</span><br><span class=\"line\">button.addEventListener(</span><br><span class=\"line\">  <span class=\"string\">\"click\"</span>,</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    alert(<span class=\"string\">\"HELLO WORLD!\"</span>);</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"literal\">false</span></span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n\n<p>所呈現出來的結果是相同的。</p>\n<p>CodePen: <a href=\"https://codepen.io/hnzxewqw/pen/OJVWrQE\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/OJVWrQE</a></p>\n<h2 id=\"監聽事件-addEventListener\"><a href=\"#監聽事件-addEventListener\" class=\"headerlink\" title=\"監聽事件 addEventListener\"></a>監聽事件 addEventListener</h2><p>這邊使用一個按鈕，在點擊時會產生監聽事件：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"button\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"CLICK\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"button\"</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>要在 button 上新增一個<strong>監聽事件</strong>時，JS 的起手式是這樣：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> el = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\".button\"</span>);</span><br><span class=\"line\">el.addEventListener(<span class=\"string\">\"click\"</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;&#125;, <span class=\"literal\">false</span>);</span><br></pre></td></tr></table></figure>\n\n<p>說明：<br>在選取的元素中新增事件時，後面的參數是要這樣寫，</p>\n<ol>\n<li><p>選擇要出現的事件，事件有很多種，不只是 <code>click</code>，可能還有 <code>hover</code> 也是，但 <code>click</code> 滿常使用的。</p>\n</li>\n<li><p>中間為匿名 function，帶入要出現的功能。</p>\n</li>\n<li><p>布林值，決定要不要產生冒泡事件，如果不指定，會自動產生冒泡事件。</p>\n<ul>\n<li>false (冒泡事件 Event Bubbling): 從指定的元素往外找 (預設為 false)</li>\n<li>true (捕獲事件 Event Capturing): 從最外層找到指定元素</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"onclick-與-addEventListener-的差別\"><a href=\"#onclick-與-addEventListener-的差別\" class=\"headerlink\" title=\"onclick 與 addEventListener 的差別\"></a>onclick 與 addEventListener 的差別</h2><ul>\n<li><p><code>onclick</code> 無法綁定兩個事件</p>\n</li>\n<li><p><code>addEventListener</code> 可以綁定多個事件</p>\n</li>\n</ul>\n<p>用程式碼來舉例，下面有兩個按鈕，分別為 btnA 跟 btnB，HTML 如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"button\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"btnA\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btnA\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"button\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"btnB\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btnB\"</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>這邊兩個監聽事件都做兩個 alert 來測試效果，</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// onclick 效果</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> btnA = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\".btnA\"</span>);</span><br><span class=\"line\">btnA.onclick = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  alert(<span class=\"string\">\"AA-1\"</span>);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">btnA.onclick = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  alert(<span class=\"string\">\"AA-2\"</span>);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//addEventListener效果</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> btnB = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\".btnB\"</span>);</span><br><span class=\"line\">btnB.addEventListener(</span><br><span class=\"line\">  <span class=\"string\">\"click\"</span>,</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    alert(<span class=\"string\">\"BB-1\"</span>);</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"literal\">false</span></span><br><span class=\"line\">);</span><br><span class=\"line\">btnB.addEventListener(</span><br><span class=\"line\">  <span class=\"string\">\"click\"</span>,</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    alert(<span class=\"string\">\"BB-2\"</span>);</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"literal\">false</span></span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n\n<p>透過 CodePen 測試可以看到，<code>onclick</code> 只能讀取到第二個 <code>alert</code> 事件，無法綁定多個，而 addEventListener 可以綁定多個 <code>alert</code> 事件。</p>\n<p>CodePen: <a href=\"https://codepen.io/hnzxewqw/pen/wvagLQq\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/wvagLQq</a></p>\n","categories":["JavaScript"],"tags":["JavaScript"]},{"title":"CSS 筆記 - 金魚系列 21 - 九種文字排列切版","url":"/css/20200803/1277340026/","content":"<p><img src=\"https://images.unsplash.com/photo-1574957747984-82c7fa4eef46?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80\" alt=\"newspaper\"></p>\n<h2 id=\"學習重點\"><a href=\"#學習重點\" class=\"headerlink\" title=\"學習重點\"></a>學習重點</h2><ul>\n<li>box-sizing:border-box</li>\n<li>CSS absolute 絕對定位</li>\n<li>CSS relative 相對定位</li>\n<li>flex-direction</li>\n<li>column-count</li>\n<li>column-gap</li>\n<li>偽元素</li>\n<li>:fitst-letter 選到字首的選取器</li>\n</ul>\n<h2 id=\"HTML-架構\"><a href=\"#HTML-架構\" class=\"headerlink\" title=\"HTML 架構\"></a>HTML 架構</h2><p>本次架構為下方所示，只有透過 CSS 的樣式設定來做九種變化。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"wrap\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"container\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>金魚系列 XXI - 文字排版<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"content\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>文字段落<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>文字段落<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"樣式一\"><a href=\"#樣式一\" class=\"headerlink\" title=\"樣式一\"></a>樣式一</h2><p><img src=\"https://i.imgur.com/i3Abuax.png\" alt=\"text01\"></p>\n<ul>\n<li>學習到使用 column-count 設定欄寬與 column-gap 欄寬間距的使用。</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.content</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">66.66666%</span>;</span><br><span class=\"line\">  column-count: 2; //分成兩欄</span><br><span class=\"line\">  column-gap: 5%; //欄寬距離</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>CodePen <a href=\"https://codepen.io/hnzxewqw/pen/KKzPvZd\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/KKzPvZd</a></p>\n<h2 id=\"樣式二\"><a href=\"#樣式二\" class=\"headerlink\" title=\"樣式二\"></a>樣式二</h2><p><img src=\"https://i.imgur.com/4xwJ0CO.png\" alt=\"text02\"></p>\n<ul>\n<li>float 有時候還是很好用的!</li>\n</ul>\n<p>CodePen <a href=\"https://codepen.io/hnzxewqw/pen/YzqKxYj\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/YzqKxYj</a></p>\n<h2 id=\"樣式三\"><a href=\"#樣式三\" class=\"headerlink\" title=\"樣式三\"></a>樣式三</h2><p><img src=\"https://i.imgur.com/kBhlt4B.png\" alt=\"text03\"></p>\n<ul>\n<li>偽元素 <code>::before</code> ， <code>::after</code> 寫錯效果差很多！</li>\n</ul>\n<p>CodePen <a href=\"https://codepen.io/hnzxewqw/pen/NWNKvyK\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/NWNKvyK</a></p>\n<h2 id=\"樣式四\"><a href=\"#樣式四\" class=\"headerlink\" title=\"樣式四\"></a>樣式四</h2><p><img src=\"https://i.imgur.com/87d0t1N.png\" alt=\"text04\"></p>\n<ul>\n<li>絕對定位置中對齊的使用。</li>\n</ul>\n<p>CodePen <a href=\"https://codepen.io/hnzxewqw/pen/ExKYvQX\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/ExKYvQX</a></p>\n<h2 id=\"樣式五\"><a href=\"#樣式五\" class=\"headerlink\" title=\"樣式五\"></a>樣式五</h2><p><img src=\"https://i.imgur.com/dcMlEbV.png\" alt=\"text05\"></p>\n<ul>\n<li>使用 float。</li>\n<li>偽元素</li>\n<li>絕對定位</li>\n<li>column-count</li>\n<li>column-gap</li>\n<li><del>國家地理系列</del></li>\n</ul>\n<p>CodePen <a href=\"https://codepen.io/hnzxewqw/pen/MWygvVe\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/MWygvVe</a></p>\n<h2 id=\"樣式六\"><a href=\"#樣式六\" class=\"headerlink\" title=\"樣式六\"></a>樣式六</h2><p><img src=\"https://i.imgur.com/y9Sc7by.png\" alt=\"text06\"></p>\n<ul>\n<li>tranform:rotate()</li>\n<li>絕對定位</li>\n</ul>\n<p>CodePen <a href=\"https://codepen.io/hnzxewqw/pen/gOrYxeE\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/gOrYxeE</a></p>\n<h2 id=\"樣式七\"><a href=\"#樣式七\" class=\"headerlink\" title=\"樣式七\"></a>樣式七</h2><p><img src=\"https://i.imgur.com/e7vddM4.png\" alt=\"text07\"></p>\n<ul>\n<li><a href=\"https://www.minwt.com/webdesign-dev/css/18320.html\" target=\"_blank\" rel=\"noopener\">CSS3 屬性 order</a></li>\n</ul>\n<p>CodePen <a href=\"https://codepen.io/hnzxewqw/pen/MWygvGj\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/MWygvGj</a></p>\n<h2 id=\"樣式八\"><a href=\"#樣式八\" class=\"headerlink\" title=\"樣式八\"></a>樣式八</h2><p><img src=\"https://i.imgur.com/h35whKU.png\" alt=\"text08\"></p>\n<ul>\n<li>transform-origin</li>\n<li>transform:translateY()</li>\n</ul>\n<p>CodePen <a href=\"https://codepen.io/hnzxewqw/pen/JjXPyvM\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/JjXPyvM</a></p>\n<h2 id=\"樣式九\"><a href=\"#樣式九\" class=\"headerlink\" title=\"樣式九\"></a>樣式九</h2><p><img src=\"https://i.imgur.com/0u0TDDm.png\" alt=\"text09\"></p>\n<ul>\n<li>絕對定位與相對定位的應用</li>\n<li>flex</li>\n<li>overflow:hidden</li>\n<li>text-shadow</li>\n</ul>\n<p>CodePen <a href=\"https://codepen.io/hnzxewqw/pen/VwaZzxB\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/VwaZzxB</a></p>\n<h2 id=\"結語\"><a href=\"#結語\" class=\"headerlink\" title=\"結語\"></a>結語</h2><p>看似簡單的問字排版，但卻暗藏了一些學問與小技巧，學起來真是賺到!</p>\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><ul>\n<li><a href=\"https://ithelp.ithome.com.tw/articles/10226460\" target=\"_blank\" rel=\"noopener\">金魚都能懂的這個網頁畫面怎麼切 : 文字排版-上集</a></li>\n<li><a href=\"https://ithelp.ithome.com.tw/articles/10226776\" target=\"_blank\" rel=\"noopener\">金魚都能懂的這個網頁畫面怎麼切 : 文字排版-中集</a></li>\n<li><a href=\"https://ithelp.ithome.com.tw/articles/10226789\" target=\"_blank\" rel=\"noopener\">金魚都能懂的這個網頁畫面怎麼切 : 文字排版-下集</a></li>\n<li><a href=\"https://ithelp.ithome.com.tw/articles/10227531\" target=\"_blank\" rel=\"noopener\">金魚都能懂的這個網頁畫面怎麼切 : 文字排版-完結</a></li>\n</ul>\n","categories":["CSS"],"tags":["CSS"]},{"title":"Google Maps API 筆記 - 載入地圖起手式 Google Maps Embed API","url":"/Google-Map-API/20200802/4247328380/","content":"<p><img src=\"https://images.unsplash.com/photo-1548345680-f5475ea5df84?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1352&q=80\" alt=\"google maps\"></p>\n<p>地圖應用已經廣泛的在各產業結合，許多服務都需要使用 Google Maps，剛好專案上有機會來研究，就來做個筆記。</p>\n<h2 id=\"申請-Google-API\"><a href=\"#申請-Google-API\" class=\"headerlink\" title=\"申請 Google API\"></a>申請 Google API</h2><p>自從 2018 年 Google Maps 服務開始收費後，就必須要有一個 API 才能使用提供的服務，有 Google 帳號就可以申請，至於申請細節可以看<a href=\"https://developers.google.com/maps/documentation/embed/get-api-key\" target=\"_blank\" rel=\"noopener\">官網</a>或參考<a href=\"https://www.wfublog.com/2018/12/google-api-key-activate-quota.html\" target=\"_blank\" rel=\"noopener\">這篇</a>。</p>\n<p>有幾點要注意：</p>\n<ol>\n<li>每個月有 200 美元的額度可以使用，只要單月不超過免費點擊次數(28,000 次)，就不會被收費。</li>\n<li>因為是自己研究與純練習，所以在<strong>應用程式限制</strong>的地方我有限制指定網域。</li>\n<li>需要綁定信用卡，但如果沒有繳費，只是會出現浮水印而已，其他功能正常。</li>\n<li>API 金鑰取得後，務必保存好，避免被他人存取使用，導致會有帳單產生。</li>\n<li>可設定單日上限次數，避免一個月超過免費額度。</li>\n</ol>\n<p>這裡就不贅述 API 申請流程與設定部分。</p>\n<h2 id=\"Google-Maps-Embed-API\"><a href=\"#Google-Maps-Embed-API\" class=\"headerlink\" title=\"Google Maps Embed API\"></a>Google Maps Embed API</h2><p>在 Google Maps 有 Google Maps Embed API 選項，選擇後可以看到這個頁面，</p>\n<p><img src=\"https://i.imgur.com/uYyu4ZZ.png\" alt=\"Google Maps Embed API\"></p>\n<p>會看到下方是使用 <code>&lt;iframe&gt;</code> 的方式嵌入網頁的，</p>\n<p>填入金鑰以及地點，執行後就會看到網頁出現地圖，並且按照標示我們輸入的地址或地點，網址 src 的 URL，須按照 Google Maps Embed API 的要求撰寫：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://www.google.com/maps/embed/v1/模式?key=你的金鑰&amp;參數</span><br></pre></td></tr></table></figure>\n\n<p>有分幾個模式，來看一下。</p>\n<h3 id=\"place-地點模式\"><a href=\"#place-地點模式\" class=\"headerlink\" title=\"place 地點模式\"></a>place 地點模式</h3><p>使用 place 時，後方會用 <code>q</code> 參數定義要在地圖上著重展示的地點，若有遇到「空格」，可用 <code>+</code> 號表示，例如，如果要找<strong>衛生福利部</strong>，就在上方頁面框輸入該名稱，地圖會自動跳到所搜尋的地點，並且要求填入 API key，完成後會出現一串網址如下方所示(所輸入的地點會變成一串亂碼，這邊就用衛生福利部代替)，只要複製該網址貼到編輯器，再到限制的網域查看，就可以看到其結果囉!</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">iframe</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">width</span>=<span class=\"string\">\"600\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">height</span>=<span class=\"string\">\"450\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">frameborder</span>=<span class=\"string\">\"0\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">style</span>=<span class=\"string\">\"border:0\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">src</span>=<span class=\"string\">\"https://www.google.com/maps/embed/v1/place?key=你的金鑰</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">    &amp;q=衛生福利部\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">allowfullscreen</span></span></span><br><span class=\"line\"><span class=\"tag\">&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><a href=\"https://hsuchihting.github.io/GoogleMapAPI_Practice/googleMapPlace.html\" target></a></p>\n<p><a href=\"https://hsuchihting.github.io/GoogleMapAPI_Practice/googleMapPlace.html\" title=\"Place Mode\" target=\"_blank\">Place Demo</a></p>\n<h3 id=\"Search-搜尋模式\"><a href=\"#Search-搜尋模式\" class=\"headerlink\" title=\"Search 搜尋模式\"></a>Search 搜尋模式</h3><p>此模式設定方式與地點模式相同，官方範例是可以搜尋指定地點附近的餐廳或是商店，有多三個參數，例如我今天想找在<strong>台北捷運昆陽站附近 7-11</strong>(這是搜尋關鍵字內容)，就會得到下方網址：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">iframe</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">width</span>=<span class=\"string\">\"600\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">height</span>=<span class=\"string\">\"450\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">frameborder</span>=<span class=\"string\">\"0\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">style</span>=<span class=\"string\">\"border:0\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">src</span>=<span class=\"string\">\"https://www.google.com/maps/embed/v1/search?q=台北捷運昆陽站附近 7-11&amp;key=你的金鑰\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">allowfullscreen</span></span></span><br><span class=\"line\"><span class=\"tag\">&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>可加入的參數：</p>\n<ul>\n<li>q：搜尋的關鍵詞 ( 剛剛你填寫的內容 )。</li>\n<li>zoom：地圖的縮放大小，範圍從 0 到 21。</li>\n<li>center：中心點經緯度。</li>\n</ul>\n<p><a href=\"https://hsuchihting.github.io/GoogleMapAPI_Practice/googleMapSearch.html\" title=\"Search Mode\" target=\"_blank\">Search Demo</a></p>\n<h3 id=\"directions-路線規劃模式\"><a href=\"#directions-路線規劃模式\" class=\"headerlink\" title=\"directions 路線規劃模式\"></a>directions 路線規劃模式</h3><p>只要在網頁輸入<strong>起始地點 Origin</strong> 跟<strong>抵達地點 Destination</strong>，就可以了</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">iframe</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">width</span>=<span class=\"string\">\"600\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">height</span>=<span class=\"string\">\"450\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">frameborder</span>=<span class=\"string\">\"0\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">style</span>=<span class=\"string\">\"border:0\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">src</span>=<span class=\"string\">\"https://www.google.com/maps/embed/v1/directions?origin=衛生福利部&amp;destination=台北捷運昆陽站&amp;key=你的金鑰\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">allowfullscreen</span></span></span><br><span class=\"line\"><span class=\"tag\">&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><a href=\"https://hsuchihting.github.io/GoogleMapAPI_Practice/googleMapDirections.html\" title=\"Direction Mode\" target=\"_blank\">Direction Demo</a></p>\n<h3 id=\"streetview-街景服務模式\"><a href=\"#streetview-街景服務模式\" class=\"headerlink\" title=\"streetview 街景服務模式\"></a>streetview 街景服務模式</h3><p>在 location 的搜尋框內輸入準確的地址，為什麼是準確地址?原因是倘若今天搜尋總統府，會跑到總統府裡面，但我可能只是要搜尋總統府廣場，所以要準確的輸入搜尋關鍵字，不過 Google 很貼心會自己跑出對應的關鍵字，一樣會得到相對網址。</p>\n<blockquote>\n<p>pano：特定的全景 ID，如果沒有 location 一定要有這個參數。</p>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">iframe</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">width</span>=<span class=\"string\">\"600\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">height</span>=<span class=\"string\">\"450\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">frameborder</span>=<span class=\"string\">\"0\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">style</span>=<span class=\"string\">\"border:0\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">src</span>=<span class=\"string\">\"https://www.google.com/maps/embed/v1/streetview?location=25.0399%2C121.5127&amp;key=你的金鑰\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">allowfullscreen</span></span></span><br><span class=\"line\"><span class=\"tag\">&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>這邊會出現以下的資訊。</p>\n<ul>\n<li>location：經緯度，以逗號分隔 ( 必須 )。</li>\n</ul>\n<p>可加入的參數：</p>\n<ul>\n<li><p>heading：從北方順時針旋轉的角度指出相機指南針所指的方向 ( -180 ~ 360 )。</p>\n</li>\n<li><p>pitch：指定相機往上或往下的角度，預設為 0 ( -90 ~ 90 )。</p>\n</li>\n<li><p>fov：影像的水平視野，數字越大視野越廣，預設為 90 ( 10 ~ 100 )。</p>\n</li>\n<li><p>language：定義 UI 元素以及地圖方塊上顯示的標籤要使用的語言。</p>\n</li>\n<li><p>region：根據地緣政治敏感度，定義要顯示的適當邊界與標籤。</p>\n<p><a href=\"https://hsuchihting.github.io/GoogleMapAPI_Practice/googleMapStreetview.html\" title=\"Streetview Mode\" target=\"_blank\">Streetview Demo</a></p>\n</li>\n</ul>\n<h3 id=\"View-檢視模式\"><a href=\"#View-檢視模式\" class=\"headerlink\" title=\"View 檢視模式\"></a>View 檢視模式</h3><p>會得到一個沒有標記的地圖，網址如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">iframe</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">width</span>=<span class=\"string\">\"600\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">height</span>=<span class=\"string\">\"450\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">frameborder</span>=<span class=\"string\">\"0\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">style</span>=<span class=\"string\">\"border:0\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">src</span>=<span class=\"string\">\"https://www.google.com/maps/embed/v1/view?zoom=17&amp;center=25.0399%2C121.5127&amp;key=你的金鑰\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">allowfullscreen</span></span></span><br><span class=\"line\"><span class=\"tag\">&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>其中有看到幾個參數:</p>\n<ul>\n<li>center：中心點經緯度 ( 必須 )。</li>\n<li>zoom：地圖縮放大小，範圍從 0 到 21。</li>\n</ul>\n<p>可加入的參數：</p>\n<ul>\n<li><p>maptype：定義載入的地圖方塊類型，包含 roadmap 和 satellite ( 衛星空照 )。</p>\n</li>\n<li><p>language：定義 UI 元素以及地圖方塊上顯示的標籤要使用的語言。</p>\n</li>\n<li><p>region：根據地緣政治敏感度，定義要顯示的適當邊界與標籤。</p>\n<p><a href=\"https://hsuchihting.github.io/GoogleMapAPI_Practice/googleMapPlace.html\" title=\"View Mode\" target=\"_blank\">View Demo</a></p>\n</li>\n</ul>\n<p>以上就是透過 Google Maps Embed API 來顯示地圖。</p>\n<blockquote>\n<p>補充：如果是輸入中文，出來的結果都會是亂碼，以上範例是將亂碼位置用中文呈現。</p>\n</blockquote>\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><ul>\n<li><a href=\"https://www.oxxostudio.tw/articles/201707/google-maps-1.html\" target=\"_blank\" rel=\"noopener\">Google Maps API - 網頁載入地圖 ( 起手式 )</a></li>\n<li><a href=\"https://developers.google.com/maps/documentation/embed/start\" target=\"_blank\" rel=\"noopener\">Google Maps Embed API</a></li>\n</ul>\n","categories":["Google Map API"],"tags":["JavaScript","Google Map API"]},{"title":"CSS 筆記 - 金魚系列 20 - 不規則邊緣","url":"/css/20200731/3999112309/","content":"<p><img src=\"https://i.imgur.com/bWmVyGC.png\" alt=\"pic\"></p>\n<p>這次練習是在 HTML 架構下沒有加任何標籤，但要做到區塊間不規則的圖案。</p>\n<h2 id=\"學習重點\"><a href=\"#學習重點\" class=\"headerlink\" title=\"學習重點\"></a>學習重點</h2><ul>\n<li>CSS absolute 絕對定位</li>\n<li>CSS relative 相對定位</li>\n<li>Flex</li>\n<li>偽元素</li>\n<li>transform: translate() 位移運用</li>\n<li>box-shadow 應用</li>\n</ul>\n<h2 id=\"HTML-架構\"><a href=\"#HTML-架構\" class=\"headerlink\" title=\"HTML 架構\"></a>HTML 架構</h2><ul>\n<li>需要一張 banner 圖片。</li>\n<li>並且下方接一個文字區域，該區域內分為左右兩欄。</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"banner\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"logo\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fas fa-plane-departure\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span>NICEPLANE<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"slogan\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>What Wonderful Holiday<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">class</span>=<span class=\"string\">\"slogan\"</span>&gt;</span>Your Whole World In Your Hands<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"section\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"container\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>金魚系列 XX (羅馬字 20)<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">        交通簡介眼睛，打了各項爸爸，沒有加入時間重大球隊健康不願病毒我覺得詳細取得，瀏覽次數業主研發拒絶這裡標誌最好的，改變性別報告，把握英雄，權威文檔相當把它筆記本這段平時供求報名相信不能，回覆女友滑鼠反對節省對待至今內容簡介結果財產上漲檔案焦點，在我另一，新。</span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">        雖然通用主席什麼是難得評價包含主營不出辛苦，書庫權利造成暴力網頁班加速幾乎見到條款漸漸把它操作系統，學科市委要有，少女國語身份魯蛇窗口道德傳說辦公室製作推薦公司舉行一口關於，不必民族交給原則二手讓你改變三人語文患者裡面依舊近年來也有，都不交流是不是一系列，大盤崗位一款只好人家昨日勞動一半只有參加南方，姐姐構成一路感興趣結婚絶不始終出租漸漸億元語言語文是以規律，傢伙個人警察，採購不得破解達到，這時。</span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>不規則邊緣切版<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">        很快版面充分先進好多技術這麼多不肯解壓密碼像素刪除，效果土地，以往倒是連續眼光難得列表進去新鮮有效天空資格搜尋更新建材充滿，我還各級說明本報希望無人提前的話委託發現，害怕眼神果然電力對了植物早已的是外觀觀眾健康抽菸區關西北方，美容指數，電池地區只需，去年。</span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">        頻道爆炸上去貸款你好精美主演著名，便是眾人小子家族加盟緊張職務魔法熱線最佳補充，但我一場靈魂期待，流程首頁網易，和平島一部分只不過用於透露開發商貸款不僅四個求購，首頁本次鼓勵我來重點，怎麼辦輕鬆主流未來，主體故障幹什麼，積極員工中心你好出發網路，地理論壇。</span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>架構與樣式初步設定後會變下方這樣：</p>\n<p><img src=\"https://i.imgur.com/a885rFn.jpg\" alt=\"pic\"></p>\n<h2 id=\"來到重點\"><a href=\"#來到重點\" class=\"headerlink\" title=\"來到重點\"></a>來到重點</h2><p>使用 box-shadow 來做成不規則邊緣效果。</p>\n<ul>\n<li>使用 <code>.section</code> 區塊做一個偽元素，並使其對齊 <code>.section</code> 正中央，使用 <code>transform:translateY()</code>，往上 50% 做位移。</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.section</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#eeeeee</span>;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">  &amp;::after &#123;</span><br><span class=\"line\">    <span class=\"selector-tag\">content</span>: \"\";</span><br><span class=\"line\">    <span class=\"selector-tag\">display</span>: <span class=\"selector-tag\">block</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">position</span>: <span class=\"selector-tag\">absolute</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">top</span>: 0;</span><br><span class=\"line\">    <span class=\"selector-tag\">left</span>: 50%;</span><br><span class=\"line\">    <span class=\"selector-tag\">width</span>: 100<span class=\"selector-tag\">px</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">height</span>: 100<span class=\"selector-tag\">px</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">border-radius</span>: 50%;</span><br><span class=\"line\">    <span class=\"selector-tag\">background-color</span>: <span class=\"selector-tag\">red</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">transform</span>: <span class=\"selector-tag\">translateY</span>(<span class=\"selector-tag\">-50</span>%);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>就會得到下圖結果：</p>\n<p><img src=\"https://i.imgur.com/TXgOOas.png\" alt=\"transform\"></p>\n<h2 id=\"box-shadow-的特性\"><a href=\"#box-shadow-的特性\" class=\"headerlink\" title=\"box-shadow 的特性\"></a>box-shadow 的特性</h2><p>使用 box-shadow 的特性來達到遮罩與不規則的效果。</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">box-shadow: X軸位移| Y軸位移| 模糊值|擴散值|大小|顏色</span><br></pre></td></tr></table></figure>\n\n<p>剛剛已經做了一個實體圓形，透過陰影的特性，X 軸向右依序向右推 100px，並且不要模糊，不要擴散，不要改變原尺寸大小，顏色改成橘色，</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">box-shadow</span>: 100<span class=\"selector-tag\">px</span> 0 0 0 <span class=\"selector-tag\">orange</span>, 200<span class=\"selector-tag\">px</span> 0 0 0 <span class=\"selector-tag\">orange</span>, 300<span class=\"selector-tag\">px</span> 0 0 0 <span class=\"selector-tag\">orange</span>;</span><br></pre></td></tr></table></figure>\n\n<p>就會變成下圖：</p>\n<p><img src=\"https://i.imgur.com/TLfBcyU.png\" alt=\"box-shadow\"></p>\n<p>確認後，就把顏色改成與 <code>.section</code>　顏色相同即可，再依照自己喜歡的位置與組成的大小就可以排成喜歡的樣式，不同邊就把 X 軸改為負值，就會變對稱顯示，如果想多一點層次，讓偽元素底下的陰影在加一層陰影，只要再多下一層不同顏色與位置的陰影即可。</p>\n<p>如下方樣式：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"> <span class=\"selector-tag\">box-shadow</span>:</span><br><span class=\"line\"> //右側陰影區塊</span><br><span class=\"line\"> 70<span class=\"selector-tag\">px</span> 10<span class=\"selector-tag\">px</span> 0 <span class=\"selector-tag\">-5px</span> <span class=\"selector-id\">#eeeeee</span>,</span><br><span class=\"line\">             150<span class=\"selector-tag\">px</span> <span class=\"selector-tag\">-5px</span> 0 3<span class=\"selector-tag\">px</span> <span class=\"selector-id\">#eeeeee</span>,</span><br><span class=\"line\">             250<span class=\"selector-tag\">px</span> 0 0 10<span class=\"selector-tag\">px</span> <span class=\"selector-id\">#eeeeee</span>,</span><br><span class=\"line\">             300<span class=\"selector-tag\">px</span> <span class=\"selector-tag\">-10px</span> 0 5<span class=\"selector-tag\">px</span> <span class=\"selector-id\">#eeeeee</span>,</span><br><span class=\"line\">             350<span class=\"selector-tag\">px</span> <span class=\"selector-tag\">-20px</span> 0 <span class=\"selector-tag\">-3px</span> <span class=\"selector-id\">#eeeeee</span>,</span><br><span class=\"line\">             450<span class=\"selector-tag\">px</span> 0 0 10<span class=\"selector-tag\">px</span> <span class=\"selector-id\">#eeeeee</span>,</span><br><span class=\"line\">             540<span class=\"selector-tag\">px</span> 10<span class=\"selector-tag\">px</span> 0 <span class=\"selector-tag\">-5px</span> <span class=\"selector-id\">#eeeeee</span>,</span><br><span class=\"line\">             620<span class=\"selector-tag\">px</span> <span class=\"selector-tag\">-5px</span> 0 3<span class=\"selector-tag\">px</span> <span class=\"selector-id\">#eeeeee</span>,</span><br><span class=\"line\">             700<span class=\"selector-tag\">px</span> 0 0 10<span class=\"selector-tag\">px</span> <span class=\"selector-id\">#eeeeee</span>,</span><br><span class=\"line\">             780<span class=\"selector-tag\">px</span> <span class=\"selector-tag\">-10px</span> 0 5<span class=\"selector-tag\">px</span> <span class=\"selector-id\">#eeeeee</span>,</span><br><span class=\"line\">             860<span class=\"selector-tag\">px</span> <span class=\"selector-tag\">-20px</span> 0 <span class=\"selector-tag\">-3px</span> <span class=\"selector-id\">#eeeeee</span>,</span><br><span class=\"line\">             950<span class=\"selector-tag\">px</span> 0 0 10<span class=\"selector-tag\">px</span> <span class=\"selector-id\">#eeeeee</span>,</span><br><span class=\"line\">//左側陰影區塊</span><br><span class=\"line\">             <span class=\"selector-tag\">-70px</span> 10<span class=\"selector-tag\">px</span> 0 <span class=\"selector-tag\">-5px</span> <span class=\"selector-id\">#eeeeee</span>,</span><br><span class=\"line\">             <span class=\"selector-tag\">-150px</span> <span class=\"selector-tag\">-5px</span> 0 3<span class=\"selector-tag\">px</span> <span class=\"selector-id\">#eeeeee</span>,</span><br><span class=\"line\">             <span class=\"selector-tag\">-250px</span> 0 0 10<span class=\"selector-tag\">px</span> <span class=\"selector-id\">#eeeeee</span>,</span><br><span class=\"line\">             <span class=\"selector-tag\">-300px</span> <span class=\"selector-tag\">-10px</span> 0 5<span class=\"selector-tag\">px</span> <span class=\"selector-id\">#eeeeee</span>,</span><br><span class=\"line\">             <span class=\"selector-tag\">-350px</span> <span class=\"selector-tag\">-20px</span> 0 <span class=\"selector-tag\">-3px</span> <span class=\"selector-id\">#eeeeee</span>,</span><br><span class=\"line\">             <span class=\"selector-tag\">-450px</span> 0 0 10<span class=\"selector-tag\">px</span> <span class=\"selector-id\">#eeeeee</span>,</span><br><span class=\"line\">             <span class=\"selector-tag\">-540px</span> 10<span class=\"selector-tag\">px</span> 0 <span class=\"selector-tag\">-5px</span> <span class=\"selector-id\">#eeeeee</span>,</span><br><span class=\"line\">             <span class=\"selector-tag\">-620px</span> <span class=\"selector-tag\">-5px</span> 0 3<span class=\"selector-tag\">px</span> <span class=\"selector-id\">#eeeeee</span>,</span><br><span class=\"line\">             <span class=\"selector-tag\">-700px</span> 0 0 10<span class=\"selector-tag\">px</span> <span class=\"selector-id\">#eeeeee</span>,</span><br><span class=\"line\">             <span class=\"selector-tag\">-780px</span> <span class=\"selector-tag\">-10px</span> 0 5<span class=\"selector-tag\">px</span> <span class=\"selector-id\">#eeeeee</span>,</span><br><span class=\"line\">             <span class=\"selector-tag\">-860px</span> <span class=\"selector-tag\">-20px</span> 0 <span class=\"selector-tag\">-3px</span> <span class=\"selector-id\">#eeeeee</span>,</span><br><span class=\"line\">             <span class=\"selector-tag\">-950px</span> 0 0 10<span class=\"selector-tag\">px</span> <span class=\"selector-id\">#eeeeee</span>,</span><br><span class=\"line\">//底下模糊黑色陰影區塊</span><br><span class=\"line\">              70<span class=\"selector-tag\">px</span> 10<span class=\"selector-tag\">px</span> 5<span class=\"selector-tag\">px</span> <span class=\"selector-tag\">-5px</span> <span class=\"selector-id\">#333</span>,</span><br><span class=\"line\">              150<span class=\"selector-tag\">px</span> <span class=\"selector-tag\">-5px</span> 5<span class=\"selector-tag\">px</span> 3<span class=\"selector-tag\">px</span> <span class=\"selector-id\">#333</span>,</span><br><span class=\"line\">              250<span class=\"selector-tag\">px</span> 0 5<span class=\"selector-tag\">px</span> 10<span class=\"selector-tag\">px</span> <span class=\"selector-id\">#333</span>,</span><br><span class=\"line\">              300<span class=\"selector-tag\">px</span> <span class=\"selector-tag\">-10px</span> 5<span class=\"selector-tag\">px</span> 5<span class=\"selector-tag\">px</span> <span class=\"selector-id\">#333</span>,</span><br><span class=\"line\">              350<span class=\"selector-tag\">px</span> <span class=\"selector-tag\">-20px</span> 5<span class=\"selector-tag\">px</span> <span class=\"selector-tag\">-3px</span> <span class=\"selector-id\">#333</span>,</span><br><span class=\"line\">              450<span class=\"selector-tag\">px</span> 0 5<span class=\"selector-tag\">px</span> 10<span class=\"selector-tag\">px</span> <span class=\"selector-id\">#333</span>,</span><br><span class=\"line\">              540<span class=\"selector-tag\">px</span> 10<span class=\"selector-tag\">px</span> 5<span class=\"selector-tag\">px</span> <span class=\"selector-tag\">-5px</span> <span class=\"selector-id\">#333</span>,</span><br><span class=\"line\">              620<span class=\"selector-tag\">px</span> <span class=\"selector-tag\">-5px</span> 5<span class=\"selector-tag\">px</span> 3<span class=\"selector-tag\">px</span> <span class=\"selector-id\">#333</span>,</span><br><span class=\"line\">              700<span class=\"selector-tag\">px</span> 0 5<span class=\"selector-tag\">px</span> 10<span class=\"selector-tag\">px</span> <span class=\"selector-id\">#333</span>,</span><br><span class=\"line\">              780<span class=\"selector-tag\">px</span> <span class=\"selector-tag\">-10px</span> 5<span class=\"selector-tag\">px</span> 5<span class=\"selector-tag\">px</span> <span class=\"selector-id\">#333</span>,</span><br><span class=\"line\">              860<span class=\"selector-tag\">px</span> <span class=\"selector-tag\">-20px</span> 5<span class=\"selector-tag\">px</span> <span class=\"selector-tag\">-3px</span> <span class=\"selector-id\">#333</span>,</span><br><span class=\"line\">              950<span class=\"selector-tag\">px</span> 0 5<span class=\"selector-tag\">px</span> 10<span class=\"selector-tag\">px</span> <span class=\"selector-id\">#333</span>,</span><br><span class=\"line\">              <span class=\"selector-tag\">-70px</span> 10<span class=\"selector-tag\">px</span> 5<span class=\"selector-tag\">px</span> <span class=\"selector-tag\">-5px</span> <span class=\"selector-id\">#333</span>,</span><br><span class=\"line\">              <span class=\"selector-tag\">-150px</span> <span class=\"selector-tag\">-5px</span> 5<span class=\"selector-tag\">px</span> 3<span class=\"selector-tag\">px</span> <span class=\"selector-id\">#333</span>,</span><br><span class=\"line\">              <span class=\"selector-tag\">-250px</span> 0 5<span class=\"selector-tag\">px</span> 10<span class=\"selector-tag\">px</span> <span class=\"selector-id\">#333</span>,</span><br><span class=\"line\">              <span class=\"selector-tag\">-300px</span> <span class=\"selector-tag\">-10px</span> 5<span class=\"selector-tag\">px</span> 5<span class=\"selector-tag\">px</span> <span class=\"selector-id\">#333</span>,</span><br><span class=\"line\">              <span class=\"selector-tag\">-700px</span> 0 5<span class=\"selector-tag\">px</span> 10<span class=\"selector-tag\">px</span> <span class=\"selector-id\">#333</span>,</span><br><span class=\"line\">              <span class=\"selector-tag\">-780px</span> <span class=\"selector-tag\">-10px</span> 5<span class=\"selector-tag\">px</span> 5<span class=\"selector-tag\">px</span> <span class=\"selector-id\">#333</span>,</span><br><span class=\"line\">              <span class=\"selector-tag\">-860px</span> <span class=\"selector-tag\">-20px</span> 5<span class=\"selector-tag\">px</span> <span class=\"selector-tag\">-3px</span> <span class=\"selector-id\">#333</span>,</span><br><span class=\"line\">              <span class=\"selector-tag\">-950px</span> 0 5<span class=\"selector-tag\">px</span> 10<span class=\"selector-tag\">px</span> <span class=\"selector-id\">#333</span>;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n\n<p>得到結果會這樣…</p>\n<p><img src=\"https://i.imgur.com/1LVuZOQ.png\" alt=\"shadow\"></p>\n<p>我只要保留上方不規則邊緣，所以 <code>.section</code> 最上方用一塊色塊蓋掉，使用 <code>::before</code> 製作，最後調整 色塊與文字的階層位置就完成了!</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.section</span><span class=\"selector-pseudo\">::before</span> &#123;</span><br><span class=\"line\">    //色塊區域</span><br><span class=\"line\">    <span class=\"selector-tag\">content</span>: \"\";</span><br><span class=\"line\">    <span class=\"selector-tag\">width</span>: 100%;</span><br><span class=\"line\">    <span class=\"selector-tag\">height</span>: 100<span class=\"selector-tag\">px</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">background-color</span>: <span class=\"selector-id\">#eee</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">position</span>: <span class=\"selector-tag\">absolute</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">z-index</span>: 1;</span><br><span class=\"line\">    <span class=\"selector-tag\">top</span>: 0;</span><br><span class=\"line\">    <span class=\"selector-tag\">left</span>: 0;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">1200px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> auto;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">    <span class=\"attribute\">justify-content</span>: center;</span><br><span class=\"line\">    position: relative; //純粹改變接層，所以不做任何位移</span><br><span class=\"line\">    <span class=\"selector-tag\">z-index</span>: 2;</span><br></pre></td></tr></table></figure>\n\n<p>Codepen <a href=\"https://codepen.io/hnzxewqw/full/xxZvwEV\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/full/xxZvwEV</a></p>\n<h2 id=\"結語\"><a href=\"#結語\" class=\"headerlink\" title=\"結語\"></a>結語</h2><p>滿有趣的切版，但有點耗時，好處是可以對應 RWD 的效果，也練習到偽元素與 box-shadow 的特性。</p>\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><ul>\n<li><a href=\"https://ithelp.ithome.com.tw/articles/10226146\" target=\"_blank\" rel=\"noopener\">金魚都能懂的這個網頁畫面怎麼切 : 不規則邊緣</a></li>\n</ul>\n","categories":["CSS"],"tags":["CSS"]},{"title":"CSS 筆記 - 金魚系列 19 - 時間軸","url":"/css/20200730/820937718/","content":"<p><img src=\"https://i.imgur.com/MzyIW0C.png\" alt=\"timeline\"></p>\n<h2 id=\"學習重點\"><a href=\"#學習重點\" class=\"headerlink\" title=\"學習重點\"></a>學習重點</h2><ul>\n<li>flex 教學</li>\n<li>使用 absolute + margin auto 來達到 CSS 垂直置中效果</li>\n<li>float 教學</li>\n<li>absolute 絕對定位教學</li>\n<li>relative 絕對定位教學</li>\n<li>::before、::after 偽元素</li>\n<li>last-child()、nth-child() 選取器</li>\n</ul>\n<h2 id=\"HTML-架構\"><a href=\"#HTML-架構\" class=\"headerlink\" title=\"HTML 架構\"></a>HTML 架構</h2><ul>\n<li>因為時間軸可以看作清單列表，所以使用 li 來製作。</li>\n<li>要讓時間軸說明文字是可以點擊的，使用 a 連結。</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"wrap\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>金魚系列 XIX - 時間軸<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">class</span>=<span class=\"string\">\"text\"</span>&gt;</span></span><br><span class=\"line\">    圖形地球體育環境模組走進更新時間會員查找組成都能，目光尷尬部落房屋絶對感興趣證券市政府我是微笑移動當時做出，去年力量並非即使最高現金評價既然廠家資料庫，均為部隊尷尬沒有任何機會沒想到左右有限責任公司，招標時期還在提升關鍵能學到，一直也就任何人元素走出，圖。</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"timeline\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>時間軸標題<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">          信號儘快看見報導營養現金歷史碩士添加五年色彩學科市政府，兩次避免推廣玩家前面裡面試題同志以上原文日子反覆名字，中學集團教育訓練不承擔運用終於傳播，深刻溫州歲月你怎不來就是模型材料，把他預期品牌都在付出套件此刻畢業生分享完善，笑道詳細內容股份有限公司，很多。</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"CSS-樣式\"><a href=\"#CSS-樣式\" class=\"headerlink\" title=\"CSS 樣式\"></a>CSS 樣式</h2><ul>\n<li>先把初步的 CSS 樣式寫好。</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.timeline</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">padding-top</span>: <span class=\"number\">5%</span>;</span><br><span class=\"line\">   li &#123;</span><br><span class=\"line\">    <span class=\"selector-tag\">padding-top</span>: 25<span class=\"selector-tag\">px</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">padding-bottom</span>: 25<span class=\"selector-tag\">px</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">border-radius</span>: 10<span class=\"selector-tag\">px</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">width</span>: 50%;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"利用-nth-child-控制-li\"><a href=\"#利用-nth-child-控制-li\" class=\"headerlink\" title=\"利用 nth-child() 控制 li\"></a>利用 nth-child() 控制 li</h3><ul>\n<li>使用 nth-child() 選取器將 li 的<strong>基數列</strong> (odd) 跟<strong>偶數列</strong> (even) 分成左右兩邊，並推擠 100px 的空間。</li>\n<li>並將 a 連結加入樣式，因為此元素本身是行內元素，若沒有變成區塊元素，不會達到預設的效果。</li>\n<li>使偶數列往下移動 50% 的位置。</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.timeline</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">padding-top</span>: <span class=\"number\">5%</span>;</span><br><span class=\"line\">   a &#123;</span><br><span class=\"line\">    display: block; //要改成區塊元素</span><br><span class=\"line\">    <span class=\"selector-tag\">background-color</span>: <span class=\"selector-id\">#ffe033</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">border</span>: 2<span class=\"selector-tag\">px</span> <span class=\"selector-tag\">solid</span> <span class=\"selector-id\">#fff</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">padding</span>: 20<span class=\"selector-tag\">px</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">box-shadow</span>: 0 0 5<span class=\"selector-tag\">px</span> <span class=\"selector-id\">#666</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">border-radius</span>: 10<span class=\"selector-tag\">px</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">transition</span>: <span class=\"selector-tag\">all</span> 0<span class=\"selector-class\">.5s</span>;</span><br><span class=\"line\">    &amp;<span class=\"selector-pseudo\">:hover</span> &#123;</span><br><span class=\"line\">      <span class=\"attribute\">background-color</span>: <span class=\"number\">#fcea86</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">   <span class=\"selector-tag\">li</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">padding-top</span>: <span class=\"number\">25px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">padding-bottom</span>: <span class=\"number\">25px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">border-radius</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">       &amp;:nth-child(odd) &#123;</span><br><span class=\"line\">      <span class=\"selector-tag\">float</span>: <span class=\"selector-tag\">left</span>;</span><br><span class=\"line\">      <span class=\"selector-tag\">padding-right</span>: 100<span class=\"selector-tag\">px</span>;&#125;</span><br><span class=\"line\">        &amp;<span class=\"selector-pseudo\">:nth-child(even)</span> &#123;</span><br><span class=\"line\">      <span class=\"attribute\">float</span>: right;</span><br><span class=\"line\">      <span class=\"attribute\">padding-left</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateY</span>(<span class=\"number\">50%</span>);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"在基數列加上時間軸線條\"><a href=\"#在基數列加上時間軸線條\" class=\"headerlink\" title=\"在基數列加上時間軸線條\"></a>在基數列加上時間軸線條</h3><ul>\n<li>利用基數列的 li 後方，使用偽元素加上垂直線，並使用絕對定位讓其置中對齊。</li>\n<li>因線條是從 li 產生，所以相對定位在 li。</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\">&amp;<span class=\"selector-pseudo\">:nth-child(odd)</span> &#123;</span><br><span class=\"line\">     <span class=\"attribute\">float</span>: left;</span><br><span class=\"line\">     <span class=\"attribute\">padding-right</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">         &amp;::after &#123;</span><br><span class=\"line\">       <span class=\"selector-tag\">content</span>: \"\";</span><br><span class=\"line\">       <span class=\"selector-tag\">position</span>: <span class=\"selector-tag\">absolute</span>;</span><br><span class=\"line\">       <span class=\"selector-tag\">top</span>: 0;</span><br><span class=\"line\">       <span class=\"selector-tag\">right</span>: 0;</span><br><span class=\"line\">       <span class=\"selector-tag\">width</span>: 1<span class=\"selector-tag\">px</span>;</span><br><span class=\"line\">       <span class=\"selector-tag\">height</span>: 100%;</span><br><span class=\"line\">       <span class=\"selector-tag\">background-color</span>: <span class=\"selector-id\">#ffffff</span>;</span><br><span class=\"line\">     &#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"在時間軸線條上加上圓點與橫線，並使其置中對齊\"><a href=\"#在時間軸線條上加上圓點與橫線，並使其置中對齊\" class=\"headerlink\" title=\"在時間軸線條上加上圓點與橫線，並使其置中對齊\"></a>在時間軸線條上加上圓點與橫線，並使其置中對齊</h3><ul>\n<li>使用 li 的建立圓形的偽元素，並使其置中對齊。</li>\n<li>圓點完成後，使之對齊在線上，因為線條是使用基數列產生，所以選取的基數列與偶數列要做對齊。</li>\n<li>讓最後一個 li 的元素的下方區塊只有 50% 的空間。</li>\n<li>發現 li 的偽元素的 ::before 跟 ::after 都用完了，要產生橫線就拿 h2 來用(反正就是沒辦法用 li 就是了)。</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">li</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">padding-top</span>: <span class=\"number\">25px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">padding-bottom</span>: <span class=\"number\">25px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">  &amp;::before &#123;</span><br><span class=\"line\">    //圓點</span><br><span class=\"line\">    <span class=\"selector-tag\">content</span>: \"\";</span><br><span class=\"line\">    <span class=\"selector-tag\">position</span>: <span class=\"selector-tag\">absolute</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">top</span>: 0;</span><br><span class=\"line\">    <span class=\"selector-tag\">bottom</span>: 0;</span><br><span class=\"line\">    <span class=\"selector-tag\">margin</span>: <span class=\"selector-tag\">auto</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">width</span>: 20<span class=\"selector-tag\">px</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">height</span>: 20<span class=\"selector-tag\">px</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">border-radius</span>: 50%;</span><br><span class=\"line\">    <span class=\"selector-tag\">background-color</span>: <span class=\"selector-id\">#fff</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  &amp;<span class=\"selector-pseudo\">:nth-child(odd)</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">float</span>: left;</span><br><span class=\"line\">    <span class=\"attribute\">padding-right</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">    &amp; h2::after &#123;</span><br><span class=\"line\">      right: 0; //基數列橫線位置</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    &amp;<span class=\"selector-pseudo\">::after</span> &#123;</span><br><span class=\"line\">      content: \"\"; //繪製基數列橫線</span><br><span class=\"line\">      <span class=\"selector-tag\">position</span>: <span class=\"selector-tag\">absolute</span>;</span><br><span class=\"line\">      <span class=\"selector-tag\">top</span>: 0;</span><br><span class=\"line\">      <span class=\"selector-tag\">right</span>: 0;</span><br><span class=\"line\">      <span class=\"selector-tag\">width</span>: 1<span class=\"selector-tag\">px</span>;</span><br><span class=\"line\">      <span class=\"selector-tag\">height</span>: 100%;</span><br><span class=\"line\">      <span class=\"selector-tag\">background-color</span>: <span class=\"selector-id\">#ffffff</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    &amp;<span class=\"selector-pseudo\">::before</span> &#123;</span><br><span class=\"line\">      right: -10px; //基數列圓點位置</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  &amp;<span class=\"selector-pseudo\">:nth-child(even)</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">float</span>: right;</span><br><span class=\"line\">    <span class=\"attribute\">padding-left</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">    transform: translateY(50%); //偶數列往下移動 50% 空間</span><br><span class=\"line\">    &amp; <span class=\"selector-tag\">h2</span><span class=\"selector-pseudo\">::after</span> &#123;</span><br><span class=\"line\">      left: 0; //偶數列橫線位置</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    &amp;<span class=\"selector-pseudo\">:last-child</span> &#123;</span><br><span class=\"line\">      height: 50%; //最後一個偶數列下方空間</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    &amp;<span class=\"selector-pseudo\">::before</span> &#123;</span><br><span class=\"line\">      left: -10px; //偶數列圓點位置</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>最後細部的樣式就自行設定一下，就完成了！</p>\n<p>CodePen <a href=\"https://codepen.io/hnzxewqw/full/QWyXVQK\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/full/QWyXVQK</a></p>\n<h2 id=\"結語\"><a href=\"#結語\" class=\"headerlink\" title=\"結語\"></a>結語</h2><p>選取器與偽元素的使用固然方便，但對應的順序還需要多練習！</p>\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><ul>\n<li><a href=\"https://ithelp.ithome.com.tw/articles/10225133\" target=\"_blank\" rel=\"noopener\">金魚都能懂的這個網頁畫面怎麼切 : 時間軸怎麼切</a></li>\n</ul>\n","categories":["CSS"],"tags":["CSS"]},{"title":"CSS 筆記 - 金魚系列 18 - 旋轉拼接方塊","url":"/css/20200730/2398832915/","content":"<p><img src=\"https://i.imgur.com/qtBJNuG.png\" alt=\"cube\"></p>\n<h2 id=\"學習重點\"><a href=\"#學習重點\" class=\"headerlink\" title=\"學習重點\"></a>學習重點</h2><ul>\n<li><a href=\"https://ithelp.ithome.com.tw/articles/10217192\" target=\"_blank\" rel=\"noopener\">CSS class 選取器 - 切版與前端框架最常使用的 CSS 選取器</a></li>\n<li><a href=\"http://csscoke.com/2013/09/22/%E4%BD%BF%E7%94%A8before-%E8%88%87-after%E4%BE%86%E8%A3%BD%E4%BD%9C%E5%8F%AF%E5%88%97%E5%8D%B0%E7%9A%84logo%E5%9C%96%E7%89%87/\" target=\"_blank\" rel=\"noopener\">::before 是甚麼</a></li>\n<li><a href=\"https://ithelp.ithome.com.tw/articles/10222022\" target=\"_blank\" rel=\"noopener\">常用於超連結的動態僞類選取器 - 讓你網頁互動變豐富</a></li>\n<li><a href=\"https://ithelp.ithome.com.tw/articles/10227216\" target=\"_blank\" rel=\"noopener\">nth-child() 應用</a></li>\n</ul>\n<h2 id=\"切版小提示\"><a href=\"#切版小提示\" class=\"headerlink\" title=\"切版小提示\"></a>切版小提示</h2><ul>\n<li>讓畫面元素正常排列，並使結果有變化。</li>\n<li>使元素交錯。</li>\n</ul>\n<h2 id=\"HTML-結構\"><a href=\"#HTML-結構\" class=\"headerlink\" title=\"HTML 結構\"></a>HTML 結構</h2><ul>\n<li>因為是多個排列，這邊使用 li 來處理，以達到其效果。</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"wrap\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"cube\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"box1\"</span>&gt;</span>金魚系列 XVIII<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"box2\"</span>&gt;</span>旋轉拼接方塊<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"box3\"</span>&gt;</span>有切賺到<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"box4\"</span>&gt;</span>沒切沒差<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"box5\"</span>&gt;</span>但學很多<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"box6\"</span>&gt;</span>有益無弊<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"box7\"</span>&gt;</span>一天一切<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"box8\"</span>&gt;</span>身體健康<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"box9\"</span>&gt;</span>萬事如意<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"CSS-樣式初步設定\"><a href=\"#CSS-樣式初步設定\" class=\"headerlink\" title=\"CSS 樣式初步設定\"></a>CSS 樣式初步設定</h2><ul>\n<li>將 <code>.cube</code> 裡面的 li 橫向排列併斷行，因為要選轉，所以上下空間給予 100px 的空間。</li>\n<li>設定 li 的樣式，並給予外框看一下成品是否與預想相同。</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.cube</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">  <span class=\"attribute\">flex-wrap</span>: wrap;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">100px</span> <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  li &#123;</span><br><span class=\"line\">    <span class=\"selector-tag\">width</span>: 200<span class=\"selector-tag\">px</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">height</span>: 200<span class=\"selector-tag\">px</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">text-align</span>: <span class=\"selector-tag\">center</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">line-height</span>: 200<span class=\"selector-tag\">px</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">outline</span>: 1<span class=\"selector-tag\">px</span> <span class=\"selector-tag\">solid</span> <span class=\"selector-id\">#f00</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">margin</span>: 0 2% 4% 2%;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>得到如下方畫面。</p>\n<p><img src=\"https://i.imgur.com/6CHoGUJ.png\" alt=\"cube01\"></p>\n<h3 id=\"li-before-做欲選轉的方框\"><a href=\"#li-before-做欲選轉的方框\" class=\"headerlink\" title=\"li::before 做欲選轉的方框\"></a>li::before 做欲選轉的方框</h3><ul>\n<li>使用偽元素做新的背景，原因是等等要讓方框旋轉，但 li 若旋轉會無法達到預期效果。</li>\n<li>使偽元素的空間填滿 li 預設的尺寸，並定位於 li 的位置，再給予旋轉 45 度，變成菱形。</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">li</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">200px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">200px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">line-height</span>: <span class=\"number\">200px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">outline</span>: <span class=\"number\">1px</span> solid <span class=\"number\">#ccc</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> <span class=\"number\">2%</span> <span class=\"number\">4%</span> <span class=\"number\">2%</span>;</span><br><span class=\"line\">  position: relative; //偽元素父層</span><br><span class=\"line\">  &amp;<span class=\"selector-pseudo\">::before</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">content</span>: <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">    width: 100%; //填滿 li 的空間</span><br><span class=\"line\">    <span class=\"selector-tag\">height</span>: 100%;</span><br><span class=\"line\">    <span class=\"selector-tag\">outline</span>: 1<span class=\"selector-tag\">px</span> <span class=\"selector-tag\">solid</span> <span class=\"selector-tag\">blue</span>;</span><br><span class=\"line\">    position: absolute; //定位於 li</span><br><span class=\"line\">    <span class=\"selector-tag\">top</span>: 0;</span><br><span class=\"line\">    <span class=\"selector-tag\">left</span>: 0;</span><br><span class=\"line\">    <span class=\"selector-tag\">transform</span>: <span class=\"selector-tag\">rotate</span>(45<span class=\"selector-tag\">deg</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>完成後如下圖：</p>\n<p><img src=\"https://i.imgur.com/KDjGUDx.png\" alt=\"cube02\"></p>\n<h3 id=\"使用-nth-child-選擇器移動偽元素\"><a href=\"#使用-nth-child-選擇器移動偽元素\" class=\"headerlink\" title=\"使用 :nth-child() 選擇器移動偽元素\"></a>使用 :nth-child() 選擇器移動偽元素</h3><ul>\n<li>因為要讓第二排的第四到六個元素向右邊移動，所以要往左邊推空間。</li>\n<li>要把第三排的第六到九個元素回到原位，所以要左邊不要推空間。</li>\n<li>nth-child() 的算法可以看<a href=\"https://ithelp.ithome.com.tw/articles/10227216\" target=\"_blank\" rel=\"noopener\">這篇</a>。</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:nth-child(n</span> + 4) &#123;</span><br><span class=\"line\">  left: 153px; //讓第 4~6 向左偏移</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:nth-child(n</span> + 7) &#123;</span><br><span class=\"line\">  left: 0; //第 7~9 回到原來位置</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>得到畫面就會變這樣：</p>\n<p><img src=\"https://i.imgur.com/vM4Gvg8.png\" alt=\"cube03\"></p>\n<h3 id=\"改變顏色是在偽元素\"><a href=\"#改變顏色是在偽元素\" class=\"headerlink\" title=\"改變顏色是在偽元素\"></a>改變顏色是在偽元素</h3><ul>\n<li>最後是要改變方框的顏色，但因為旋轉的是<strong>偽元素</strong>，所以不能背景色要寫在偽元素上，並非 <code>.box</code> 上。</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.box1</span><span class=\"selector-pseudo\">::before</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#4dd0e1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.box2</span><span class=\"selector-pseudo\">::before</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#fff176</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.box3</span><span class=\"selector-pseudo\">::before</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#ff8e6c</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.box4</span><span class=\"selector-pseudo\">::before</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#c3a6f5</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.box5</span><span class=\"selector-pseudo\">::before</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#9ccc65</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.box6</span><span class=\"selector-pseudo\">::before</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#4dd0e1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.box7</span><span class=\"selector-pseudo\">::before</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#ffe817</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.box8</span><span class=\"selector-pseudo\">::before</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#f48fb1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.box9</span><span class=\"selector-pseudo\">::before</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#ebffd5</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>在將背景用 z-index 往後調整順序，讓文字往前。</li>\n<li>最後加上自己想要做的效果。</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\">&amp;<span class=\"selector-pseudo\">::before</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">content</span>: <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">  width: 100%; //填滿 li 的空間</span><br><span class=\"line\">  <span class=\"selector-tag\">height</span>: 100%;</span><br><span class=\"line\">  // outline: 1px solid blue; //偽元素位置確認框線</span><br><span class=\"line\">  position: absolute; //定位於 li</span><br><span class=\"line\">  <span class=\"selector-tag\">top</span>: 0;</span><br><span class=\"line\">  <span class=\"selector-tag\">left</span>: 0;</span><br><span class=\"line\">  <span class=\"selector-tag\">transform</span>: <span class=\"selector-tag\">rotate</span>(45<span class=\"selector-tag\">deg</span>);</span><br><span class=\"line\">  <span class=\"selector-tag\">box-shadow</span>: 0 0 5<span class=\"selector-tag\">px</span> <span class=\"selector-id\">#666</span>;</span><br><span class=\"line\">  <span class=\"selector-tag\">z-index</span>: <span class=\"selector-tag\">-1</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>CodePen <a href=\"https://codepen.io/hnzxewqw/full/dyGBqZw\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/full/dyGBqZw</a></p>\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><ul>\n<li><a href=\"https://ithelp.ithome.com.tw/articles/10225470\" target=\"_blank\" rel=\"noopener\">金魚都能懂的這個網頁畫面怎麼切 : 旋轉拼接方塊</a></li>\n</ul>\n","categories":["CSS"],"tags":["CSS"]},{"title":"CSS 筆記 - 金魚系列 17 - 登入表單","url":"/css/20200730/712244657/","content":"<p><img src=\"https://i.imgur.com/z1cXppE.jpg\" alt=\"login\"></p>\n<h2 id=\"學習重點\"><a href=\"#學習重點\" class=\"headerlink\" title=\"學習重點\"></a>學習重點</h2><ul>\n<li>flex。</li>\n<li>backdrop-filter: blur。</li>\n<li>group 命名的使用。</li>\n</ul>\n<h2 id=\"HTML-架構\"><a href=\"#HTML-架構\" class=\"headerlink\" title=\"HTML 架構\"></a>HTML 架構</h2><ul>\n<li>主要架構有兩個 input，兩個按鈕。</li>\n<li>因為頁面有重複性的元素，可以使用群組的方式命名。</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"login\"</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">class</span>=<span class=\"string\">\"form\"</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>金魚系列 XVII - 登入表單<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"loginGroup\"</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span> 帳號</span><br><span class=\"line\">         <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"email\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"userID\"</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">\"請輸入電子信箱\"</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"loginGroup\"</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span>密碼</span><br><span class=\"line\">         <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"password\"</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">\"請輸入密碼\"</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btnGroup\"</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn btnAccess\"</span>&gt;</span>確認<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn btnCancel\"</span>&gt;</span>取消<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"CSS-樣式\"><a href=\"#CSS-樣式\" class=\"headerlink\" title=\"CSS 樣式\"></a>CSS 樣式</h2><ul>\n<li>為了使登入欄位在畫面中間，在 body 使用 flex 使其置中對齊畫面中間。</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">body</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">box-sizing</span>: border-box;</span><br><span class=\"line\">  <span class=\"attribute\">font-family</span>: <span class=\"string\">\"Noto Sans TC\"</span>, sans-serif;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"built_in\">url</span>(<span class=\"string\">\"https://images.unsplash.com/photo-1578683010236-d716f9a3f461?ixlib=rb-1.2.1&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;auto=format&amp;fit=crop&amp;w=1350&amp;q=80\"</span>)</span><br><span class=\"line\">    no-repeat center center / cover;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">  <span class=\"attribute\">justify-content</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">align-items</span>: center;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"設定-login-區塊\"><a href=\"#設定-login-區塊\" class=\"headerlink\" title=\"設定 login 區塊\"></a>設定 login 區塊</h3><ul>\n<li>要給予背景寬度與高度才會跑出背景色。</li>\n<li>CSS3 新的支援效果 backdrop-filter:blur。</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.login</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">300px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">300px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"built_in\">rgba</span>(#<span class=\"number\">000</span>, <span class=\"number\">0.6</span>);</span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">5px</span> solid <span class=\"number\">#fff</span>;</span><br><span class=\"line\">  <span class=\"attribute\">box-shadow</span>: <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">30px</span> <span class=\"number\">#000</span>;</span><br><span class=\"line\">  <span class=\"attribute\">backdrop-filter</span>: <span class=\"built_in\">blur</span>(<span class=\"number\">5px</span>);</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">  <span class=\"attribute\">justify-content</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">align-items</span>: center;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"欄位與按鈕\"><a href=\"#欄位與按鈕\" class=\"headerlink\" title=\"欄位與按鈕\"></a>欄位與按鈕</h3><ul>\n<li>form 區塊寬度給予 100%，使之填滿區塊。</li>\n<li>按鈕部分針對共同樣式與個別樣式處理。</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.form</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">  .loginGroup &#123;</span><br><span class=\"line\">    <span class=\"selector-tag\">margin-bottom</span>: 10<span class=\"selector-tag\">px</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"selector-tag\">label</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"number\">#fff</span>;</span><br><span class=\"line\">    <span class=\"attribute\">line-height</span>: <span class=\"number\">2.5</span>;</span><br><span class=\"line\">    <span class=\"attribute\">font-weight</span>: <span class=\"number\">300</span>;</span><br><span class=\"line\">    input &#123;</span><br><span class=\"line\">      <span class=\"selector-tag\">outline</span>: <span class=\"selector-tag\">none</span>;</span><br><span class=\"line\">      <span class=\"selector-tag\">padding</span>: 10<span class=\"selector-tag\">px</span> 0;</span><br><span class=\"line\">      <span class=\"selector-tag\">padding-left</span>: 12<span class=\"selector-tag\">px</span>;</span><br><span class=\"line\">      <span class=\"selector-tag\">width</span>: 95%;</span><br><span class=\"line\">      <span class=\"selector-tag\">border</span>: 2<span class=\"selector-tag\">px</span> <span class=\"selector-tag\">solid</span> <span class=\"selector-id\">#aaa</span>;</span><br><span class=\"line\">      <span class=\"selector-tag\">border-radius</span>: 6<span class=\"selector-tag\">px</span>;</span><br><span class=\"line\">      &amp;<span class=\"selector-pseudo\">:focus</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">border</span>: <span class=\"number\">2px</span> solid <span class=\"number\">#72a8f0</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"selector-class\">.btnGroup</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">    <span class=\"attribute\">justify-content</span>: space-between;</span><br><span class=\"line\">    <span class=\"attribute\">margin-top</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">    .btn &#123;</span><br><span class=\"line\">      <span class=\"selector-tag\">padding</span>: 10<span class=\"selector-tag\">px</span> 50<span class=\"selector-tag\">px</span>;</span><br><span class=\"line\">      <span class=\"selector-tag\">border-radius</span>: 6<span class=\"selector-tag\">px</span>;</span><br><span class=\"line\">      <span class=\"selector-tag\">outline</span>: <span class=\"selector-tag\">none</span>;</span><br><span class=\"line\">      <span class=\"selector-tag\">border</span>: <span class=\"selector-tag\">none</span>;</span><br><span class=\"line\">      <span class=\"selector-tag\">font-weight</span>: 300;</span><br><span class=\"line\">      <span class=\"selector-tag\">font-size</span>: 16<span class=\"selector-tag\">px</span>;</span><br><span class=\"line\">      <span class=\"selector-tag\">color</span>: <span class=\"selector-id\">#fff</span>;</span><br><span class=\"line\">      <span class=\"selector-tag\">cursor</span>: <span class=\"selector-tag\">pointer</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.btnAccess</span> &#123;</span><br><span class=\"line\">      <span class=\"attribute\">background-color</span>: <span class=\"number\">#2bc42b</span>;</span><br><span class=\"line\">      &amp;:hover &#123;</span><br><span class=\"line\">        <span class=\"selector-tag\">background-color</span>: <span class=\"selector-tag\">darken</span>(<span class=\"selector-id\">#2bc42b</span>, 10%);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.btnCancel</span> &#123;</span><br><span class=\"line\">      <span class=\"attribute\">background-color</span>: <span class=\"number\">#f08282</span>;</span><br><span class=\"line\">      &amp;:hover &#123;</span><br><span class=\"line\">        <span class=\"selector-tag\">background-color</span>: <span class=\"selector-tag\">darken</span>(<span class=\"selector-id\">#f08282</span>, 10%);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>CodePen <a href=\"https://codepen.io/hnzxewqw/full/BajgOwy\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/full/BajgOwy</a></p>\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><ul>\n<li><a href=\"https://ithelp.ithome.com.tw/articles/10224402\" target=\"_blank\" rel=\"noopener\">金魚都能懂的這個網頁畫面怎麼切 : 登入表單</a></li>\n</ul>\n","categories":["CSS"],"tags":["CSS"]},{"title":"CSS 筆記 - 金魚系列 16 - 訂單進度條","url":"/css/20200730/906258677/","content":"<p><img src=\"https://i.imgur.com/M1EV2G3.png\" alt=\"process\"></p>\n<h2 id=\"學習重點\"><a href=\"#學習重點\" class=\"headerlink\" title=\"學習重點\"></a>學習重點</h2><ul>\n<li><a href=\"https://www.youtube.com/watch?v=_nCBQ6AIzDU&feature=youtu.be&t=1702\" target=\"_blank\" rel=\"noopener\">flex-direction 的原理</a></li>\n<li><a href=\"https://ithelp.ithome.com.tw/articles/10202245\" target=\"_blank\" rel=\"noopener\">使用 absolute + margin auto 來達到 CSS 垂直置中效果</a></li>\n</ul>\n<h2 id=\"HTML-架構\"><a href=\"#HTML-架構\" class=\"headerlink\" title=\"HTML 架構\"></a>HTML 架構</h2><ul>\n<li>使用清單列表改成橫向排列，就可以達到這樣的排版。</li>\n<li>因為有順序，所以使用<code>ol</code>。</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ol</span> <span class=\"attr\">class</span>=<span class=\"string\">\"process\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fas fa-clipboard fa-3x\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>訂單確認中<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"active\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fas fa-archive  fa-3x\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>理貨中<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fas fa-truck  fa-3x\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>出貨中<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fas fa-hand-holding-usd  fa-3x\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>已送達<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ol</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"CSS-樣式\"><a href=\"#CSS-樣式\" class=\"headerlink\" title=\"CSS 樣式\"></a>CSS 樣式</h2><ul>\n<li>為了讓整個畫面的元素直向排列，所以在 body 先設定好。</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">body &#123;</span><br><span class=\"line\">  box-sizing: border-box;</span><br><span class=\"line\">  font-family: &quot;Noto Sans TC&quot;, sans-serif;</span><br><span class=\"line\">  display: flex;</span><br><span class=\"line\">  align-items: center;&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>使 li 變橫向排列，並使元素垂直對齊與置中，主次軸的觀念很重要！</li>\n<li>讓圖片與文字元素置。</li>\n<li>使第二個元素靠左推擠 100px 的空間。</li>\n<li>因為已經選取第二個元素，故使用偽元素在前方做線條。</li>\n<li>這邊使用絕對定位與 margin:auto 的對齊方式，說明可見學習重點。</li>\n<li>為了避免線條跑到元素上方，使用 z-index 調整位置。</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">li</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">    <span class=\"attribute\">flex-direction</span>: column;</span><br><span class=\"line\">    <span class=\"attribute\">justify-content</span>: center;</span><br><span class=\"line\">    <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">150px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">150px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">border-radius</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">    <span class=\"attribute\">background-image</span>: <span class=\"built_in\">linear-gradient</span>(<span class=\"number\">45deg</span>, #<span class=\"number\">1</span>e681e, #<span class=\"number\">69</span>e742, #eef85a);</span><br><span class=\"line\">    <span class=\"attribute\">box-shadow</span>: <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">5px</span> <span class=\"number\">#fff</span>;</span><br><span class=\"line\">    &amp; + li &#123;</span><br><span class=\"line\">      <span class=\"selector-tag\">margin-left</span>: 100<span class=\"selector-tag\">px</span>;</span><br><span class=\"line\">      &amp;<span class=\"selector-pseudo\">::before</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">content</span>: <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">        <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">        <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">        <span class=\"attribute\">height</span>: <span class=\"number\">5px</span>;</span><br><span class=\"line\">        <span class=\"attribute\">background-color</span>: <span class=\"number\">#fff</span>;</span><br><span class=\"line\">        <span class=\"attribute\">top</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"attribute\">bottom</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"attribute\">left</span>: -<span class=\"number\">100px</span>;</span><br><span class=\"line\">        <span class=\"attribute\">margin</span>: auto;</span><br><span class=\"line\">        <span class=\"attribute\">z-index</span>: -<span class=\"number\">1</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n<p>最後加上進度效果。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\">&amp;<span class=\"selector-class\">.active</span> ~ <span class=\"selector-tag\">li</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background-image</span>: <span class=\"built_in\">linear-gradient</span>(<span class=\"number\">45deg</span>, #<span class=\"number\">999</span>, #ccc, #eee);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.fas</span>,</span><br><span class=\"line\"><span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"number\">#194588</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>CodePen <a href=\"https://codepen.io/hnzxewqw/full/xxZoarj\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/full/xxZoarj</a></p>\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><ul>\n<li><a href=\"https://ithelp.ithome.com.tw/articles/10223902\" target=\"_blank\" rel=\"noopener\">金魚都能懂的這個網頁畫面怎麼切 : 訂單進度條</a></li>\n</ul>\n","categories":["CSS"],"tags":["CSS"]},{"title":"JS 筆記 -ES6：fetch 取得遠端資料","url":"/javascript/20200728/3761746066/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/js-ES6.png?alt=media&token=0bf94bee-c7cd-4cc0-b619-45e5bf71d07b\" alt=\"ES6\"></p>\n<p>本篇使用此 <a href=\"https://raw.githubusercontent.com/hexschool/hexschoolNewbieJS/master/data.json\" target=\"_blank\" rel=\"noopener\">API</a> 做為範例</p>\n<h2 id=\"fetch-起手式\"><a href=\"#fetch-起手式\" class=\"headerlink\" title=\"fetch 起手式\"></a>fetch 起手式</h2><p>有點像 jQuery 跟 axios，</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">fetch(<span class=\"string\">\"網址\"</span>)</span><br><span class=\"line\">  .then(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">response</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 處理 response</span></span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  .catch(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">err</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 錯誤處理</span></span><br><span class=\"line\">  &#125;);</span><br></pre></td></tr></table></figure>\n\n<p>但還是有些許不同，要先確定回傳的形式是什麼，範例是回傳 JSON 格式，還可以使用 text() 跟 blob()。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">fetch(url)</span><br><span class=\"line\">  .then(<span class=\"function\">(<span class=\"params\">response</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> response.json();</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  .then(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">myJson</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(myJson); <span class=\"comment\">//在這裡才能在 console 看到整個資料</span></span><br><span class=\"line\">  &#125;);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"ReadableStream\"><a href=\"#ReadableStream\" class=\"headerlink\" title=\"ReadableStream\"></a>ReadableStream</h2><p>Fetch API 的 Response 物件中的 body 屬性提供了一個 ReadableStream 的實體，這個階段我們無法直接讀取資料內容，而 ReadableStream 物件中可用以下對應的方法來取得資料 (<a href=\"https://developer.mozilla.org/zh-TW/docs/Web/API/Body)：\" target=\"_blank\" rel=\"noopener\">https://developer.mozilla.org/zh-TW/docs/Web/API/Body)：</a></p>\n<ul>\n<li>arrayBuffer()</li>\n<li>blob()</li>\n<li>formData()</li>\n<li>json()</li>\n<li>text()</li>\n</ul>\n<h3 id=\"fetch-和-jQuery-ajax-有兩個主要的差異\"><a href=\"#fetch-和-jQuery-ajax-有兩個主要的差異\" class=\"headerlink\" title=\"fetch 和 jQuery.ajax() 有兩個主要的差異\"></a>fetch 和 jQuery.ajax() 有兩個主要的差異</h3><ul>\n<li>fetch() 回傳的 promise 物件, resolve 和 reject 的使用方式有差異, 當遇到 HTTP Status 404, 500 時會使用 resolve 但會將 status 的值從 ok 變為 false， reject 只有在網路發生錯誤或是任何會中斷網路請求時才會使用。</li>\n<li>fetch 預設上不傳送或接收任何 cookies，如果網站依賴 session 會導致請求回傳未經認證，需要使用 cookies 必須額外設定 credentials。</li>\n</ul>\n<h2 id=\"實務使用\"><a href=\"#實務使用\" class=\"headerlink\" title=\"實務使用\"></a>實務使用</h2><h3 id=\"取得六角學院舉辦的-JS-特訓班完成關卡-API\"><a href=\"#取得六角學院舉辦的-JS-特訓班完成關卡-API\" class=\"headerlink\" title=\"取得六角學院舉辦的 JS 特訓班完成關卡 API\"></a>取得六角學院舉辦的 JS 特訓班完成關卡 API</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> dataUrl =</span><br><span class=\"line\">  <span class=\"string\">\"https://raw.githubusercontent.com/hexschool/hexschoolNewbieJS/master/data.json\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> data = [];</span><br><span class=\"line\"><span class=\"keyword\">let</span> list = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\".list\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">fetch(dataUrl)</span><br><span class=\"line\">  .then(<span class=\"function\">(<span class=\"params\">response</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> response.json();</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  .then(<span class=\"function\">(<span class=\"params\">dataList</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    data = dataList;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(data); <span class=\"comment\">//確認取得資料</span></span><br><span class=\"line\">    render();</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">render</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> str = <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">  data.forEach(<span class=\"function\">(<span class=\"params\">item</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    str += <span class=\"string\">`</span></span><br><span class=\"line\"><span class=\"string\">        &lt;li&gt;名字：<span class=\"subst\">$&#123;item.name&#125;</span>，完成率：<span class=\"subst\">$&#123;item.process&#125;</span>&lt;/li&gt;</span></span><br><span class=\"line\"><span class=\"string\">      `</span>;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  list.innerHTML = str;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>CodePen <a href=\"https://codepen.io/hnzxewqw/pen/abdrYbm\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/abdrYbm</a></p>\n<h3 id=\"台北市政府資料開放平台-親子館-API\"><a href=\"#台北市政府資料開放平台-親子館-API\" class=\"headerlink\" title=\"台北市政府資料開放平台 - 親子館 API\"></a>台北市政府資料開放平台 - 親子館 API</h3><p>這邊記錄一下取得這個 API 的地方，因為 dataList 取得的事物件資料，所以要網內取得該值，API 結構中還有 <code>result.results</code>。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> dataUrl =</span><br><span class=\"line\">  <span class=\"string\">\"https://data.taipei/api/v1/dataset/5c09f39f-79cc-45b8-be8e-9b3ea8b220e3?scope=resourceAquire\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> data = [];</span><br><span class=\"line\"><span class=\"keyword\">let</span> list = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\".list\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">fetch(dataUrl)</span><br><span class=\"line\">  .then(<span class=\"function\">(<span class=\"params\">response</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> response.json();</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  .then(<span class=\"function\">(<span class=\"params\">dataList</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    data = dataList.result.results;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(data);</span><br><span class=\"line\">    render();</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">render</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> str = <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">  data.forEach(<span class=\"function\">(<span class=\"params\">item</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    str += <span class=\"string\">`</span></span><br><span class=\"line\"><span class=\"string\">        &lt;li&gt;名稱：<span class=\"subst\">$&#123;item.機構名稱&#125;</span>&lt;/li&gt;</span></span><br><span class=\"line\"><span class=\"string\">      `</span>;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  list.innerHTML = str;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>codepen <a href=\"https://codepen.io/hnzxewqw/pen/dyGEmbz\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/dyGEmbz</a></p>\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><ul>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Fetch_API/Using_Fetch\" target=\"_blank\" rel=\"noopener\">使用 Fetch</a></li>\n<li><a href=\"https://wcc723.github.io/javascript/2017/12/28/javascript-fetch/\" target=\"_blank\" rel=\"noopener\">鐵人賽：ES6 原生 Fetch 遠端資料方法</a></li>\n<li><a href=\"https://hackmd.io/PSMQwOkAS920gpY57avbwQ\" target=\"_blank\" rel=\"noopener\">JS 學徒特訓班 36 ES6 起步走 - Fetch 練習筆記</a></li>\n</ul>\n","categories":["JavaScript"],"tags":["JavaScript","ES6"]},{"title":"jQuery 筆記 - 取得 checkbox 的值","url":"/jQuery/20200728/1504394333/","content":"<p><img src=\"https://images.unsplash.com/photo-1580634240125-b9f6ff4283d1?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1351&q=80\" alt=\"get\"><br>專案實務上遇到的情況，為了要讓後端知道前端有設定了一個取值的方式。</p>\n<h2 id=\"取得-input-屬性的值\"><a href=\"#取得-input-屬性的值\" class=\"headerlink\" title=\"取得 input 屬性的值\"></a>取得 input 屬性的值</h2><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> inputPropertyValue = $(<span class=\"string\">\"input[type='checkbox']\"</span>).val();</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(inputPropertyValue); <span class=\"comment\">//on</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"綁定-id-或是-className\"><a href=\"#綁定-id-或是-className\" class=\"headerlink\" title=\"綁定 id 或是 className\"></a>綁定 id 或是 className</h2><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> checkValue;</span><br><span class=\"line\"> $(<span class=\"string\">'#check'</span>).click(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">   checkValue = $(<span class=\"keyword\">this</span>).val();</span><br><span class=\"line\">   <span class=\"built_in\">console</span>.log(checkValue); <span class=\"comment\">//on</span></span><br><span class=\"line\"> &#125;);</span><br></pre></td></tr></table></figure>\n<p>這個方式無論是否選中，它都會返回<strong>相同的值(on)</strong>，這可能會造成混淆，因為它不同是使用於提交表單行為。</p>\n<h2 id=\"確認是否被點擊\"><a href=\"#確認是否被點擊\" class=\"headerlink\" title=\"確認是否被點擊\"></a>確認是否被點擊</h2><p>比較建議使用被點擊到後顯示 true，取消則顯示 false。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">\"#isChecked\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> isChecked = $(<span class=\"keyword\">this</span>).is(<span class=\"string\">\":checked\"</span>);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(isChecked); <span class=\"comment\">//true or false</span></span><br><span class=\"line\">  &#125;);</span><br></pre></td></tr></table></figure>\n\n<p>CodePen <a href=\"https://codepen.io/hnzxewqw/pen/yLeWvWm?editors=1111\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/yLeWvWm?editors=1111</a></p>\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><ul>\n<li><a href=\"https://www.ucamc.com/e-learning/javascript/393-%E5%A6%82%E4%BD%95%E5%9C%A8jquery%E4%B8%AD%E7%8D%B2%E5%8F%96checkbox-value\" target=\"_blank\" rel=\"noopener\">如何在 jQuery 中獲取 checkbox value</a></li>\n</ul>\n","categories":["jQuery"],"tags":["JavaScript","jQuery"]},{"title":"jQuery 筆記 - 點擊按鈕使數字自動加總與歸零","url":"/jQuery/20200728/4086127041/","content":"<p><img src=\"https://images.unsplash.com/photo-1537606845186-9921373c310f?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1350&q=80\" alt=\"click\"><br>記錄專案中一個簡單的功能，點擊按鈕可以讓文字框的數字累加，點擊另一個按鈕使之歸零。</p>\n<h2 id=\"HTML-架構\"><a href=\"#HTML-架構\" class=\"headerlink\" title=\"HTML 架構\"></a>HTML 架構</h2><p>所以我需要一個輸入框與兩個按鈕。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"01\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"inputNum\"</span> <span class=\"attr\">disabled</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"jq-addNum\"</span>&gt;</span>+1<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"jq-format\"</span>&gt;</span>zero<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"JS-寫法\"><a href=\"#JS-寫法\" class=\"headerlink\" title=\"JS 寫法\"></a>JS 寫法</h3><h3 id=\"第一種寫法\"><a href=\"#第一種寫法\" class=\"headerlink\" title=\"第一種寫法\"></a>第一種寫法</h3><ul>\n<li>這邊把方法與點擊事件分開。</li>\n<li>增加一個 plus 函式，綁定輸入框並給予值。</li>\n<li>輸入框的值為自己的加總。</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//加總 1</span></span><br><span class=\"line\">$(<span class=\"string\">\".jq-addNum\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  plus();</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">plus</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> inputNum = $(<span class=\"string\">\".inputNum\"</span>).val();</span><br><span class=\"line\">  $(<span class=\"string\">\".inputNum\"</span>).val(++inputNum);</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"keyword\">typeof</span> (inputNum)); <span class=\"comment\">// number</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//歸零</span></span><br><span class=\"line\">$(<span class=\"string\">\".jq-format\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  $(<span class=\"string\">\".inputNum\"</span>).val(<span class=\"number\">0</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"第二種寫法\"><a href=\"#第二種寫法\" class=\"headerlink\" title=\"第二種寫法\"></a>第二種寫法</h3><ul>\n<li>宣告變數起始為 0。</li>\n<li>點擊按鈕使變數累加 1。</li>\n<li>綁定 input 使其值為變數的值。</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> inputValue = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"comment\">//第二種寫法</span></span><br><span class=\"line\">$(<span class=\"string\">\".jq-plus\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  inputValue += <span class=\"number\">1</span>;</span><br><span class=\"line\">  $(<span class=\"string\">\".inputValue\"</span>).val(inputValue);</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"keyword\">typeof</span> (inputValue)); <span class=\"comment\">//number</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">$(<span class=\"string\">\".jq-zero\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  $(<span class=\"string\">\".inputValue\"</span>).val(<span class=\"number\">0</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"第三種寫法\"><a href=\"#第三種寫法\" class=\"headerlink\" title=\"第三種寫法\"></a>第三種寫法</h3><p>原生寫法。</p>\n<ul>\n<li>先給兩個函式方法。</li>\n<li>宣告變數為 input 的值，其值為自己的相加。</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> oPlus = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> val = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\"#input\"</span>).value;</span><br><span class=\"line\">  <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\"#input\"</span>).value = ++val;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"keyword\">typeof</span>(val)); <span class=\"comment\">//number</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> oFormat = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\"#input\"</span>).value = <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\"#plus\"</span>).addEventListener(<span class=\"string\">\"click\"</span>, oPlus);</span><br><span class=\"line\"><span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\"#format\"</span>).addEventListener(<span class=\"string\">\"click\"</span>, oFormat);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"結語\"><a href=\"#結語\" class=\"headerlink\" title=\"結語\"></a>結語</h2><p>第二種方法並不會從 input 的預設值開始累加，而是從頭累加，第一種跟第三種其實是一樣的概念，只是寫法不同，累積起始點為 value 的預設值。</p>\n<iframe height=\"514\" style=\"width: 100%;\"  src=\"https://codepen.io/hnzxewqw/embed/vYLMmVd?height=514&theme-id=light&default-tab=result\"></iframe>\n","categories":["jQuery"],"tags":["JavaScript","jQuery"]},{"title":"JS 筆記 - 認識 Event 事件","url":"/javascript/20200728/3645530416/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/JavaScript%20note-01.jpg?alt=media&token=7bee0261-72ac-4de4-9f5a-f39d58735b7d\" alt=\"JavaScript Note\"></p>\n<p>瀏覽器中有許多的事件，筆記常用的像是滑鼠點擊、移動事件、鍵盤輸入事件、冒泡事件…等，事件通常與函式搭配使用，在事件發生前函式不會被執行！</p>\n<p>舉例：點擊按鈕的事件</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"button\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"CLICK\"</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>使用 <code>querySelctor</code> 綁定 <code>.btn</code>，並給予一個點擊事件 <code>onclick</code>，上方有講到，事件通常會配搭函示使用，所以程式碼會變成：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> el = <span class=\"built_in\">document</span>.querySelctor(<span class=\"string\">\".btn\"</span>);</span><br><span class=\"line\">el.onclick = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;&#125;;</span><br></pre></td></tr></table></figure>\n\n<p>function 後面的括弧中，可以帶入參數，若是事件，會帶 <code>event</code> 或是 <code>e</code>，在參數的位置，告訴 function 這會是一個事件，這邊帶一個點擊後會執行 alert 。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> el = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\".btn\"</span>);</span><br><span class=\"line\">el.onclick = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">  alert(<span class=\"string\">\"click\"</span>);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p>codepen: <a href=\"https://codepen.io/hnzxewqw/pen/xxGgrbQ\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/xxGgrbQ</a></p>\n<hr>\n<p>以上顯示效果成功後，用 <code>console.log(e);</code> 來看一下除了 alert 顯示外，還有什麼資訊可以查看，</p>\n<p>點擊後在 <code>console.log</code> 裡面會看到一個物件資料：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">MouseEvent &#123;<span class=\"attr\">isTrusted</span>: <span class=\"literal\">true</span>, <span class=\"attr\">screenX</span>: <span class=\"number\">56</span>, <span class=\"attr\">screenY</span>: <span class=\"number\">572</span>, <span class=\"attr\">clientX</span>: <span class=\"number\">56</span>, <span class=\"attr\">clientY</span>: <span class=\"number\">37</span>, …&#125;</span><br></pre></td></tr></table></figure>\n\n<p>點開後會看到以下詳細的資訊，而這些資訊在不同的專案上，會是很有用的參考資料：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">MouseEvent &#123;<span class=\"attr\">isTrusted</span>: <span class=\"literal\">true</span>, <span class=\"attr\">screenX</span>: <span class=\"number\">56</span>, <span class=\"attr\">screenY</span>: <span class=\"number\">572</span>, <span class=\"attr\">clientX</span>: <span class=\"number\">56</span>, <span class=\"attr\">clientY</span>: <span class=\"number\">37</span>, …&#125;</span><br><span class=\"line\">isTrusted: <span class=\"literal\">true</span></span><br><span class=\"line\">screenX: <span class=\"number\">56</span></span><br><span class=\"line\">screenY: <span class=\"number\">572</span></span><br><span class=\"line\">clientX: <span class=\"number\">56</span> <span class=\"comment\">//點擊 X 軸的位置</span></span><br><span class=\"line\">clientY: <span class=\"number\">37</span> <span class=\"comment\">//點擊 Y 軸的位置</span></span><br><span class=\"line\">ctrlKey: <span class=\"literal\">false</span> <span class=\"comment\">// 按壓 ctrl　鍵，因為沒按，所以是　false</span></span><br><span class=\"line\">shiftKey: <span class=\"literal\">false</span><span class=\"comment\">// 按壓 shift　鍵，因為沒按，所以是　false</span></span><br><span class=\"line\">altKey: <span class=\"literal\">false</span><span class=\"comment\">// 按壓 alt　鍵，因為沒按，所以是　false</span></span><br><span class=\"line\">metaKey: <span class=\"literal\">false</span></span><br><span class=\"line\">button: <span class=\"number\">0</span></span><br><span class=\"line\">buttons: <span class=\"number\">0</span></span><br><span class=\"line\">relatedTarget: <span class=\"literal\">null</span></span><br><span class=\"line\">pageX: <span class=\"number\">56</span></span><br><span class=\"line\">pageY: <span class=\"number\">37</span></span><br><span class=\"line\">x: <span class=\"number\">56</span></span><br><span class=\"line\">y: <span class=\"number\">37</span></span><br><span class=\"line\">offsetX: <span class=\"number\">46</span></span><br><span class=\"line\">offsetY: <span class=\"number\">27</span></span><br><span class=\"line\">movementX: <span class=\"number\">0</span></span><br><span class=\"line\">movementY: <span class=\"number\">0</span></span><br><span class=\"line\">fromElement: <span class=\"literal\">null</span></span><br><span class=\"line\">toElement: input.btn</span><br><span class=\"line\">layerX: <span class=\"number\">56</span></span><br><span class=\"line\">layerY: <span class=\"number\">37</span></span><br><span class=\"line\">view: Window &#123;<span class=\"attr\">parent</span>: global, <span class=\"attr\">opener</span>: <span class=\"literal\">null</span>, <span class=\"attr\">top</span>: global, <span class=\"attr\">length</span>: <span class=\"number\">0</span>, <span class=\"attr\">frames</span>: Window, …&#125;</span><br><span class=\"line\">detail: <span class=\"number\">1</span></span><br><span class=\"line\">sourceCapabilities: InputDeviceCapabilities &#123;<span class=\"attr\">firesTouchEvents</span>: <span class=\"literal\">false</span>&#125;</span><br><span class=\"line\">which: <span class=\"number\">1</span></span><br><span class=\"line\">type: <span class=\"string\">\"click\"</span> <span class=\"comment\">//類型: 點擊</span></span><br><span class=\"line\">target: input.btn</span><br><span class=\"line\">currentTarget: <span class=\"literal\">null</span></span><br><span class=\"line\">eventPhase: <span class=\"number\">0</span></span><br><span class=\"line\">bubbles: <span class=\"literal\">true</span></span><br><span class=\"line\">cancelable: <span class=\"literal\">true</span></span><br><span class=\"line\">defaultPrevented: <span class=\"literal\">false</span></span><br><span class=\"line\">composed: <span class=\"literal\">true</span></span><br><span class=\"line\">timeStamp: <span class=\"number\">25442.33000000008</span></span><br><span class=\"line\">srcElement: input.btn</span><br><span class=\"line\">returnValue: <span class=\"literal\">true</span></span><br><span class=\"line\">cancelBubble: <span class=\"literal\">false</span></span><br><span class=\"line\">path: (<span class=\"number\">5</span>) [input.btn, body, html, <span class=\"built_in\">document</span>, Window]</span><br><span class=\"line\">__proto__: MouseEvent</span><br></pre></td></tr></table></figure>\n","categories":["JavaScript"],"tags":["JavaScript"]},{"title":"CSS 筆記 - 金魚系列 15 - 訊息對話紀錄視窗","url":"/css/20200726/2518811882/","content":"<p><img src=\"https://i.imgur.com/BADNpob.png\" alt=\"15\"></p>\n<h2 id=\"學習重點\"><a href=\"#學習重點\" class=\"headerlink\" title=\"學習重點\"></a>學習重點</h2><ul>\n<li>加號選取器的用途</li>\n<li><a href=\"https://ithelp.ithome.com.tw/users/20112550/ironman/2799\" target=\"_blank\" rel=\"noopener\">金魚都能懂的 CSS 選取器</a>，<a href=\"https://www.tenlong.com.tw/products/9789864344994?list_name=c-web-design\" target=\"_blank\" rel=\"noopener\">購書連結</a></li>\n<li>區塊尺寸計算</li>\n<li>Absolute 絕對定位教學</li>\n<li>Relative 相對定位教學</li>\n</ul>\n<h2 id=\"HTML-架構\"><a href=\"#HTML-架構\" class=\"headerlink\" title=\"HTML 架構\"></a>HTML 架構</h2><p>這次的 HTML 的架構很重要，有兩個區塊，有圖示+名字，對話框，並有<strong>本地用戶</strong>與<strong>遠端用戶</strong>，雖然對話框會產生很多，但結構都是一樣，所以先把一組做出來後，後續 JS 帶入文字訊息即可。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"dialogue\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"user remote\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"avatar\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"pic\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"https://picsum.photos/100/100?random=12\"</span> /&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"name\"</span>&gt;</span>You<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"text\"</span>&gt;</span>這是妳的對話文字<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"user local\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"avatar\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"pic\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"https://picsum.photos/100/100?random=16\"</span> /&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"name\"</span>&gt;</span>Me<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"text\"</span>&gt;</span>這是我的對話文字<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"CSS-樣式\"><a href=\"#CSS-樣式\" class=\"headerlink\" title=\"CSS 樣式\"></a>CSS 樣式</h2><p>這次 CSS 比較複雜，分別記錄。</p>\n<h3 id=\"dialogue-主架構樣式\"><a href=\"#dialogue-主架構樣式\" class=\"headerlink\" title=\"dialogue 主架構樣式\"></a>dialogue 主架構樣式</h3><p>就一般的外觀設定，不贅述。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.dialogue</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">500px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">box-shadow</span>: <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">10px</span> <span class=\"number\">#000</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#f4f5f7</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"user-結構樣式\"><a href=\"#user-結構樣式\" class=\"headerlink\" title=\"user 結構樣式\"></a>user 結構樣式</h3><ul>\n<li>使 .user 的元素橫排並靠左對齊，往下推擠 20px。</li>\n<li>大頭照樣式設定，因 flex 會自動收縮，所以使域 flex-shrink:0，取消其自動縮放的特性。</li>\n<li>使圖片為圓形，並佔滿空間。</li>\n<li>文字區域設定。</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.user</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">  <span class=\"attribute\">align-items</span>: flex-start;</span><br><span class=\"line\">  <span class=\"attribute\">margin-bottom</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">  .avatar &#123;</span><br><span class=\"line\">    <span class=\"selector-tag\">width</span>: 60<span class=\"selector-tag\">px</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">text-align</span>: <span class=\"selector-tag\">center</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">flex-shrink</span>: 0;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"selector-class\">.pic</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">border-radius</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">    img &#123;</span><br><span class=\"line\">      <span class=\"selector-tag\">width</span>: 100%;</span><br><span class=\"line\">      <span class=\"selector-tag\">vertical-align</span>: <span class=\"selector-tag\">middle</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"selector-class\">.name</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"number\">#333</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"selector-class\">.text</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: <span class=\"number\">#aaa</span>;</span><br><span class=\"line\">    <span class=\"attribute\">padding</span>: <span class=\"number\">16px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">border-radius</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"remote-與-local-架構樣式\"><a href=\"#remote-與-local-架構樣式\" class=\"headerlink\" title=\"remote 與 local 架構樣式\"></a>remote 與 local 架構樣式</h3><p>這兩者基本上架構相同，只是方向不同。</p>\n<h4 id=\"remote-用戶端樣式\"><a href=\"#remote-用戶端樣式\" class=\"headerlink\" title=\"remote 用戶端樣式\"></a>remote 用戶端樣式</h4><ul>\n<li>因 <code>.user</code> 已經設定靠左對齊，所以這邊不再重複設定。</li>\n<li>文字區域重要的地方是偽元素的設定，是三角形本體的顏色與位置。</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.remote</span> &#123;</span><br><span class=\"line\">  .text &#123;</span><br><span class=\"line\">    <span class=\"selector-tag\">margin-left</span>: 20<span class=\"selector-tag\">px</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">margin-right</span>: 80<span class=\"selector-tag\">px</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">color</span>: <span class=\"selector-id\">#eee</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">background-color</span>: <span class=\"selector-id\">#4179f1</span>;</span><br><span class=\"line\">    &amp;<span class=\"selector-pseudo\">::before</span> &#123;</span><br><span class=\"line\">      <span class=\"attribute\">border-right</span>: <span class=\"number\">10px</span> solid <span class=\"number\">#4179f1</span>;</span><br><span class=\"line\">      <span class=\"attribute\">left</span>: -<span class=\"number\">10px</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"local-本地端樣式\"><a href=\"#local-本地端樣式\" class=\"headerlink\" title=\"local 本地端樣式\"></a>local 本地端樣式</h4><ul>\n<li>使本地用戶靠右對齊。</li>\n<li>文字區域重要的地方式偽元素的設定，是三角形本體的顏色與位置。</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.local</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">justify-content</span>: flex-end;</span><br><span class=\"line\">  .text &#123;</span><br><span class=\"line\">    <span class=\"selector-tag\">margin-right</span>: 20<span class=\"selector-tag\">px</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">margin-left</span>: 80<span class=\"selector-tag\">px</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">order</span>: <span class=\"selector-tag\">-1</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">background-color</span>: <span class=\"selector-id\">#fff</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">color</span>: <span class=\"selector-id\">#333</span>;</span><br><span class=\"line\">    &amp;<span class=\"selector-pseudo\">::before</span> &#123;</span><br><span class=\"line\">      <span class=\"attribute\">border-left</span>: <span class=\"number\">10px</span> solid <span class=\"number\">#fff</span>;</span><br><span class=\"line\">      <span class=\"attribute\">right</span>: -<span class=\"number\">10px</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"共同使用樣式-三角形\"><a href=\"#共同使用樣式-三角形\" class=\"headerlink\" title=\"共同使用樣式 - 三角形\"></a>共同使用樣式 - 三角形</h4><p>三角形怎麼寫可以看<a href=\"https://hsuchihting.github.io/css/20200718/3868981590/\">CSS 筆記 - 三角形演進史</a>。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.remote</span>,</span><br><span class=\"line\"><span class=\"selector-class\">.local</span> &#123;</span><br><span class=\"line\">  &amp; .text::before &#123;</span><br><span class=\"line\">    <span class=\"selector-tag\">content</span>: \"\";</span><br><span class=\"line\">    <span class=\"selector-tag\">position</span>: <span class=\"selector-tag\">absolute</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">top</span>: 20<span class=\"selector-tag\">px</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">border-top</span>: 10<span class=\"selector-tag\">px</span> <span class=\"selector-tag\">solid</span> <span class=\"selector-tag\">transparent</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">border-bottom</span>: 10<span class=\"selector-tag\">px</span> <span class=\"selector-tag\">solid</span> <span class=\"selector-tag\">transparent</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"selector-class\">.text</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">font-weight</span>: <span class=\"number\">300</span>;</span><br><span class=\"line\">    <span class=\"attribute\">box-shadow</span>: <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">10px</span> <span class=\"number\">#888</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>這樣就完成囉!!</p>\n<p>CodePen <a href=\"https://codepen.io/hnzxewqw/full/xxZedag\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/full/xxZedag</a></p>\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><ul>\n<li><a href=\"https://ithelp.ithome.com.tw/articles/10223584\" target=\"_blank\" rel=\"noopener\">金魚都能懂的這個網頁畫面怎麼切 : 訊息對話紀錄</a></li>\n</ul>\n","categories":["CSS"],"tags":["CSS"]},{"title":"CSS 筆記 - 金魚系列 14 - 多層次收合選單","url":"/css/20200726/3496055867/","content":"<p><img src=\"https://i.imgur.com/lHa5Ysv.png\" alt=\"list\"></p>\n<p>延續側欄選單的優化，這次呈現的要如上圖，選單中在加上選單。</p>\n<h2 id=\"學習重點\"><a href=\"#學習重點\" class=\"headerlink\" title=\"學習重點\"></a>學習重點</h2><ul>\n<li>金魚都能懂的這個網頁畫面怎麼切 : 側邊選單怎麼切</li>\n<li>金魚都能懂的這個網頁畫面怎麼切 : 動態收合式側邊選單</li>\n<li><a href=\"https://ithelp.ithome.com.tw/articles/10221124\" target=\"_blank\" rel=\"noopener\">子代選取器 - 一個最安全且不會讓你株連九族的選取器</a></li>\n<li><a href=\"https://ithelp.ithome.com.tw/articles/10222941\" target=\"_blank\" rel=\"noopener\">:checked 原理說明（文字）</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=XCyrzYp3aCY&feature=youtu.be\" target=\"_blank\" rel=\"noopener\">:checked 選取器（影片）</a></li>\n<li><a href=\"https://ithelp.ithome.com.tw/articles/10202245\" target=\"_blank\" rel=\"noopener\">使用 absolute + margin auto 來達到 CSS 垂直置中效果</a></li>\n</ul>\n<h2 id=\"HTML-結構修改\"><a href=\"#HTML-結構修改\" class=\"headerlink\" title=\"HTML 結構修改\"></a>HTML 結構修改</h2><p>因要改成多層次選單，所以 a 連結中不可以再包一個 a 連結，這是不合理的，所以直接改成 ul li 包在外層。修改後如下方架構。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"sideMenu-active\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"sideMenu\"</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"search\"</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">\"請輸入搜尋名稱\"</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fas fa-search\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"nav\"</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fas fa-sitemap\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span>金魚系列 XIV<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fas fa-chalkboard\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span>側邊選單<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fas fa-book-reader\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span>非常常見<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fas fa-user-graduate\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span>不會不行<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fas fa-trophy\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span>切了就會<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;/<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"nav\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">\"sideMenu-active\"</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fas fa-angle-right\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">   <span class=\"comment\">&lt;!-- label 寫在 nav 下方是為了比較好看到 --&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"CSS-改動\"><a href=\"#CSS-改動\" class=\"headerlink\" title=\"CSS 改動\"></a>CSS 改動</h2><p>一開始只要改動原本的 <code>nav</code> 標籤變成 <code>.nav</code>，因原本的 <code>nav</code> 標籤變成了 ul，並賦予 <code>className</code>，原本的 <code>a</code> 改成 <code>li</code>，並新增一個 <code>a</code> 連結的顏色樣式。因為是用 SCSS 來處理 CSS 所以只有小改動，不用改全部的 CSS，減少重工的時間。(SCSS 真棒)</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.nav</span> &#123;</span><br><span class=\"line\">  li &#123;</span><br><span class=\"line\">    <span class=\"selector-tag\">display</span>: <span class=\"selector-tag\">block</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">color</span>: <span class=\"selector-id\">#fff</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">padding</span>: 20<span class=\"selector-tag\">px</span> 10<span class=\"selector-tag\">px</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">position</span>: <span class=\"selector-tag\">relative</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"selector-tag\">a</span> &#123;</span><br><span class=\"line\">      <span class=\"attribute\">color</span>: <span class=\"number\">#fff</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.fas</span> &#123;</span><br><span class=\"line\">      <span class=\"attribute\">margin-right</span>: -<span class=\"number\">1.1em</span>;</span><br><span class=\"line\">      <span class=\"attribute\">transform</span>: <span class=\"built_in\">scale</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">      //使圖示消失</span><br><span class=\"line\">      <span class=\"selector-tag\">transition</span>: 0<span class=\"selector-class\">.3s</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &amp;<span class=\"selector-pseudo\">:hover</span> <span class=\"selector-class\">.fas</span> &#123;</span><br><span class=\"line\">      margin-right: 0em; //使文字回到原來的位置</span><br><span class=\"line\">      transform: scale(1); //使圖示出現</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &amp; + <span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">::before</span> &#123;</span><br><span class=\"line\">      <span class=\"attribute\">content</span>: <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">      <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">      <span class=\"attribute\">border-top</span>: <span class=\"number\">1px</span> dashed <span class=\"number\">#ffffff</span>;</span><br><span class=\"line\">      <span class=\"attribute\">left</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">right</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">top</span>: <span class=\"number\">0px</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>然後畫面就不會壞掉。</p>\n<h2 id=\"增加子層選單\"><a href=\"#增加子層選單\" class=\"headerlink\" title=\"增加子層選單\"></a>增加子層選單</h2><p>這邊要加上兩層的子層選單，以一個 ul 來當範例，架構會變這樣，</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"nav\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fas fa-sitemap\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span>金魚系列 XIV<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 這邊加上子層選單 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>item01<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>option01<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>option02<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>option03<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>加完後會變下圖，</p>\n<p><img src=\"https://i.imgur.com/F0MmbLs.png\" alt=\"childList\"></p>\n<p>確定加成功後設定一下位置的樣式。</p>\n<h2 id=\"子層選單-CSS-樣式\"><a href=\"#子層選單-CSS-樣式\" class=\"headerlink\" title=\"子層選單 CSS 樣式\"></a>子層選單 CSS 樣式</h2><ul>\n<li>在 .nav 中的 ul 做設定，所以該元素權重跟原本的 li 相同，並給予絕對定位，放在原側欄選單右邊，並加上陰影。</li>\n<li>因選單架構相同，所以之前設定的效果都會吃到，這邊練習到在命名 HTML 的架構規劃很重要！</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.nav</span> &#123;</span><br><span class=\"line\">  li &#123;</span><br><span class=\"line\">    <span class=\"selector-tag\">display</span>: <span class=\"selector-tag\">block</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">color</span>: <span class=\"selector-id\">#fff</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">padding</span>: 20<span class=\"selector-tag\">px</span> 10<span class=\"selector-tag\">px</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">position</span>: <span class=\"selector-tag\">relative</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"selector-tag\">ul</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">    <span class=\"attribute\">left</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">300px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: <span class=\"built_in\">rgba</span>(#d1d1d1, <span class=\"number\">0.7</span>);</span><br><span class=\"line\">    <span class=\"attribute\">top</span>: <span class=\"number\">15px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">box-shadow</span>: <span class=\"number\">5px</span> <span class=\"number\">5px</span> <span class=\"number\">10px</span> <span class=\"built_in\">rgba</span>(#<span class=\"number\">171736</span>, <span class=\"number\">0.6</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>完成後如下圖，</p>\n<p><img src=\"https://i.imgur.com/IKcaHUP.png\" alt=\"list2\"></p>\n<h3 id=\"子選單的互動效果\"><a href=\"#子選單的互動效果\" class=\"headerlink\" title=\"子選單的互動效果\"></a>子選單的互動效果</h3><ul>\n<li>當選擇到 .nav 的選單時，背景色改變。</li>\n<li>選擇到子層選單時，父層選單的效果不變，子層會因滑鼠經過時改變背景色，使用子代選取器可以達到這樣的效果。</li>\n<li>一開始先隱藏子選單，當我滑鼠經過時，<code>.nav</code> 的 <code>ul</code> 才顯示。</li>\n<li>使用子代選取器，就可以直接讓第二層的子選單吃到一樣的效果！</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.nav</span> &#123;</span><br><span class=\"line\">  li &#123;</span><br><span class=\"line\">    <span class=\"selector-tag\">display</span>: <span class=\"selector-tag\">block</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">color</span>: <span class=\"selector-id\">#fff</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">padding</span>: 20<span class=\"selector-tag\">px</span> 10<span class=\"selector-tag\">px</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">position</span>: <span class=\"selector-tag\">relative</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">cursor</span>: <span class=\"selector-tag\">pointer</span>;</span><br><span class=\"line\">    &amp;<span class=\"selector-pseudo\">:hover</span>,</span><br><span class=\"line\">    &gt; <span class=\"selector-tag\">li</span> &#123;</span><br><span class=\"line\">      <span class=\"attribute\">background-color</span>: <span class=\"number\">#a32c2c</span>;</span><br><span class=\"line\">      <span class=\"attribute\">transition</span>: all <span class=\"number\">0.6s</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">      &amp;<span class=\"selector-pseudo\">:hover</span> &gt; <span class=\"selector-tag\">ul</span> &#123;</span><br><span class=\"line\">      <span class=\"attribute\">display</span>: block;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">     <span class=\"selector-tag\">ul</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: none;</span><br><span class=\"line\">    <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">    <span class=\"attribute\">left</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">300px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: <span class=\"built_in\">rgba</span>(#d1d1d1, <span class=\"number\">0.7</span>);</span><br><span class=\"line\">    <span class=\"attribute\">top</span>: <span class=\"number\">15px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">box-shadow</span>: <span class=\"number\">5px</span> <span class=\"number\">5px</span> <span class=\"number\">10px</span> <span class=\"built_in\">rgba</span>(#<span class=\"number\">171736</span>, <span class=\"number\">0.6</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/84EU0MB.png\" alt=\"list 1-1-1\"></p>\n<p>CodePen <a href=\"https://codepen.io/hnzxewqw/full/zYrXwLq\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/full/zYrXwLq</a></p>\n<h2 id=\"結語\"><a href=\"#結語\" class=\"headerlink\" title=\"結語\"></a>結語</h2><p>善用 CSS 選取器可以減少 HTML 命名 class 的數量，避免充斥著各種 Class，這個版型非常適合切一波，算是子代選取器的綜合練習與觀念導正！</p>\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><ul>\n<li><a href=\"https://ithelp.ithome.com.tw/articles/10223584\" target=\"_blank\" rel=\"noopener\">金魚都能懂的這個網頁畫面怎麼切 : 進化了!多層次收合選單!</a></li>\n</ul>\n","categories":["CSS"],"tags":["CSS"]},{"title":"CSS 筆記 - 金魚系列 13 - 動態收闔側邊選單","url":"/css/20200726/73154963/","content":"<p><img src=\"https://i.imgur.com/KrqlfA7.png\" alt=\"side\"></p>\n<p>延續 <a href=\"https://hsuchihting.github.io/css/20200723/3601848445/\">金魚系列 12</a> 側邊選單的加強版，加上可以收闔的功能，很多介面都會使用到，不管是前台還是後台。</p>\n<h2 id=\"學習重點\"><a href=\"#學習重點\" class=\"headerlink\" title=\"學習重點\"></a>學習重點</h2><ul>\n<li><a href=\"https://ithelp.ithome.com.tw/articles/10222665\" target=\"_blank\" rel=\"noopener\">金魚都能懂的這個網頁畫面怎麼切 : 側邊選單怎麼切</a></li>\n<li>flex 教學</li>\n<li><a href=\"https://ithelp.ithome.com.tw/articles/10222941\" target=\"_blank\" rel=\"noopener\">:checked 原理說明（文字）</a></li>\n<li><a href=\"httpshttps://www.youtube.com/watch?v=XCyrzYp3aCY&feature=youtu.be\">:checked 選取器（影片）</a></li>\n<li>使用 absolute + margin auto 來達到 CSS 垂直置中效果</li>\n<li><a href=\"https://www.youtube.com/watch?v=rE01OKQBR6I&feature=youtu.be\" target=\"_blank\" rel=\"noopener\">RWD 選單製作教學</a></li>\n</ul>\n<h2 id=\"HTML-架構\"><a href=\"#HTML-架構\" class=\"headerlink\" title=\"HTML 架構\"></a>HTML 架構</h2><p>新增了兩個元素，一個為 <code>checkbox</code>，另一個為 <code>label</code>，<code>label</code> 是對應 <code>input</code> 可以使用的標籤。</p>\n<ul>\n<li>使用 checkbox 來做開關。</li>\n<li>label 寫在 nav 下方是為了比較好看到。</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"sideMenu-active\"</span> /&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"sideMenu\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"search\"</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">\"請輸入搜尋名稱\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fas fa-search\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">nav</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fas fa-sitemap\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span>金魚系列 VII<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fas fa-chalkboard\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span>側邊選單<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fas fa-book-reader\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span>非常常見<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fas fa-user-graduate\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span>不會不行<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fas fa-trophy\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span>切了就會<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">nav</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">\"sideMenu-active\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fas fa-angle-right\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"CSS-樣式\"><a href=\"#CSS-樣式\" class=\"headerlink\" title=\"CSS 樣式\"></a>CSS 樣式</h2><p>有新增的收合效果記錄一下。</p>\n<h3 id=\"label-設定\"><a href=\"#label-設定\" class=\"headerlink\" title=\"label 設定\"></a>label 設定</h3><p>也就新增收合選單右邊凸出來的按鈕圖示，</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">label</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">80px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#d1d1d1</span>;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"number\">#686666</span>;</span><br><span class=\"line\">  position: absolute; // 絕對定位在 sideMenu 上</span><br><span class=\"line\">  <span class=\"selector-tag\">right</span>: <span class=\"selector-tag\">-20px</span>;</span><br><span class=\"line\">  top: 0; //絕對定位垂直置中的技巧</span><br><span class=\"line\">  bottom: 0; //絕對定位垂直置中的技巧</span><br><span class=\"line\">  <span class=\"selector-tag\">margin</span>: <span class=\"selector-tag\">auto</span>;</span><br><span class=\"line\">  <span class=\"selector-tag\">line-height</span>: 80<span class=\"selector-tag\">px</span>;</span><br><span class=\"line\">  <span class=\"selector-tag\">text-align</span>: <span class=\"selector-tag\">center</span>;</span><br><span class=\"line\">  <span class=\"selector-tag\">border-radius</span>: 0 5<span class=\"selector-tag\">px</span> 5<span class=\"selector-tag\">px</span> 0;</span><br><span class=\"line\">  <span class=\"selector-tag\">box-shadow</span>: 5<span class=\"selector-tag\">px</span> 0 5<span class=\"selector-tag\">px</span> <span class=\"selector-tag\">rgba</span>(23, 23, 54, 0<span class=\"selector-class\">.6</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"checkbox-設定\"><a href=\"#checkbox-設定\" class=\"headerlink\" title=\"checkbox 設定\"></a>checkbox 設定</h3><p>因為這個頁面只有一個側欄開關，故直接在 input 綁定一個 id 來控制它。</p>\n<ul>\n<li>當我點擊 sideMenu 時，checkbox 的狀態變為 checked 的時候，讓側邊選單出現。</li>\n<li>使 label 裡的圖案橫向反轉。</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-id\">#sideMenu-active</span><span class=\"selector-pseudo\">:checked</span> + <span class=\"selector-class\">.sideMenu</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateX</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">  label .fas &#123;</span><br><span class=\"line\">    <span class=\"selector-tag\">transform</span>: <span class=\"selector-tag\">scaleX</span>(<span class=\"selector-tag\">-1</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/X65xAis.png\" alt=\"close\"></p>\n<ul>\n<li>將 input 絕對定位在 body 上，就不會佔空間，會貼其左上角。</li>\n<li>使 checkbox 變透明。</li>\n<li>不要讓該功能還選得到，可將其排序往後跳。</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-id\">#sideMenu-active</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">  <span class=\"attribute\">opacity</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">z-index</span>: -<span class=\"number\">1</span>;</span><br></pre></td></tr></table></figure>\n\n<p>最後在 .sideMenu 加上 transition 後，就完成收合式選單囉!</p>\n<ul>\n<li><code>label</code> 相對定位在 <code>.sideMenu</code>。</li>\n<li><code>transform: translateX(-100%);</code> 將 <code>.sideMenu</code> 左橫移 100%，使之到螢幕外。</li>\n<li><code>transition: 0.5s;</code> 側邊選單收合的時間差。</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.sideMenu</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">300px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#ff7575</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-right</span>: <span class=\"number\">3px</span> solid <span class=\"number\">#d1d1d1</span>;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">  flex-direction: column; //主軸</span><br><span class=\"line\">  <span class=\"selector-tag\">padding</span>: 50<span class=\"selector-tag\">px</span> 0;</span><br><span class=\"line\">  <span class=\"selector-tag\">box-shadow</span>: 5<span class=\"selector-tag\">px</span> 0 5<span class=\"selector-tag\">px</span> <span class=\"selector-tag\">rgba</span>(23, 23, 54, 0<span class=\"selector-class\">.6</span>);</span><br><span class=\"line\">  <span class=\"selector-tag\">position</span>: <span class=\"selector-tag\">relative</span>;</span><br><span class=\"line\">  <span class=\"selector-tag\">transform</span>: <span class=\"selector-tag\">translateX</span>(<span class=\"selector-tag\">-100</span>%);</span><br><span class=\"line\">  <span class=\"selector-tag\">transition</span>: 0<span class=\"selector-class\">.5s</span>;</span><br></pre></td></tr></table></figure>\n\n<p>CodePen <a href=\"https://codepen.io/hnzxewqw/full/NWxmjMo\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/full/NWxmjMo</a></p>\n<h2 id=\"延伸閱讀\"><a href=\"#延伸閱讀\" class=\"headerlink\" title=\"延伸閱讀\"></a>延伸閱讀</h2><ul>\n<li><a href=\"https://hsuchihting.github.io/css/20200525/1233449136/\">使用 jQuery 控制的收合選單。</a></li>\n</ul>\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><ul>\n<li><a href=\"https://ithelp.ithome.com.tw/articles/10222969\" target=\"_blank\" rel=\"noopener\">金魚都能懂的這個網頁畫面怎麼切 : 動態收合式側邊選單</a></li>\n</ul>\n","categories":["CSS"],"tags":["CSS"]},{"title":"JSP 筆記 - 繼定條件下使用 forEach 取得資料與判斷結合 C3.js 應用","url":"/javascript/20200723/3378642719/","content":"<p><img src=\"https://images.unsplash.com/photo-1504868584819-f8e8b4b6d7e3?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1355&q=80\" alt=\"chart\"></p>\n<p>將 API 中的完課率、姓名<strong>字元</strong>長度、完課率級距顯示於圖表。</p>\n<p>本次使用的 API。<a href=\"https://raw.githubusercontent.com/hexschool/hexschoolNewbieJS/master/data.json\" target=\"_blank\" rel=\"noopener\">連結</a></p>\n<h2 id=\"取得完課率資料\"><a href=\"#取得完課率資料\" class=\"headerlink\" title=\"取得完課率資料\"></a>取得完課率資料</h2><p><img src=\"https://i.imgur.com/Ic1lueq.png\" alt=\"process\"></p>\n<p>預計完成圖表如上圖(有七成的人已經開賽，一起加油!!已經過了半年了!!)。</p>\n<h3 id=\"取得資料\"><a href=\"#取得資料\" class=\"headerlink\" title=\"取得資料\"></a>取得資料</h3><ul>\n<li>宣告 data 變數來存放取得的資料。</li>\n<li>宣告已開賽與未開賽的變數，並給予 data 的項目名稱，起始為 0。</li>\n<li>使用 axios 取得 API 資料，並給予判斷，如果進度為 0，就在陣列資料第二筆，未開賽就 +1，若不是為 0，就在以開賽陣列資料第二筆 +1。<blockquote>\n<p>一定要寫陣列的哪個位置 +1，不然 data 名稱只會顯示一個字。</p>\n</blockquote>\n</li>\n<li>執行 C3.js 並把參數帶入。</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> data;</span><br><span class=\"line\"><span class=\"keyword\">let</span> joinCoding = [<span class=\"string\">\"已開賽(至少一關)\"</span>, <span class=\"number\">0</span>];</span><br><span class=\"line\"><span class=\"keyword\">let</span> notCoding = [<span class=\"string\">\"未開賽(進度0)\"</span>, <span class=\"number\">0</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">axios.get(dataUrl).then(<span class=\"function\">(<span class=\"params\">response</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  data = response.data;</span><br><span class=\"line\">  data.forEach(<span class=\"function\">(<span class=\"params\">item</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (item.process == <span class=\"string\">\"0%\"</span>) &#123;</span><br><span class=\"line\">      notCoding[<span class=\"number\">1</span>] += <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      joinCoding[<span class=\"number\">1</span>] += <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  loadC3(joinCoding, notCoding);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"載入-C3-js\"><a href=\"#載入-C3-js\" class=\"headerlink\" title=\"載入 C3.js\"></a>載入 C3.js</h3><p>將 <code>joinCoding</code> 與 <code>notCoding</code> 陣列資料展開。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">loadC3</span>(<span class=\"params\">joinCoding, notCoding</span>) </span>&#123;</span><br><span class=\"line\">  c3.generate(&#123;</span><br><span class=\"line\">    data: &#123;</span><br><span class=\"line\">      columns: [[...joinCoding], [...notCoding]],</span><br><span class=\"line\">      type: <span class=\"string\">\"pie\"</span>,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>CodePen <a href=\"https://codepen.io/hnzxewqw/pen/JjGxvaX\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/JjGxvaX</a></p>\n<h2 id=\"取得姓名字元長度\"><a href=\"#取得姓名字元長度\" class=\"headerlink\" title=\"取得姓名字元長度\"></a>取得姓名字元長度</h2><p><img src=\"https://i.imgur.com/qXRzCcz.png\" alt=\"name\"></p>\n<p>預計完成圖表如上圖(比例將近一半一半)。</p>\n<h3 id=\"取得資料-1\"><a href=\"#取得資料-1\" class=\"headerlink\" title=\"取得資料\"></a>取得資料</h3><p>跟取得完課資料方式大同小異，只是判斷方式不同。</p>\n<ul>\n<li>因為條件是有包含，所以要判斷成大於等於。</li>\n<li>取得圖表資料寫法相同，就不再贅述。</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> data;</span><br><span class=\"line\"><span class=\"keyword\">let</span> nameLonger = [<span class=\"string\">\"姓名長度為7個(含)以上\"</span>, <span class=\"number\">0</span>];</span><br><span class=\"line\"><span class=\"keyword\">let</span> nameShorter = [<span class=\"string\">\"姓名長度為6個(含)以下\"</span>, <span class=\"number\">0</span>];</span><br><span class=\"line\">axios.get(dataUrl).then(<span class=\"function\">(<span class=\"params\">response</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  data = response.data;</span><br><span class=\"line\">  data.forEach(<span class=\"function\">(<span class=\"params\">item</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (item.name.length &gt;= <span class=\"number\">7</span>) &#123;</span><br><span class=\"line\">      nameLonger[<span class=\"number\">1</span>] += <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      nameShorter[<span class=\"number\">1</span>] += <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  loadC3(nameLonger, nameShorter);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>CodePen <a href=\"https://codepen.io/hnzxewqw/pen/jOWdxvX\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/jOWdxvX</a></p>\n<h2 id=\"分三個級距，並用兩種圖表顯示\"><a href=\"#分三個級距，並用兩種圖表顯示\" class=\"headerlink\" title=\"分三個級距，並用兩種圖表顯示\"></a>分三個級距，並用兩種圖表顯示</h2><p><img src=\"https://i.imgur.com/sw5KGIN.png\" alt=\"total\"></p>\n<p>預計完成圖表如上圖(目前有跟上進度的人數不到 2%，大多都落後了…)。</p>\n<blockquote>\n<p>2020.7.22 統計</p>\n</blockquote>\n<h3 id=\"取得資料-2\"><a href=\"#取得資料-2\" class=\"headerlink\" title=\"取得資料\"></a>取得資料</h3><ul>\n<li>分成三種級距，並沒有包含，其中一個有範圍。</li>\n<li>判斷使用到運算子。</li>\n<li>使用兩個函式放不同圖表，為了是避免修正樣式結果另一個圖表也壞掉了，帶入的參數一致，資料來源一致。</li>\n<li>圖表設定方法跟前面相同，只有更換 <code>type</code>，就不贅述。</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> finishHigh = [<span class=\"string\">\"完課率 50% 以上\"</span>, <span class=\"number\">0</span>];</span><br><span class=\"line\"><span class=\"keyword\">let</span> finishMiddle = [<span class=\"string\">\"完課率 21%~49%\"</span>, <span class=\"number\">0</span>];</span><br><span class=\"line\"><span class=\"keyword\">let</span> finishLow = [<span class=\"string\">\"完課率 0%~20%\"</span>, <span class=\"number\">0</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">axios.get(dataUrl).then(<span class=\"function\">(<span class=\"params\">response</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  data = response.data;</span><br><span class=\"line\">  data.forEach(<span class=\"function\">(<span class=\"params\">item</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (item.process &gt; <span class=\"string\">\"50%\"</span>) &#123;</span><br><span class=\"line\">      finishHigh[<span class=\"number\">1</span>] += <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (item.process &gt; <span class=\"string\">\"20%\"</span> &amp;&amp; item.process &lt; <span class=\"string\">\"49%\"</span>) &#123;</span><br><span class=\"line\">      finishMiddle[<span class=\"number\">1</span>] += <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      finishLow[<span class=\"number\">1</span>] += <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  loadPie(finishHigh, finishMiddle, finishLow);</span><br><span class=\"line\">  loadBar(finishHigh, finishMiddle, finishLow);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>CodePen <a href=\"https://codepen.io/hnzxewqw/pen/dyGaegN\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/dyGaegN</a></p>\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><ul>\n<li><a href=\"http://dhcp.tcgs.tc.edu.tw/c/p009.htm\" target=\"_blank\" rel=\"noopener\">字元與字串</a></li>\n</ul>\n","categories":["JavaScript"],"tags":["JavaScript","C3.js","axios"]},{"title":"CSS 筆記 - 金魚系列 12 - 側邊選單","url":"/css/20200723/3601848445/","content":"<p><img src=\"https://i.imgur.com/D6DwSIh.png\" alt=\"aside\"></p>\n<p>後台或是形象網站一定會有的側邊選單，當然一定要記錄一下。</p>\n<h2 id=\"學習重點\"><a href=\"#學習重點\" class=\"headerlink\" title=\"學習重點\"></a>學習重點</h2><ul>\n<li>flex 教學</li>\n<li><a href=\"https://ithelp.ithome.com.tw/articles/10222534\" target=\"_blank\" rel=\"noopener\">::before &amp; ::after 無中生有的僞元素選取器</a></li>\n<li><a href=\"https://ithelp.ithome.com.tw/articles/10220656\" target=\"_blank\" rel=\"noopener\">親代選取器之妹妹選取器與鞭炮串選取器</a></li>\n<li>box-sizing 教學</li>\n<li>relative 相對定位教學</li>\n<li>absolute 絕對定位教學</li>\n</ul>\n<h2 id=\"HTML-架構\"><a href=\"#HTML-架構\" class=\"headerlink\" title=\"HTML 架構\"></a>HTML 架構</h2><p>會發現幾乎常見的架構都相當單純。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"sideMenu\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"search\"</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">\"請輸入搜尋名稱\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fas fa-search\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">nav</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fas fa-sitemap\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span>金魚系列 VII<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fas fa-chalkboard\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span>側邊選單<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fas fa-book-reader\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span>非常常見<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fas fa-user-graduate\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span>不會不行<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fas fa-trophy\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span>切了就會<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">nav</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"CSS-樣式\"><a href=\"#CSS-樣式\" class=\"headerlink\" title=\"CSS 樣式\"></a>CSS 樣式</h2><h3 id=\"aside-主體\"><a href=\"#aside-主體\" class=\"headerlink\" title=\"aside 主體\"></a>aside 主體</h3><ul>\n<li>讓 sideMenu 裡面的元素變成橫排</li>\n<li>讓元素的方向變成直排</li>\n<li>padding 因為有 boxsizing 的關係，所以不會有 Y 軸 bar</li>\n<li>讓 aside 產生陰影</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.sideMenu</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">300px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#ff7575</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-right</span>: <span class=\"number\">3px</span> solid <span class=\"number\">#d1d1d1</span>;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">  <span class=\"attribute\">flex-direction</span>: column;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">50px</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">box-shadow</span>: <span class=\"number\">5px</span> <span class=\"number\">0</span> <span class=\"number\">5px</span> <span class=\"built_in\">rgba</span>(#<span class=\"number\">303</span>c4d, <span class=\"number\">0.6</span>);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"搜尋列\"><a href=\"#搜尋列\" class=\"headerlink\" title=\"搜尋列\"></a>搜尋列</h3><ul>\n<li>讓 form 裡面的元素橫向排列</li>\n<li>設定 input 與 button 的空間比例，並將兩者的背景做成透明</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">form</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> <span class=\"number\">10px</span> <span class=\"number\">50px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid <span class=\"number\">#fff</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  input &#123;</span><br><span class=\"line\">    <span class=\"selector-tag\">width</span>: 85%;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"selector-tag\">button</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">15%</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"selector-tag\">input</span>,</span><br><span class=\"line\">  <span class=\"selector-tag\">button</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">border</span>: none;</span><br><span class=\"line\">    <span class=\"attribute\">padding</span>: <span class=\"number\">5px</span> <span class=\"number\">10px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: transparent;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"number\">#fff</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"selector-tag\">input</span><span class=\"selector-pseudo\">:focus</span>,</span><br><span class=\"line\">  <span class=\"selector-tag\">button</span><span class=\"selector-pseudo\">:focus</span> &#123;</span><br><span class=\"line\">    outline: none; //讓表單不要有 focus 效果</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"NAV\"><a href=\"#NAV\" class=\"headerlink\" title=\"NAV\"></a>NAV</h3><ul>\n<li>設定所有的 fontawesome 圖示都往右邊，超出 nav 範圍，所以使用負值。</li>\n<li>使用 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/transform-function/scale\" target=\"_blank\" rel=\"noopener\">scale()</a> 方法，產生位移讓圖示消失。</li>\n<li>項目 a 連結後產生一個 a 連結偽元素，使用 + 號選取器選到 a 的所有偽元素都有其樣式，使用絕對定位方式編寫，因為 padding 已設定左右 10px，所以左右邊要推擠 10px，然後使分隔線定位在 <code>top:0px</code>，固定在中間。</li>\n<li></li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">nav</span> &#123;</span><br><span class=\"line\">  a &#123;</span><br><span class=\"line\">    <span class=\"selector-tag\">display</span>: <span class=\"selector-tag\">block</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">color</span>: <span class=\"selector-id\">#fff</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">padding</span>: 20<span class=\"selector-tag\">px</span> 10<span class=\"selector-tag\">px</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">position</span>: <span class=\"selector-tag\">relative</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">font-weight</span>: 300;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"selector-class\">.fas</span> &#123;</span><br><span class=\"line\">      margin-right: -1.1em; //讓文字靠左對齊</span><br><span class=\"line\">      transform: scale(0); //使圖示消失</span><br><span class=\"line\">      <span class=\"selector-tag\">transition</span>: 0<span class=\"selector-class\">.3s</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &amp;<span class=\"selector-pseudo\">:hover</span> <span class=\"selector-class\">.fas</span> &#123;</span><br><span class=\"line\">      margin-right: 0em; //使文字回到原來的位置</span><br><span class=\"line\">      transform: scale(1); //使圖示出現</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &amp; + <span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">::before</span> &#123;</span><br><span class=\"line\">      <span class=\"attribute\">content</span>: <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">      <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">      <span class=\"attribute\">border-top</span>: <span class=\"number\">1px</span> solid <span class=\"number\">#ffffff</span>;</span><br><span class=\"line\">      <span class=\"attribute\">left</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">right</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">top</span>: <span class=\"number\">0px</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>CodePen <a href=\"https://codepen.io/hnzxewqw/full/dyGaeeO\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/full/dyGaeeO</a></p>\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><ul>\n<li><a href=\"https://ithelp.ithome.com.tw/articles/10222665\" target=\"_blank\" rel=\"noopener\">金魚都能懂的這個網頁畫面怎麼切 : 側邊選單怎麼切</a></li>\n<li><a href=\"https://ithelp.ithome.com.tw/articles/10220656\" target=\"_blank\" rel=\"noopener\">親代選取器之妹妹選取器與鞭炮串選取器</a></li>\n</ul>\n","categories":["CSS"],"tags":["CSS"]},{"title":"JS 筆記 - createElement 與 for 迴圈的使用","url":"/javascript/20200721/2453969415/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/JavaScript%20note-01.jpg?alt=media&token=7bee0261-72ac-4de4-9f5a-f39d58735b7d\" alt=\"JavaScript Note\"></p>\n<p>用法跟 innerHTML 類似，寫到這邊有發現 for 迴圈在前端技術上大量的被使用。</p>\n<h2 id=\"data-資料\"><a href=\"#data-資料\" class=\"headerlink\" title=\"data 資料\"></a>data 資料</h2><p>這次也是用一個主題來練習，<strong>找出學校的每一位老師</strong>，資料如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> data = [</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    teacher: <span class=\"string\">\"Mike\"</span>,</span><br><span class=\"line\">    students: <span class=\"number\">40</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    teacher: <span class=\"string\">\"Onizuka\"</span>,</span><br><span class=\"line\">    students: <span class=\"number\">35</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">];</span><br></pre></td></tr></table></figure>\n\n<p>新增一個 HTML 環境：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>學校每位老師的名字<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"school\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"for-迴圈\"><a href=\"#for-迴圈\" class=\"headerlink\" title=\"for 迴圈\"></a>for 迴圈</h2><p>先把基礎樣式寫好：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//變數</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> el = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\".school\"</span>); <span class=\"comment\">// 選取 ul 的這個 class</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> dataLen = data.length; <span class=\"comment\">//資料長度</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; dataLen; i++) &#123;&#125;</span><br></pre></td></tr></table></figure>\n\n<p>在 for 迴圈把預計的條件寫入，</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">\"li\"</span>); <span class=\"comment\">// 新增元素 li</span></span><br><span class=\"line\">str.textContent = data[i].teacher; <span class=\"comment\">// li 內的字串要顯示老師的名字</span></span><br><span class=\"line\">el.appendChild(str); <span class=\"comment\">// 增加子節點為 str 的內容</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"createElement\"><a href=\"#createElement\" class=\"headerlink\" title=\"createElement\"></a>createElement</h2><p>跟 innerHTML 不同的是，並沒有另外設定一個 <code>var str=&quot;&quot;</code>，原因是 createElement 的是用增加 DOM 元素的方式，不會將原本的資料覆蓋。這邊在 html 中加入兩個 <code>&lt;li&gt;</code>，為了要舉例 createElement 的特性。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>學校每位老師的名字<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"school\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>蔡老師<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>王老師<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>增加子節點後，就會直接渲染在網頁上，不用像 innerHTML 還要在 for 迴圈外再加上 el.innerHTML 的語法。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//變數</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> el = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\".school\"</span>); <span class=\"comment\">// 選取 ul 的這個 class</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> dataLen = data.length; <span class=\"comment\">//資料長度</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; dataLen; i++) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> str = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">\"li\"</span>); <span class=\"comment\">// 新增元素 li</span></span><br><span class=\"line\">  str.textContent = data[i].teacher; <span class=\"comment\">// li 內的字串要顯示老師的名字</span></span><br><span class=\"line\">  el.appendChild(str); <span class=\"comment\">// 增加子節點為 str 的內容</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>codepen: <a href=\"https://codepen.io/hnzxewqw/pen/NWqbQRE\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/NWqbQRE</a></p>\n<h2 id=\"心得\"><a href=\"#心得\" class=\"headerlink\" title=\"心得\"></a>心得</h2><p>透過這次練習得知，使用 createElement 之所以比較安全，效能差的原因要讀取許多程式碼執行後才會顯示，但安全性高是很重要的，所以可以簡單歸類成：</p>\n<ul>\n<li>自己人 = innerHTML</li>\n<li>外人 = createElement</li>\n</ul>\n","categories":["JavaScript"],"tags":["JavaScript"]},{"title":"CSS 筆記 - 金魚系列 11 - 破格式的簡單設計切版","url":"/css/20200721/3279463377/","content":"<p><img src=\"https://i.imgur.com/e3Bo3Xi.png\" alt=\"goldfishV\"></p>\n<p>這次練習很有趣，是破格式的切版，並且讓 icon 可以左右搖動，當中有許多眉角可以學習。</p>\n<h2 id=\"學習重點\"><a href=\"#學習重點\" class=\"headerlink\" title=\"學習重點\"></a>學習重點</h2><ul>\n<li>relative 定位教學</li>\n<li>absolute 定位教學</li>\n<li>Animation 網頁動畫教學</li>\n<li>flex 教學</li>\n<li>background-image 綜合寫法</li>\n<li>偽元素 ::before 的使用</li>\n</ul>\n<h2 id=\"HTML-結構\"><a href=\"#HTML-結構\" class=\"headerlink\" title=\"HTML 結構\"></a>HTML 結構</h2><p>結構相當簡單，有 item、icon、標題、文字。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"wrap\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"icon\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fas fa-fish fa-4x\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"text\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>金魚系列 V<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>破格式設計切版，算是進階的簡單切版，學起來很多地方依然很受用喔!<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">        一人女子檢測部隊儘快說了春天，活力來自不願再次那些指出形成隨意患者來電，減肥慢慢浙江很多人所說參與。</span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"icon\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fas fa-brain fa-4x\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"text\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>切版好燒腦?<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>跟著金魚系列切一輪，除了補強觀念外，也可跟著 Amos 學到很多切版喔!<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">        豐富可能會關閉無比一般請教，得分現代化，安裝策劃表面界面從而居民號碼大型，認證臨床影響，氣息傳輸甚。</span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"icon\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fas fa-code fa-4x\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"text\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>刻意的練習<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>有 input 就要有 output，技術若沒有刻意的練習，是不會進步的喔!<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">        還沒有，存儲命運一遍門派系統正是圖書加油，保健作用原創責任編輯，還沒熱線報導複製品質回覆試試女孩任。</span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"CSS-樣式\"><a href=\"#CSS-樣式\" class=\"headerlink\" title=\"CSS 樣式\"></a>CSS 樣式</h2><p>紀錄幾個重點：</p>\n<h3 id=\"body-設定\"><a href=\"#body-設定\" class=\"headerlink\" title=\"body 設定\"></a>body 設定</h3><p>要讓 item 內容垂直對齊。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">body</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">  <span class=\"attribute\">align-items</span>: center;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"wrap-設定\"><a href=\"#wrap-設定\" class=\"headerlink\" title=\".wrap 設定\"></a>.wrap 設定</h3><ul>\n<li>讓 item 變為橫排。</li>\n<li>因為破格關係，往上推擠圖示的空間(依照自己設定的圖示大小給予適當的像素值)。</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.wrap</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">1200px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> auto;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">  <span class=\"attribute\">padding-top</span>: <span class=\"number\">50px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"item-樣式\"><a href=\"#item-樣式\" class=\"headerlink\" title=\".item 樣式\"></a>.item 樣式</h3><ul>\n<li>做成三欄式，使用百分比做為單位，也是 RWD 的寫法。</li>\n<li>高度是最後依照文字高度做設定。</li>\n<li>寬度一開始式設定 33.33333%，要扣掉線條寬度以及 margin 寬度，最後變成 29.33333%。</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.item</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">29.33333%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">269px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> <span class=\"number\">3%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#131261</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">5px</span> solid <span class=\"number\">#ffd665</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">cursor</span>: pointer;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"icon-樣式\"><a href=\"#icon-樣式\" class=\"headerlink\" title=\"icon 樣式\"></a>icon 樣式</h3><blockquote>\n<p>最重要的就在這裡了!因為破格就是從這邊開始。</p>\n</blockquote>\n<ul>\n<li>設定 icon 的高度。</li>\n<li>margin-top 的部分就依照自己喜歡的位置設定，當然也要考慮到邊框線 的交接點。</li>\n<li>做成圓形，所以 border-radius 只要夠大就確保在不同解析度下都是圓形，這邊設定 <code>border-radius: 100%;</code>，當然也可以設定成像素。</li>\n<li>邊框限用偽元素來做，原因是圓形是由正方形變成的，圓形看似都相連在一起的線條，其實會有斜角的交接點，可以參考 <a href=\"https://hsuchihting.github.io/css/20200718/3868981590/\">CSS 筆記 - 三角形演進史</a>，可以知道邊框線其實還是維持上右下左的位置，因為之後要將左跟下的邊框變為透明，這樣圓形邊框線會變成 45 度角呈現，為了不要旋轉後影響到 icon ，所以使用偽元素來製作。</li>\n<li>讓 font-awesome 的圖示置中對齊 icon，使用最簡單的 <code>line-height</code> 對齊。</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.icon</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">150px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">150px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: -<span class=\"number\">75px</span> auto <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#131261</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">  position: relative; //偽元素的相對定位</span><br><span class=\"line\">  //icon 外框線</span><br><span class=\"line\">  &amp;<span class=\"selector-pseudo\">::before</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">content</span>: <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">    <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">border</span>: <span class=\"number\">5px</span> solid <span class=\"number\">#ffd665</span>;</span><br><span class=\"line\">    <span class=\"attribute\">top</span>: -<span class=\"number\">5px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">left</span>: -<span class=\"number\">5px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">border-radius</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">border-left</span>: <span class=\"number\">5px</span> solid transparent;</span><br><span class=\"line\">    <span class=\"attribute\">border-bottom</span>: <span class=\"number\">5px</span> solid transparent;</span><br><span class=\"line\">    <span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(-<span class=\"number\">45deg</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"selector-class\">.fas</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">line-height</span>: <span class=\"number\">150px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"number\">#ffd665</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"text-設定\"><a href=\"#text-設定\" class=\"headerlink\" title=\"text 設定\"></a>text 設定</h3><p><code>.item</code> 裡面的文字設定，這邊有使用到絕對定位的原因，是正方形旋轉後下方空間太大，為了讓畫面好看且平衡，使用絕對定位讓文字與 <code>.icon</code> 空間相距適合的距離。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.text</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">  position: absolute; //絕對定位於item</span><br><span class=\"line\">  <span class=\"selector-tag\">top</span>: 30<span class=\"selector-tag\">px</span>;</span><br><span class=\"line\">  <span class=\"selector-tag\">h3</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"number\">#ffd665</span>;</span><br><span class=\"line\">    <span class=\"attribute\">font-size</span>: <span class=\"number\">32px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">font-weight</span>: <span class=\"number\">500</span>;</span><br><span class=\"line\">    <span class=\"attribute\">padding-bottom</span>: <span class=\"number\">1%</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"number\">#ffffff</span>;</span><br><span class=\"line\">    <span class=\"attribute\">font-weight</span>: <span class=\"number\">100</span>;</span><br><span class=\"line\">    <span class=\"attribute\">line-height</span>: <span class=\"number\">1.5</span>;</span><br><span class=\"line\">    <span class=\"attribute\">padding-bottom</span>: <span class=\"number\">5%</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"hover-跟-animation-效果\"><a href=\"#hover-跟-animation-效果\" class=\"headerlink\" title=\"hover 跟 animation 效果\"></a>hover 跟 animation 效果</h2><p>這邊要做的是當滑鼠移動到 item 時，給予 icon 裡面的圖示有持續左右搖動的動畫效果，產生互動。<br>這裡使用 <a href=\"https://hsuchihting.github.io/css/20200525/2231842812/\">drop-shadow</a> 與 <a href=\"https://hsuchihting.github.io/css/20200713/3105415432/\">animation</a> 動畫。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.item</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">29.33333%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">269px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> <span class=\"number\">3%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#131261</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">5px</span> solid <span class=\"number\">#ffd665</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">box-shadow</span>: <span class=\"number\">0px</span> <span class=\"number\">0px</span> <span class=\"number\">5px</span> <span class=\"number\">#000000</span>;</span><br><span class=\"line\">  position: relative; //text 的相對定位</span><br><span class=\"line\">  <span class=\"selector-tag\">cursor</span>: <span class=\"selector-tag\">pointer</span>;</span><br><span class=\"line\">  //item hover</span><br><span class=\"line\">  &amp;<span class=\"selector-pseudo\">:hover</span> &#123;</span><br><span class=\"line\">    .fas &#123;</span><br><span class=\"line\">      animation: shake 0.2s linear infinite alternate; //動畫</span><br><span class=\"line\">      <span class=\"selector-tag\">transition</span>: <span class=\"selector-tag\">all</span> 0<span class=\"selector-class\">.5s</span>;</span><br><span class=\"line\">      // color: #ffebb4;</span><br><span class=\"line\">      <span class=\"selector-tag\">filter</span>: <span class=\"selector-tag\">drop-shadow</span>(0 0 10<span class=\"selector-tag\">px</span> <span class=\"selector-id\">#ffebb4</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">@keyframes</span> shake &#123;</span><br><span class=\"line\">  0% &#123;</span><br><span class=\"line\">    <span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(-<span class=\"number\">10deg</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  100% &#123;</span><br><span class=\"line\">    <span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(<span class=\"number\">10deg</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>這樣就完成啦!!</p>\n<p>CodePen <a href=\"https://codepen.io/hnzxewqw/full/ExPGBbO\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/full/ExPGBbO</a></p>\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><ul>\n<li><a href=\"https://ithelp.ithome.com.tw/articles/10221779\" target=\"_blank\" rel=\"noopener\">金魚都能懂的這個網頁畫面怎麼切 : 破格式設計</a></li>\n</ul>\n","categories":["CSS"],"tags":["CSS"]},{"title":"JSP 筆記 - 程式碼整合","url":"/javascript/20200721/262164692/","content":"<p><img src=\"https://i.imgur.com/uD90WEM.png\" alt=\"Generate\"></p>\n<p>這次記錄兩份程式碼整合後的結果，這部分卡關了一天，感謝同學熱心與解惑，有釐清一下思維，來記錄一下過程。</p>\n<h2 id=\"需求\"><a href=\"#需求\" class=\"headerlink\" title=\"需求\"></a>需求</h2><p>這次需要將清單與圖表整合在一起，如上方圖片所示，並且圖表與選單的內容要同步顯示。</p>\n<h2 id=\"程式碼整合\"><a href=\"#程式碼整合\" class=\"headerlink\" title=\"程式碼整合\"></a>程式碼整合</h2><p>主要要整合的是下方兩個片段程式碼，相關說明可以參考<a href=\"https://hsuchihting.github.io/javascript/20200715/679666643/\">這篇</a>。</p>\n<h3 id=\"選擇清單\"><a href=\"#選擇清單\" class=\"headerlink\" title=\"選擇清單\"></a>選擇清單</h3><p>select 清單判斷條件與資料處理。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">sortData</span>(<span class=\"params\">data, select</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (select === <span class=\"string\">\"id\"</span>) data.sort(<span class=\"function\">(<span class=\"params\">x, y</span>) =&gt;</span> <span class=\"built_in\">parseInt</span>(x.id) - <span class=\"built_in\">parseInt</span>(y.id));</span><br><span class=\"line\">  <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (select === <span class=\"string\">\"process\"</span>)</span><br><span class=\"line\">    data.sort(<span class=\"function\">(<span class=\"params\">x, y</span>) =&gt;</span> <span class=\"built_in\">parseFloat</span>(y.process) - <span class=\"built_in\">parseFloat</span>(x.process)); <span class=\"comment\">//四捨五入，取小數點後兩位</span></span><br><span class=\"line\"></span><br><span class=\"line\">  data.forEach(<span class=\"function\">(<span class=\"params\">item</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    columns.push(<span class=\"built_in\">parseFloat</span>(item.process) / <span class=\"number\">100</span>); <span class=\"comment\">//完成率資料取得小數點後兩位後，變百分比呈現</span></span><br><span class=\"line\">    category.push(item.name); <span class=\"comment\">//把參賽者資料推到參數中</span></span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"C3-js-圖表\"><a href=\"#C3-js-圖表\" class=\"headerlink\" title=\"C3.js 圖表\"></a>C3.js 圖表</h3><p>要匯入圖表的條件，參數會帶入 C3 中執行，C3 圖表程式碼略過不貼上來。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> columns = [<span class=\"string\">\"完成率\"</span>]; <span class=\"comment\">//data 對應名稱與存放數據資料用</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> category = []; <span class=\"comment\">//參賽者姓名資料</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">sortC3</span>(<span class=\"params\">data</span>) </span>&#123;</span><br><span class=\"line\">  data.sort(<span class=\"function\">(<span class=\"params\">x, y</span>) =&gt;</span> <span class=\"built_in\">parseFloat</span>(y.process) - <span class=\"built_in\">parseFloat</span>(x.process)); <span class=\"comment\">//完成率資料排序，多到少</span></span><br><span class=\"line\">  data.forEach(<span class=\"function\">(<span class=\"params\">item</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    columns.push(<span class=\"built_in\">parseFloat</span>(item.process) / <span class=\"number\">100</span>); <span class=\"comment\">//完成率資料取得小數點後兩位後，變百分比呈現</span></span><br><span class=\"line\">    category.push(item.name); <span class=\"comment\">//把參賽者資料推到參數中</span></span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"整合前思考\"><a href=\"#整合前思考\" class=\"headerlink\" title=\"整合前思考\"></a>整合前思考</h2><h3 id=\"誰是主要驅動的程式碼\"><a href=\"#誰是主要驅動的程式碼\" class=\"headerlink\" title=\"誰是主要驅動的程式碼?\"></a>誰是主要驅動的程式碼?</h3><p>合併很單純的以為就是把兩個片段程式碼貼再一起，然後在 axios 裡面同步執行就可以了，可是兩者並無直接連動，所以要先決定哪一個才是主要驅動的程式碼，另一個只是跟隨其條件。</p>\n<p>很直覺的操作是我要透過 select 選到想要的條件後，右邊圖表會跟著改變。</p>\n<h3 id=\"主要是-select-在控制\"><a href=\"#主要是-select-在控制\" class=\"headerlink\" title=\"主要是 select 在控制\"></a>主要是 select 在控制</h3><p>釐清 select 是主要的條件後，所以要把圖表整合到 select 裡面，兩者整合後就變成下方程式碼：</p>\n<ul>\n<li>可見到中間區域的條件判斷使用的內容幾乎一樣。</li>\n<li>所以只有把圖表要用的兩個變數拿過來用。</li>\n<li>剩下的判斷與資料處理沿用清單的程式碼。</li>\n<li>最後帶入 C3.js 圖表的函式。</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">sortData</span>(<span class=\"params\">data, select</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> columns = [<span class=\"string\">\"完成率\"</span>]; <span class=\"comment\">//data 對應名稱與存放數據資料用</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> category = []; <span class=\"comment\">//參賽者姓名資料</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (select === <span class=\"string\">\"id\"</span>) data.sort(<span class=\"function\">(<span class=\"params\">x, y</span>) =&gt;</span> <span class=\"built_in\">parseInt</span>(x.id) - <span class=\"built_in\">parseInt</span>(y.id));</span><br><span class=\"line\">  <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (select === <span class=\"string\">\"process\"</span>)</span><br><span class=\"line\">    data.sort(<span class=\"function\">(<span class=\"params\">x, y</span>) =&gt;</span> <span class=\"built_in\">parseFloat</span>(y.process) - <span class=\"built_in\">parseFloat</span>(x.process)); <span class=\"comment\">//四捨五入，取小數點後兩位</span></span><br><span class=\"line\"></span><br><span class=\"line\">  data.forEach(<span class=\"function\">(<span class=\"params\">item</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    columns.push(<span class=\"built_in\">parseFloat</span>(item.process) / <span class=\"number\">100</span>); <span class=\"comment\">//完成率資料取得小數點後兩位後，變百分比呈現</span></span><br><span class=\"line\">    category.push(item.name); <span class=\"comment\">//把參賽者資料推到參數中</span></span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  load(columns, category); <span class=\"comment\">//C3 的函式</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>最後就可以得到想要的結果了！</p>\n<h2 id=\"畫面處理\"><a href=\"#畫面處理\" class=\"headerlink\" title=\"畫面處理\"></a>畫面處理</h2><p>確認有資料有同步執行與顯示後，有牽扯到畫面就一定要提一下 CSS，這邊記錄一下重點。</p>\n<h3 id=\"HTML-架構\"><a href=\"#HTML-架構\" class=\"headerlink\" title=\"HTML 架構\"></a>HTML 架構</h3><p>先看一下 HTML 架構，<code>.wrap</code> 是整個清單與圖表顯示的大區塊，當中又分成左右兩邊區塊，所以我要動的就是 <code>.wrapLeft</code> 跟 <code>.wrapRight</code>。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">main</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"main\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"wrap\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"wrapLeft\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">class</span>=<span class=\"string\">\" select\"</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"id\"</span>&gt;</span>依照 id 編號排序<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"process\"</span>&gt;</span>依照完課率排序<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"record\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"wrapRight\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"chart\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">main</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"SCSS-樣式\"><a href=\"#SCSS-樣式\" class=\"headerlink\" title=\"SCSS 樣式\"></a>SCSS 樣式</h3><p>要讓清單與圖表橫向排列，所以這邊要加上 <code>display:flex;</code></p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.wrap</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">1200px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> auto;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>左右區塊只要加入百分比就會自動分開了。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.wrapLeft</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">40%</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.wrapRight</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">60%</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>CodePen <a href=\"https://codepen.io/hnzxewqw/pen/NWxeoBq\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/NWxeoBq</a></p>\n<h2 id=\"結語\"><a href=\"#結語\" class=\"headerlink\" title=\"結語\"></a>結語</h2><p>對於程式碼整合思考還要再熟練一點，有時候想得太複雜了，要在直覺一點。</p>\n","categories":["JavaScript"],"tags":["JavaScript","C3.js"]},{"title":"CSS 筆記 - 金魚系列 10 - 表格切版","url":"/css/20200721/3151408306/","content":"<p><img src=\"https://i.imgur.com/R71SZPB.jpg\" alt=\"table\"></p>\n<p>表格是後台類型非常常用的切版之一，當中有很多的眉角需要學習，特此記錄一下。</p>\n<h2 id=\"學習重點\"><a href=\"#學習重點\" class=\"headerlink\" title=\"學習重點\"></a>學習重點</h2><ul>\n<li>flex</li>\n<li>first-child</li>\n<li>last-child</li>\n<li>nth-child</li>\n<li>表格標題 caption (無障礙網頁一定要會)</li>\n<li>表格屬性 scope=”col”</li>\n<li>colspan=”#” 合併表格欄位</li>\n</ul>\n<h2 id=\"table-結構\"><a href=\"#table-結構\" class=\"headerlink\" title=\"table 結構\"></a>table 結構</h2><p>先確立 table 的結構，給予一個 table 的 <code>&lt;div&gt;</code>，並且把 <code>&lt;table&gt;</code> 標籤，裡面放置表頭、表身、表尾。確立後再把其他的東西放進去。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"table\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">thead</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">thead</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tbody</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tfoot</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">tfoot</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"tr-th-td\"><a href=\"#tr-th-td\" class=\"headerlink\" title=\"tr, th, td\"></a>tr, th, td</h3><p>確立好 table 後就要放入相對的表格標籤，這樣瀏覽器才看得懂，放入的文字就再到 Codepen 看。常常在做表格會因為標籤很多，趕到凌亂，所以我會把表頭、表身、表尾空一格或加上註解，以便識別。</p>\n<ul>\n<li>tr 欄位(橫向)</li>\n<li>th 表頭使用的文字標籤，並給予範圍是「欄」</li>\n<li>td 除了表頭外使用的內文標籤</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"table\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">thead</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">th</span> <span class=\"attr\">scope</span>=<span class=\"string\">\"col\"</span>&gt;</span>灌籃高手<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">thead</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tfoot</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tfoot</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"CSS-樣式\"><a href=\"#CSS-樣式\" class=\"headerlink\" title=\"CSS 樣式\"></a>CSS 樣式</h2><p>先把 CSS 要做的部分先確立，因為表格標籤多，做較詳盡的記錄。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.table</span> &#123;</span><br><span class=\"line\">  table &#123;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"selector-tag\">tr</span> &#123;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"selector-tag\">th</span> &#123;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"selector-tag\">td</span> &#123;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>完成後就先來把 table 的 CSS 基本樣式給建立好再來美化它。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.table</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">800px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> auto;</span><br><span class=\"line\"></span><br><span class=\"line\">  table &#123;</span><br><span class=\"line\">    border: 3px double #333; //雙框線</span><br><span class=\"line\">    <span class=\"selector-tag\">width</span>: 100%;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"selector-tag\">tr</span> &#123;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"selector-tag\">th</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid <span class=\"number\">#666</span>;</span><br><span class=\"line\">    <span class=\"attribute\">padding</span>: <span class=\"number\">6px</span> <span class=\"number\">10px</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"selector-tag\">td</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid <span class=\"number\">#666</span>;</span><br><span class=\"line\">    <span class=\"attribute\">padding</span>: <span class=\"number\">6px</span> <span class=\"number\">10px</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"colspan-合併表格空間\"><a href=\"#colspan-合併表格空間\" class=\"headerlink\" title=\"colspan 合併表格空間\"></a>colspan 合併表格空間</h2><p>因 <code>&lt;tfoot&gt;</code> 除了第一格外，後面的表格要合併，所以可以使用 colspan 來合併其他表格，那這次練習後面有五格，在 HTML 的值就要給予 5。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">td</span> <span class=\"attr\">colspan</span>=<span class=\"string\">\"5\"</span>&gt;</span>本頁切版為參考金魚系列教學<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"caption-表格標題\"><a href=\"#caption-表格標題\" class=\"headerlink\" title=\"caption 表格標題\"></a>caption 表格標題</h2><p>製作無障礙網站一定要知道表格標題。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">caption</span>&gt;</span></span><br><span class=\"line\">  表格標題：其實很重要的，但比較少人使用。</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">caption</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>目前就完成表格的基本架構，如下圖。</p>\n<p><img src=\"https://i.imgur.com/fYb5DJi.png\" alt=\"table\"></p>\n<h2 id=\"CSS-樣式美化\"><a href=\"#CSS-樣式美化\" class=\"headerlink\" title=\"CSS 樣式美化\"></a>CSS 樣式美化</h2><h3 id=\"table\"><a href=\"#table\" class=\"headerlink\" title=\"table\"></a>table</h3><ul>\n<li>caption 位置設定。</li>\n<li>table 最外層要圓角。</li>\n<li>thead 與 tfoot 圓角設定。</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.table</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">800px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> auto;</span><br><span class=\"line\">  caption &#123;</span><br><span class=\"line\">    caption-side: bottom; //將 caption 移到下方</span><br><span class=\"line\">    text-align: right; //靠右對齊</span><br><span class=\"line\">    <span class=\"selector-tag\">font-weight</span>: 300;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"selector-tag\">th</span>,</span><br><span class=\"line\">  <span class=\"selector-tag\">td</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid <span class=\"number\">#666</span>;</span><br><span class=\"line\">    <span class=\"attribute\">padding</span>: <span class=\"number\">6px</span> <span class=\"number\">10px</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"selector-tag\">table</span> &#123;</span><br><span class=\"line\">    border: 3px double #333; //雙框線</span><br><span class=\"line\">    <span class=\"selector-tag\">width</span>: 100%;</span><br><span class=\"line\">    <span class=\"selector-tag\">background-color</span>: <span class=\"selector-id\">#fff</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">border-radius</span>: 10<span class=\"selector-tag\">px</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"selector-tag\">thead</span> &#123;</span><br><span class=\"line\">      <span class=\"attribute\">th</span>:first-child &#123;</span><br><span class=\"line\">        border-radius: <span class=\"number\">10px</span> <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"selector-tag\">th</span><span class=\"selector-pseudo\">:last-child</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">border-radius</span>: <span class=\"number\">0</span> <span class=\"number\">10px</span> <span class=\"number\">0</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"selector-tag\">tfoot</span> &#123;</span><br><span class=\"line\">      <span class=\"attribute\">td</span>:first-child &#123;</span><br><span class=\"line\">        border-radius: <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">10px</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"selector-tag\">td</span><span class=\"selector-pseudo\">:last-child</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">border-radius</span>: <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">10px</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/uU3lMs1.png\" alt=\"table2\"></p>\n<h3 id=\"色彩樣式\"><a href=\"#色彩樣式\" class=\"headerlink\" title=\"色彩樣式\"></a>色彩樣式</h3><ul>\n<li>依照 <code>thead</code>, <code>tbody</code>, <code>tfoot</code> 做顏色修改，按照順序比較不會混亂。</li>\n<li>使用 <code>first-child</code>, <code>last-child</code>, <code>nth-child</code> 選取器選擇到想要的位置並給予想要的樣式，這樣可以避免 html 有過多的 class。</li>\n<li>並增加互動效果。</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">table</span> &#123;</span><br><span class=\"line\">  border: 3px double #333; //雙框線</span><br><span class=\"line\">  <span class=\"selector-tag\">width</span>: 100%;</span><br><span class=\"line\">  <span class=\"selector-tag\">background-color</span>: <span class=\"selector-id\">#fff</span>;</span><br><span class=\"line\">  <span class=\"selector-tag\">border-radius</span>: 10<span class=\"selector-tag\">px</span>;</span><br><span class=\"line\">  <span class=\"selector-tag\">thead</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: <span class=\"number\">#333333</span>;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"number\">#fff</span>;</span><br><span class=\"line\">    <span class=\"attribute\">th</span>:first-child &#123;</span><br><span class=\"line\">      border-radius: <span class=\"number\">10px</span> <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-tag\">th</span><span class=\"selector-pseudo\">:last-child</span> &#123;</span><br><span class=\"line\">      <span class=\"attribute\">border-radius</span>: <span class=\"number\">0</span> <span class=\"number\">10px</span> <span class=\"number\">0</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"selector-tag\">tbody</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">tr</span>:<span class=\"built_in\">nth-child</span>(even) &#123;</span><br><span class=\"line\">      background-color: <span class=\"number\">#dddddd</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-tag\">tr</span><span class=\"selector-pseudo\">:hover</span> &#123;</span><br><span class=\"line\">      <span class=\"attribute\">background-color</span>: <span class=\"number\">#ffc4c4</span>;</span><br><span class=\"line\">      <span class=\"attribute\">transition</span>: all <span class=\"number\">0.5s</span>;</span><br><span class=\"line\">      <span class=\"attribute\">cursor</span>: pointer;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"selector-tag\">tfoot</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">td</span>:first-child &#123;</span><br><span class=\"line\">      border-radius: <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">10px</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-tag\">td</span><span class=\"selector-pseudo\">:last-child</span> &#123;</span><br><span class=\"line\">      <span class=\"attribute\">border-radius</span>: <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">10px</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>這樣就完成了!</p>\n<p>CodePen <a href=\"https://codepen.io/hnzxewqw/full/WNrLPMv\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/full/WNrLPMv</a></p>\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><ul>\n<li><a href=\"https://ithelp.ithome.com.tw/articles/10222225\" target=\"_blank\" rel=\"noopener\">金魚都能懂的這個網頁畫面怎麼切 : 表格怎麼切</a></li>\n</ul>\n","categories":["CSS"],"tags":["CSS"]},{"title":"CSS 筆記 - 金魚系列 09 -方塊酥圖片頁面","url":"/css/20200718/1208518551/","content":"<p><img src=\"https://i.imgur.com/SyQAwQp.jpg\" alt=\"square\"></p>\n<p>這次來切一個相簿牆面， Amos 教學稱之為方塊酥切版，滿有意思的。</p>\n<h2 id=\"學習重點\"><a href=\"#學習重點\" class=\"headerlink\" title=\"學習重點\"></a>學習重點</h2><ul>\n<li>float 浮動教學</li>\n<li><a href=\"https://ithelp.ithome.com.tw/articles/10220656\" target=\"_blank\" rel=\"noopener\">波浪符選取器教學</a></li>\n<li>RGB 網頁色彩教學</li>\n<li>relative 定位教學</li>\n<li>absolute 定位教學</li>\n</ul>\n<h2 id=\"float-重出江湖\"><a href=\"#float-重出江湖\" class=\"headerlink\" title=\"float 重出江湖\"></a>float 重出江湖</h2><p>有了 flex 聖品後，就鮮少使用 float，但有些時機還是需要使用 float。</p>\n<h2 id=\"HTML-架構\"><a href=\"#HTML-架構\" class=\"headerlink\" title=\"HTML 架構\"></a>HTML 架構</h2><p>相較於之前的內容，本次練習架構非常單純，就只有圖片文字而已。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"https://picsum.photos/400/400?random=20\"</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"text\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>學習重點有這些<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">      float 浮動教學(影片有，但我沒有用)、波浪符選取器教學、RGB</span><br><span class=\"line\">      網頁色彩教學、relative 定位教學、absolute 定位教學</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"CSS-樣式\"><a href=\"#CSS-樣式\" class=\"headerlink\" title=\"CSS 樣式\"></a>CSS 樣式</h2><p>為了讓圖片與文字顯示正常，要給予盒模型。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">body</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">box-sizing</span>: border-box;</span><br><span class=\"line\">  <span class=\"attribute\">font-family</span>: <span class=\"string\">\"Noto Sans TC\"</span>, sans-serif;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#271919</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>在 <code>.wrap</code> 加入 <code>overflow:hidden;</code> 會讓父層自動抓到所有子層的高度，是一個偷吃步的小技巧。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.wrap</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">1200px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">5%</span> auto;</span><br><span class=\"line\">  <span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>以下重點式記錄：</p>\n<h3 id=\"圖片排版處理\"><a href=\"#圖片排版處理\" class=\"headerlink\" title=\"圖片排版處理\"></a>圖片排版處理</h3><p><code>item</code> 使用 float 會自動把右邊區塊的圖片變為橫向排列，並且斷行，但用 flex 就只能橫向排列，如果要達到該顯示，還會需要寫很多方法來達成，所以有時候 float 還是很好用的。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.item</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">float</span>: left;</span><br><span class=\"line\">  img &#123;</span><br><span class=\"line\">    <span class=\"selector-tag\">width</span>: 100%;</span><br><span class=\"line\">    <span class=\"selector-tag\">vertical-align</span>: <span class=\"selector-tag\">middle</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  &amp;<span class=\"selector-pseudo\">:first-child</span> &#123;</span><br><span class=\"line\">    width: 50%; //選到第一個 item</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  &amp;<span class=\"selector-pseudo\">:first-child</span> ~ <span class=\"selector-class\">.item</span> &#123;</span><br><span class=\"line\">    width: 25%; //選到第二個以後的所有 item</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"文字處理\"><a href=\"#文字處理\" class=\"headerlink\" title=\"文字處理\"></a>文字處理</h3><ul>\n<li>為了讓文字可以在圖片初始化時不顯示，所以給予透明度為 0，當滑鼠移動到圖片上時則顯示。</li>\n<li>設定文字在圖片的正中央，所以使用絕對定位，而相對定位在 item 上，並且使用 flex 的特性，主軸為直向，次軸為橫向，如此文字會垂直排列就會垂直置中對齊。</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.text</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">  <span class=\"attribute\">top</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">left</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"number\">#ffffff</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"built_in\">rgba</span>($color: #<span class=\"number\">000000</span>, $alpha: <span class=\"number\">0.6</span>);</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">  flex-direction: column; //主軸直向排列</span><br><span class=\"line\">  //垂直置中對齊</span><br><span class=\"line\">  <span class=\"selector-tag\">justify-content</span>: <span class=\"selector-tag\">center</span>;</span><br><span class=\"line\">  <span class=\"selector-tag\">align-items</span>: <span class=\"selector-tag\">center</span>;</span><br><span class=\"line\">  <span class=\"selector-tag\">opacity</span>: 0;</span><br><span class=\"line\">  <span class=\"selector-tag\">transition</span>: <span class=\"selector-tag\">all</span> 0<span class=\"selector-class\">.3s</span>;</span><br><span class=\"line\">  &amp;<span class=\"selector-pseudo\">:hover</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">opacity</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>CodePen <a href=\"https://codepen.io/hnzxewqw/full/MWKzYOa\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/full/MWKzYOa</a></p>\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><ul>\n<li><a href=\"https://ithelp.ithome.com.tw/articles/10221293\" target=\"_blank\" rel=\"noopener\">金魚都能懂的這個網頁畫面怎麼切 : 方塊酥版面</a></li>\n<li><a href=\"https://ithelp.ithome.com.tw/articles/10220656\" target=\"_blank\" rel=\"noopener\">親代選取器之妹妹選取器與鞭炮串選取器</a></li>\n</ul>\n","categories":["CSS"],"tags":["CSS"]},{"title":"CSS 筆記 - 金魚系列 08 - 麵包屑導覽","url":"/css/20200718/1400585555/","content":"<p><img src=\"https://images.unsplash.com/photo-1584983085273-503dfa5a7ac3?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1349&q=80\" alt=\"breadcrumb\"></p>\n<p>網頁麵包屑是在網站中告知使用者在茫茫網頁海中目前的位置在哪裡的功能，很好用也很常見。</p>\n<h2 id=\"學習重點\"><a href=\"#學習重點\" class=\"headerlink\" title=\"學習重點\"></a>學習重點</h2><ul>\n<li><a href=\"https://ithelp.ithome.com.tw/articles/10220656\" target=\"_blank\" rel=\"noopener\">加號選取器的用途</a></li>\n<li>金魚都能懂的 CSS 選取器</li>\n<li><a href=\"http://csscoke.com/2015/01/01/rgb-hsl-hex/\" target=\"_blank\" rel=\"noopener\">HSL 網頁色彩教學</a></li>\n<li><a href=\"http://csscoke.com/2013/09/22/%E4%BD%BF%E7%94%A8before-%E8%88%87-after%E4%BE%86%E8%A3%BD%E4%BD%9C%E5%8F%AF%E5%88%97%E5%8D%B0%E7%9A%84logo%E5%9C%96%E7%89%87/\" target=\"_blank\" rel=\"noopener\">::before 是甚麼</a></li>\n</ul>\n<h2 id=\"HTML-架構\"><a href=\"#HTML-架構\" class=\"headerlink\" title=\"HTML 架構\"></a>HTML 架構</h2><p>架構滿簡單的，因為麵包屑有順序，所以清單父層使用 <code>ol</code></p>\n<figure class=\"highlight\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;div class=\"breadcrumbList\"&gt;</span><br><span class=\"line\">  &lt;div class=\"container\"&gt;</span><br><span class=\"line\">    &lt;ol class=\"breadcrumb\"&gt;</span><br><span class=\"line\">      &lt;li&gt;&lt;a href=\"#\"&gt;金魚系列 VIII&lt;/a&gt;&lt;/li&gt;</span><br><span class=\"line\">      &lt;li&gt;&lt;a href=\"#\"&gt;讓自己知道目前位置的麵包屑&lt;/a&gt;&lt;/li&gt;</span><br><span class=\"line\">      &lt;li&gt;&lt;a href=\"#\"&gt;為什麼要叫做麵包屑&lt;/a&gt;&lt;/li&gt;</span><br><span class=\"line\">      &lt;li&gt;&lt;a href=\"#\"&gt;網頁麵包屑跟真實麵包屑的差異&lt;/a&gt;&lt;/li&gt;</span><br><span class=\"line\">      &lt;li&gt;&lt;a href=\"#\"&gt;直接看故事&lt;/a&gt;&lt;/li&gt;</span><br><span class=\"line\">    &lt;/ol&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"CSS-樣式\"><a href=\"#CSS-樣式\" class=\"headerlink\" title=\"CSS 樣式\"></a>CSS 樣式</h2><p>這裡會使用到三個小技巧為加號選取器、跟偽元素的使用，</p>\n<ul>\n<li>為了讓 li 橫向排列，再父層元素 ol 使用 flex，使之變為橫排。</li>\n<li>並調整 li 的間距，除了左邊外其他都給予 20px 的空間。</li>\n<li>這邊使用 ::before 偽元素產生麵包屑符號，但因為是從第一個前方不需要有麵包屑符號，所以使用加號選取器，這樣就會從第二個 li 開始顯示麵包屑。</li>\n<li>最後要讓使用者知道停留在哪個頁面，所以使用到 last-child 選到最後一個 a 連結，並給予醒目顏色。</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.breadcrumbList</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border-bottom</span>: <span class=\"number\">3px</span> solid <span class=\"number\">#26ff93</span>;</span><br><span class=\"line\">  <span class=\"attribute\">box-shadow</span>: inset <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">11px</span> <span class=\"number\">3px</span> <span class=\"built_in\">rgba</span>(#<span class=\"number\">000000</span>, <span class=\"number\">0.6</span>);</span><br><span class=\"line\">  .breadcrumb &#123;</span><br><span class=\"line\">    <span class=\"selector-tag\">display</span>: <span class=\"selector-tag\">flex</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">li</span> &#123;</span><br><span class=\"line\">      <span class=\"attribute\">padding</span>: <span class=\"number\">20px</span> <span class=\"number\">20px</span> <span class=\"number\">20px</span> <span class=\"number\">0px</span>;</span><br><span class=\"line\">      &amp; + li &#123;</span><br><span class=\"line\">        <span class=\"selector-tag\">padding-left</span>: 0;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      &amp; + <span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">::before</span> &#123;</span><br><span class=\"line\">        content: \"/\"; //+選取器，選到自己的下一層元素</span><br><span class=\"line\">        <span class=\"selector-tag\">color</span>: <span class=\"selector-id\">#fff</span>;</span><br><span class=\"line\">        <span class=\"selector-tag\">padding-right</span>: 20<span class=\"selector-tag\">px</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      &amp;<span class=\"selector-pseudo\">:last-child</span> <span class=\"selector-tag\">a</span> &#123;</span><br><span class=\"line\">        color: #26ff93; //選取到最後一個元素</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"selector-tag\">a</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">color</span>: <span class=\"number\">#ffffff</span>;</span><br><span class=\"line\">        <span class=\"attribute\">font-weight</span>: <span class=\"number\">100</span>;</span><br><span class=\"line\">        <span class=\"attribute\">font-size</span>: <span class=\"number\">16px</span>;</span><br><span class=\"line\">        <span class=\"attribute\">cursor</span>: pointer;</span><br><span class=\"line\">        &amp;:hover &#123;</span><br><span class=\"line\">          <span class=\"selector-tag\">color</span>: <span class=\"selector-id\">#26ff93</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>這樣就完成啦~!!</p>\n<p>這裡使用的 <code>:last-child</code> 跟 <code>:nth-last-child(n)</code> 用法不同，可以參考一下 W3School 的介紹。</p>\n<p>CodePen <a href=\"https://codepen.io/hnzxewqw/pen/PoZxwKy\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/PoZxwKy</a></p>\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><ul>\n<li><a href=\"https://ithelp.ithome.com.tw/articles/10220837\" target=\"_blank\" rel=\"noopener\">金魚都能懂的這個網頁畫面怎麼切 : 網站麵包屑</a></li>\n<li><a href=\"https://aun-taiwan.com.tw/news/what-is-breadcrumb-2020/#why-is-it-called-breadcrumb\" target=\"_blank\" rel=\"noopener\">麵包屑為什麼要叫麵包屑？其 SEO 效果？</a></li>\n<li><a href=\"https://ithelp.ithome.com.tw/articles/10227216\" target=\"_blank\" rel=\"noopener\">:nth-child() &amp; :nth-last-child() - 你覺得燒腦但其實根本不燒腦的選取器</a></li>\n<li><a href=\"https://www.w3schools.com/cssref/css_selectors.asp\" target=\"_blank\" rel=\"noopener\">CSS Selector Reference</a></li>\n</ul>\n","categories":["CSS"],"tags":["CSS"]},{"title":"CSS 筆記 - 金魚系列 07 - 導覽列 navbar","url":"/css/20200718/1597709469/","content":"<p><img src=\"https://i.imgur.com/f684HD3.png\" alt=\"nav\"></p>\n<p>每個網頁一定都有導覽列，這麼實用一定要來記錄一下。</p>\n<h2 id=\"HTML-架構\"><a href=\"#HTML-架構\" class=\"headerlink\" title=\"HTML 架構\"></a>HTML 架構</h2><p>有 LOGO、導覽列選項、搜尋列三個區域，為了以後直接帶指定連結，這邊除了搜尋按鈕外，都使用 a 標籤。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"header\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"container\"</span>&gt;</span></span><br><span class=\"line\">    //Logo</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"logo\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fab fa-spotify fa-3x\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>Spotify<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">    //導覽列選項</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">nav</span> <span class=\"attr\">class</span>=<span class=\"string\">\"navbar\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item\"</span>&gt;</span>金魚系列 VII<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item\"</span>&gt;</span>每個網站都有的導覽列<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item\"</span>&gt;</span>選項一定要有互動<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item\"</span>&gt;</span>這個不會不行<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">nav</span>&gt;</span></span><br><span class=\"line\">    //搜尋列</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">class</span>=<span class=\"string\">\"navSearch\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"search\"</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">\"找不到東西的搜尋列\"</span> /&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fas fa-search\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"CSS-樣式\"><a href=\"#CSS-樣式\" class=\"headerlink\" title=\"CSS 樣式\"></a>CSS 樣式</h2><p>重點記錄，</p>\n<h3 id=\"layout\"><a href=\"#layout\" class=\"headerlink\" title=\"layout\"></a>layout</h3><p>主要共同元素部分為 a 連結，所以把 a 連結直接拉出來設定，下方樣式就不必重工。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">a</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">text-decoration</span>: none;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"number\">#26ff93</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-weight</span>: <span class=\"number\">300</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Logo\"><a href=\"#Logo\" class=\"headerlink\" title=\"Logo\"></a>Logo</h3><p>標誌區塊主要記錄用 flex 的直向對齊的寫法。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.logo</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">margin-right</span>: <span class=\"number\">1em</span>;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">  <span class=\"attribute\">align-items</span>: center;</span><br><span class=\"line\">  .fa-spotify &#123;</span><br><span class=\"line\">    <span class=\"selector-tag\">padding-right</span>: 0<span class=\"selector-class\">.5em</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">color</span>: <span class=\"selector-id\">#26ff93</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"selector-tag\">span</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">font-size</span>: <span class=\"number\">26px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">font-weight</span>: <span class=\"number\">500</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"導覽列\"><a href=\"#導覽列\" class=\"headerlink\" title=\"導覽列\"></a>導覽列</h3><ul>\n<li>flex 這個切版聖品，當然要使用 flex-grow 讓每個區塊都一樣寬，這樣就不用再計算啦!</li>\n<li>flex + margin:auto，會置中對齊。</li>\n<li>互動的部分在底線一開始不要填色，但預留空間，這樣在 hover 時，就不會突然增加空間而改變視覺效果(會變晃動)。</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.navbar</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">  <span class=\"attribute\">align-items</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: auto;</span><br><span class=\"line\">  .item &#123;</span><br><span class=\"line\">    <span class=\"selector-tag\">flex-grow</span>: 1;</span><br><span class=\"line\">    <span class=\"selector-tag\">padding</span>: 20<span class=\"selector-tag\">px</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">border-bottom</span>: 5<span class=\"selector-tag\">px</span> <span class=\"selector-tag\">solid</span> <span class=\"selector-tag\">transparent</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">transition</span>: 0<span class=\"selector-class\">.3s</span>;</span><br><span class=\"line\">    &amp;<span class=\"selector-pseudo\">:hover</span> &#123;</span><br><span class=\"line\">      <span class=\"attribute\">border-bottom</span>: <span class=\"number\">5px</span> solid <span class=\"number\">#26ff93</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"搜尋列\"><a href=\"#搜尋列\" class=\"headerlink\" title=\"搜尋列\"></a>搜尋列</h3><ul>\n<li>一樣使之直向對齊，並把共同項目拉出來設定，避免重工。</li>\n<li>將 input 跟 button 靠外側的兩邊設定為圓角，這樣比較好看。</li>\n<li>設定兩元素的寬度比例。</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.navSearch</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">  <span class=\"attribute\">align-items</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">margin-left</span>: auto;</span><br><span class=\"line\">  input,</span><br><span class=\"line\">  <span class=\"selector-tag\">button</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">border</span>: none;</span><br><span class=\"line\">    <span class=\"attribute\">outline</span>: none;</span><br><span class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">30px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: <span class=\"number\">#ffffff</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"selector-tag\">input</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">padding-left</span>: <span class=\"number\">12px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">80%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">border-radius</span>: <span class=\"number\">100px</span> <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">100px</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"selector-tag\">button</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">20%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">border-radius</span>: <span class=\"number\">0</span> <span class=\"number\">100px</span> <span class=\"number\">100px</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"attribute\">cursor</span>: pointer;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"selector-class\">.fa-search</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"number\">#555555</span>;</span><br><span class=\"line\">    &amp;:hover &#123;</span><br><span class=\"line\">      <span class=\"selector-tag\">color</span>: <span class=\"selector-id\">#26ff93</span>;</span><br><span class=\"line\">      <span class=\"selector-tag\">transition</span>: <span class=\"selector-tag\">all</span> 0<span class=\"selector-class\">.3s</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>這樣就完成了一個假的 spotify 的網頁導覽列囉!</p>\n<p>CodePen <a href=\"https://codepen.io/hnzxewqw/pen/zYrMxzK\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/zYrMxzK</a></p>\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><ul>\n<li><a href=\"https://ithelp.ithome.com.tw/articles/10219845\" target=\"_blank\" rel=\"noopener\">金魚都能懂的這個網頁畫面怎麼切 : 導覽列</a></li>\n</ul>\n","categories":["CSS"],"tags":["CSS"]},{"title":"CSS 筆記 - 金魚系列 06 - 頁尾資訊區域","url":"/css/20200718/3780287185/","content":"<p><img src=\"https://i.imgur.com/dTXo5E8.png\" alt=\"footer\"></p>\n<p>這次要切的許多公司形象或電商網站下方會出現的頁尾資訊，就是一堆公司、產品、服務或連絡資訊的地方，像是這個頁面<a href=\"https://rhinoshield.tw/?gclid=Cj0KCQjw9b_4BRCMARIsADMUIypxSWfyoCl3loteQyu6mX6pdXvlb0YwnGg_ks-7hRnFJvCNFmd3CAIaAt6aEALw_wcB\" target=\"_blank\" rel=\"noopener\">最下方</a>。</p>\n<h2 id=\"Google-font-使用\"><a href=\"#Google-font-使用\" class=\"headerlink\" title=\"Google font 使用\"></a>Google font 使用</h2><p>先記錄一下 Google font 的使用，先到該頁面找到喜歡的字體，我是找 <code>Noto Sans TC</code> <a href=\"https://fonts.google.com/specimen/Noto+Sans+TC?sidebar.open&selection.family=Noto+Sans+TC:wght@300;500;700;900\" target=\"_blank\" rel=\"noopener\">思源黑體</a>，</p>\n<p><img src=\"https://i.imgur.com/GY3L2sI.png\" alt=\"noto\"></p>\n<p>點進去後會出現字體粗細度的預覽，選擇想要使用的粗細度後，</p>\n<p><img src=\"https://i.imgur.com/SsP404x.png\" alt=\"\"></p>\n<p>右邊會出現選擇後的資訊，</p>\n<p><img src=\"https://i.imgur.com/3dcaRaC.png\" alt=\"\"></p>\n<p>再選到標籤 Embed 把 CSS 網址複製貼上到 <code>&lt;head&gt;</code> 區塊，並把字體家族貼到 CSS。</p>\n<p><img src=\"https://i.imgur.com/dmDdyba.png\" alt=\"\"></p>\n<h3 id=\"HTML-head\"><a href=\"#HTML-head\" class=\"headerlink\" title=\"HTML head\"></a>HTML head</h3><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">href</span>=<span class=\"string\">\"https://fonts.googleapis.com/css2?family=Noto+Sans+TC:wght@300;500;700;900&amp;display=swap\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span></span></span><br><span class=\"line\"><span class=\"tag\">/&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"CSS-font-family\"><a href=\"#CSS-font-family\" class=\"headerlink\" title=\"CSS font-family\"></a>CSS font-family</h3><figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">font-family</span>: \"<span class=\"selector-tag\">Noto</span> <span class=\"selector-tag\">Sans</span> <span class=\"selector-tag\">TC</span>\", <span class=\"selector-tag\">sans-serif</span>;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"HTML-架構\"><a href=\"#HTML-架構\" class=\"headerlink\" title=\"HTML 架構\"></a>HTML 架構</h2><p>架構很簡單，一樣的內容沒問題，就複製貼上三遍，最後一個是訂閱電子報<del>(強迫接收廣告)</del>，還有一個 footer 區塊。</p>\n<p>這邊學到最下方這個符號 © 的寫法是 <code>&amp;copy;</code>，編輯器如果有使用 <code>emmet</code>，只要打 <code>&amp;c</code> 就會自動跳出選擇了，記得最後要加「分號 <code>;</code>」。</p>\n<p><img src=\"https://i.imgur.com/kEOEAWD.png\" alt=\"copy\"></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"main_footer\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"wrap\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">h4</span>&gt;</span>金魚系列 VI - 頁尾資訊區域<span class=\"tag\">&lt;/<span class=\"name\">h4</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fas fa-chevron-right\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span>flex-direction 的原理<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fas fa-chevron-right\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span>flex-grow<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fas fa-chevron-right\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span>Google font 使用<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fas fa-chevron-right\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span>font-awesome<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">h4</span>&gt;</span>公司形象網站必切<span class=\"tag\">&lt;/<span class=\"name\">h4</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fas fa-chevron-right\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span>不學起來不行<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fas fa-chevron-right\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span>太常用到了<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fas fa-chevron-right\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span>flex-grow 真好用<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fas fa-chevron-right\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span>快趁機學起來當字典<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">h4</span>&gt;</span>友站連結<span class=\"tag\">&lt;/<span class=\"name\">h4</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fas fa-chevron-right\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span>異業結盟專區<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fas fa-chevron-right\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span>異業都要結盟了<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fas fa-chevron-right\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span>同業還不結盟<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fas fa-chevron-right\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span>團結力量大<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">h4</span>&gt;</span>訂閱電子報<span class=\"tag\">&lt;/<span class=\"name\">h4</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">\"電子報還沒看就刪掉了\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"subsBtn\"</span>&gt;</span>訂閱<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"copyright\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>copyright <span class=\"symbol\">&amp;copy;</span> Follow CSScoke Goldfish series by Hsuchihting<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"CSS-樣式\"><a href=\"#CSS-樣式\" class=\"headerlink\" title=\"CSS 樣式\"></a>CSS 樣式</h2><p>筆記重點，</p>\n<p>基本 layout 設定，並把頁尾資訊區塊固定在最下方，因為這是 Demo 示意用，但真正的專案不會這樣寫。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.main_footer</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"built_in\">linear-gradient</span>(-<span class=\"number\">270deg</span>, #<span class=\"number\">0</span>d47a1, #<span class=\"number\">03</span>a9f4);</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">100px</span> <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: fixed;</span><br><span class=\"line\">  <span class=\"attribute\">bottom</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">right</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">left</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.wrap</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">1200px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> auto;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"flex-grow\"><a href=\"#flex-grow\" class=\"headerlink\" title=\"flex-grow\"></a>flex-grow</h3><p>這次學到使用 flex-grow 讓 <code>.item</code> 的區塊都一樣寬，相當方便，都不用計算了。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.item</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">  <span class=\"attribute\">flex-direction</span>: column;</span><br><span class=\"line\">  <span class=\"attribute\">flex-grow</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"number\">#fff</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin-right</span>: <span class=\"number\">1%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin-left</span>: <span class=\"number\">1%</span>;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"字體粗細設定\"><a href=\"#字體粗細設定\" class=\"headerlink\" title=\"字體粗細設定\"></a>字體粗細設定</h3><p>剛剛載入的 google font 就派上用場了，粗細度可以看到 link 片斷程式碼為 <code>wght@300;500;700;900</code>，所以粗細度就用這些數字去做設定。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">h4</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">24px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-bottom</span>: <span class=\"number\">1px</span> dotted <span class=\"number\">#fff</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-weight</span>: <span class=\"number\">700</span>;</span><br><span class=\"line\">  <span class=\"attribute\">padding-bottom</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">li</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">16px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-weight</span>: <span class=\"number\">300</span>;</span><br><span class=\"line\">  <span class=\"attribute\">padding-top</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">line-height</span>: <span class=\"number\">1.5</span>;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"訂閱電子報區塊\"><a href=\"#訂閱電子報區塊\" class=\"headerlink\" title=\"訂閱電子報區塊\"></a>訂閱電子報區塊</h3><p>最後的是用 input + button 的組合，因為整體有使用盒模型設定，使用 flex 就會緊密併排，再使用 <code>margin: auto 0;</code> 就會讓其垂直置中。</p>\n<p>垂直置中超常用到，一定要學會，可看 <a href=\"http://csscoke.com/2018/08/21/css-vertical-align/\" target=\"_blank\" rel=\"noopener\">Amos 老師的 23 種垂直置中方式</a>。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">form</span> &#123;</span><br><span class=\"line\">   <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">   <span class=\"attribute\">margin</span>: auto <span class=\"number\">0</span>;</span><br></pre></td></tr></table></figure>\n\n<p>最後就完成了!</p>\n<p>CodePen <a href=\"https://codepen.io/hnzxewqw/full/NWxEPpJ\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/full/NWxEPpJ</a></p>\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><ul>\n<li><a href=\"https://ithelp.ithome.com.tw/articles/10219352\" target=\"_blank\" rel=\"noopener\">金魚都能懂的這個網頁畫面怎麼切 : 網頁頁尾版塊</a></li>\n<li><a href=\"https://github.com/xieranmaya/blog/issues/9\" target=\"_blank\" rel=\"noopener\">详解 flex-grow 与 flex-shrink</a></li>\n</ul>\n","categories":["CSS"],"tags":["CSS"]},{"title":"CSS 筆記 - 三角形演進史","url":"/css/20200718/3868981590/","content":"<p><img src=\"https://images.unsplash.com/photo-1584462794969-9478749fc3e7?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1351&q=80\" alt=\"triangle\"></p>\n<p>之前一直不知道三角形怎麼寫，透過<a href=\"https://hsuchihting.github.io/css/20200714/1295765422/\">人員卡片練習</a>，跟看到 Amos 回顧單純講到三角形的寫法，就來筆記一下，比想像得還要簡單!!</p>\n<h2 id=\"方形\"><a href=\"#方形\" class=\"headerlink\" title=\"方形\"></a>方形</h2><p>大家都知道方形怎麼寫，把四邊的邊線加粗，然後加上顏色會看到邊線交接處會變成斜角，中間會有一個方框，就是原本設定的方形寬高。</p>\n<p><img src=\"https://i.imgur.com/gIKAAew.png\" alt=\"\"></p>\n<h2 id=\"四個三角組成的方形\"><a href=\"#四個三角組成的方形\" class=\"headerlink\" title=\"四個三角組成的方形\"></a>四個三角組成的方形</h2><p>再來把方形寬高變成 0 ，方框消失，只剩下邊框，就會看到變成三角形組成的方形(有發現三角形出現了!)。</p>\n<p><img src=\"https://i.imgur.com/yo4WxF9.png\" alt=\"\"></p>\n<h2 id=\"單一三角形\"><a href=\"#單一三角形\" class=\"headerlink\" title=\"單一三角形\"></a>單一三角形</h2><p>知道這樣的原理後，只要把其他的部分改成透明顏色，顏色屬性的值使用 transparent，就會變透明囉!!這樣三角形就出現了，border 的粗細度修改，就可以得到不同長度的三角形，至於要正三角、等腰三角形、直角三角形或是不對稱三角形，可以自己設定玩玩看。</p>\n<p><img src=\"https://i.imgur.com/FYHUWlC.png\" alt=\"\"></p>\n<iframe height=\"900\" style=\"width: 100%;\" src=\"https://codepen.io/hnzxewqw/embed/MWKzYbY?height=265&theme-id=light&default-tab=result\"></iframe>\n","categories":["CSS"],"tags":["CSS"]},{"title":"CSS 筆記 - 金魚系列 05 - 超通用橫式版面","url":"/css/20200715/3606873816/","content":"<p><img src=\"https://i.imgur.com/B3ypxNf.jpg\" alt=\"\"></p>\n<p>這次來學習用超通用橫式版面，許多公版網站都會看到這樣的切版，只是看有幾個而已。</p>\n<h2 id=\"學習重點\"><a href=\"#學習重點\" class=\"headerlink\" title=\"學習重點\"></a>學習重點</h2><ul>\n<li><p>區塊尺寸怎麼算。</p>\n</li>\n<li><p><a href=\"https://www.w3schools.com/css/css3_box-sizing.asp\" target=\"_blank\" rel=\"noopener\">Box-sizing</a>。</p>\n</li>\n<li><p>網頁的色彩原理。</p>\n</li>\n<li><p>用遊戲學 Flex。</p>\n<ul>\n<li><a href=\"https://flexboxfroggy.com/\" target=\"_blank\" rel=\"noopener\">FLEXBOX FROGGY</a></li>\n<li><a href=\"https://hexschool.github.io/flexbox-pirate/index.html#/\" target=\"_blank\" rel=\"noopener\">Flex Pirate</a></li>\n</ul>\n</li>\n<li><p>flex-direction 的原理。</p>\n</li>\n<li><p><a href=\"https://blog.camel2243.com/2017/01/21/css-object-fit-object-position-%E8%AA%BF%E6%95%B4%E7%BD%AE%E6%8F%9B%E5%85%83%E7%B4%A0img-%E7%AD%89%E7%9A%84%E5%85%A7%E5%AE%B9/\" target=\"_blank\" rel=\"noopener\">object-fit</a>。</p>\n</li>\n<li><p><a href=\"https://wcc723.github.io/css/2017/07/21/css-flex/\" target=\"_blank\" rel=\"noopener\">flex-wrap 換行</a>。</p>\n</li>\n</ul>\n<h2 id=\"HTML-架構\"><a href=\"#HTML-架構\" class=\"headerlink\" title=\"HTML 架構\"></a>HTML 架構</h2><p>架構相當簡單，</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"wrap\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"container\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- item01 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"pic\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"https://picsum.photos/400/300?random=10\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"\"</span> /&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"text\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>金魚系列切版 V - 超通用橫式版面<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">          很多商品網站都看得到，跟著 Amos</span><br><span class=\"line\">          切一輪，哪天需要用到就直接拿來套就可以啦!</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn\"</span>&gt;</span>more<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>確認架構無誤，就可以複製成四個。</p>\n<h2 id=\"CSS-樣式\"><a href=\"#CSS-樣式\" class=\"headerlink\" title=\"CSS 樣式\"></a>CSS 樣式</h2><p>整體範圍使其高度與螢幕高度相符，並且讓裡面的元素橫向且在螢幕垂直於中間。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.wrap</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">100vh</span>;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">  <span class=\"attribute\">align-items</span>: center;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>在元素的範圍寬度給予寬度為 1200px，並且橫向排列，這次要做上下排列，所以使用到 flex-wrap 斷行，且置中對齊。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">1200px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">  <span class=\"attribute\">flex-wrap</span>: wrap;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> auto;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>.item 內容較重要的部分如下：</p>\n<ul>\n<li>要左右成列，寬度預設為 50%，但因為左右要間格 1%，又有加邊框限 1px，所以設定成 47%。</li>\n<li>把圖片與文字這兩個所佔的比例設定為 6:4。</li>\n<li>這次學到一個新的屬性是 <code>object-fit: cover</code> ，使圖片跟容器大小一致，可惜不支援 iE<del>(沒有關係)</del>。</li>\n<li>按鈕部分使用到 <code>align-self: flex-end</code>，讓自己靠右對齊， <code>margin-top: auto</code> 自動往上推擠到最底部，以上都是 flex 特性的相依語法。</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.item</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">47%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">1%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid <span class=\"number\">#0a232b</span>;</span><br><span class=\"line\">  <span class=\"attribute\">box-shadow</span>: <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">5px</span> <span class=\"number\">2px</span> <span class=\"built_in\">rgba</span>($color: #<span class=\"number\">061</span>a20, $alpha: <span class=\"number\">0.6</span>);</span><br><span class=\"line\">  .pic &#123;</span><br><span class=\"line\">    <span class=\"selector-tag\">width</span>: 60%;</span><br><span class=\"line\">    <span class=\"selector-tag\">img</span> &#123;</span><br><span class=\"line\">      <span class=\"attribute\">vertical-align</span>: middle;</span><br><span class=\"line\">      object-fit: cover; //使圖片跟容器大小一致，不支援 iE</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"selector-class\">.text</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">40%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">padding</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: <span class=\"number\">#fff</span>;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">    flex-direction: column; //主軸線</span><br><span class=\"line\">    <span class=\"selector-tag\">h2</span> &#123;</span><br><span class=\"line\">      <span class=\"attribute\">font-size</span>: <span class=\"number\">28px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">margin-bottom</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">color</span>: <span class=\"number\">#0987ad</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">      <span class=\"attribute\">color</span>: <span class=\"number\">#444</span>;</span><br><span class=\"line\">      <span class=\"attribute\">font-size</span>: <span class=\"number\">14px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">line-height</span>: <span class=\"number\">1.5</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.btn</span> &#123;</span><br><span class=\"line\">      <span class=\"attribute\">line-height</span>: <span class=\"number\">1.5em</span>;</span><br><span class=\"line\">      <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid <span class=\"number\">#0987ad</span>;</span><br><span class=\"line\">      <span class=\"attribute\">padding</span>: <span class=\"number\">0</span> <span class=\"number\">10px</span>;</span><br><span class=\"line\">      align-self: flex-end; //自己靠右對齊</span><br><span class=\"line\">      <span class=\"selector-tag\">text-decoration</span>: <span class=\"selector-tag\">none</span>;</span><br><span class=\"line\">      <span class=\"selector-tag\">border-radius</span>: 100<span class=\"selector-tag\">px</span>;</span><br><span class=\"line\">      <span class=\"selector-tag\">color</span>: <span class=\"selector-id\">#0987ad</span>;</span><br><span class=\"line\">      margin-top: auto; //自動推到最底部</span><br><span class=\"line\">      &amp;<span class=\"selector-pseudo\">:hover</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">background-color</span>: <span class=\"number\">#0987ad</span>;</span><br><span class=\"line\">        <span class=\"attribute\">color</span>: <span class=\"number\">#fff</span>;</span><br><span class=\"line\">        <span class=\"attribute\">transition</span>: all <span class=\"number\">0.3s</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>最後就完成了這個常見的通用橫向版型囉!!</p>\n<p>Demo <a href=\"https://codepen.io/hnzxewqw/full/KKVxbLa\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/full/KKVxbLa</a></p>\n","categories":["CSS"],"tags":["CSS"]},{"title":"JSP 筆記 - 陣列排序 Sort()與 C3.js 視覺資料處理","url":"/javascript/20200715/679666643/","content":"<p><img src=\"https://i.imgur.com/TfmELDc.png\" alt=\"c3\"></p>\n<p><strong>JSP</strong>，<strong>J</strong>avaScript <strong>S</strong>pecial <strong>P</strong>ractice (JavaScript 特別訓練)，這是在六角學院這次長達六十天的特訓，學員專屬，這名字是我自己取的，覺得相當帥氣<del>中二</del>。</p>\n<p>之前學習到如何使用 <strong>axios</strong> 串接 AJAX，並且使用 <strong>forEach</strong> 來選取所要的資料，並且這次透過 <strong>change</strong> 事件的判斷條件，使資料有排序功能。</p>\n<p>本次練習使用此 API。<a href=\"https://raw.githubusercontent.com/hexschool/hexschoolNewbieJS/master/data.json\" target=\"_blank\" rel=\"noopener\">連結</a></p>\n<h2 id=\"陣列排序進度\"><a href=\"#陣列排序進度\" class=\"headerlink\" title=\"陣列排序進度\"></a>陣列排序進度</h2><h3 id=\"axios-取得-API-資料\"><a href=\"#axios-取得-API-資料\" class=\"headerlink\" title=\"axios 取得 API 資料\"></a>axios 取得 API 資料</h3><ul>\n<li>綁定 HTML 的標籤，變數也使用一樣的名稱。</li>\n<li>宣告一個變數為 data，後續存放回傳的資料用。</li>\n<li>使用 axios 取得 API 資料。</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> record = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\".record\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">let</span> data;</span><br><span class=\"line\"></span><br><span class=\"line\">axios.get(dataUrl).then(<span class=\"function\">(<span class=\"params\">response</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  data = response.data;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(data);</span><br><span class=\"line\">  getRecord();</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"建立清單渲染於網頁\"><a href=\"#建立清單渲染於網頁\" class=\"headerlink\" title=\"建立清單渲染於網頁\"></a>建立清單渲染於網頁</h3><p>使用一個函式存放要取得資料的方式，</p>\n<ul>\n<li>宣告一個變數為空字串。</li>\n<li>透過 forEach 來取得想要的資料。</li>\n<li>組字串，因為我要做成列表，所以用一個 <code>div</code> 包住，成為區塊元素。</li>\n<li>用 innerHTML 印出標籤在網頁上。</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getRecord</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> str = <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">  data.forEach(<span class=\"function\">(<span class=\"params\">item</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    str += <span class=\"string\">`</span></span><br><span class=\"line\"><span class=\"string\">    &lt;div&gt;  </span></span><br><span class=\"line\"><span class=\"string\">      &lt;ul&gt;</span></span><br><span class=\"line\"><span class=\"string\">      &lt;li&gt;<span class=\"subst\">$&#123;item.name&#125;</span>&lt;/li&gt;</span></span><br><span class=\"line\"><span class=\"string\">      &lt;li&gt;<span class=\"subst\">$&#123;item.process&#125;</span>&lt;/li&gt;</span></span><br><span class=\"line\"><span class=\"string\">      &lt;/ul&gt;</span></span><br><span class=\"line\"><span class=\"string\">    &lt;/div&gt;</span></span><br><span class=\"line\"><span class=\"string\">  `</span>;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  record.innerHTML = str;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>CodePen <a href=\"https://codepen.io/tim_hsu/pen/QWyVWrR?editors=0010\" target=\"_blank\" rel=\"noopener\">https://codepen.io/tim_hsu/pen/QWyVWrR?editors=0010</a></p>\n<h2 id=\"監聽切換排序功能\"><a href=\"#監聽切換排序功能\" class=\"headerlink\" title=\"監聽切換排序功能\"></a>監聽切換排序功能</h2><p>延續上方取得資料後，要使用一個下拉選單做為條件，並排序其資料內容。</p>\n<h3 id=\"select\"><a href=\"#select\" class=\"headerlink\" title=\"select\"></a>select</h3><p>把選項先寫好在 option 中，並在 select 做一個 class。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">class</span>=<span class=\"string\">\"select\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"id\"</span>&gt;</span>依照 id 編號排序(由1開始從上往下)<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"process\"</span>&gt;</span>依照完課率排序(由最高到最低)<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"sort-排序資料\"><a href=\"#sort-排序資料\" class=\"headerlink\" title=\"sort() 排序資料\"></a>sort() 排序資料</h3><p>使用 <code>sort()</code> 讓資料可以依照條件排序：</p>\n<ul>\n<li>建立一個函式，其參數為(資料，select 選擇結果)。</li>\n<li>判斷 select 的結果是 id ，使資料採用 sort()方法做排序(小到大)，因為取得的值為字串，所以同時轉型為整數。</li>\n<li>判斷 select 的結果是 process，使資料採用 sort()方法做排序(大到小)，並只取到小數點後兩位，因後台結果有超過小數點兩位，小數點取到後兩位的渲染畫面較好看也可以做區別。</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//select 排列條件</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">sortData</span>(<span class=\"params\">data, select</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (select === <span class=\"string\">\"id\"</span>) data.sort(<span class=\"function\">(<span class=\"params\">x, y</span>) =&gt;</span> <span class=\"built_in\">parseInt</span>(x.id) - <span class=\"built_in\">parseInt</span>(y.id));</span><br><span class=\"line\">  <span class=\"comment\">//四捨五入，取小數點後兩位</span></span><br><span class=\"line\">  <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (select === <span class=\"string\">\"process\"</span>)</span><br><span class=\"line\">    data.sort(<span class=\"function\">(<span class=\"params\">x, y</span>) =&gt;</span> <span class=\"built_in\">parseFloat</span>(y.process) - <span class=\"built_in\">parseFloat</span>(x.process));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"監聽事件\"><a href=\"#監聽事件\" class=\"headerlink\" title=\"監聽事件\"></a>監聽事件</h3><p>完成資料處理後，建立 <code>select</code> 的監聽事件，對應的是 <code>change</code>，其函式內容要按照原本條件的順序排列，不然讀取的結果會是相反。(因為程式是由上到下讀取)</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//順序要擺對，不然內容會錯</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">selectRecord</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  sortData(data, select.value);</span><br><span class=\"line\">  getRecord();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">select.addEventListener(<span class=\"string\">\"change\"</span>, selectRecord);</span><br></pre></td></tr></table></figure>\n\n<p>CodePen <a href=\"https://codepen.io/tim_hsu/pen/BajOyRB?editors=1010\" target=\"_blank\" rel=\"noopener\">https://codepen.io/tim_hsu/pen/BajOyRB?editors=1010</a></p>\n<h2 id=\"串接-C3-圖表\"><a href=\"#串接-C3-圖表\" class=\"headerlink\" title=\"串接 C3 圖表\"></a>串接 C3 圖表</h2><h3 id=\"起手式\"><a href=\"#起手式\" class=\"headerlink\" title=\"起手式\"></a>起手式</h3><p>基本認識可以看<a href=\"https://hsuchihting.github.io/javascript/20200715/3292510004/\">C3.js 基本認識</a>。</p>\n<h4 id=\"取得資料\"><a href=\"#取得資料\" class=\"headerlink\" title=\"取得資料\"></a>取得資料</h4><p>延續前面所使用的 <code>sort()</code> 與 <code>axios</code> 方法，結合 C3.js 圖表套件完成視覺化資料處理。</p>\n<ul>\n<li>宣告 <code>columns</code> 變數要放入完成率的資料。</li>\n<li>宣告 <code>category</code> 變數要放入參賽者姓名資料。</li>\n<li>其中要執行兩個函式。</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> data; <span class=\"comment\">//存放回傳資料用</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> columns = [<span class=\"string\">\"完成率\"</span>]; <span class=\"comment\">//data 對應名稱與存放數據資料用</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> category = []; <span class=\"comment\">//參賽者姓名資料</span></span><br><span class=\"line\"></span><br><span class=\"line\">axios.get(dataUrl).then(<span class=\"function\">(<span class=\"params\">response</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  data = response.data;</span><br><span class=\"line\">  sortData(data);</span><br><span class=\"line\">  load(columns, category);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>來看一下函式內容。</p>\n<h4 id=\"資料排序\"><a href=\"#資料排序\" class=\"headerlink\" title=\"資料排序\"></a>資料排序</h4><p>改寫之前的篩選排序方法，</p>\n<ul>\n<li>資料排序從完成率高到低。</li>\n<li>取得完成率資料，取得小數點後兩位，並用百分比顯示，增加到圖表中的 <code>columns</code>。</li>\n<li>將參賽者姓名資料，增加到 <code>category</code> 的空陣列中。</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">sortData</span>(<span class=\"params\">data</span>) </span>&#123;</span><br><span class=\"line\">  data.sort(<span class=\"function\">(<span class=\"params\">x, y</span>) =&gt;</span> <span class=\"built_in\">parseFloat</span>(y.process) - <span class=\"built_in\">parseFloat</span>(x.process)); <span class=\"comment\">//完成率資料排序，高到低</span></span><br><span class=\"line\">  data.forEach(<span class=\"function\">(<span class=\"params\">item</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    columns.push(<span class=\"built_in\">parseFloat</span>(item.process) / <span class=\"number\">100</span>); <span class=\"comment\">//完成率資料取得小數點後兩位後，變百分比呈現</span></span><br><span class=\"line\">    category.push(item.name); <span class=\"comment\">//把參賽者資料推到參數中</span></span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"呈現在視覺資料中\"><a href=\"#呈現在視覺資料中\" class=\"headerlink\" title=\"呈現在視覺資料中\"></a>呈現在視覺資料中</h4><ul>\n<li>函式要帶入的參數就是完成率與參賽者資料。</li>\n<li><code>columns</code> 就是把宣告的變數項目與完成率資料展開放在一起。</li>\n<li><code>colors</code> 的屬性要與 columns 所帶入的 data 名稱相符，這邊為<strong>完成率</strong>，顏色使用色票，並使用字串形式。</li>\n<li><code>size</code> 的屬性設定圖表高度 *30px，不然會全部擠在一起，無法辨識。</li>\n<li><code>axis</code> 屬性增加 <code>rotated</code> 的原因是資料太多，改成橫向較好閱讀(所以 X 軸變成 Y 軸位置)。</li>\n<li><code>categories</code> 屬性帶入的就是宣告的參賽者變數 category。</li>\n<li><code>label</code> 為要帶入的標籤內容與位置。<blockquote>\n<p>更多設定可以查看<a href=\"https://c3js.org/reference.html\" target=\"_blank\" rel=\"noopener\">官網 Reference</a>。</p>\n</blockquote>\n</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">load</span>(<span class=\"params\">columns, category</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> chart = c3.generate(&#123;</span><br><span class=\"line\">    bindto: <span class=\"string\">\"#chart\"</span>,</span><br><span class=\"line\">    data: &#123;</span><br><span class=\"line\">      columns: [</span><br><span class=\"line\">        [...columns], <span class=\"comment\">//完成率與資料展開</span></span><br><span class=\"line\">      ],</span><br><span class=\"line\">      axes: &#123;</span><br><span class=\"line\">        完成率: <span class=\"string\">\"y2\"</span>,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      type: <span class=\"string\">\"bar\"</span>, <span class=\"comment\">//圖表類型</span></span><br><span class=\"line\">      colors: &#123;</span><br><span class=\"line\">        完成率: <span class=\"string\">\"#9CCC65\"</span>,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    size: &#123;</span><br><span class=\"line\">      height: category.length * <span class=\"number\">30</span>, <span class=\"comment\">//調整圖表高度</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    axis: &#123;</span><br><span class=\"line\">      rotated: <span class=\"literal\">true</span>, <span class=\"comment\">//轉成橫向</span></span><br><span class=\"line\">      x: &#123;</span><br><span class=\"line\">        type: <span class=\"string\">\"category\"</span>, <span class=\"comment\">// 左側 X 軸顯示</span></span><br><span class=\"line\">        categories: category, <span class=\"comment\">//參賽姓名資料</span></span><br><span class=\"line\">        label: &#123;</span><br><span class=\"line\">          text: <span class=\"string\">\"參賽者姓名\"</span>,</span><br><span class=\"line\">          position: <span class=\"string\">\"outer-center\"</span>,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      y: &#123;</span><br><span class=\"line\">        show: <span class=\"literal\">true</span>, <span class=\"comment\">//下方 Y 軸顯示</span></span><br><span class=\"line\">        label: &#123;</span><br><span class=\"line\">          text: <span class=\"string\">\"完成率%\"</span>,</span><br><span class=\"line\">          position: <span class=\"string\">\"outer-middle\"</span>, <span class=\"comment\">//名稱位置</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      y2: &#123;</span><br><span class=\"line\">        show: <span class=\"literal\">true</span>, <span class=\"comment\">//上方 Y 軸顯示</span></span><br><span class=\"line\">        label: &#123;</span><br><span class=\"line\">          text: <span class=\"string\">\"完成率%\"</span>,</span><br><span class=\"line\">          position: <span class=\"string\">\"outer-middle\"</span>, <span class=\"comment\">//名稱位置</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>Demo <a href=\"https://codepen.io/hnzxewqw/full/BajOvob\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/full/BajOvob</a></p>\n","categories":["JavaScript"],"tags":["JavaScript","C3.js"]},{"title":"JS 筆記 - C3.js 基本認識","url":"/javascript/20200715/3292510004/","content":"<p><img src=\"https://i.imgur.com/aB4X2lZ.jpg\" alt=\"c3\"></p>\n<p>C3.js 原自 D3.js 開源的圖表套件，相較於好上手，沒有太多繁瑣複雜的設定，設定方式跟 <a href=\"https://www.chartjs.org/\" target=\"_blank\" rel=\"noopener\">Chart.js</a> 有一點點像，如果有用過 Chart.js 要上手是不困難的。</p>\n<h2 id=\"起手式\"><a href=\"#起手式\" class=\"headerlink\" title=\"起手式\"></a>起手式</h2><p>載入 CSS</p>\n<figure class=\"highlight\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;link href=\"https://cdnjs.cloudflare.com/ajax/libs/c3/0.7.18/c3.css\"&gt;</span><br></pre></td></tr></table></figure>\n\n<p>載入 JavaScript</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;script src=<span class=\"string\">\"https://cdnjs.cloudflare.com/ajax/libs/d3/5.16.0/d3.js\"</span>&gt;<span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\">&lt;script src=<span class=\"string\">\"https://cdnjs.cloudflare.com/ajax/libs/c3/0.7.18/c3.js\"</span>&gt;<span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n\n<p>亦可從官方 <a href=\"https://github.com/c3js/c3/releases/latest\" target=\"_blank\" rel=\"noopener\">GitHub</a> 中下載最新版本的 C3.js。</p>\n<blockquote>\n<p>因為基於 D3.js 所開發的套件，所以還是要載入 D3.js，才會有效果。</p>\n</blockquote>\n<p>在 HTML 中放入這個標籤，<code>id</code> 名稱可以自訂義。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"chart\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"使用長條圖\"><a href=\"#使用長條圖\" class=\"headerlink\" title=\"使用長條圖\"></a>使用長條圖</h2><p>這邊使用長條圖當做範本，在 JS 中貼上下方程式碼，</p>\n<ul>\n<li>c3 使用 <code>generate()</code> 這個方法啟動圖表內容，其內容皆為物件。</li>\n<li>將 id 名稱用引號放在 bindto 這個位置。</li>\n<li>data 為資料位置，columns 中放入陣列資料。</li>\n<li>相關設定則在 data 外。</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> chart = c3.generate(&#123;</span><br><span class=\"line\">  bindto: <span class=\"string\">\"#chart\"</span>,</span><br><span class=\"line\">  data: &#123;</span><br><span class=\"line\">    columns: [</span><br><span class=\"line\">      [<span class=\"string\">\"data1\"</span>, <span class=\"number\">30</span>, <span class=\"number\">200</span>, <span class=\"number\">100</span>, <span class=\"number\">400</span>, <span class=\"number\">150</span>, <span class=\"number\">250</span>],</span><br><span class=\"line\">      [<span class=\"string\">\"data2\"</span>, <span class=\"number\">50</span>, <span class=\"number\">20</span>, <span class=\"number\">10</span>, <span class=\"number\">40</span>, <span class=\"number\">15</span>, <span class=\"number\">25</span>],</span><br><span class=\"line\">    ],</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>就會得到基本的 <a href=\"https://codepen.io/hnzxewqw/pen/RwrYqOM\" target=\"_blank\" rel=\"noopener\">DEMO</a> 圖表。</p>\n<h3 id=\"自訂義圖表\"><a href=\"#自訂義圖表\" class=\"headerlink\" title=\"自訂義圖表\"></a>自訂義圖表</h3><h4 id=\"右側加上數據\"><a href=\"#右側加上數據\" class=\"headerlink\" title=\"右側加上數據\"></a>右側加上數據</h4><ul>\n<li>在 data 物件外加上 axes 屬性，給予 data2 數據軸線。</li>\n<li>用 axis 屬性指定剛剛 y2 數據軸線給予顯示。</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> chart = c3.generate(&#123;</span><br><span class=\"line\">  bindto: <span class=\"string\">\"#chart\"</span>,</span><br><span class=\"line\">  data: &#123;</span><br><span class=\"line\">    columns: [</span><br><span class=\"line\">      [<span class=\"string\">\"data1\"</span>, <span class=\"number\">30</span>, <span class=\"number\">200</span>, <span class=\"number\">100</span>, <span class=\"number\">400</span>, <span class=\"number\">150</span>, <span class=\"number\">250</span>],</span><br><span class=\"line\">      [<span class=\"string\">\"data2\"</span>, <span class=\"number\">50</span>, <span class=\"number\">20</span>, <span class=\"number\">10</span>, <span class=\"number\">40</span>, <span class=\"number\">15</span>, <span class=\"number\">25</span>],</span><br><span class=\"line\">    ],</span><br><span class=\"line\">    axes: &#123;</span><br><span class=\"line\">      data2: <span class=\"string\">\"y2\"</span>, <span class=\"comment\">// ADD</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  axis: &#123;</span><br><span class=\"line\">    y2: &#123;</span><br><span class=\"line\">      show: <span class=\"literal\">true</span>, <span class=\"comment\">// ADD</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>DEMO <a href=\"https://codepen.io/hnzxewqw/pen/OJMorLa\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/OJMorLa</a></p>\n<h4 id=\"改變圖表類型\"><a href=\"#改變圖表類型\" class=\"headerlink\" title=\"改變圖表類型\"></a>改變圖表類型</h4><p>加上一個 type 屬性，給予指定的數據使用圖表類型，這裡使用 bar (長條圖)。更多圖表類型請見<a href=\"https://c3js.org/examples.html\" target=\"_blank\" rel=\"noopener\">官網</a>，看不懂英文沒關係，可以用 google 翻譯，懶得用的話就直接每個點出來玩一玩吧！<br>改變圖表顏色使用 color 屬性，更改的圖表數據用物件包覆起來。</p>\n<blockquote>\n<p>只要是針對資料相關設定都要寫在 data 的物件內。</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> chart = c3.generate(&#123;</span><br><span class=\"line\">  bindto: <span class=\"string\">\"#chart\"</span>,</span><br><span class=\"line\">  data: &#123;</span><br><span class=\"line\">    columns: [</span><br><span class=\"line\">      [<span class=\"string\">\"data1\"</span>, <span class=\"number\">30</span>, <span class=\"number\">200</span>, <span class=\"number\">100</span>, <span class=\"number\">400</span>, <span class=\"number\">150</span>, <span class=\"number\">250</span>],</span><br><span class=\"line\">      [<span class=\"string\">\"data2\"</span>, <span class=\"number\">50</span>, <span class=\"number\">20</span>, <span class=\"number\">10</span>, <span class=\"number\">40</span>, <span class=\"number\">15</span>, <span class=\"number\">25</span>],</span><br><span class=\"line\">    ],</span><br><span class=\"line\">    <span class=\"comment\">//新增 data2 的數據在右邊</span></span><br><span class=\"line\">    axes: &#123;</span><br><span class=\"line\">      data2: <span class=\"string\">\"y2\"</span>,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">//自訂圖表類型</span></span><br><span class=\"line\">    types: &#123;</span><br><span class=\"line\">      data1: <span class=\"string\">\"line\"</span>, <span class=\"comment\">//指定 data1 的圖表類型</span></span><br><span class=\"line\">      data2: <span class=\"string\">\"bar\"</span>, <span class=\"comment\">// 指定 data2 的圖表類型</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">//自訂 data 顏色</span></span><br><span class=\"line\">    colors: &#123;</span><br><span class=\"line\">      data1: <span class=\"string\">\"#03A9F4\"</span>,</span><br><span class=\"line\">      data2: <span class=\"string\">\"#76FF03\"</span>,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  legend: &#123;</span><br><span class=\"line\">    show: <span class=\"literal\">true</span>, <span class=\"comment\">//是否顯示項目</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">//客製左邊數據</span></span><br><span class=\"line\">  axis: &#123;</span><br><span class=\"line\">    <span class=\"comment\">//客製 X 軸內容</span></span><br><span class=\"line\">    x: &#123;</span><br><span class=\"line\">      type: <span class=\"string\">\"category\"</span>,</span><br><span class=\"line\">      categories: [<span class=\"number\">2000</span>, <span class=\"number\">2001</span>, <span class=\"number\">2002</span>, <span class=\"number\">2003</span>, <span class=\"number\">2004</span>, <span class=\"number\">2005</span>],</span><br><span class=\"line\">      label: &#123;</span><br><span class=\"line\">        text: <span class=\"string\">\"X軸名稱\"</span>,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">//客製 Y 軸內容</span></span><br><span class=\"line\">    y: &#123;</span><br><span class=\"line\">      label: &#123;</span><br><span class=\"line\">        text: <span class=\"string\">\"左邊Y軸名稱\"</span>,</span><br><span class=\"line\">        position: <span class=\"string\">\"outer-middle\"</span>, <span class=\"comment\">//名稱位置</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">//客製右側 (data2) Y2 軸內容</span></span><br><span class=\"line\">    y2: &#123;</span><br><span class=\"line\">      show: <span class=\"literal\">true</span>,</span><br><span class=\"line\">      label: &#123;</span><br><span class=\"line\">        text: <span class=\"string\">\"右邊Y軸名稱\"</span>,</span><br><span class=\"line\">        position: <span class=\"string\">\"outer-middle\"</span>, <span class=\"comment\">//名稱位置</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>DEMO <a href=\"https://codepen.io/hnzxewqw/pen/WNrgYBW\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/WNrgYBW</a></p>\n<h2 id=\"串接-API-資料\"><a href=\"#串接-API-資料\" class=\"headerlink\" title=\"串接 API 資料\"></a>串接 API 資料</h2><p>如果要串接 API，可以使用下方程式碼，</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">require</span>.config(&#123;</span><br><span class=\"line\">  baseUrl: <span class=\"string\">'/js'</span>,</span><br><span class=\"line\">  paths: &#123;</span><br><span class=\"line\">    d3: <span class=\"string\">\"http://d3js.org/d3.v5.min\"</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">require</span>([<span class=\"string\">\"d3\"</span>, <span class=\"string\">\"c3\"</span>], <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">d3, c3</span>) </span>&#123;</span><br><span class=\"line\">  c3.generate(&#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Load-Data\"><a href=\"#Load-Data\" class=\"headerlink\" title=\"Load Data\"></a>Load Data</h3><p>使用 load() 方法來載入</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">chart.load(&#123;</span><br><span class=\"line\">  columns: [</span><br><span class=\"line\">    [<span class=\"string\">\"data1\"</span>, <span class=\"number\">300</span>, <span class=\"number\">100</span>, <span class=\"number\">250</span>, <span class=\"number\">150</span>, <span class=\"number\">300</span>, <span class=\"number\">150</span>, <span class=\"number\">500</span>],</span><br><span class=\"line\">    [<span class=\"string\">\"data2\"</span>, <span class=\"number\">100</span>, <span class=\"number\">200</span>, <span class=\"number\">150</span>, <span class=\"number\">50</span>, <span class=\"number\">100</span>, <span class=\"number\">250</span>],</span><br><span class=\"line\">  ],</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"unload-Data\"><a href=\"#unload-Data\" class=\"headerlink\" title=\"unload Data\"></a>unload Data</h3><p>使用 unload() 卸載 data</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">chart.unload(&#123;</span><br><span class=\"line\">  ids: [<span class=\"string\">\"data2\"</span>, <span class=\"string\">\"data3\"</span>],</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"串接-API-與圖表結合\"><a href=\"#串接-API-與圖表結合\" class=\"headerlink\" title=\"串接 API 與圖表結合\"></a>串接 API 與圖表結合</h3><p>使用這筆 <a href=\"https://github.com/gonsakon/D3-API-SAMPLE\" target=\"_blank\" rel=\"noopener\">API</a>來做這次範本的串接，並使用 promise 語法。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> url = <span class=\"string\">\"https://gonsakon.github.io/D3-API-SAMPLE/\"</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(url);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//載入圖表</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">load</span>(<span class=\"params\">data</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> chart = c3.generate(&#123;</span><br><span class=\"line\">    bindto: <span class=\"string\">\"#chart\"</span>,</span><br><span class=\"line\">    data: &#123;</span><br><span class=\"line\">      columns: data,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//取得資料方法</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getURL</span>(<span class=\"params\">URL</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">resolve</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> xhr = <span class=\"keyword\">new</span> XMLHttpRequest();</span><br><span class=\"line\">    xhr.open(<span class=\"string\">\"get\"</span>, url + URL);</span><br><span class=\"line\">    xhr.send(<span class=\"literal\">null</span>);</span><br><span class=\"line\">    xhr.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"comment\">//回傳一個資料</span></span><br><span class=\"line\">      resolve(<span class=\"built_in\">JSON</span>.parse(xhr.responseText));</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//取得高雄屏東資料</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> kaohsiung = getURL(<span class=\"string\">\"kaohsiung.json\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">let</span> pingtung = getURL(<span class=\"string\">\"pingtung.json\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//promise AJAX 取得資料方式</span></span><br><span class=\"line\"><span class=\"built_in\">Promise</span>.all([kaohsiung, pingtung]).then(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">results</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> originData = [];</span><br><span class=\"line\">  originData.push([<span class=\"string\">\"高雄\"</span>].concat(results[<span class=\"number\">0</span>])); <span class=\"comment\">//把高雄資料展開後載入圖表</span></span><br><span class=\"line\">  originData.push([<span class=\"string\">\"屏東\"</span>].concat(results[<span class=\"number\">1</span>])); <span class=\"comment\">//把屏東資料展開後載入圖表</span></span><br><span class=\"line\">  load(originData); <span class=\"comment\">//帶回圖表</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>DEMO <a href=\"https://codepen.io/hnzxewqw/pen/KKVxGXy\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/KKVxGXy</a></p>\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><ul>\n<li><a href=\"https://c3js.org/\" target=\"_blank\" rel=\"noopener\">C3.js</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=0PQ8VOsyjzw\" target=\"_blank\" rel=\"noopener\">D3.js、C3.js 資料視覺化教學</a></li>\n<li><a href=\"https://wcc723.github.io/life/2017/05/25/promise/\" target=\"_blank\" rel=\"noopener\">JavaScript ES6 Promise</a></li>\n</ul>\n","categories":["JavaScript"],"tags":["JavaScript","C3.js"]},{"title":"JS 筆記 -常用的陣列方法","url":"/javascript/20200715/823126105/","content":"<p><img src=\"https://ithelp.ithome.com.tw/upload/images/20190905/201064264EEnIVs0ur.jpg\" alt=\"Array\"></p>\n<p>雖然不完全是 ES6 語法糖，但在比較舊的瀏覽器就無法支援這些語法，所以使用上要注意，透過下方幾個語法，可以精簡的處理陣列資料的程式碼。</p>\n<h2 id=\"範例資料\"><a href=\"#範例資料\" class=\"headerlink\" title=\"範例資料\"></a>範例資料</h2><p>本次皆使用下方陣列資料 (除了 <code>sort()</code> 以外)：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> arr = [</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    name: <span class=\"string\">\"Abby\"</span>,</span><br><span class=\"line\">    money: <span class=\"number\">5000</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    name: <span class=\"string\">\"Ben\"</span>,</span><br><span class=\"line\">    money: <span class=\"number\">6500</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    name: <span class=\"string\">\"Cathy\"</span>,</span><br><span class=\"line\">    money: <span class=\"number\">7500</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    name: <span class=\"string\">\"Danny\"</span>,</span><br><span class=\"line\">    money: <span class=\"number\">8000</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">];</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"forEach-amp-map\"><a href=\"#forEach-amp-map\" class=\"headerlink\" title=\"forEach &amp; map\"></a>forEach &amp; map</h2><p>這兩個語法大概有 87% 像，但又有點不同，這兩個語法都跟 for 迴圈的功能類似，原生語法要取得陣列資料會這樣寫：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 資料長度</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> arrLen = arr.length;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arrLen); <span class=\"comment\">//4</span></span><br><span class=\"line\"><span class=\"comment\">//for</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; arrLen; i++) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(arr[i]);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"forEach\"><a href=\"#forEach\" class=\"headerlink\" title=\"forEach\"></a>forEach</h3><p>使用 forEach 更精簡的寫法，方式是在資料名稱後方加入 forEach 語法，後面接一個 function，參數分別帶入。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">arr.forEach(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">item, index, array</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(item, index, array);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>item: 代表陣列資料的內容，這邊陣列資料中的資料為物件。</li>\n<li>index: 索引位置，從 0 開始。</li>\n<li>array: 代表陣列資料本身(基本上沒有使用)。</li>\n</ul>\n<p>若在 item 增加一個 icash 資料新增金額，可以這樣寫：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">arr.forEach(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">item, index, array</span>) </span>&#123;</span><br><span class=\"line\">  item.icash = item.money + <span class=\"number\">500</span>;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(item, index, array); <span class=\"comment\">//money 會得到 5500, 7000, 8000, 8500。</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>forEach 本身不會回傳。</p>\n</blockquote>\n<h3 id=\"map\"><a href=\"#map\" class=\"headerlink\" title=\"map\"></a>map</h3><p>承上，把 forEach 換成 map，得到的結果也會相同。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">arr.map(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">item, index, array</span>) </span>&#123;</span><br><span class=\"line\">  item.icash = item.money + <span class=\"number\">500</span>;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(item, index, array); <span class=\"comment\">//money 會得到 5500, 7000, 8000, 8500。</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>如果要使用 map 回傳一個新的陣列資料可以這樣寫：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> newArr = arr.map(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">item, index, array</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    ...item, <span class=\"comment\">//拆解 item 資料，新增一個變數為newArr，併重新回傳資料到新變數中。</span></span><br><span class=\"line\">    icach: item.money + <span class=\"number\">500</span>, <span class=\"comment\">//分別在 ...item 中增加 icash 這個屬性與內容。</span></span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(newArr); <span class=\"comment\">//會得到四個物件。</span></span><br></pre></td></tr></table></figure>\n\n<p>newArr 跟 arr 會是兩個不同的陣列資料。</p>\n<blockquote>\n<ul>\n<li>map 本身會回傳，類似於 return 的功能。</li>\n<li>一般使用回傳的特性，會拿來做篩選，但 map 若沒有使用 return 語法，會回傳 undefined，所以 map 不適合拿來做篩選的功能。</li>\n</ul>\n</blockquote>\n<h2 id=\"filter-amp-find\"><a href=\"#filter-amp-find\" class=\"headerlink\" title=\"filter &amp; find\"></a>filter &amp; find</h2><h3 id=\"filter\"><a href=\"#filter\" class=\"headerlink\" title=\"filter\"></a>filter</h3><p>filter 寫法跟上方一樣，return 的值也很單純，只有 true 或 false，</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> filterArr = arr.filter(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">item, index</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(filterArr); <span class=\"comment\">//true 得到四個物件資料，false 得到一個空陣列。</span></span><br></pre></td></tr></table></figure>\n\n<p>若今天要篩選 money 小於 6000 的方法可以這樣寫：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> filterArr = arr.filter(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">item, index</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (item.money &lt; <span class=\"number\">7000</span>) <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(filterArr); <span class=\"comment\">// 得到 Abby 跟 Ben</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>filter 會篩選所有相符的條件並做回傳，回傳的資料會是一個陣列。</p>\n</blockquote>\n<h3 id=\"find\"><a href=\"#find\" class=\"headerlink\" title=\"find\"></a>find</h3><p>find 跟 filter 有點像，</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> findArr = arr.find(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">item, index</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (item.money &lt; <span class=\"number\">7000</span>) <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(findArr); <span class=\"comment\">// 找到 Abby 一筆資料就停止</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>find 找到相符的一筆資料後就會停止，只會回傳一次，回傳的資料會依照 item 的內容照實回傳，EX. 是字串就回傳字串，比較適合用來找 id 或是指定的元素。</p>\n</blockquote>\n<h2 id=\"every-amp-some\"><a href=\"#every-amp-some\" class=\"headerlink\" title=\"every &amp; some\"></a>every &amp; some</h2><p>這兩種語法基本上一樣，都是回傳布林值，差別如下：</p>\n<ul>\n<li>every 需所有條件相符才會回傳 true，有一條件不符就會回傳 false。</li>\n<li>some 只要有部分條件相符就會回傳 true。</li>\n</ul>\n<p>程式碼如下：</p>\n<h3 id=\"every\"><a href=\"#every\" class=\"headerlink\" title=\"every\"></a>every</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> newArr = arr.every(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">item, index</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> item.money &gt; <span class=\"number\">1000</span>;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(newArr); <span class=\"comment\">//true</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"some\"><a href=\"#some\" class=\"headerlink\" title=\"some\"></a>some</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> newArr = arr.some(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">item, index</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> item.money &gt; <span class=\"number\">6000</span>;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(newArr);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"reduce\"><a href=\"#reduce\" class=\"headerlink\" title=\"reduce\"></a>reduce</h2><p>適合拿來做加總的方法，起手式為：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> newArr = arr.reduce(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">prev, item, index</span>) </span>&#123;&#125;, <span class=\"number\">0</span>);</span><br></pre></td></tr></table></figure>\n\n<p>跟前面不同的是在函式後面加上一個逗號，逗號後面的參數為起始值。</p>\n<blockquote>\n<p><strong>參數說明：</strong></p>\n<ul>\n<li>第一個參數代表上一個，若沒有上一個的話，就是在逗號後面寫上 0。</li>\n<li>第二個參數代表當前的資料。</li>\n<li>第三個參數代表索引。</li>\n</ul>\n</blockquote>\n<p>來看一下 prev 的值：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> newArr = arr.reduce(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">prev, item, index</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(prev); <span class=\"comment\">//0, 500, 1000, 1500</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> prev + <span class=\"number\">500</span>;</span><br><span class=\"line\">&#125;, <span class=\"number\">0</span>);</span><br></pre></td></tr></table></figure>\n\n<p>因為陣列資料有四筆，所以從頭開始總共會得到四筆資料。</p>\n<h3 id=\"計算所有人加總的數值\"><a href=\"#計算所有人加總的數值\" class=\"headerlink\" title=\"計算所有人加總的數值\"></a>計算所有人加總的數值</h3><p>若要計算所有人擁有的錢，可以這樣寫：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> newArr = arr.reduce(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">prev, item, index</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(prev); <span class=\"comment\">//陸續加總的結果0 5000 11500 19000 27000</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> prev + item.money;</span><br><span class=\"line\">&#125;, <span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(newArr); <span class=\"comment\">//27000</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"比大小\"><a href=\"#比大小\" class=\"headerlink\" title=\"比大小\"></a>比大小</h3><p>可以透過 reduce 去做所有資料內容的對比，會選出指定條件的值，這邊選出最大值來看看。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> newArr = arr.reduce(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">prev, item, index</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(prev);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"built_in\">Math</span>.max(prev, item.money);</span><br><span class=\"line\">&#125;, <span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"newArr\"</span>, newArr); <span class=\"comment\">//8000</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"sort\"><a href=\"#sort\" class=\"headerlink\" title=\"sort()\"></a>sort()</h2><p>會改變原本的陣列內容。下方有一組陣列沒有按照順序，使用 sort(); 方法，並帶入頭尾參數做為判斷，便會按照順序排列或反向排列。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> arr = [<span class=\"number\">1</span>, <span class=\"number\">5</span>, <span class=\"number\">8</span>, <span class=\"number\">7</span>, <span class=\"number\">4</span>, <span class=\"number\">6</span>, <span class=\"number\">3</span>, <span class=\"number\">2</span>];</span><br><span class=\"line\">arr.sort(<span class=\"function\">(<span class=\"params\">x, y</span>) =&gt;</span>  <span class=\"keyword\">return</span> y - x);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr); <span class=\"comment\">//8, 7, 6, 5, 4, 3, 2, 1</span></span><br><span class=\"line\">arr.sort(<span class=\"function\">(<span class=\"params\">x, y</span>) =&gt;</span> <span class=\"keyword\">return</span> x - y);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr); <span class=\"comment\">//1, 2, 3, 4, 5, 6, 7, 8</span></span><br></pre></td></tr></table></figure>\n\n<p>但若不使用判斷，則不會按照順序排列。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> arr2 = [<span class=\"number\">1</span>, <span class=\"number\">5</span>, <span class=\"number\">8</span>, <span class=\"number\">7</span>, <span class=\"number\">4</span>, <span class=\"number\">6</span>, <span class=\"number\">3</span>, <span class=\"number\">2</span>, <span class=\"number\">10</span>, <span class=\"number\">9</span>, <span class=\"number\">11</span>];</span><br><span class=\"line\">arr2.sort();</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr2); <span class=\"comment\">//1, 10, 11, 2, 3, 4, 5, 6, 7, 8, 9</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><ul>\n<li><a href=\"https://www.oxxostudio.tw/articles/201908/js-array.html#array_sort\" target=\"_blank\" rel=\"noopener\">JavaScript Array 陣列操作方法大全 ( 含 ES6 )</a></li>\n<li><a href=\"https://wcc723.github.io/javascript/2017/06/29/es6-native-array/\" target=\"_blank\" rel=\"noopener\">JavaScript 陣列處理方法 [filter(), find(), forEach(), map(), every(), some(), reduce()]</a></li>\n<li><a href=\"https://w3c.hexschool.com/blog/6594e4ff\" target=\"_blank\" rel=\"noopener\">Cheatsheet for Array Methods - JavaScript 陣列方法大全</a></li>\n</ul>\n","categories":["JavaScript"],"tags":["JavaScript"]},{"title":"CSS 筆記 - 金魚系列 04 - 交錯漂浮版","url":"/css/20200714/777238571/","content":"<p><img src=\"https://i.imgur.com/dvHy65Q.png\" alt=\"switch\"></p>\n<h2 id=\"學習重點\"><a href=\"#學習重點\" class=\"headerlink\" title=\"學習重點\"></a>學習重點</h2><ul>\n<li>區塊尺寸怎麼算</li>\n<li>Box-sizing 是甚麼</li>\n<li>CSS relative 相對定位</li>\n<li>網頁的色彩原理</li>\n<li>flex-direction 的原理</li>\n<li><a href=\"https://csscoke.com/2013/09/21/%E4%BD%BF%E7%94%A8css3-nth-childn-%E9%81%B8%E5%8F%96%E5%99%A8%E8%A9%B3%E8%A7%A3/\" target=\"_blank\" rel=\"noopener\">nth-child 選取器教學(建議先行閱讀會比較有概念)</a></li>\n</ul>\n<p>非常有趣的主題，立馬來切一下文字與圖片交錯的版型！</p>\n<h2 id=\"HTML-架構\"><a href=\"#HTML-架構\" class=\"headerlink\" title=\"HTML 架構\"></a>HTML 架構</h2><p>共有四個，會分成<strong>文字在左，圖片在右</strong>各兩組，其他兩組反之。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"wrap\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- item01 --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"pic\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"https://picsum.photos/600/350?random=10\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"text\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>金魚切版系列 IV - 交錯漂浮版<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">        「產品介紹」或是「關於我」常用的交錯漂浮版，一定要學起來!</span><br><span class=\"line\">        好像會使用到絕對定位還是相對定位，一定要使用 Flex，新學了 flex-shrink。</span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- item02 --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"text\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>新手一定要寫註解<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">        不然一堆一樣的東西，回過頭來維護或寫到一半都會忘記為什麼會這樣...所以加註解非常重要，不要覺得自己記憶力很強啊!其實都很不管用的！</span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"pic\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"https://picsum.photos/600/350?random=20\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- item03 --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"pic\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"https://picsum.photos/600/350?random=30\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"text\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>有點難又不會太難<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">        區塊尺寸怎麼算、 Box-sizing 是甚麼、 CSS relative 相對定位、</span><br><span class=\"line\">        網頁的色彩原理、 flex-direction 的原理、 「&gt;」子代選取器、:nth-child</span><br><span class=\"line\">        選取器教學</span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- item04 --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"text\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>:nth-child 選取器<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">        CSS3 新增的選取器，一定要學會，好厲害啊!! 只要架構清楚都不用再寫 class</span><br><span class=\"line\">        來綁定跟套用效果啦! HTML 標籤變得好乾淨!</span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"pic\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"https://picsum.photos/600/350?random=40\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"CSS-樣式\"><a href=\"#CSS-樣式\" class=\"headerlink\" title=\"CSS 樣式\"></a>CSS 樣式</h2><ul>\n<li>確認好架構後，在 <code>.item</code> 使用 flex 使之橫向排列，flex 真好用!!讓文字與圖片垂直對齊，讓每* 個區塊下方有 70px 的空間。為了要實現交錯的效果，把圖片與文字的寬度都設定為 55%，這樣相加為 110%，可是 flex 會自動運算空間，所以加上一個這次新學到的屬性 <code>flex-shrink</code> ，使其值為 0，就不會自動收縮。</li>\n<li>圖片下方都會出現一個莫名空白，使用 <code>vertical-align: middle;</code>，這個技巧出現很多次，學起來很受用，這樣圖片就不會有莫名空白囉!</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.item</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">  <span class=\"attribute\">align-items</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">margin-bottom</span>: <span class=\"number\">70px</span>;</span><br><span class=\"line\">  //flex 收縮值為 0</span><br><span class=\"line\">  <span class=\"selector-class\">.pic</span>,</span><br><span class=\"line\">  <span class=\"selector-class\">.text</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">flex-shrink</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">55%</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"selector-tag\">img</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">vertical-align</span>: middle;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/DgCgwbD.png\" alt=\"switch\"></p>\n<p>然後就可以看到畫面壞掉了，文字超過設定範圍。</p>\n<h2 id=\"子代選取器-first-child、-nth-child-n-選取器\"><a href=\"#子代選取器-first-child、-nth-child-n-選取器\" class=\"headerlink\" title=\"子代選取器 :first-child、:nth-child(n) 選取器\"></a>子代選取器 :first-child、:nth-child(n) 選取器</h2><ul>\n<li>為了讓文字可以壓在圖片上，這邊使用<a href=\"http://csscoke.com/2013/10/14/was-framed-and-forgotten-ie6-css-selectors/\" target=\"_blank\" rel=\"noopener\">子代選取器</a>，選擇第一層第一個物件(看是圖片或是文字)，讓期 margin 為負值，就有交錯的效果。</li>\n<li>再來使用 CSS3 新增的 <a href=\"https://csscoke.com/2013/09/21/%E4%BD%BF%E7%94%A8css3-nth-childn-%E9%81%B8%E5%8F%96%E5%99%A8%E8%A9%B3%E8%A7%A3/\" target=\"_blank\" rel=\"noopener\">:nth-child(n) 選取器</a>去選擇 DOM 子層元素，不用先命名 class 就可以選到要設定的元素，小括號內的參數可以放順序，也可以放基(odd)、偶數(even)。<blockquote>\n<p>可參考連結有更多說明。</p>\n</blockquote>\n</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.item</span> &#123;</span><br><span class=\"line\">  ... &gt; :first-child &#123;</span><br><span class=\"line\">    <span class=\"selector-tag\">margin-right</span>: <span class=\"selector-tag\">-50px</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  //重要的部分</span><br><span class=\"line\">  &amp;<span class=\"selector-pseudo\">:nth-child(1)</span> <span class=\"selector-class\">.text</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: <span class=\"built_in\">rgba</span>($color: #e0e0e0, $alpha: <span class=\"number\">0.8</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  &amp;<span class=\"selector-pseudo\">:nth-child(2)</span> <span class=\"selector-class\">.text</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: <span class=\"built_in\">rgba</span>($color: #e0e0e0, $alpha: <span class=\"number\">0.8</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  &amp;<span class=\"selector-pseudo\">:nth-child(3)</span> <span class=\"selector-class\">.text</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: <span class=\"built_in\">rgba</span>($color: #e0e0e0, $alpha: <span class=\"number\">0.8</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  &amp;<span class=\"selector-pseudo\">:nth-child(4)</span> <span class=\"selector-class\">.text</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: <span class=\"built_in\">rgba</span>($color: #e0e0e0, $alpha: <span class=\"number\">0.8</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>最後在依照想要優化的內容進行優化，交錯飄浮的頁面就完成了!!</p>\n<p>CodePen <a href=\"https://codepen.io/hnzxewqw/full/rNxZWLr\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/full/rNxZWLr</a></p>\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><ul>\n<li><a href=\"https://ithelp.ithome.com.tw/articles/10217785\" target=\"_blank\" rel=\"noopener\">金魚都能懂的這個網頁畫面怎麼切 : 切一個交錯漂浮版</a></li>\n<li><a href=\"http://csscoke.com/2013/10/14/was-framed-and-forgotten-ie6-css-selectors/\" target=\"_blank\" rel=\"noopener\">那些年！因為 IE6 而被許多人遺忘的 CSS 選取器-「&gt;」子代選取器</a></li>\n<li><a href=\"https://csscoke.com/2013/09/21/%E4%BD%BF%E7%94%A8css3-nth-childn-%E9%81%B8%E5%8F%96%E5%99%A8%E8%A9%B3%E8%A7%A3/\" target=\"_blank\" rel=\"noopener\">使用 CSS3 :nth-child(n) 選取器教學</a></li>\n</ul>\n","categories":["CSS"],"tags":["CSS"]},{"title":"CSS 筆記 - 金魚系列 03 - 人員卡片介紹","url":"/css/20200714/1295765422/","content":"<p><img src=\"https://i.imgur.com/DMKrOLl.png\" alt=\"staff\"></p>\n<p>個人覺得這篇非常有趣，去年鐵人賽也有拿來練習一次，這次重新切版筆記，想做更完整的記錄。</p>\n<h2 id=\"學習重點\"><a href=\"#學習重點\" class=\"headerlink\" title=\"學習重點\"></a>學習重點</h2><ul>\n<li><a href=\"https://www.youtube.com/watch?v=Dn75bi1OG6k&feature=youtu.be\" target=\"_blank\" rel=\"noopener\">三角形製作方式</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=MV9_P6klL-Q&feature=youtu.be\" target=\"_blank\" rel=\"noopener\">區塊尺寸怎麼算</a></li>\n<li>CSS absolute 絕對定位</li>\n<li>CSS relative 相對定位</li>\n<li>transition 動畫的做法</li>\n<li><a href=\"https://www.youtube.com/watch?v=_nCBQ6AIzDU&feature=youtu.be&t=1702\" target=\"_blank\" rel=\"noopener\">flex-direction 的原理</a></li>\n</ul>\n<h2 id=\"HTML-架構確認\"><a href=\"#HTML-架構確認\" class=\"headerlink\" title=\"HTML 架構確認\"></a>HTML 架構確認</h2><p>首先只要確認一個架構內容沒問題，其他只要複製就可以了，</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"wrap\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"card\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"https://picsum.photos/300/300?pepple=10\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"content\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>Amos 金魚系列 III<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">        記得當前留下嘿嘿聯絡人世界盃證明改造輕鬆這就是，本來現金，也會商業幾天懂得力道怪物預期，狀況攝影法。</span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"CSS-樣式\"><a href=\"#CSS-樣式\" class=\"headerlink\" title=\"CSS 樣式\"></a>CSS 樣式</h2><h3 id=\"雛形樣式確認\"><a href=\"#雛形樣式確認\" class=\"headerlink\" title=\"雛形樣式確認\"></a>雛形樣式確認</h3><p>確認架構上到下排列沒問題後，先簡單設定樣式，讓雛型完成。</p>\n<p><img src=\"https://i.imgur.com/v4Qj1Pt.png\" alt=\"staff01\"></p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">body</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">  <span class=\"attribute\">align-items</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#000033</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.wrap</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">960px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> auto;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.card</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">300px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin-right</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin-left</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#fff</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid <span class=\"number\">#fff</span>;</span><br><span class=\"line\">  <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateY</span>(<span class=\"number\">0px</span>);</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: all <span class=\"number\">0.5s</span>;</span><br><span class=\"line\">  <span class=\"attribute\">cursor</span>: pointer;</span><br><span class=\"line\">  img &#123;</span><br><span class=\"line\">    <span class=\"selector-tag\">width</span>: 100%;</span><br><span class=\"line\">    <span class=\"selector-tag\">vertical-align</span>: <span class=\"selector-tag\">middle</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.content</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">  <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">  h2 &#123;</span><br><span class=\"line\">    <span class=\"selector-tag\">font-size</span>: 24<span class=\"selector-tag\">px</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">font-weight</span>: <span class=\"selector-tag\">bold</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">border-bottom</span>: 1<span class=\"selector-tag\">px</span> <span class=\"selector-tag\">solid</span> <span class=\"selector-id\">#333333</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">padding-bottom</span>: 10<span class=\"selector-tag\">px</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">margin-bottom</span>: 10<span class=\"selector-tag\">px</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">text-align</span>: <span class=\"selector-tag\">center</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"selector-tag\">P</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">line-height</span>: <span class=\"number\">1.5</span>;</span><br><span class=\"line\">    <span class=\"attribute\">text-align</span>: left;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"selector-tag\">h2</span>,</span><br><span class=\"line\">  <span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"number\">#444444</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"寫一個三角形\"><a href=\"#寫一個三角形\" class=\"headerlink\" title=\"寫一個三角形\"></a>寫一個三角形</h3><p>這次練習的重點在這裡，怎麼寫三角形，這邊就使用到偽元素，使用的是 <code>::before</code> 來呈現三角形。</p>\n<ul>\n<li>因為是在 <code>.content</code> 內要呈現三角形，並且要蓋在圖片上，所以要使用絕對定位，父層就是 <code>.content</code>。</li>\n<li>使寬度與高度為 0，固定在左上角當做起始點，把線條頂點先抓出來，並給予線條粗細度，因使用偽元素，故可以在左右邊做設定，內容跟頂點一樣，要注意的是因為 .content 有給邊框 1px，所以三角形左右邊的粗細度要各扣掉 1px。</li>\n<li>在 <code>.content</code> 中背景是白色，所以左右邊線條也給白色，因為要做成三角形的缺角，故頂點的線條顏色使用無色(transparent)。</li>\n<li>最後使三角形頂點其對齊圖片下方，使用位移 <code>transform: translateY(-100%);</code></li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.content</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">  <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">  //三角形寫法</span><br><span class=\"line\">  &amp;<span class=\"selector-pseudo\">::before</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">content</span>: <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">    <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"attribute\">top</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"attribute\">left</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"attribute\">border-top</span>: <span class=\"number\">50px</span> solid transparent;</span><br><span class=\"line\">    <span class=\"attribute\">border-left</span>: <span class=\"number\">149px</span> solid <span class=\"number\">#ffffff</span>;</span><br><span class=\"line\">    <span class=\"attribute\">border-right</span>: <span class=\"number\">149px</span> solid <span class=\"number\">#ffffff</span>;</span><br><span class=\"line\">    <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateY</span>(-<span class=\"number\">100%</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"hover-互動效果\"><a href=\"#hover-互動效果\" class=\"headerlink\" title=\"hover 互動效果\"></a>hover 互動效果</h3><p>最後加上互動效果就完成這次的人員卡片互動，非常實用的一個練習呢!!</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.card</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">300px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin-right</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin-left</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#fff</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid <span class=\"number\">#fff</span>;</span><br><span class=\"line\">  //卡片位移</span><br><span class=\"line\">  <span class=\"selector-tag\">transform</span>: <span class=\"selector-tag\">translateY</span>(0<span class=\"selector-tag\">px</span>);</span><br><span class=\"line\">  <span class=\"selector-tag\">transition</span>: <span class=\"selector-tag\">all</span> 0<span class=\"selector-class\">.5s</span>;</span><br><span class=\"line\">  <span class=\"selector-tag\">cursor</span>: <span class=\"selector-tag\">pointer</span>;</span><br><span class=\"line\">  <span class=\"selector-tag\">img</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">vertical-align</span>: middle;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  //卡片位移效果</span><br><span class=\"line\">  &amp;<span class=\"selector-pseudo\">:hover</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateY</span>(-<span class=\"number\">30px</span>);</span><br><span class=\"line\">    .content &#123;</span><br><span class=\"line\">      //漸層從下到上</span><br><span class=\"line\">      <span class=\"selector-tag\">background-image</span>: <span class=\"selector-tag\">linear-gradient</span>(0<span class=\"selector-tag\">deg</span>, <span class=\"selector-id\">#d0ff34</span>, <span class=\"selector-id\">#fcff35</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"selector-class\">.content</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">padding</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">    <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">    //三角形寫法</span><br><span class=\"line\">    &amp;<span class=\"selector-pseudo\">::before</span> &#123;</span><br><span class=\"line\">      <span class=\"attribute\">content</span>: <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">      <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">      <span class=\"attribute\">width</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">      <span class=\"attribute\">height</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">      <span class=\"attribute\">top</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">      <span class=\"attribute\">left</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">      <span class=\"attribute\">border-top</span>: <span class=\"number\">50px</span> solid transparent;</span><br><span class=\"line\">      <span class=\"attribute\">border-left</span>: <span class=\"number\">149px</span> solid <span class=\"number\">#ffffff</span>;</span><br><span class=\"line\">      <span class=\"attribute\">border-right</span>: <span class=\"number\">149px</span> solid <span class=\"number\">#ffffff</span>;</span><br><span class=\"line\">      <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateY</span>(-<span class=\"number\">100%</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    //三角形顏色互動</span><br><span class=\"line\">    &amp;<span class=\"selector-pseudo\">:hover</span> &#123;</span><br><span class=\"line\">      &amp;::before &#123;</span><br><span class=\"line\">        <span class=\"selector-tag\">content</span>: \"\";</span><br><span class=\"line\">        <span class=\"selector-tag\">border-left</span>: 149<span class=\"selector-tag\">px</span> <span class=\"selector-tag\">solid</span> <span class=\"selector-id\">#fcff35</span>;</span><br><span class=\"line\">        <span class=\"selector-tag\">border-right</span>: 149<span class=\"selector-tag\">px</span> <span class=\"selector-tag\">solid</span> <span class=\"selector-id\">#fcff35</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"selector-tag\">h2</span> &#123;</span><br><span class=\"line\">      <span class=\"attribute\">font-size</span>: <span class=\"number\">24px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">font-weight</span>: bold;</span><br><span class=\"line\">      <span class=\"attribute\">border-bottom</span>: <span class=\"number\">1px</span> solid <span class=\"number\">#333333</span>;</span><br><span class=\"line\">      <span class=\"attribute\">padding-bottom</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">margin-bottom</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-tag\">P</span> &#123;</span><br><span class=\"line\">      <span class=\"attribute\">line-height</span>: <span class=\"number\">1.5</span>;</span><br><span class=\"line\">      <span class=\"attribute\">text-align</span>: left;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-tag\">h2</span>,</span><br><span class=\"line\">    <span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">      <span class=\"attribute\">color</span>: <span class=\"number\">#444444</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>CodePen <a href=\"https://codepen.io/tim_hsu/full/OJMwxvj\" target=\"_blank\" rel=\"noopener\">https://codepen.io/tim_hsu/full/OJMwxvj</a></p>\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><ul>\n<li><a href=\"https://ithelp.ithome.com.tw/articles/10217278\" target=\"_blank\" rel=\"noopener\">金魚都能懂的這個網頁畫面怎麼切 : 人員介紹卡片</a></li>\n</ul>\n","categories":["CSS"],"tags":["CSS"]},{"title":"JS 筆記 - 使用 JavaScript 插入 createElement","url":"/javascript/20200714/3607269848/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/JavaScript%20note-01.jpg?alt=media&token=7bee0261-72ac-4de4-9f5a-f39d58735b7d\" alt=\"JavaScript Note\"></p>\n<h2 id=\"createElement\"><a href=\"#createElement\" class=\"headerlink\" title=\"createElement\"></a>createElement</h2><ul>\n<li>方法：使用 DOM 節點來處理。(貼上 DOM 文章連結)</li>\n<li>優點：安全性高。</li>\n<li>缺點：效能差。</li>\n</ul>\n<p>首先在 HTML 裡面新增一個 <code>div</code>：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"title\"</span>&gt;</span>title<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><code>createElement</code> 英文字面意思就是「創造功能」，也就是在網頁上透過 JavaScript 新增一個節點功能，如下方程式碼所示，要在文件中新增一個 <code>&lt;em&gt;</code> 的標籤。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">\"em\"</span>); <span class=\"comment\">//新增 em 標籤</span></span><br><span class=\"line\">str.textContent = <span class=\"string\">\"新增文字\"</span>;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"appendChild\"><a href=\"#appendChild\" class=\"headerlink\" title=\"appendChild\"></a>appendChild</h2><p>再透過一個語法 <code>appendChild</code>，增加子節點，並增加到變數 <code>str</code> 當中。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//增加子節點</span></span><br><span class=\"line\"><span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\".title\"</span>).appendChild(str);</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>英文直翻也很有意思，append 是附加的意思，Child 是小孩，可以理解成附加一個節點的小孩。</p>\n</blockquote>\n<h2 id=\"setAttribute\"><a href=\"#setAttribute\" class=\"headerlink\" title=\"setAttribute\"></a>setAttribute</h2><p>另外可以透過之前學過的 <code>setAttribute</code> 語法，動態新增一個 <code>class</code> 來優化，使新增的文字變成紅色。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">str.setAttribute(<span class=\"string\">\"class\"</span>, <span class=\"string\">\"red\"</span>); <span class=\"comment\">//在 str 新增屬性</span></span><br></pre></td></tr></table></figure>\n\n<p>可參考 <a href=\"https://hsuchihting.github.io/javascript/20200622/114236291/\">setAttribute</a> 介紹。</p>\n<p>codepen: <a href=\"https://codepen.io/hnzxewqw/pen/oNXYrOL\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/oNXYrOL</a></p>\n","categories":["JavaScript"],"tags":["JavaScript"]},{"title":"jQuery 筆記 - 移除元素 remove()","url":"/jQuery/20200713/1248582820/","content":"<p><img src=\"https://images.unsplash.com/photo-1590521005771-df190a7fe95b?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1267&q=80\" alt=\"trash can\"></p>\n<p>之前在專案上有使用到 hide() 語法，將元素隱藏，但這次因為是用 table 表單記錄資料，為了正確刪除資料而不是隱藏 DOM 元素，使用 remove() 將該元素從網頁刪除。</p>\n<h2 id=\"hide\"><a href=\"#hide\" class=\"headerlink\" title=\"hide()\"></a>hide()</h2><p>使用 hide()的話，可以打開瀏覽器會看到透過按鈕隱藏的 DOM 元素，變成了 display:none; 這代表網頁只是將其隱藏而非刪除，在畫面上雖然都消失了，但因 hide() 的權重較高，比較不建議這樣做「刪除」的動作。</p>\n<h3 id=\"HTML\"><a href=\"#HTML\" class=\"headerlink\" title=\"HTML\"></a>HTML</h3><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn jq-removeBtn\"</span>&gt;</span>Remove<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">class</span>=<span class=\"string\">\"text\"</span>&gt;</span>這是一段文字，點擊按鈕後我會被隱藏。<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"JS\"><a href=\"#JS\" class=\"headerlink\" title=\"JS\"></a>JS</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">\".jq-removeBtn\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">  e.preventDefault();</span><br><span class=\"line\">  $(<span class=\"string\">\".text\"</span>).hide();</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"remove\"><a href=\"#remove\" class=\"headerlink\" title=\"remove()\"></a>remove()</h2><p>採用 remove() 就真的是將 DOM 元素從網頁移除。這邊練習一個常見的 table 表單寫法，下方有個表單結構與樣式，並且要在點擊按鈕後刪除自身該筆資料。</p>\n<h3 id=\"HTML-1\"><a href=\"#HTML-1\" class=\"headerlink\" title=\"HTML\"></a>HTML</h3><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">thead</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>NAME<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>PHONE<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>EMAIL<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>OHTER<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>DELETE<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">thead</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>Tim<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>0912-345678<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>tim@email.com<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn jq-delete\"</span>&gt;</span>刪除<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>Tim<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>0912-345678<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>tim@email.com<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn jq-delete\"</span>&gt;</span>刪除<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>Tim<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>0912-345678<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>tim@email.com<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn jq-delete\"</span>&gt;</span>刪除<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>Tim<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>0912-345678<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>tim@email.com<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn jq-delete\"</span>&gt;</span>刪除<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"JS-1\"><a href=\"#JS-1\" class=\"headerlink\" title=\"JS\"></a>JS</h3><p>當我綁定按鈕並給予點擊事件後，讓他找到按鈕自己，然後再找到 td，再找到 tr，然後把 tr 移除，就完成把表單資料的移除功能囉!</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">\".jq-delete\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  $(<span class=\"keyword\">this</span>).parent().parent().remove();</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<iframe height=\"458\" style=\"width: 100%;\"  src=\"https://codepen.io/hnzxewqw/embed/OJMwEqz?height=458&theme-id=light&default-tab=result\"></iframe>\n","categories":["jQuery"],"tags":["JavaScript","jQuery"]},{"title":"jQuery 筆記 - 讓網頁回到最頂點寫法","url":"/jQuery/20200713/1759814760/","content":"<p><img src=\"https://i.imgur.com/MOTX6if.jpg\" alt=\"gotop\"></p>\n<p>記錄一個簡單又好用的 Go Top 寫法，目的是為了如果瀏覽資料很長，就不必一直往上滾動，使用之前的練習，新增一個 Go Top 的按鈕。</p>\n<h3 id=\"HTML-結構\"><a href=\"#HTML-結構\" class=\"headerlink\" title=\"HTML 結構\"></a>HTML 結構</h3><p>我習慣把同一個元素用一個 <code>&lt;div&gt;</code> 包住，這樣若要更動樣式就可以讓裡面的元素全部吃到，這邊使用 <code>a</code> 連結的特性， <code>href</code> 屬性裡面的值為 #，視為<strong>錨點</strong>，點選後會自動跳到網頁頂端，裡面包一個 font-awesome 圖示。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"goTop\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"goTopBtn jq-goTop\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fas fa-arrow-alt-circle-up fa-3x\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"CSS-樣式\"><a href=\"#CSS-樣式\" class=\"headerlink\" title=\"CSS 樣式\"></a>CSS 樣式</h3><p>使用 <code>position: fixed</code> 鎖定於右下角，並設定圖示相關樣式。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.goTop</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: fixed;</span><br><span class=\"line\">  <span class=\"attribute\">right</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">bottom</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">  .goTopBtn &#123;</span><br><span class=\"line\">    <span class=\"selector-tag\">background-color</span>: <span class=\"selector-tag\">transparent</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">border</span>: <span class=\"selector-tag\">none</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">outline</span>: <span class=\"selector-tag\">none</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">cursor</span>: <span class=\"selector-tag\">pointer</span>;</span><br><span class=\"line\">    <span class=\"selector-class\">.fa-arrow-alt-circle-up</span> &#123;</span><br><span class=\"line\">      <span class=\"attribute\">color</span>: $primary;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"jQuery-行為\"><a href=\"#jQuery-行為\" class=\"headerlink\" title=\"jQuery 行為\"></a>jQuery 行為</h3><p>點擊 <code>GoTop</code> 按鈕後，<code>html</code> 與 <code>body</code> 給予動畫效果，並且讓捲軸上方回到 0 的位置，時間為 0.6 秒。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">\".jq-goTop\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">  e.preventDefault();</span><br><span class=\"line\">  $(<span class=\"string\">\"html,body\"</span>).animate(</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      scrollTop: <span class=\"number\">0</span>,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"number\">600</span></span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"優化\"><a href=\"#優化\" class=\"headerlink\" title=\"優化\"></a>優化</h2><p>的確已經完成此功能，但在使用者體驗上一開始並不需要有 GoTop 的按鈕，而是要往下滑超過一個高度後才會顯示，</p>\n<p>所以 CSS 部分可以多加位移的語法，顯示與隱藏的部分都設定好，</p>\n<h3 id=\"CSS-樣式-1\"><a href=\"#CSS-樣式-1\" class=\"headerlink\" title=\"CSS 樣式\"></a>CSS 樣式</h3><figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\">//圖示水平移動位置</span><br><span class=\"line\"><span class=\"selector-tag\">transform</span>: <span class=\"selector-tag\">translateX</span>(0);</span><br><span class=\"line\"><span class=\"selector-tag\">transition</span>: <span class=\"selector-tag\">transform</span> 0<span class=\"selector-class\">.2s</span>;</span><br><span class=\"line\">//圖示隱藏</span><br><span class=\"line\">&amp;<span class=\"selector-class\">.hide</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateX</span>(<span class=\"number\">120%</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"JS-行為\"><a href=\"#JS-行為\" class=\"headerlink\" title=\"JS 行為\"></a>JS 行為</h3><p>JS 就是選擇整個瀏覽器，使用 scroll 函式，並下判斷，如果瀏覽器的頂點超過 200px，如果 <code>.goTop</code> 有 <code>.hide</code> 這個 Class，就執行切換 class，不然就增加 <code>.hide</code>。</p>\n<blockquote>\n<p><code>hasClass()</code> 方法檢查被選元素是否包含指定的 class。</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">$(<span class=\"built_in\">window</span>).scroll(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ($(<span class=\"built_in\">window</span>).scrollTop() &gt; <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ($(<span class=\"string\">\".goTop\"</span>).hasClass(<span class=\"string\">\"hide\"</span>)) &#123;</span><br><span class=\"line\">      $(<span class=\"string\">\".goTop\"</span>).toggleClass(<span class=\"string\">\"hide\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    $(<span class=\"string\">\".goTop\"</span>).addClass(<span class=\"string\">\"hide\"</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>codepen <a href=\"https://codepen.io/hnzxewqw/full/XWXBYvr\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/full/XWXBYvr</a></p>\n","categories":["jQuery"],"tags":["JavaScript","jQuery"]},{"title":"jQuery 筆記 - 二階層式摺疊選單設計","url":"/jQuery/20200713/3366691297/","content":"<p><img src=\"https://images.unsplash.com/photo-1507925921958-8a62f3d1a50d?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1355&q=80\" alt=\"list\"></p>\n<p>許多網站中會看到已經設定好的制式說明區，當中有條列是說明，並且可以點擊後有收闔的體驗，是採取二階層式的寫法。</p>\n<h2 id=\"HTML-架構\"><a href=\"#HTML-架構\" class=\"headerlink\" title=\"HTML 架構\"></a>HTML 架構</h2><p>可以看到有兩層 <code>ul li</code>，第一層是 <code>.cart</code>，第二層就包在第一層的 <code>li</code> 內，並且標題區可以使用 <code>a</code> 連結做點擊效果。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"cart\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>商家問道民國當天其。<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">          歌詞中央，專利循環獨特員工廠商管理員網遊就是我說經銷商老大，鎖定資本一級點頭進口群發一樣查詢靈魂模樣工具創新，內置統計，審核再說你想本次，專輯便宜魯蛇生態你怎麼背後很難一次當前楠雅工廠人體不停標誌，工程腦袋很大神話熱情不限請大家業務可惜讓你一切都，賓館那。</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">          各項產生大大顯然精選觀眾基地收入就是一般，從而演出優勢發言任務想要，或許主席有所興趣一旦，全體下來故事啟動就是作品望着遊戲不好生成新技術複製另外，隨便稱為組成，協議嚴格來源打了每次簽名身上那時發貼理論，農民一會貢獻我要沒什麼供應商，你看給我年代看法情感大。</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">          昨天論文投訴一口廣播帶來指揮不可以不願承認，發展互動結婚積極還沒有有限責任公司東西表示教育，不會說了樹林你怎麼為此形象實現這麼多上傳躺在軟體嘿嘿，幫助目的商家證明，用戶名本科，你們我們提示組織回來增強遵守控制，推坑王一半電視台商機，你在當地教學，離開天堂。</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"CSS-樣式\"><a href=\"#CSS-樣式\" class=\"headerlink\" title=\"CSS 樣式\"></a>CSS 樣式</h2><p>這邊比較重要的是同階層的寫法，因為 <code>ul li</code> 又包了一層 <code>ul li</code>，我要設定不同層的 <code>ul li</code> 可以使用 <code>&gt;</code> 指定為同層的元素，這樣網頁在找尋元素的時候就不會把所有相同的元素都選取起來。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.main</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">margin-top</span>: <span class=\"number\">2%</span>;</span><br><span class=\"line\">  .cart &#123;</span><br><span class=\"line\">    <span class=\"selector-tag\">background-color</span>: <span class=\"selector-id\">#fff</span>;</span><br><span class=\"line\">    &gt; <span class=\"selector-tag\">li</span> &#123;</span><br><span class=\"line\">      <span class=\"attribute\">padding</span>: <span class=\"number\">10px</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">      &gt; a &#123;</span><br><span class=\"line\">        color: $primary;</span><br><span class=\"line\">        <span class=\"selector-tag\">font-size</span>: 20<span class=\"selector-tag\">px</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"selector-tag\">font-weight</span>: <span class=\"selector-tag\">bold</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-tag\">ul</span> &#123;</span><br><span class=\"line\">      <span class=\"attribute\">margin-top</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">      p &#123;</span><br><span class=\"line\">        <span class=\"selector-tag\">line-height</span>: 1<span class=\"selector-class\">.5</span>;</span><br><span class=\"line\">        <span class=\"selector-tag\">font-size</span>: 16<span class=\"selector-tag\">px</span>;</span><br><span class=\"line\">        color: $text;</span><br><span class=\"line\">        <span class=\"selector-tag\">margin-bottom</span>: 10<span class=\"selector-tag\">px</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"jQuery-設定\"><a href=\"#jQuery-設定\" class=\"headerlink\" title=\"jQuery 設定\"></a>jQuery 設定</h2><p>希望讓選取第一個問題展開答案，但其他問題要收闔起來。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">$(<span class=\"built_in\">document</span>).ready(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">//找到同層元素</span></span><br><span class=\"line\">  $(<span class=\"string\">\".cart &gt; li &gt; a\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">event</span>) </span>&#123;</span><br><span class=\"line\">    event.preventDefault();</span><br><span class=\"line\">    <span class=\"comment\">//點擊 .cart 的第一層 a 連結，找到父層元素中的同階層內的子層 ul 元素，並讓其向上滑動</span></span><br><span class=\"line\">    $(<span class=\"keyword\">this</span>).parent().siblings().find(<span class=\"string\">\"ul\"</span>).slideUp();</span><br><span class=\"line\">    <span class=\"comment\">//點擊 .cart 的第一層 a 連結，找到父層元素的子層 ul 元素，切換 Slide 效果。</span></span><br><span class=\"line\">    $(<span class=\"keyword\">this</span>).parent().find(<span class=\"string\">\"ul\"</span>).slideToggle();</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<iframe height=\"600\" style=\"width: 100%;\"  src=\"https://codepen.io/hnzxewqw/embed/bGEjKOv?height=265&theme-id=light&default-tab=result\"></iframe>\n","categories":["jQuery"],"tags":["JavaScript","jQuery"]},{"title":"jQuery 筆記 - Animate.css 套件基本認識","url":"/jQuery/20200713/60669434/","content":"<p><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--wXW562Mw--/c_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000/https://res.cloudinary.com/practicaldev/image/fetch/s--jhppWMOQ--/c_imagga_scale%2Cf_auto%2Cfl_progressive%2Ch_420%2Cq_auto%2Cw_1000/https://dev-to-uploads.s3.amazonaws.com/i/cljgal8ylh31ignnilni.png\" alt=\"Animate.css\"></p>\n<p>安裝 Animate.css 套件，可以讓網頁動化效果更豐富，可使用 CSS 設定跟 JavaScirpt 控制。</p>\n<h2 id=\"安裝\"><a href=\"#安裝\" class=\"headerlink\" title=\"安裝\"></a>安裝</h2><p><strong>npm 安裝</strong></p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install animate.css --save</span><br></pre></td></tr></table></figure>\n\n<p><strong>yarn 安裝</strong></p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ yarn add animate.css</span><br></pre></td></tr></table></figure>\n\n<p><strong>載入 CDN</strong></p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">https://<span class=\"title\">cdnjs.cloudflare.com</span>/<span class=\"title\">ajax</span>/<span class=\"title\">libs</span>/<span class=\"title\">animate.css</span>/4.0.0/<span class=\"title\">animate.min.css</span></span></span><br></pre></td></tr></table></figure>\n\n<p>可以在<a href=\"https://animate.style/\" target=\"_blank\" rel=\"noopener\">官網</a>右側欄位看到很多動畫效果，點擊後可以直接在畫面預覽。</p>\n<blockquote>\n<p>4.0 版本後要加前綴詞 <code>animate__</code> ，後面底線是兩條。</p>\n</blockquote>\n<p>示範語法：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;h1 class=\"animate__animated animate__bounce\"&gt;An animated element&lt;/h1&gt;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"CSS-設定\"><a href=\"#CSS-設定\" class=\"headerlink\" title=\"CSS 設定\"></a>CSS 設定</h2><h3 id=\"使用-keyframes-設定\"><a href=\"#使用-keyframes-設定\" class=\"headerlink\" title=\"使用 @keyframes 設定\"></a>使用 @keyframes 設定</h3><figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.my-element</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: inline-block;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> <span class=\"number\">0.5rem</span>;</span><br><span class=\"line\">  //相關設定</span><br><span class=\"line\">  animation: bounce; //動畫效果名稱</span><br><span class=\"line\">  animation-duration: 2s; //要設定持續時間</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"CSS-變數自定義設定方式\"><a href=\"#CSS-變數自定義設定方式\" class=\"headerlink\" title=\"CSS 變數自定義設定方式\"></a>CSS 變數自定義設定方式</h3><figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\">//自己動畫持續時間設定</span><br><span class=\"line\"><span class=\"selector-class\">.animate__animated</span><span class=\"selector-class\">.animate__bounce</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">--animate-duration</span>: <span class=\"number\">2s</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">//全域動畫效果設定</span><br><span class=\"line\"><span class=\"selector-pseudo\">:root</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">--animate-duration</span>: <span class=\"number\">800ms</span>;</span><br><span class=\"line\">  <span class=\"attribute\">--animate-delay</span>: <span class=\"number\">0.9s</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"延遲設定\"><a href=\"#延遲設定\" class=\"headerlink\" title=\"延遲設定\"></a>延遲設定</h3><h4 id=\"可以直接在-HTML-設定\"><a href=\"#可以直接在-HTML-設定\" class=\"headerlink\" title=\"可以直接在 HTML 設定\"></a>可以直接在 HTML 設定</h4><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"animate__animated animate__bounce animate__faster\"</span>&gt;</span>Example<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>HTML 標籤設定與延遲預設值</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">animate__slow\t<span class=\"number\">2</span>s</span><br><span class=\"line\">animate__slower\t<span class=\"number\">3</span>s</span><br><span class=\"line\">animate__fast\t<span class=\"number\">800</span>ms</span><br><span class=\"line\">animate__faster\t<span class=\"number\">500</span>ms</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"在-CSS-設定\"><a href=\"#在-CSS-設定\" class=\"headerlink\" title=\"在 CSS 設定\"></a>在 CSS 設定</h4><figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\">//全域設定</span><br><span class=\"line\"><span class=\"selector-pseudo\">:root</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">--animate-duration</span>: <span class=\"number\">2s</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">//指定 class 達到特定時間效果</span><br><span class=\"line\"><span class=\"selector-class\">.my-element</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">--animate-duration</span>: <span class=\"number\">0.5s</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p><code>animate__animated</code> 有原本速度預設值為 1 秒。</p>\n</blockquote>\n<h2 id=\"JavaScript-設定\"><a href=\"#JavaScript-設定\" class=\"headerlink\" title=\"JavaScript 設定\"></a>JavaScript 設定</h2><p>透過控制 DOM 元素結合使用，</p>\n<h3 id=\"HTML\"><a href=\"#HTML\" class=\"headerlink\" title=\"HTML\"></a>HTML</h3><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btnGroup\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn jq-animation\"</span>&gt;</span>點擊我看動畫<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">class</span>=<span class=\"string\">\"text text3\"</span>&gt;</span>透過 JS 套用效果<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"jS-設定\"><a href=\"#jS-設定\" class=\"headerlink\" title=\"jS 設定\"></a>jS 設定</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">$(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  $(<span class=\"string\">\".jq-animation\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    $(<span class=\"string\">\".text3\"</span>).addClass(<span class=\"string\">\"animate__animated animate__backInLeft\"</span>);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  $(<span class=\"string\">\".text3\"</span>).on(<span class=\"string\">\"animationend\"</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 監聽當動畫結束後移除 class</span></span><br><span class=\"line\">    $(<span class=\"keyword\">this</span>).removeClass(<span class=\"string\">\"animate__animated animate__backInLeft\"</span>);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<iframe height=\"653\" style=\"width: 100%;\"  src=\"https://codepen.io/hnzxewqw/embed/BajPVqm?height=653&theme-id=light&default-tab=result\"></iframe>\n\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><ul>\n<li><a href=\"https://animate.style/#usage\" target=\"_blank\" rel=\"noopener\">Animate.CSS 官網</a></li>\n</ul>\n","categories":["jQuery"],"tags":["CSS","jQuery"]},{"title":"CSS 筆記 - 金魚切版系列:02-圖文互動","url":"/css/20200713/1211758427/","content":"<p><img src=\"https://i.imgur.com/jcBc5lM.jpg\" alt=\"pic\"></p>\n<p>這次筆記通用模板使用的圖文互動頁面，hover 效果會出現文字與一些動畫效果。</p>\n<h2 id=\"使用方法\"><a href=\"#使用方法\" class=\"headerlink\" title=\"使用方法\"></a>使用方法</h2><ul>\n<li>CSS absolute 絕對定位。</li>\n<li>CSS relative 相對定位。</li>\n<li>transition 動畫的做法。</li>\n<li>flex-direction 的原理。</li>\n</ul>\n<h2 id=\"HTML-架構\"><a href=\"#HTML-架構\" class=\"headerlink\" title=\"HTML 架構\"></a>HTML 架構</h2><p>用一個 <code>.wrap</code> 把 <code>.item</code> 包起來，再把要呈現的圖片與文字呈現在 <code>.item</code> 內，共有四個，只要架構卻人無誤，複製四個即可。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"wrap\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"https://picsum.photos/500/400?random=20\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"content\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>Amos 金魚系列 II<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>圖文互動卡片練習<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"SCSS-樣式\"><a href=\"#SCSS-樣式\" class=\"headerlink\" title=\"SCSS 樣式\"></a>SCSS 樣式</h2><h3 id=\"wrap-設定\"><a href=\"#wrap-設定\" class=\"headerlink\" title=\"wrap 設定\"></a>wrap 設定</h3><p>讓 <code>.wrap</code> 內的元素填滿橫幅，並且使其內元素用 <code>flex</code> 橫向排列並自動置中。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.wrap</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100vw</span>;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> auto;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"item-設定\"><a href=\"#item-設定\" class=\"headerlink\" title=\"item 設定\"></a>item 設定</h3><ul>\n<li>使 <code>.item</code> 內的元素平均寬度，因為有四個，所以設定為 25%，使圖片填滿 item 寬度 25% 的空間。</li>\n<li>圖片是行內元素，要使行內元素置中對齊可使用 <code>vertical-align: middle;</code>，並且圖片因為置中對齊後會在該元素下方出現莫名的多餘空間，使用此語法可以把該空間消除。<blockquote>\n<p>除了 baseline 外，都可以讓下面的空間消除。</p>\n</blockquote>\n</li>\n<li>使用絕對定位 <code>absolute</code> 讓 <code>.content</code> 的內容填滿整個 <code>item</code>，使四邊的距離都為 0，就會自動撐開四個角。</li>\n<li>相對位置 <code>relative</code> 的元素當然就是 <code>.item</code>。</li>\n<li><code>.content</code> 使用 <code>flex</code> 讓裡面的文字垂直置中對齊。</li>\n<li>opacity 透明度設定，使一開始文字為透明，寫入漸變效果，等等要對應設定 hover 後的效果。</li>\n<li>h2</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.item</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">25%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">  img &#123;</span><br><span class=\"line\">    <span class=\"selector-tag\">width</span>: 100%;</span><br><span class=\"line\">    //使圖片下方莫名空間消除</span><br><span class=\"line\">    <span class=\"selector-tag\">vertical-align</span>: <span class=\"selector-tag\">middle</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"selector-class\">.content</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">top</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"attribute\">bottom</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"attribute\">right</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"attribute\">left</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"attribute\">padding</span>: <span class=\"number\">0</span> <span class=\"number\">50px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">background</span>: <span class=\"built_in\">rgba</span>(#<span class=\"number\">000</span>, <span class=\"number\">0.6</span>);</span><br><span class=\"line\">    //垂直置中對齊</span><br><span class=\"line\">    <span class=\"selector-tag\">display</span>: <span class=\"selector-tag\">flex</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">justify-content</span>: <span class=\"selector-tag\">center</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">flex-direction</span>: <span class=\"selector-tag\">column</span>;</span><br><span class=\"line\">    //先文字一開始為透明</span><br><span class=\"line\">    <span class=\"selector-tag\">opacity</span>: 0;</span><br><span class=\"line\">    //透明漸變時間</span><br><span class=\"line\">    <span class=\"selector-tag\">transition</span>: <span class=\"selector-tag\">opacity</span> 0<span class=\"selector-class\">.6s</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">cursor</span>: <span class=\"selector-tag\">pointer</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"selector-tag\">h2</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"number\">#00eaff</span>;</span><br><span class=\"line\">    <span class=\"attribute\">font-size</span>: <span class=\"number\">32px</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"number\">#fff</span>;</span><br><span class=\"line\">    <span class=\"attribute\">padding</span>: <span class=\"number\">5px</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"attribute\">font-size</span>: <span class=\"number\">18px</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"hover-效果\"><a href=\"#hover-效果\" class=\"headerlink\" title=\"hover 效果\"></a>hover 效果</h3><p>可以建立一個習慣是誰被 hover ，誰做事情，那跟著老師的習慣也是一種學習，所以就父層 hover ，子層做事情。</p>\n<ul>\n<li><code>.item</code> 有 hover 效果時，<code>.content</code> 的透明效果變為顯示 <code>opacity:1</code>。這時互動就會出現了，在加上 transition 效果，讓 <code>opacity</code> 的時間為 <code>0.6s</code>，就會有漸變效果，視覺上也較自然。</li>\n<li></li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.item</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">25%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">  &amp;:hover &#123;</span><br><span class=\"line\">    <span class=\"selector-class\">.content</span> &#123;</span><br><span class=\"line\">      <span class=\"attribute\">opacity</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"selector-tag\">img</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">vertical-align</span>: middle;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"selector-class\">.content</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">    <span class=\"attribute\">top</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"attribute\">bottom</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"attribute\">right</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"attribute\">left</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"attribute\">padding</span>: <span class=\"number\">0</span> <span class=\"number\">50px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">background</span>: <span class=\"built_in\">rgba</span>(#<span class=\"number\">000</span>, <span class=\"number\">0.6</span>);</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">    <span class=\"attribute\">justify-content</span>: center;</span><br><span class=\"line\">    <span class=\"attribute\">flex-direction</span>: column;</span><br><span class=\"line\">    <span class=\"attribute\">opacity</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"attribute\">transition</span>: opacity <span class=\"number\">0.6s</span>;</span><br><span class=\"line\">    <span class=\"attribute\">cursor</span>: pointer;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"selector-tag\">h2</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"number\">#00eaff</span>;</span><br><span class=\"line\">    <span class=\"attribute\">font-size</span>: <span class=\"number\">32px</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"number\">#fff</span>;</span><br><span class=\"line\">    <span class=\"attribute\">padding</span>: <span class=\"number\">5px</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"attribute\">font-size</span>: <span class=\"number\">18px</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"使用偽元素讓網頁互動效果更豐富-after\"><a href=\"#使用偽元素讓網頁互動效果更豐富-after\" class=\"headerlink\" title=\"使用偽元素讓網頁互動效果更豐富 ::after\"></a>使用偽元素讓網頁互動效果更豐富 ::after</h3><p>偽元素的使用可讓網頁增加更多的互動效果，就算 HTML 上沒有該元素，透過偽元素可以做更多事情。</p>\n<ul>\n<li>要在 <code>h2</code> 下方加上一條橫線產生互動，這邊比較重要的 <code>transition</code> 後面指定的值可以單獨指定，跟前面指定 <code>opacity</code> 相同。</li>\n<li>並且指定在 <code>hover</code> 後的效果占滿 <code>.item</code> 內的寬度 100%。</li>\n<li>使 h2 底限用 transition 指定寬度漸變 0.5s，delay 0.3s。</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.item</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">25%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">  &amp;:hover &#123;</span><br><span class=\"line\">    <span class=\"selector-class\">.content</span> &#123;</span><br><span class=\"line\">      <span class=\"attribute\">opacity</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-tag\">h2</span><span class=\"selector-pseudo\">::after</span> &#123;</span><br><span class=\"line\">      <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  ... <span class=\"selector-tag\">h2</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"number\">#00eaff</span>;</span><br><span class=\"line\">    <span class=\"attribute\">font-size</span>: <span class=\"number\">32px</span>;</span><br><span class=\"line\">    &amp;::after &#123;</span><br><span class=\"line\">      <span class=\"selector-tag\">content</span>: \"\";</span><br><span class=\"line\">      <span class=\"selector-tag\">display</span>: <span class=\"selector-tag\">block</span>;</span><br><span class=\"line\">      <span class=\"selector-tag\">width</span>: 0;</span><br><span class=\"line\">      <span class=\"selector-tag\">height</span>: 2<span class=\"selector-tag\">px</span>;</span><br><span class=\"line\">      <span class=\"selector-tag\">margin</span>: 5<span class=\"selector-tag\">px</span> 0;</span><br><span class=\"line\">      <span class=\"selector-tag\">background-color</span>: <span class=\"selector-id\">#00eaff</span>;</span><br><span class=\"line\">      //使寬度漸變時間為 0.5s delay 0.3s</span><br><span class=\"line\">      <span class=\"selector-tag\">transition</span>: <span class=\"selector-tag\">width</span> 0<span class=\"selector-class\">.5s</span> 0<span class=\"selector-class\">.3s</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>這樣就完成啦!!</p>\n<p>Codepen <a href=\"https://codepen.io/hnzxewqw/full/bGEjKKa\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/full/bGEjKKa</a></p>\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><ul>\n<li><a href=\"https://ithelp.ithome.com.tw/articles/10216684\" target=\"_blank\" rel=\"noopener\">金魚都能懂的這個網頁畫面怎麼切 : 製作一個互動圖文卡片</a></li>\n<li><a href=\"https://wcc723.github.io/css/2013/09/22/css-pseudo-element/\" target=\"_blank\" rel=\"noopener\">CSS 沒有極限 - 別忘了偽元素</a></li>\n<li><a href=\"https://www.oxxostudio.tw/articles/201706/pseudo-element-1.html\" target=\"_blank\" rel=\"noopener\">CSS 偽元素 ( before 與 after )</a></li>\n<li><a href=\"https://www.w3schools.com/cssref/css3_pr_transition-delay.asp\" target=\"_blank\" rel=\"noopener\">CSS transition-delay Property</a></li>\n</ul>\n","categories":["CSS"],"tags":["CSS"]},{"title":"CSS 筆記 - 金魚切版系列:01-圖文滿版切法","url":"/css/20200713/3642958283/","content":"<p><img src=\"https://i.imgur.com/l5Q2Loq.jpg\" alt=\"pic\"></p>\n<p>這次要完成的切版如上圖，當中藏著幾個小技巧：</p>\n<ul>\n<li><a href=\"https://www.youtube.com/watch?v=WtjXBIyxhw8\" target=\"_blank\" rel=\"noopener\">CSS reset</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=TtvQsVjt9t8&feature=youtu.be\" target=\"_blank\" rel=\"noopener\">inline &amp; block</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=_nCBQ6AIzDU\" target=\"_blank\" rel=\"noopener\">flex-direction 的原理</a></li>\n<li>漸層色彩與多重背景撰寫方式(合體技)</li>\n<li>100vh 螢幕高度!</li>\n</ul>\n<h2 id=\"HTML-架構\"><a href=\"#HTML-架構\" class=\"headerlink\" title=\"HTML 架構\"></a>HTML 架構</h2><p>先確認架構正確了，再來寫 CSS 會更快速。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"banner\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"container\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"bannerText\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">        金魚系列-圖文滿版練習</span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">small</span>&gt;</span>跟著 AMOS 來切版<span class=\"tag\">&lt;/<span class=\"name\">small</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>使用到的技巧<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">        使用到 CSS reset，inline &amp; block ，flex-direction 的原理</span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\">        漸層色彩與多重背景撰寫方式，100vh 螢幕高度!</span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"SCSS\"><a href=\"#SCSS\" class=\"headerlink\" title=\"SCSS\"></a>SCSS</h2><h3 id=\"CSS-reset\"><a href=\"#CSS-reset\" class=\"headerlink\" title=\"CSS reset\"></a>CSS reset</h3><p>Amos 用這個方式就完成了 CSS reset (尖叫)!</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\">* &#123;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">list-style</span>: none;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"container\"><a href=\"#container\" class=\"headerlink\" title=\"container\"></a>container</h3><p>制定 container 的寬度，當中有一個 RWD 偷懶方式</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">  max-width: 1280px; //RWD 偷懶方式</span><br><span class=\"line\">  <span class=\"selector-tag\">height</span>: 100%;</span><br><span class=\"line\">  <span class=\"selector-tag\">margin</span>: 0 <span class=\"selector-tag\">auto</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"bannerText-文字排版\"><a href=\"#bannerText-文字排版\" class=\"headerlink\" title=\".bannerText 文字排版\"></a>.bannerText 文字排版</h3><p>再來處理文字排版，先不給色彩與細節，這邊僅確認排版。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.bannerText</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">  flex-direction: column; //主軸</span><br><span class=\"line\">  justify-content: center; //次軸</span><br><span class=\"line\">  <span class=\"selector-tag\">align-items</span>: <span class=\"selector-tag\">flex-start</span>;</span><br><span class=\"line\">  <span class=\"selector-tag\">h1</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">font-size</span>: <span class=\"number\">50px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">border-bottom</span>: <span class=\"number\">1px</span> solid <span class=\"number\">#000</span>;</span><br><span class=\"line\">    small &#123;</span><br><span class=\"line\">      <span class=\"selector-tag\">display</span>: <span class=\"selector-tag\">block</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"selector-tag\">h2</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">font-size</span>: <span class=\"number\">30px</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">font-size</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"banner-背景處理\"><a href=\"#banner-背景處理\" class=\"headerlink\" title=\"banner 背景處理\"></a>banner 背景處理</h3><p>再來設定 .banner 位置，</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.banner</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">100vh</span>;</span><br><span class=\"line\">  //背景縮寫技巧  漸層：(角度，背景色，第一個漸層色空間，第二個漸層色空間) background-position / 漸層寬高;</span><br><span class=\"line\">  background: linear-gradient(115deg, #f8d848 50%, transparent 50%) center center /</span><br><span class=\"line\">      100% 100%, //多重背景寫法  url(背景連結) background-position /圖片寬高</span><br><span class=\"line\">      url(\"https://images.unsplash.com/photo-1594046243098-0fceea9d451e?ixlib=rb-1.2.1&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;auto=format&amp;fit=crop&amp;w=1350&amp;q=80\")</span><br><span class=\"line\">      right center / auto 100%;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"selector-class\">.bannerText</span> &#123;</span><br><span class=\"line\">    ...;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>完成!!</p>\n<p>Codepen <a href=\"https://codepen.io/hnzxewqw/full/XWXBYEQ\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/full/XWXBYEQ</a></p>\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><ul>\n<li><a href=\"https://ithelp.ithome.com.tw/articles/10215601\" target=\"_blank\" rel=\"noopener\">金魚都能懂的這個網頁畫面怎麼切 : 圖文滿版區塊</a></li>\n<li><a href=\"https://www.youtube.com/watch?time_continue=1&v=rwTMBmnIHcY&feature=emb_logo\" target=\"_blank\" rel=\"noopener\">金魚都能懂的網頁切版 : 圖文滿版區塊 NO001 | 切版教學 | HTML 教學 | 網頁教學 | 網頁切版</a></li>\n</ul>\n","categories":["CSS"],"tags":["CSS"]},{"title":"CSS 筆記 - transition 與 Animation 基本認識","url":"/css/20200713/3105415432/","content":"<p><img src=\"https://images.unsplash.com/photo-1569701813229-33284b643e3c?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1388&q=80\" alt=\"動畫\"></p>\n<p>前端網頁有一個很重要的體驗就是動畫，有良好的動畫體驗，對於使用者的使用次數會提高，並增加好感度。</p>\n<h2 id=\"transition-漸變\"><a href=\"#transition-漸變\" class=\"headerlink\" title=\"transition 漸變\"></a>transition 漸變</h2><p>讓物件能在特定時間內流暢地執行一連串動作，而非生硬地突然改變。我比較常用在選單或網頁元素上，像是按鈕或是選單上。</p>\n<h3 id=\"語法\"><a href=\"#語法\" class=\"headerlink\" title=\"語法\"></a>語法</h3><p>主要是指出想要改變的屬性（Property）和時間（Duration）。</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">transition: <span class=\"title\">property</span> <span class=\"title\">duration</span> <span class=\"title\">timing</span>-<span class=\"title\">function</span> <span class=\"title\">delay</span>;</span></span><br></pre></td></tr></table></figure>\n\n<p><code>Property</code>：物件屬性，通常我都設定 <strong>all</strong>，例如：長、寬、位置、字體大小、背景顏色。</p>\n<p><code>Duration</code>：動畫時間。<strong>預設為 0</strong>，因此不指定就不產生效果。</p>\n<p><code>Timing Function</code>：動畫進行的速度曲線，例如：<strong>ease（預設值）</strong>、linear、ease-in、ease-out、ease-in-out 或 cubic-bezier(n,n,n,n)（自定義函數，範例）。關於自訂曲線可參考工具。<br><code>Delay</code>：延遲動畫開始的時間。</p>\n<p><strong>最重要的就是瀏覽器相容度，基本上主流瀏覽器都已經支援</strong></p>\n<p><img src=\"https://i.imgur.com/X2Fxtiw.png\" alt=\"CAN I USE\"></p>\n<p>可參考下方程式碼，</p>\n<iframe height=\"500\" style=\"width: 100%;\" scrolling=\"no\" title=\"transition\" src=\"https://codepen.io/hnzxewqw/embed/RwrBJjG?height=265&theme-id=light&default-tab=result\"></iframe>\n\n<p>開關</p>\n<iframe height=\"265\" style=\"width: 100%;\" src=\"https://codepen.io/hnzxewqw/embed/xxZJzLo?height=265&theme-id=light&default-tab=result\" ></iframe>\n\n<p>下拉選單旁邊的旋轉圖案</p>\n<iframe height=\"265\" style=\"width: 100%;\"  src=\"https://codepen.io/hnzxewqw/embed/OJMwEgm?height=265&theme-id=light&default-tab=result\"></iframe>\n\n<p>向上滑動選單，產品也滿常用到(有搭配 jQeury)</p>\n<iframe height=\"700\" style=\"width: 100%;\"  src=\"https://codepen.io/hnzxewqw/embed/zYrLaZe?height=543&theme-id=light&default-tab=result\"></iframe>\n\n<p>還有一個 transition 3D，我比較少用，可參考 AMOS 老師的<a href=\"http://csscoke.com/2014/07/25/css3-transition-3d-menu/\" target=\"_blank\" rel=\"noopener\">CSS3 Transition 3D 選單效果</a></p>\n<blockquote>\n<p>改天來透過 Amos 老師的這篇來筆記一下。</p>\n</blockquote>\n<h2 id=\"Animation-動畫\"><a href=\"#Animation-動畫\" class=\"headerlink\" title=\"Animation 動畫\"></a>Animation 動畫</h2><p>透過關鍵字 <code>@keyframes</code> 只使用 CSS 就可以完成動畫，不需要使用 JS，提高瀏覽器效能。</p>\n<p>主流瀏覽器一樣都有支援。</p>\n<p><img src=\"https://i.imgur.com/huK1Yza.png\" alt=\"animation\"></p>\n<h3 id=\"語法-1\"><a href=\"#語法-1\" class=\"headerlink\" title=\"語法\"></a>語法</h3><figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">animation: <span class=\"title\">name</span> <span class=\"title\">duration</span> <span class=\"title\">timing</span>-<span class=\"title\">function</span> <span class=\"title\">delay</span> <span class=\"title\">iteration</span>-<span class=\"title\">count</span> <span class=\"title\">direction</span> <span class=\"title\">fill</span>-<span class=\"title\">mode</span> <span class=\"title\">play</span>-<span class=\"title\">state</span>;</span></span><br></pre></td></tr></table></figure>\n\n<p>屬性說明：</p>\n<blockquote>\n<p><strong>Name</strong>：<code>@keyframes</code> 動畫名稱。<br><strong>Duration</strong>：動畫時間。<br><strong>Timing Function</strong>：動畫進行的速度曲線。<br><strong>Delay</strong>：延遲動畫開始的時間。<br><strong>Iteration Count</strong>：動畫重複次數。<br><strong>Direction</strong>：動畫播放方向。<br><strong>Fill Mode</strong>：動畫開始前後是否保持動畫設定。<br><strong>Play State</strong>：控制動畫播放狀態。</p>\n</blockquote>\n<h3 id=\"起手式\"><a href=\"#起手式\" class=\"headerlink\" title=\"起手式\"></a>起手式</h3><p>Amos 老師的<a href=\"https://youtu.be/H9xZ9mExrZk?t=587\" target=\"_blank\" rel=\"noopener\">影片說明</a>的很棒，<code>@keyframes</code> 是動畫劇本，<code>.className</code> 是演出劇本的角色，所以在要執行動畫的 <code>.ClassName</code> 中要加上 <code>animation: name;</code>，@keyframes 就放入要執行的效果，<code>from = 0%</code>，<code>to = 100%</code>，也就是開始與結束，給予數字時一定要加 <code>%</code>，不然無法執行動化效果。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.className</span>&#123;</span><br><span class=\"line\">...</span><br><span class=\"line\"><span class=\"selector-tag\">animation</span>: <span class=\"selector-tag\">name</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@keyframes</span> name &#123;</span><br><span class=\"line\"><span class=\"selector-tag\">from</span>&#123;</span><br><span class=\"line\">//動畫開始效果</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">to</span> &#123;</span><br><span class=\"line\">//動畫結束效果</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>寫一個簡單的練習</p>\n<iframe height=\"298\" style=\"width: 100%;\" src=\"https://codepen.io/hnzxewqw/embed/qBbyKqe?height=298&theme-id=light&default-tab=css,result\"></iframe>\n## 參考資料\n\n<p><a href=\"https://cythilya.github.io/2017/08/27/css-animation/\" target=\"_blank\" rel=\"noopener\">CSS3 Animation</a><br><a href=\"https://www.oxxostudio.tw/articles/201803/css-animation.html\" target=\"_blank\" rel=\"noopener\">完整解析 CSS 動畫 ( CSS Animation )</a></p>\n","categories":["CSS"],"tags":["CSS"]},{"title":"JS 筆記 - ES6 的 let 與 for 用法","url":"/javascript/20200713/3739155149/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/js-ES6.png?alt=media&token=0bf94bee-c7cd-4cc0-b619-45e5bf71d07b\" alt=\"ES6\"></p>\n<p>直接筆記一個基本的 ES6 的 let 搭配 for 迴圈的用法:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">3</span>; i++) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(i);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//結果會得到 0, 1, 2</span></span><br></pre></td></tr></table></figure>\n\n<p>但因為用 <code>var</code> 宣告變數，也是全域變數，無形也汙染到 <code>window</code>，所以在開發人員工具中輸入 <code>i</code>，也會得到 3。如果改成 <code>let</code> 變成只在<strong>區域</strong>中執行，就不會汙染到 <code>window</code>，所以就把 <code>var</code> 改成 <code>let</code>。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">3</span>; i++) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(i);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//結果一樣會得到 0, 1, 2</span></span><br></pre></td></tr></table></figure>\n\n<p>但在 console 裡輸入 <code>i</code> ，得到得到這個資訊:</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">Uncaught ReferenceError: i is <span class=\"keyword\">not</span> <span class=\"keyword\">defined</span></span><br><span class=\"line\"><span class=\"built_in\">at</span> &lt;anonymous&gt;:<span class=\"number\">1</span>:<span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n\n<p>就變找不到 <code>i</code> 了!</p>\n<h2 id=\"實務練習\"><a href=\"#實務練習\" class=\"headerlink\" title=\"實務練習\"></a>實務練習</h2><p>情境: 倘若有個數字清單，內含三個數字，在點擊事件後會彈跳該數字的號碼。<br>分析:</p>\n<blockquote>\n<ul>\n<li>數字清單，有三個數字。</li>\n<li>有點擊事件並觸發彈跳視窗。</li>\n<li>使用迴圈做選擇。</li>\n</ul>\n</blockquote>\n<p>建立一個 ul .list 的列表，並且 li 有三個數字，在點擊數字後，會顯示該數字號碼。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"list\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>1<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>2<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>3<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"var-會影響全域\"><a href=\"#var-會影響全域\" class=\"headerlink\" title=\"var 會影響全域\"></a>var 會影響全域</h2><p>一般是使用 <code>var</code> 宣告選取 <code>list</code> 裡面的 <code>li</code> ，並記錄其長度。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> list = <span class=\"built_in\">document</span>.querySelectorAll(<span class=\"string\">\".list li\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> listLen = list.length; <span class=\"comment\">//3</span></span><br></pre></td></tr></table></figure>\n\n<p>透過 <code>for</code> 回圈選出其值，在 <code>list</code> 後面加上<code>[i]</code>，就會去跑 <code>li</code> 的內容，並建立點擊監聽事件，執行 function 後會彈跳出該數字的內容，但因為迴圈是從 0 開始，所以 <code>alert</code> 內容要 <code>i+1</code>，才會正確顯示:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; listLen; i++) &#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">checkList</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    alert(i + <span class=\"number\">1</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  list[i].addEventListener(<span class=\"string\">\"click\"</span>, checkList, <span class=\"literal\">false</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>但是，結果卻不如預期。可以試試 Codepen: <a href=\"https://codepen.io/hnzxewqw/pen/wvamwZz\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/wvamwZz</a></p>\n<p>在點擊後，結果都會跳出 4，原因是 <code>var</code> 會影響全域，導致結果 <code>i</code> 的值等於 3，就會變成全部的 <code>i</code> 都會綁定成 3，所以結果怎麼點都是 3+1。</p>\n<h2 id=\"let-在區塊執行會重新綁定監聽事件\"><a href=\"#let-在區塊執行會重新綁定監聽事件\" class=\"headerlink\" title=\"let 在區塊執行會重新綁定監聽事件\"></a>let 在區塊執行會重新綁定監聽事件</h2><p>修正的方法就是把 <code>for</code> 裡面的 <code>var</code> 改成 <code>let</code>，就可以正確顯示出要的結果，原因是 for 用 <code>let</code> 宣告變數時，就只會在該區塊內執行，並每次跑迴圈都會重新綁定事件，所以結果就可以得到跟點擊的數字為相同效果。</p>\n<p>可以將上方 Codepen 中的 <code>var</code> 改成 <code>let</code> 試試看。</p>\n","categories":["JavaScript"],"tags":["JavaScript","ES6"]},{"title":"JS 筆記 - ES6 let 與 const 特性","url":"/javascript/20200713/1088942586/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/js-ES6.png?alt=media&token=0bf94bee-c7cd-4cc0-b619-45e5bf71d07b\" alt=\"ES6\"></p>\n<h2 id=\"let-與-const-宣告方式\"><a href=\"#let-與-const-宣告方式\" class=\"headerlink\" title=\"let 與 const 宣告方式\"></a>let 與 const 宣告方式</h2><p>在 ES6 中多了 <code>let</code> 跟 <code>const</code> 的變數宣告方式，而兩者都是宣告在區塊內的變數，現在我已經知道 let 是使用在 區塊中使用(也就是在大括號 <code>{}</code> 內)，用法的方式跟 <code>var</code> 一樣，只是不會汙染到全域，這相當重要。</p>\n<p>而 <code>const</code> 宣告變數主要是用來作<strong>唯讀</strong>，也就是不能變更的資料，例如: AJAX 的連結。</p>\n<p>下方有個簡單的例子：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> a = <span class=\"number\">1</span>;</span><br><span class=\"line\">a = <span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a); <span class=\"comment\">//2</span></span><br></pre></td></tr></table></figure>\n\n<p>這可以理解。如果換成 <code>const</code>，</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> a = <span class=\"number\">1</span>;</span><br><span class=\"line\">a = <span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a); <span class=\"comment\">//2</span></span><br></pre></td></tr></table></figure>\n\n<p>在開發人員工具，就會出現跳錯的訊息，</p>\n<p><code>Uncaught SyntaxError: Identifier &#39;a&#39; has already been declared</code></p>\n<p>所以只要是不能變更的資訊，就可以使用 <code>const</code> 來宣告。</p>\n<h2 id=\"鎖定-const-物件與陣列資料\"><a href=\"#鎖定-const-物件與陣列資料\" class=\"headerlink\" title=\"鎖定 const 物件與陣列資料\"></a>鎖定 const 物件與陣列資料</h2><p>但是用 <code>const</code> 宣告<strong>物件</strong>與<strong>陣列</strong>的資料時是<strong>可以</strong>改變其內容的，假設今天 <code>const</code> 一個物件，然後修改他，會發現內容的值變動了：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> obj = &#123;</span><br><span class=\"line\">  url: <span class=\"string\">\"http://xxx.com\"</span>,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">obj.url = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(obj.url); <span class=\"comment\">//1</span></span><br></pre></td></tr></table></figure>\n\n<p>倘若不希望使其資料變動，可以加上一段語法 <code>Object.freeze</code>，就可以鎖住資料，不會被修改。</p>\n<blockquote>\n<p>freeze: 凍結的意思</p>\n</blockquote>\n<p>程式碼的位置要放在物件或陣列資料的<strong>後方</strong>:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> obj = &#123;</span><br><span class=\"line\">  url: <span class=\"string\">\"http://xxx.com\"</span>,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"built_in\">Object</span>.freeze(obj); <span class=\"comment\">//將 obj 的資料或屬性鎖定，便不能修改</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(obj.url); <span class=\"comment\">//'http://xxx.com'</span></span><br><span class=\"line\">obj.url = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(obj.url); <span class=\"comment\">//'http://xxx.com'</span></span><br></pre></td></tr></table></figure>\n\n<p>陣列的鎖定資料語法也相同是 <code>Object.freeze</code></p>\n<h2 id=\"let-與-const-的共同特性\"><a href=\"#let-與-const-的共同特性\" class=\"headerlink\" title=\"let 與 const 的共同特性\"></a>let 與 const 的共同特性</h2><h3 id=\"沒有-Hoisting-向上提升的功能\"><a href=\"#沒有-Hoisting-向上提升的功能\" class=\"headerlink\" title=\"沒有 Hoisting 向上提升的功能\"></a>沒有 Hoisting 向上提升的功能</h3><p>使用 <code>var</code> 宣告變數的時候具備向上提升的功能，所以如果是這樣宣告，結果會如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(a); <span class=\"comment\">//undefinded</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a); <span class=\"comment\">//1</span></span><br></pre></td></tr></table></figure>\n\n<p>因為 <code>var</code> 有向上提升的功能，在 JavaScript 是從上讀取到下的方式，其實會變成這樣的讀取：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a; <span class=\"comment\">//尚未賦予 value</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a); <span class=\"comment\">//undefinded</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a); <span class=\"comment\">//1</span></span><br></pre></td></tr></table></figure>\n\n<p>但如果將 <code>var</code> 改成 <code>let</code> 或是 <code>const</code> 都會變成跳錯的資訊。</p>\n<p><code>Uncaught ReferenceError: Cannot access &#39;a&#39; before initialization</code></p>\n<h3 id=\"不能重複宣告變數\"><a href=\"#不能重複宣告變數\" class=\"headerlink\" title=\"不能重複宣告變數\"></a>不能重複宣告變數</h3><p>在 <code>var</code> 中可以重複宣告變數，並且後面會取代前面的 value：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> b = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> b = <span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(b); <span class=\"comment\">//2</span></span><br></pre></td></tr></table></figure>\n\n<p>但如果是 <code>let</code> 跟 <code>const</code> 就不能這樣使用，會變成跳錯的資訊：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> b = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> b = <span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(b);</span><br><span class=\"line\"><span class=\"comment\">//Uncaught SyntaxError: Identifier 'b' has already been declared</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"不會出現在全域變數中\"><a href=\"#不會出現在全域變數中\" class=\"headerlink\" title=\"不會出現在全域變數中\"></a>不會出現在全域變數中</h3><p>承上，因為 <code>let</code> 跟 <code>const</code> 只能在區塊中使用，所以在開發人員工具中輸入 <code>window.b</code> 或是 <code>this.b</code> 都不會找到 <code>b</code> 這個變數的值。</p>\n<h2 id=\"心得\"><a href=\"#心得\" class=\"headerlink\" title=\"心得\"></a>心得</h2><p>ES6 發明了 <code>let</code> 跟 <code>const</code> 這兩個變數宣告方式，就是解決了原本 <code>var</code> <strong>的宣告方式會汙染到全域變數</strong>，讓在不污染的前提下，可以做更好的資料管理與不必要的擔心。</p>\n","categories":["JavaScript"],"tags":["JavaScript","ES6"]},{"title":"JS 筆記 - ES6：縮寫用法","url":"/javascript/20200713/452216703/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/js-ES6.png?alt=media&token=0bf94bee-c7cd-4cc0-b619-45e5bf71d07b\" alt=\"ES6\"></p>\n<p>縮寫在撰寫 vue 的時候很常用到，來記錄一下。</p>\n<h2 id=\"物件的縮寫\"><a href=\"#物件的縮寫\" class=\"headerlink\" title=\"物件的縮寫\"></a>物件的縮寫</h2><p>下方有兩個物件資料，想要把兩個物件合併可以怎麼寫?</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> one = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> numbers = &#123;</span><br><span class=\"line\">  two: <span class=\"number\">2</span>,</span><br><span class=\"line\">  three: <span class=\"number\">3</span>,</span><br><span class=\"line\">  four: <span class=\"number\">4</span>,</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p>傳統的寫法會是在新宣告一個變數中，命名一個相同的名字，並把對應的變數名稱也放入物件中的值，程式碼如下:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> one = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> numbers = &#123;</span><br><span class=\"line\">  two: <span class=\"number\">2</span>,</span><br><span class=\"line\">  three: <span class=\"number\">3</span>,</span><br><span class=\"line\">  four: <span class=\"number\">4</span>,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> newObj = &#123;</span><br><span class=\"line\">  one: one,</span><br><span class=\"line\">  numbers: numbers,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(newObj);</span><br><span class=\"line\"><span class=\"comment\">//one: 1</span></span><br><span class=\"line\"><span class=\"comment\">//numbers: &#123;two: 2, three: 3, four: 4&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>ES6 中如果屬性與之前相符，就可以省略值的內容，就可以變這樣寫：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> one = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> numbers = &#123;</span><br><span class=\"line\">  two: <span class=\"number\">2</span>,</span><br><span class=\"line\">  three: <span class=\"number\">3</span>,</span><br><span class=\"line\">  four: <span class=\"number\">4</span>,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> newObj = &#123;</span><br><span class=\"line\">  one,</span><br><span class=\"line\">  numbers,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(newObj);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"物件函式的縮寫\"><a href=\"#物件函式的縮寫\" class=\"headerlink\" title=\"物件函式的縮寫\"></a>物件函式的縮寫</h2><p>原物件函式如下:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> newObj = &#123;</span><br><span class=\"line\">  shortfun: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"I am a function\"</span>);</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p>縮寫後：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> newObj = &#123;</span><br><span class=\"line\">  shortfun() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"I am a function\"</span>);</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>此縮寫與箭頭函式結果是不同的，不可亂用。</p>\n</blockquote>\n<h2 id=\"搭配解構賦值使用縮寫\"><a href=\"#搭配解構賦值使用縮寫\" class=\"headerlink\" title=\"搭配解構賦值使用縮寫\"></a>搭配解構賦值使用縮寫</h2><ul>\n<li>將以下物件指向賦予的另一個物件上，並避免傳參考</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> team = &#123;</span><br><span class=\"line\">  teamA: &#123;</span><br><span class=\"line\">    name: <span class=\"string\">\"mike\"</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  teamB: &#123;</span><br><span class=\"line\">    name: <span class=\"string\">\"alex\"</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  teamC: &#123;</span><br><span class=\"line\">    name: <span class=\"string\">\"johnson\"</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> newTeam = &#123;</span><br><span class=\"line\">  ...team,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">newTeam.shoot = <span class=\"string\">\"pippen\"</span>;</span><br><span class=\"line\"><span class=\"comment\">//teamA: &#123;name: \"mike\"&#125;</span></span><br><span class=\"line\"><span class=\"comment\">//teamB: &#123;name: \"alex\"&#125;</span></span><br><span class=\"line\"><span class=\"comment\">//teamC: &#123;name: \"johnson\"&#125;</span></span><br><span class=\"line\"><span class=\"comment\">//shoot: \"pippen\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(newTeam, team);</span><br><span class=\"line\"><span class=\"comment\">//teamA: &#123;name: \"mike\"&#125;</span></span><br><span class=\"line\"><span class=\"comment\">//teamB: &#123;name: \"alex\"&#125;</span></span><br><span class=\"line\"><span class=\"comment\">//teamC: &#123;name: \"johnson\"&#125;</span></span><br></pre></td></tr></table></figure>\n","categories":["JavaScript"],"tags":["JavaScript","ES6"]},{"title":"JS 筆記 - ES6：解構賦值","url":"/javascript/20200713/1404176552/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/js-ES6.png?alt=media&token=0bf94bee-c7cd-4cc0-b619-45e5bf71d07b\" alt=\"ES6\"></p>\n<h2 id=\"基本解構賦值的概念\"><a href=\"#基本解構賦值的概念\" class=\"headerlink\" title=\"基本解構賦值的概念\"></a>基本解構賦值的概念</h2><p>下方有一陣列資料：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> numbers = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>];</span><br><span class=\"line\"><span class=\"keyword\">let</span> one = numbers[<span class=\"number\">0</span>];</span><br><span class=\"line\"><span class=\"keyword\">let</span> two = numbers[<span class=\"number\">1</span>];</span><br><span class=\"line\"><span class=\"keyword\">let</span> three = numbers[<span class=\"number\">3</span>];</span><br></pre></td></tr></table></figure>\n\n<p>通常取得陣列資料會是這樣，透過 ES6 的寫法可以變得更簡短。</p>\n<p>首先，宣告一個空陣列等於目前的陣列資料，使其鏡射到空陣列中：</p>\n<p><code>let [] = number;</code></p>\n<blockquote>\n<p>雖是鏡射，但並非順序顛倒，只是將資料放入到新宣告的空陣列中。</p>\n</blockquote>\n<p>並且把對應的變數放入空陣列中，並透過 console.log 查詢結果。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> numbers = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>];</span><br><span class=\"line\"><span class=\"keyword\">let</span> [one, two, three, four, five] = numbers;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(one, two, three, four, five); <span class=\"comment\">// 1, 2, 3, 4, 5</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"當變數與資料數量不同時\"><a href=\"#當變數與資料數量不同時\" class=\"headerlink\" title=\"當變數與資料數量不同時\"></a>當變數與資料數量不同時</h3><p>若今天要跳過中間的變數取得值，可以這樣寫。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> numbers = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>];</span><br><span class=\"line\"><span class=\"keyword\">let</span> [one, two, , four, five] = numbers; <span class=\"comment\">//跳過的變數要留下相對的位置</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(one, two, four, five); <span class=\"comment\">// 1 2 4 5</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"交換兩個變數的內容\"><a href=\"#交換兩個變數的內容\" class=\"headerlink\" title=\"交換兩個變數的內容\"></a>交換兩個變數的內容</h3><p>傳統寫法要交換兩個變數的資料是相當複雜的，要先宣告第三個變數再進行交換，但透過解構賦值的特性，是可以同時兩個變數的資料內容。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> one = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> two = <span class=\"number\">2</span>;</span><br><span class=\"line\">[one, two] = [two, one];</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(one, two); <span class=\"comment\">//2, 1</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"拆解字元到單一變數上\"><a href=\"#拆解字元到單一變數上\" class=\"headerlink\" title=\"拆解字元到單一變數上\"></a>拆解字元到單一變數上</h3><p>宣告一個變數裡面是一個字串，透過宣告陣列等於字串後，就會把字元相對拆解到對應的陣列資料中。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> str = <span class=\"string\">\"我要寫程式\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> [a, b, c, d, e] = str;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a, b, c, d, e); <span class=\"comment\">//我 要 寫 程 式</span></span><br></pre></td></tr></table></figure>\n\n<p>按照第一個解構賦值的概念，如果把 c 移掉，就會少掉 c 的對應字元。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> str = <span class=\"string\">\"我要寫程式\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> [a, b, c, d, e] = str;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a, b, d, e); <span class=\"comment\">//我 要 程 式</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"物件的解構賦值\"><a href=\"#物件的解構賦值\" class=\"headerlink\" title=\"物件的解構賦值\"></a>物件的解構賦值</h2><p>物件的解構賦值可以透過宣告一個物件，並把資料屬性帶入，結果為物件本身，就可以取出該物件相對的值。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> family = &#123;</span><br><span class=\"line\">  dad: <span class=\"string\">\"爸爸\"</span>,</span><br><span class=\"line\">  mom: <span class=\"string\">\"媽媽\"</span>,</span><br><span class=\"line\">  me: <span class=\"string\">\"我\"</span>,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">let</span> &#123; dad &#125; = family;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(dad); <span class=\"comment\">//爸爸</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"取出物件的一個值，並附在新的變數名稱上\"><a href=\"#取出物件的一個值，並附在新的變數名稱上\" class=\"headerlink\" title=\"取出物件的一個值，並附在新的變數名稱上\"></a>取出物件的一個值，並附在新的變數名稱上</h3><p>延續上方範例，</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> family = &#123;</span><br><span class=\"line\">  dad: <span class=\"string\">\"爸爸\"</span>,</span><br><span class=\"line\">  mom: <span class=\"string\">\"媽媽\"</span>,</span><br><span class=\"line\">  me: <span class=\"string\">\"我\"</span>,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">let</span> &#123; <span class=\"attr\">dad</span>: newDad &#125; = family;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(dad, newDad); <span class=\"comment\">//爸爸</span></span><br></pre></td></tr></table></figure>\n\n<p>物件內原本的屬性(dad)，給他一個新的變數(newDad)，console.log(dad)時，就會發現原先的屬性已經找不到，已經被新宣告的變數取代。</p>\n<h3 id=\"預設值\"><a href=\"#預設值\" class=\"headerlink\" title=\"預設值\"></a>預設值</h3><p>下方範例宣告一個陣列有設定好的資料，後面會等於一個新的陣列，但因為只有一個值，所以只會替換掉第一個設定好的值，第二個仍然會維持預設值。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> [tim = <span class=\"string\">\"提姆\"</span>, joshua = <span class=\"string\">\"約約\"</span>] = [<span class=\"string\">\"媽媽\"</span>];</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(tim, joshua); <span class=\"comment\">//媽媽 約約</span></span><br></pre></td></tr></table></figure>\n","categories":["JavaScript"],"tags":["JavaScript","ES6"]},{"title":"JS 筆記 - 認識 ES6","url":"/javascript/20200713/2533085867/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/js-ES6.png?alt=media&token=0bf94bee-c7cd-4cc0-b619-45e5bf71d07b\" alt=\"ES6\"></p>\n<h2 id=\"什麼是-ES6\"><a href=\"#什麼是-ES6\" class=\"headerlink\" title=\"什麼是 ES6\"></a>什麼是 ES6</h2><p>JavaScript 所採用的標準是 ECMAScript，自 2012 年起，所有現代的瀏覽器均已全面支援 ECMAScript 5.1。較老舊的瀏覽器最少也會支援 ECMAScript 3。ECMA International 於 2015 年 6 月 17 日發布第六版的 ECMAScript，其正式名稱是 ECMAScript 2015，原先被稱作 ECMAScript 6 或 ES6。</p>\n<p>但 ES6 語法依然還有瀏覽器不支援，所以還會利用 <a href=\"https://babeljs.io/\" target=\"_blank\" rel=\"noopener\">BABEL</a> 做編譯，但 ES6 在開發上的確會省下不少時間，而且編輯器外掛直接可以安裝 BABEL，是提升 JS 程式碼品質的最佳利器!</p>\n<h2 id=\"let、const\"><a href=\"#let、const\" class=\"headerlink\" title=\"let、const\"></a>let、const</h2><p>let、const 是 ES6 之後加入的用法，其作用的範圍跟 var 有些差異。</p>\n<ul>\n<li>let 與 const 是區塊作用域(block scope)，區塊就是在大括號內 { } 。</li>\n<li>var 是函式作用域(function scope)。</li>\n</ul>\n<h3 id=\"let-跟-var-的不同\"><a href=\"#let-跟-var-的不同\" class=\"headerlink\" title=\"let 跟 var 的不同\"></a>let 跟 var 的不同</h3><p>let 可以宣告只能在目前區塊、階段或表達式中作用的變數。而 var 則是定義了一個全域變數，或是在整個 function 而不管該區塊範圍。宣告 let 的作用範圍是它們被定義的區塊，以及該區塊包含的子區塊。這樣看起來功能跟 var 很相似。主要不同的地方在於 var 作用範圍是「整個」function：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">varTest</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> a = <span class=\"number\">1</span>;</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> a = <span class=\"number\">2</span>; <span class=\"comment\">// 這裡的 a 是一樣的，會改變整個 function 的 a</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(a); <span class=\"comment\">// 2</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(a); <span class=\"comment\">// 2</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">letTest</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> b = <span class=\"number\">1</span>;</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> b = <span class=\"number\">2</span>; <span class=\"comment\">// 這裡的 b 是不同的，只會作用在這層 if 區塊中</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(b); <span class=\"comment\">// 2</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(b); <span class=\"comment\">// 1</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>在上列例子裡的最前行 let 和 var 不同，let 並不會在全域物件中建立變數。舉例來說：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> x = <span class=\"string\">\"global\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> y = <span class=\"string\">\"global\"</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.x); <span class=\"comment\">// \"global\"</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.y); <span class=\"comment\">// undefined</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"const\"><a href=\"#const\" class=\"headerlink\" title=\"const\"></a>const</h3><p>const 宣告的是常數，英文全名是: Constants，常數在被宣告時就務必要指定給值，不然會產生錯誤。</p>\n<blockquote>\n<p>常數是不可再指定(can’t re-assignment)的。</p>\n</blockquote>\n<p>const 一定要帶值，不帶值會跳錯。因為 const 在宣告時必須給定值，並且不能再被更改，這可以有效降低出現錯誤的機會。如果是需要變更的數值則改用作用範圍較小的 let 做宣告，來減少錯誤出現的機率，Ex: for 迴圈。</p>\n<p>在 ES6 當中會首推使用 const，避免汙染到全域變數，並且給予值之後，比較不會因為輸入錯誤關係而跳錯，回頭找不到 BUG，如果使用 funciton 或是 for 迴圈，可以使用 let，總之，盡量使用 const 跟 let 代替 var 就是了！</p>\n<p>如果真的要使用 var 宣告變數，還是可以，如果在許多的 function 中會使用到該變數的內容，還是可以使用 var 做宣告，但還是會建議在各函式中使用 let，會比較好維護！</p>\n<hr>\n<h2 id=\"參考文章\"><a href=\"#參考文章\" class=\"headerlink\" title=\"參考文章:\"></a>參考文章:</h2><ul>\n<li><a href=\"https://developer.mozilla.org/zh-TW/docs/Web/JavaScript\" target=\"_blank\" rel=\"noopener\">JavaScript MDN</a></li>\n<li><a href=\"https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Statements/let\" target=\"_blank\" rel=\"noopener\">let MDN</a></li>\n<li><a href=\"https://www.iware.com.tw/blog-JavaScript%20%E5%AE%A3%E5%91%8A:%20var%E3%80%81let%E3%80%81const.html\" target=\"_blank\" rel=\"noopener\">JavaScript 宣告: var、let、const</a></li>\n</ul>\n","categories":["JavaScript"],"tags":["JavaScript","ES6"]},{"title":"CSS 筆記 - Loader 的使用","url":"/css/20200711/1366382220/","content":"<p><img src=\"https://images.unsplash.com/photo-1501139083538-0139583c060f?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1350&q=80\" alt=\"loader\"></p>\n<p>過場等待的 loader 非常常使用，為了就是在讓使用者等待時，有個過場特效，不讓使用者以為頁面壞掉或是無聊，這在遊戲介面特別常看到，也讓使用者體驗加分，這次記錄兩個簡單的 loader 的寫法。</p>\n<p>本次使用 <a href=\"https://connoratherton.com/loaders\" target=\"_blank\" rel=\"noopener\">Loaders.css 套件</a></p>\n<h2 id=\"起手式\"><a href=\"#起手式\" class=\"headerlink\" title=\"起手式\"></a>起手式</h2><p>載入非常簡單，<a href=\"https://github.com/ConnorAtherton/loaders.css\" target=\"_blank\" rel=\"noopener\">官方 GitHub</a> 有完整說明與使用方法，這邊簡單說明一下，</p>\n<h3 id=\"安裝方法\"><a href=\"#安裝方法\" class=\"headerlink\" title=\"安裝方法\"></a>安裝方法</h3><p><strong>npm</strong></p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm i --save loaders.css</span><br></pre></td></tr></table></figure>\n\n<p><strong>bower</strong></p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">bower install loaders.css</span><br></pre></td></tr></table></figure>\n\n<p><strong>CDN</strong>(僅建議練習或開發時使用，正式上線建議下載使用)</p>\n<h4 id=\"css\"><a href=\"#css\" class=\"headerlink\" title=\"css\"></a>css</h4><figure class=\"highlight\"><table><tr><td class=\"code\"><pre><span class=\"line\">https: //cdnjs.cloudflare.com/ajax/libs/loaders.css/0.1.2/loaders.min.css;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"javascript\"><a href=\"#javascript\" class=\"headerlink\" title=\"javascript\"></a>javascript</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">https:<span class=\"comment\">//cdnjs.cloudflare.com/ajax/libs/loaders.css/0.1.2/loaders.css.js</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"開始使用-Loader-css\"><a href=\"#開始使用-Loader-css\" class=\"headerlink\" title=\"開始使用 Loader.css\"></a>開始使用 Loader.css</h3><p>在文件中載入相關的 css/js 之後，只需要加入以下 HTML</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"loader-inner ball-pulse\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><code>loader-inner</code> 這個 class 本身沒有意義，只是告訴 JavaScript 要使用這個 <code>ball-pulse</code> 的動畫效果，官網上還有更多範例，以此範例來說，每個圖示中的白色小點都是一個 <code>&lt;div&gt;</code> 標籤，在外層的 <code>&lt;div&gt;</code> 裡面還需要塞入三個 <code>&lt;div&gt;</code> 才行，如果是 <code>ball-spin-fade-loader</code> 就要塞入 8 個…</p>\n<h3 id=\"javascript-語法\"><a href=\"#javascript-語法\" class=\"headerlink\" title=\"javascript 語法\"></a>javascript 語法</h3><p>此套件是一個 jQuery plugin，因此要使用前還需要先載入 jQuery 才行。載入後我們可以加入以下 JavaScript 程式碼，</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">\".loader-inner\"</span>).loaders();</span><br></pre></td></tr></table></figure>\n\n<p>這時 <code>loader-inner</code> 就會告訴 JS 抓到這個 class，後啟用 <code>loaders()</code>，這時就看 class 狀況要加入多少個 <code>&lt;div&gt;</code>，若要把 <code>loader-inner</code> 改成 <code>loader-ironman</code> ，只要 JavaScript 跟著變動就可以了。</p>\n<iframe height=\"265\" style=\"width: 100%;\"  src=\"https://codepen.io/hnzxewqw/embed/zYraRvX?height=265&theme-id=light&default-tab=result\" ></iframe>\n\n<h2 id=\"僅使用-CSS-Animation-達到效果的寫法\"><a href=\"#僅使用-CSS-Animation-達到效果的寫法\" class=\"headerlink\" title=\"僅使用 CSS Animation 達到效果的寫法\"></a>僅使用 CSS Animation 達到效果的寫法</h2><p>這是載入套件樣式，結合 <code>@keyframes</code> 的語法，透過 codepen 可以看到在 <code>.loader</code> 的地方加上，</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">animation</span>: <span class=\"selector-tag\">closeLoading</span> 3<span class=\"selector-tag\">s</span> 1 <span class=\"selector-tag\">ease-out</span> <span class=\"selector-tag\">forwards</span>;</span><br></pre></td></tr></table></figure>\n\n<p>順序為：</p>\n<ul>\n<li><code>animation-name</code>:closeLoading; //動畫名稱</li>\n<li><code>animation-duration</code>:3s; //持續時間</li>\n<li><code>animation-iteration-count</code>: 1; //動畫播放次數，預設 1。<blockquote>\n<p>其他還有 infinite(無限)。</p>\n</blockquote>\n</li>\n<li><code>animation-timing-function</code>:ease-out; //動畫加速度函式，預設 ease。<blockquote>\n<p>還有： linear、ease-in、ease-out、ease-in-out、step-start、step-end、steps(int,start/end)、cubic-bezier(n,n,n,n)。</p>\n</blockquote>\n</li>\n<li><code>animation-fill-mode:forwards</code>; //動畫播放前後模式，預設 none。<blockquote>\n<p>其他還有 forwards、backwards、both。</p>\n</blockquote>\n</li>\n</ul>\n<p>animation 一定要搭配 <code>@keyframes</code> 的方式，</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@keyframes</span> closeLoading &#123;</span><br><span class=\"line\">  0% &#123;</span><br><span class=\"line\">    <span class=\"attribute\">opacity</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  50% &#123;</span><br><span class=\"line\">    <span class=\"attribute\">opacity</span>: <span class=\"number\">0.5</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  100% &#123;</span><br><span class=\"line\">    <span class=\"attribute\">opacity</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<iframe height=\"564\" style=\"width: 100%;\"  src=\"https://codepen.io/hnzxewqw/embed/NWxzyNX?height=564&theme-id=light&default-tab=result\"></iframe>\n\n<h2 id=\"搭配-jQuery-完成的寫法\"><a href=\"#搭配-jQuery-完成的寫法\" class=\"headerlink\" title=\"搭配 jQuery 完成的寫法\"></a>搭配 jQuery 完成的寫法</h2><p>另外這個就是用 JS 的方式控制出現的時間，既然提到時間差，就會想到 setTimeout，所以就加入這段，</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//loader 的淡出時間</span></span><br><span class=\"line\">$(<span class=\"string\">\".loader-inner\"</span>).loaders();</span><br><span class=\"line\">setTimeout(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  $(<span class=\"string\">\".loading\"</span>).fadeOut(<span class=\"number\">600</span>);</span><br><span class=\"line\">&#125;, <span class=\"number\">1600</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//box 的淡入時間</span></span><br><span class=\"line\">setTimeout(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  $(<span class=\"string\">\".box\"</span>).fadeIn(<span class=\"number\">800</span>);</span><br><span class=\"line\">&#125;, <span class=\"number\">2000</span>);</span><br></pre></td></tr></table></figure>\n\n<iframe height=\"546\" style=\"width: 100%;\"  src=\"https://codepen.io/hnzxewqw/embed/XWXYZdQ?height=546&theme-id=light&default-tab=result\" ></iframe>\n\n<h2 id=\"結語\"><a href=\"#結語\" class=\"headerlink\" title=\"結語\"></a>結語</h2><p>感謝六角學院的學長姐在 slack 的支援!!</p>\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><ul>\n<li><a href=\"https://www.oxxostudio.tw/articles/201803/css-animation.html\" target=\"_blank\" rel=\"noopener\">完整解析 CSS 動畫 ( CSS Animation )</a></li>\n<li><a href=\"https://github.com/ConnorAtherton/loaders.css\" target=\"_blank\" rel=\"noopener\">loaders.css GitHub</a></li>\n</ul>\n","categories":["CSS"],"tags":["CSS"]},{"title":"jQuery 筆記 - 常用的收闔問題選單","url":"/jQuery/20200711/564773378/","content":"<p><img src=\"https://images.unsplash.com/photo-1484069560501-87d72b0c3669?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1350&q=80\" alt=\"question\"></p>\n<p>這次紀錄許多網頁會做的制式問題收闔效果選單，直接看程式碼：</p>\n<h2 id=\"HTML-架構\"><a href=\"#HTML-架構\" class=\"headerlink\" title=\"HTML 架構\"></a>HTML 架構</h2><p>共有三個 <code>&lt;div&gt;</code> 標籤裡頭放了問題跟回覆文字，標題部分如果要讓 SEO 搜尋方便，加上 h2 標籤是不錯的技巧。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"wrap\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"questionList\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"question\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>領域大會，好友竟然。<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>並不是事故，股份有限公司，男生諾基亞漂。<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"question\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>錯誤農業改造，立刻表情，您可以採取，時。<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>所有人傢俱韓國一半，環境保存不能下載眼神，國務院對付權力休。<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"question\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>女孩反正表演相應大家，戀愛如。<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">        不能照顧也可輕鬆逐漸效率故事機場百度，權益精靈回頭瀏覽醫療激動一年，大門完成所。</span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"CSS-樣式\"><a href=\"#CSS-樣式\" class=\"headerlink\" title=\"CSS 樣式\"></a>CSS 樣式</h2><p>顏色部分因為有做變數，所以可以再看 codepen，然而最重要，也是這篇練習最長的一個樣式，最需要注意的地方是在 <code>.question</code> 的這個地方，可以看到的是我要在 <code>h2</code> 上有行為( <code>hover</code> 跟 <code>active</code>)，所已是要加在這裡，而不是加在 <code>.question</code> 上，原因 <code>.question</code> 會包含到 <code>p</code> 元素，但那並不是我要做的效果。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.question</span> &#123;</span><br><span class=\"line\">  h2 &#123;</span><br><span class=\"line\">    color: $primary;</span><br><span class=\"line\">    border: 1px solid $primary;</span><br><span class=\"line\">    <span class=\"selector-tag\">padding</span>: 10<span class=\"selector-tag\">px</span> 5<span class=\"selector-tag\">px</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">margin-bottom</span>: 10<span class=\"selector-tag\">px</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">margin-top</span>: 10<span class=\"selector-tag\">px</span>;</span><br><span class=\"line\">    &amp;<span class=\"selector-pseudo\">:hover</span> &#123;</span><br><span class=\"line\">      background-color: $primary; // hover 效果背景換色</span><br><span class=\"line\">      color: $white; //hover 效果字體換色</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    &amp;<span class=\"selector-class\">.active</span> &#123;</span><br><span class=\"line\">      p &#123;</span><br><span class=\"line\">        display: block; //點擊 h2 後顯示</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">    display: none; //預設畫面為隱藏</span><br><span class=\"line\">    <span class=\"selector-tag\">line-height</span>: 1<span class=\"selector-class\">.5</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"jQuery-行為\"><a href=\"#jQuery-行為\" class=\"headerlink\" title=\"jQuery 行為\"></a>jQuery 行為</h2><p>步驟寫於下方註解。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">\".question h2\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">  e.preventDefault();</span><br><span class=\"line\">  <span class=\"comment\">//在 h2 上動態新增 class</span></span><br><span class=\"line\">  $(<span class=\"keyword\">this</span>).toggleClass(<span class=\"string\">\"active\"</span>);</span><br><span class=\"line\">  <span class=\"comment\">//h2 在父層元素中，找到 p 元素，並且給它滑動效果</span></span><br><span class=\"line\">  $(<span class=\"keyword\">this</span>).parent().find(<span class=\"string\">\"p\"</span>).slideToggle();</span><br><span class=\"line\">  <span class=\"comment\">//h2 在父層 .question 元素中，找到其他 .question 同層元素，再找到該同層元素的 p 標籤，並向上收闔</span></span><br><span class=\"line\">  $(<span class=\"keyword\">this</span>).parent().siblings().find(<span class=\"string\">\"p\"</span>).slideUp();</span><br><span class=\"line\">  <span class=\"comment\">//h2 在父層 .question 元素中，找到其他 .question 同層元素，再找到該同層元素的 h2 標籤，並動態移除 class</span></span><br><span class=\"line\">  $(<span class=\"keyword\">this</span>).parent().siblings().find(<span class=\"string\">\"h2\"</span>).removeClass(<span class=\"string\">\"active\"</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<iframe height=\"314\" style=\"width: 100%;\"  src=\"https://codepen.io/hnzxewqw/embed/bGEKLdo?height=314&theme-id=light&default-tab=result\" ></iframe>\n\n<p>參考資料：</p>\n<ul>\n<li><a href=\"https://wp-valley.com/html-headings\" target=\"_blank\" rel=\"noopener\">HTML 標題語法 h1 至 h6 的使用原則和 SEO 的影響因素</a></li>\n</ul>\n","categories":["jQuery"],"tags":["jQuery"]},{"title":"JS 筆記 - innerHTML 與 for 迴圈的使用","url":"/javascript/20200709/3285756052/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/JavaScript%20note-01.jpg?alt=media&token=7bee0261-72ac-4de4-9f5a-f39d58735b7d\" alt=\"JavaScript Note\"></p>\n<h2 id=\"物件資料\"><a href=\"#物件資料\" class=\"headerlink\" title=\"物件資料\"></a>物件資料</h2><p>這次記錄透過 for 迴圈篩選出資料後，渲染在網頁上，未來 for 迴圈也會很常篩選 JSON 的資料內容，這次的資料如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> data = [</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    team: <span class=\"string\">\"bulls\"</span>,</span><br><span class=\"line\">    name: <span class=\"string\">\"Jordan\"</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    team: <span class=\"string\">\"lakers\"</span>,</span><br><span class=\"line\">    name: <span class=\"string\">\"Bryant\"</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">];</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"HTML-架構\"><a href=\"#HTML-架構\" class=\"headerlink\" title=\"HTML 架構\"></a>HTML 架構</h2><p>這次要透過 for 迴圈要找出每一隊球員的名字，然後渲染在網頁上，這次 html 的內容有設定主題，如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>每個球隊的球員名字<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"list\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"綁定元素與取得資料長度\"><a href=\"#綁定元素與取得資料長度\" class=\"headerlink\" title=\"綁定元素與取得資料長度\"></a>綁定元素與取得資料長度</h2><p>先建立基本的元素內容與 for 迴圈：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//變數</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> el = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\".list\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> dataLen = data.length; <span class=\"comment\">//資料長度</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; dataLen; i++) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// for 迴圈</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"組字串\"><a href=\"#組字串\" class=\"headerlink\" title=\"組字串\"></a>組字串</h2><p>為了等等要將文字渲染在網頁上，這邊會多設定一個變數 <code>str</code>，裡面為空白，為了等等篩選資料要填入預設的空字串中，這個部份很重要，是渲染網頁的重要環節：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> el = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\".list\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> dataLen = data.length; <span class=\"comment\">//資料長度</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">\"\"</span>; <span class=\"comment\">//建立一個空字串，要將資料填入的</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; dataLen; i++) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// for 迴圈</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>為了避免等等組字串寫錯，先把空位寫好：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; dataLen; i++) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// for 迴圈</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> content = <span class=\"string\">\"&lt;li&gt;\"</span> + 球員名稱 + <span class=\"string\">\"&lt;/li&gt;\"</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>再將取資料的寫法 <code>data[i].name</code> 替換 球員名稱，透過加總把 變數 content 的內容回傳到 str 中，</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; dataLen; i++) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// for 迴圈</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> content = <span class=\"string\">\"&lt;li&gt;\"</span> + data[i].name + <span class=\"string\">\"&lt;/li&gt;\"</span>; <span class=\"comment\">//組字串</span></span><br><span class=\"line\">  str += content;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"使用迴圈取得資料\"><a href=\"#使用迴圈取得資料\" class=\"headerlink\" title=\"使用迴圈取得資料\"></a>使用迴圈取得資料</h2><p>最後再用寫好的 el 選取到的 list，透過 innerHTML 的方式，把 <code>str</code> 裡的資料渲染到網頁上，最後完成的程式碼就會如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//JSON 資料</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> data = [</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    team: <span class=\"string\">\"bulls\"</span>,</span><br><span class=\"line\">    name: <span class=\"string\">\"Jordan\"</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    team: <span class=\"string\">\"lakers\"</span>,</span><br><span class=\"line\">    name: <span class=\"string\">\"Bryant\"</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//變數</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> el = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\".list\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> dataLen = data.length; <span class=\"comment\">//資料長度</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">\"\"</span>; <span class=\"comment\">//建立一個空字串，要將資料填入的</span></span><br><span class=\"line\"><span class=\"comment\">// for 迴圈</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; dataLen; i++) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> content = <span class=\"string\">\"&lt;li&gt;\"</span> + data[i].name + <span class=\"string\">\"&lt;/li&gt;\"</span>; <span class=\"comment\">//組字串</span></span><br><span class=\"line\">  str += content; <span class=\"comment\">// 透過加總把 變數 content 的內容回傳到 str 中</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">el.innerHTML = str;</span><br><span class=\"line\"><span class=\"comment\">//透過 el 選取到的 list，透過 innerHTML 的方式，把 str 裡的資料渲染到網頁上</span></span><br></pre></td></tr></table></figure>\n\n<p>codepen: <a href=\"https://codepen.io/hnzxewqw/pen/ExjNRoL\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/ExjNRoL</a></p>\n<h2 id=\"心得\"><a href=\"#心得\" class=\"headerlink\" title=\"心得\"></a>心得</h2><p>中間寫一兩行就用 <code>console.log</code> 確認一下是否有正確寫對 JS，避免寫了十幾行，才來 debug 會比較辛苦。</p>\n","categories":["JavaScript"],"tags":["JavaScript"]},{"title":"jQuery 筆記 - $(this), parent(), siblings(), find() 用法","url":"/jQuery/20200630/3070987172/","content":"<p><img src=\"https://images.unsplash.com/photo-1511632765486-a01980e01a18?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1350&q=80\" alt=\"friends\"></p>\n<p>這一段筆記會用這個選單程式碼。</p>\n<h3 id=\"HTML\"><a href=\"#HTML\" class=\"headerlink\" title=\"HTML\"></a>HTML</h3><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"menu\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>選單1<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>選單2<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>選單3<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>選單4<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>選單5<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>選單6<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"SCSS\"><a href=\"#SCSS\" class=\"headerlink\" title=\"SCSS\"></a>SCSS</h3><figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.menu</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">500px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> auto;</span><br><span class=\"line\">  <span class=\"attribute\">margin-top</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">  li &#123;</span><br><span class=\"line\">    <span class=\"selector-tag\">border</span>: 1<span class=\"selector-tag\">px</span> <span class=\"selector-tag\">solid</span> <span class=\"selector-tag\">gray</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">padding</span>: 5<span class=\"selector-tag\">px</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">margin-bottom</span>: 10<span class=\"selector-tag\">px</span>;</span><br><span class=\"line\">    &amp;<span class=\"selector-pseudo\">:hover</span> &#123;</span><br><span class=\"line\">      <span class=\"attribute\">background-color</span>: yellow;</span><br><span class=\"line\">      <span class=\"attribute\">cursor</span>: pointer;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    &amp;<span class=\"selector-class\">.active</span> &#123;</span><br><span class=\"line\">      <span class=\"attribute\">background-color</span>: yellow;</span><br><span class=\"line\">      <span class=\"attribute\">cursor</span>: pointer;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"this-選到自身元素\"><a href=\"#this-選到自身元素\" class=\"headerlink\" title=\"this 選到自身元素\"></a>this 選到自身元素</h2><p>jQuery 中已經把 <code>this</code> 包裝好變成指向本身元素的寫法，變得相當方便，但在原生寫法就要看狀況而定了。</p>\n<p>首先可以看到 SCSS 有加上一段是預備讓 JS 動態新增 <code>.active</code> 的片段程式碼。<br>要記錄的是如何透過 <code>this</code> 選取到自身元素，並且產生效果。可以這樣寫，</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">\".menu li\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">  e.preventDefault();</span><br><span class=\"line\">  $(<span class=\"keyword\">this</span>).addClass(<span class=\"string\">\"active\"</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>當我點擊到 <code>.menu</code> 的 <code>li</code> 時，在選到的自身元素動態加上 <code>active</code>，就會產生效果囉！</p>\n<iframe height=\"350\" style=\"width: 100%;\"  src=\"https://codepen.io/tim_hsu/embed/LYGyKjj?height=265&theme-id=light&default-tab=result\" ></iframe>\n\n<h2 id=\"parent-選到父元素\"><a href=\"#parent-選到父元素\" class=\"headerlink\" title=\"parent() 選到父元素\"></a>parent() 選到父元素</h2><p>這個語法是 jQuery 包裝好的函式，也相當好用，當我點擊到元素本身後，會選到外層的父元素，並且控制它。</p>\n<p>這邊的情境是，現在有一個選單，裡面有一個按鈕，當我點選按鈕後，會把該格的清單改變背景顏色，</p>\n<h3 id=\"HTML-架構\"><a href=\"#HTML-架構\" class=\"headerlink\" title=\"HTML 架構\"></a>HTML 架構</h3><p>跟原本範本差不多，只是在 li 內加入了按鈕而已。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"menu\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn\"</span>&gt;</span>選單1<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn\"</span>&gt;</span>選單2<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn\"</span>&gt;</span>選單3<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn\"</span>&gt;</span>選單4<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn\"</span>&gt;</span>選單5<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn\"</span>&gt;</span>選單6<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"jQuery-寫法\"><a href=\"#jQuery-寫法\" class=\"headerlink\" title=\"jQuery 寫法\"></a>jQuery 寫法</h3><p>點擊按鈕後，自身元素的父元素會產生 <code>toggleClass</code> 效果，動態切換 <code>.active</code> 。<br><code>parent()</code> 語法要寫在 <code>$(this)</code> 的後面。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">\".btn\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">  e.preventDefault();</span><br><span class=\"line\">  $(<span class=\"keyword\">this</span>).parent().toggleClass(<span class=\"string\">\"active\"</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<iframe height=\"400\" style=\"width: 100%;\" src=\"https://codepen.io/tim_hsu/embed/KKVmjGp?height=265&theme-id=light&default-tab=result\" ></iframe>\n\n<h2 id=\"siblings-同層其他元素\"><a href=\"#siblings-同層其他元素\" class=\"headerlink\" title=\"siblings() 同層其他元素\"></a>siblings() 同層其他元素</h2><p>這個語法就是選到同層元素，並指定該效果給它，這邊練習是滑鼠選到該元素後會改變背景顏色，而其他同層元素背景取消背景色。</p>\n<p>一開始範例中的 <code>li</code> 就是同層元素。</p>\n<h3 id=\"jQuery-寫法-1\"><a href=\"#jQuery-寫法-1\" class=\"headerlink\" title=\"jQuery 寫法\"></a>jQuery 寫法</h3><p>當我點擊 <code>.menu</code> 中的 <code>li</code>，會在自身元素增加 <code>.active</code>，並選到同層的 <code>li</code> 元素(<code>siblings()</code>)同時取消賦予的 <code>.active</code> 效果。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">\".menu li\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">  e.preventDefault();</span><br><span class=\"line\">  $(<span class=\"keyword\">this</span>).addClass(<span class=\"string\">\"active\"</span>).siblings().removeClass(<span class=\"string\">\"active\"</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<iframe height=\"350\" style=\"width: 100%;\" src=\"https://codepen.io/tim_hsu/embed/vYLmqMV?height=265&theme-id=light&default-tab=result\"></iframe>\n\n<h2 id=\"find-找到子層元素\"><a href=\"#find-找到子層元素\" class=\"headerlink\" title=\"find() 找到子層元素\"></a>find() 找到子層元素</h2><p>前面提到父層元素，那當然也有子層元素，這次要選到 <code>li</code> 後，會改變當中的文字顏色，</p>\n<h3 id=\"HTML-架構-1\"><a href=\"#HTML-架構-1\" class=\"headerlink\" title=\"HTML 架構\"></a>HTML 架構</h3><p>可以看到 HTML 結構中，在 <code>li</code> 內有 <code>h3</code> 標題。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"menu\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>選單1<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>選單2<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>選單3<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>選單4<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>選單5<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>選單6<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"SCSS-樣式\"><a href=\"#SCSS-樣式\" class=\"headerlink\" title=\"SCSS 樣式\"></a>SCSS 樣式</h3><p>在 <code>h3</code> 加上預備要的樣式，並新增一個 <code>.active</code> 預備動態新增效果時讓 <code>h3</code> 的文字改變顏色。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.menu</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">500px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> auto;</span><br><span class=\"line\">  <span class=\"attribute\">margin-top</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">  li &#123;</span><br><span class=\"line\">    <span class=\"selector-tag\">border</span>: 1<span class=\"selector-tag\">px</span> <span class=\"selector-tag\">solid</span> <span class=\"selector-tag\">gray</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">padding</span>: 5<span class=\"selector-tag\">px</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">margin-bottom</span>: 10<span class=\"selector-tag\">px</span>;</span><br><span class=\"line\">    &amp;<span class=\"selector-pseudo\">:hover</span> &#123;</span><br><span class=\"line\">      <span class=\"attribute\">background-color</span>: <span class=\"number\">#eeeeee</span>;</span><br><span class=\"line\">      <span class=\"attribute\">cursor</span>: pointer;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-tag\">h3</span> &#123;</span><br><span class=\"line\">      <span class=\"attribute\">display</span>: inline-block;</span><br><span class=\"line\">      &amp;.active &#123;</span><br><span class=\"line\">        <span class=\"selector-tag\">color</span>: <span class=\"selector-tag\">red</span>;</span><br><span class=\"line\">        <span class=\"selector-tag\">cursor</span>: <span class=\"selector-tag\">pointer</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"jQuery-寫法-2\"><a href=\"#jQuery-寫法-2\" class=\"headerlink\" title=\"jQuery 寫法\"></a>jQuery 寫法</h3><p>當我點擊到 <code>li</code> 時，會選到 <code>li</code> 自身元素，再找到裡面的子層元素 <code>h3</code>，並且在 <code>.active</code> 做切換。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">\".menu li\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">  e.preventDefault();</span><br><span class=\"line\">  $(<span class=\"keyword\">this</span>).find(<span class=\"string\">\"h3\"</span>).toggleClass(<span class=\"string\">\"active\"</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<iframe height=\"350\" style=\"width: 100%;\" src=\"https://codepen.io/tim_hsu/embed/LYGywEr?height=265&theme-id=light&default-tab=result\" ></iframe>\n","categories":["jQuery"],"tags":["jQuery"]},{"title":"JS 筆記 - 使用 JavaScript 插入 innerHTML","url":"/javascript/20200630/2965249736/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/JavaScript%20note-01.jpg?alt=media&token=7bee0261-72ac-4de4-9f5a-f39d58735b7d\" alt=\"JavaScript Note\"></p>\n<h2 id=\"innerHTML\"><a href=\"#innerHTML\" class=\"headerlink\" title=\"innerHTML\"></a>innerHTML</h2><ul>\n<li>方法：組完字串後，傳進語法進行網頁渲染。</li>\n<li>優點：效能快。</li>\n<li>缺點：資安風險高，須確保資料來源沒問題。</li>\n</ul>\n<p>原本學習的方式是用 textContent 語法，在 HTML 上寫上一個 <code>&lt;div&gt;</code> 標籤，裡面的指定一個 <code>id</code>。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width, initial-scale=1.0\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"X-UA-Compatible\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"ie=edge\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"main\"</span>&gt;</span>1234<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>JS 使用 textContent 渲染網頁原本會是這樣寫：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> el = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"main\"</span>);</span><br><span class=\"line\">el.textContent = <span class=\"string\">\"Hello\"</span>;</span><br></pre></td></tr></table></figure>\n\n<p>這次用 innerHTML 的方式渲染網頁：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> el = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"main\"</span>);</span><br><span class=\"line\">el.innerHTML = <span class=\"string\">\"&lt;h1&gt;innerHTML HELLO&lt;/h1&gt;\"</span>;</span><br></pre></td></tr></table></figure>\n\n<p>結果就會得到 <code>h1</code> 標籤 <strong>innerHTML HELLO</strong>。</p>\n<blockquote>\n<p>innerHTML 有一個特性，就是會覆蓋原本寫的內容，原本在 <code>id=&quot;main&quot;</code>，裡面寫的內容 1234，被更改為 innerHTML HELLO 了。</p>\n</blockquote>\n<hr>\n<p>也可以加上 <code>class</code> 名稱，讓 CSS 吃到效果，就只要按照平常設定 <code>class</code> 的方式，寫在 innerHTML 的標籤裡就可以了。如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> el = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"main\"</span>);</span><br><span class=\"line\">el.innerHTML = <span class=\"string\">'&lt;h1 class=\"blue\"&gt;innerHTML HELLO&lt;/h1&gt;'</span>;</span><br></pre></td></tr></table></figure>\n\n<p>codepen： <a href=\"https://codepen.io/hnzxewqw/pen/VwLKxGG\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/VwLKxGG</a></p>\n<hr>\n<p><strong>小提示：</strong></p>\n<p>在 JS 中引號的用法很重要，不能混搭使用，以這行為例：<br><code>&#39;&lt;h1 class=&quot;blue&quot;&gt;innerHTML HELLO&lt;/h1&gt;&#39;</code>，<br>倘若改成都是單引號：<br><code>&#39;&lt;h1 class=&#39;blue&#39;&gt;innerHTML HELLO&lt;/h1&gt;&#39;</code>，<br>電腦會誤認為：<br><code>&#39;&lt;h1 class=&#39;</code> + blue + <code>&#39;&gt;innerHTML HELLO&lt;/h1&gt;&#39;</code></p>\n<p>所以使用 JS 的引號一定要一致!</p>\n<h2 id=\"透過-innerHTML-的方式在網頁上渲染一個-li-的-a-連結寫法\"><a href=\"#透過-innerHTML-的方式在網頁上渲染一個-li-的-a-連結寫法\" class=\"headerlink\" title=\"透過 innerHTML 的方式在網頁上渲染一個 li 的 a 連結寫法\"></a>透過 innerHTML 的方式在網頁上渲染一個 li 的 a 連結寫法</h2><p>先建立一個 <code>ul</code>，並且命名一個 <code>class</code> 為 list，如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"list\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>這時會看到 ul 裡面是沒有 li 的，透過 JS 的將 li 渲染在網頁上，先建立三個要使用的變數：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> el=<span class=\"built_in\">document</span>.querySelector(.list); <span class=\"comment\">//選取到 class=\"list\"</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> link=<span class=\"string\">\"https://www.google.com.tw/\"</span>; <span class=\"comment\">//a 連結網址</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> text=<span class=\"string\">\"用 JS 渲染 li 的內容在網頁上\"</span>; <span class=\"comment\">// a 連結文字</span></span><br></pre></td></tr></table></figure>\n\n<p>這邊在透過 <code>el.innerHTML</code> 的語法建立標籤內容，將其渲染到網頁上，</p>\n<p>因為我很怕我會打錯，所以會先在 html 標籤內打好，並且把變數預先要放的位置先用中文放進去，避免等等貼到 JS 搞混了：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\" 連結變數 \"</span>&gt;</span> 文字變數 <span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>下方的正確寫法會看到是 html 裡面的語法除了變數外，是用單引號圈起來的，並且變數兩邊用 + 號做連結，所以就會變下方這樣，要確認引號的位置有正確，如果不正確就會無法顯示：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">el.innerHTML = <span class=\"string\">'&lt;li&gt;&lt;a href=\"'</span> + 變數名稱 + <span class=\"string\">'\"&gt;'</span> + 變數名稱 + <span class=\"string\">\"&lt;/a&gt;&lt;/li&gt;\"</span>;</span><br></pre></td></tr></table></figure>\n\n<p>最後再把變數名稱更換成預先設定好的變數即可：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">el.innerHTML = <span class=\"string\">'&lt;li&gt;&lt;a href=\"'</span> + link + <span class=\"string\">'\"&gt;'</span> + text + <span class=\"string\">\"&lt;/a&gt;&lt;/li&gt;\"</span>;</span><br></pre></td></tr></table></figure>\n\n<p>codepen: <a href=\"https://codepen.io/hnzxewqw/pen/YzXpvwR?editors=1010\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/YzXpvwR?editors=1010</a></p>\n","categories":["JavaScript"],"tags":["JavaScript"]},{"title":"終於成為正式的前端工程師?","url":"/Learning-Experience/20200629/2632109835/","content":"<p><img src=\"https://images.unsplash.com/photo-1516259762381-22954d7d3ad2?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1366&q=80\" alt=\"image alt\"></p>\n<h2 id=\"到職前與入職後\"><a href=\"#到職前與入職後\" class=\"headerlink\" title=\"到職前與入職後\"></a>到職前與入職後</h2><p>從事平面設計近十年，轉換成前端工程師是一個不容易的事情，過去美學教育的思維是比較多重思考且主觀的，跟程式思維完全大不同。從感性到理性需要做許多的調整，在過去一年的學習與努力下，其實我也不知道自己跟業界的落差到底有多少，面試後也只是大概知道可能在業界需要哪方面的人才，但還是不確定是否能夠踏進來程式領域，看到網路上許多文章都說，除了會議之外，如果不需要討論或是開會，基本上純開發與維護真的可以遠端工作，只要一台電腦基本上很多程式上的事情都可以解決，但前提是要累積足夠的開發經驗與技術能力，才能往這個方向前進。</p>\n<p><del>原本天真的以為可以至少有一天可以遠端工作，真是太好笑了。</del></p>\n<p>另外前端一開始其實有預想一些狀況，比如說：可以做比較多的互動界面。但後來更廣泛的理解前端介面，其實只要是人為使用的都可以說是前端介面的範疇，而目前任職的領域是負責專案後台的開發，所以互動的內容是不高的，但所需要的技術含量是不少的，後台有些看似理所當然的功能，都需要使用很多 JavaScript 來實現。</p>\n<p>到職前後一定會跟預期有落差，這個落差可能來自於專案內容，公司文化，還有使用的工具，但我自己是用開闊的心態來看待前端，因為對我來說都是可以學習的。</p>\n<h2 id=\"預想與現實的落差\"><a href=\"#預想與現實的落差\" class=\"headerlink\" title=\"預想與現實的落差\"></a>預想與現實的落差</h2><p>可能在準備作品集的過程已經學習很多，加上線上老師教學很多闡述能力是很好的，進入職場才會發現有些人講中文，可能聽起來卻不知道在講什麼內容，不要預想每個工程師都會像老師有很好的闡述能力，另外專案的內容也會跟預想的的不同，現實的專案畢竟就是要符合客戶與公司內部使用，所以有趣程度一定大不相同，後台所需要的介面就是要清楚明瞭，乾淨簡單，要馬上得到資訊，互動性一定是較低的，而後台卻也是許多產業所需要的前端介面。</p>\n<p>還有部門文化不一定都會熱絡討論，可能都在同個空間工作，但會說上話的卻只有一兩天這種現象。</p>\n<h2 id=\"面對專案的技術力\"><a href=\"#面對專案的技術力\" class=\"headerlink\" title=\"面對專案的技術力\"></a>面對專案的技術力</h2><p>任職三個月以來，技術力的提升是快速的，因為要因應專案需求，會大量的 google 找資源，建立資源，努力寫需求的練習，技術力一次會學習很多，但卻比較沒有章法，我利用部落格寫成筆記，把重複會遇到的放在部落格，之後再從部落格找資料就好。有時候在專案上會卡關很久，也相對反映出自己的技術力還有許多要加強的地方，不足是一定的，要寬心面對這件事情，今天要比昨天的自己更強就是了。</p>\n<h2 id=\"感恩的心態\"><a href=\"#感恩的心態\" class=\"headerlink\" title=\"感恩的心態\"></a>感恩的心態</h2><p>老實說，感恩的心再踏入前端領域後，就一直是這樣，網頁很老實，給什麼就回饋什麼，非常現實，也無法讓自己一步登天，只能誠實面對自己的不足，並且提出問題有人回答都要感恩，因為都是非義務，也非必要的回答，但能在問題提出，有經驗的工程師願意做出回答並指點迷津，都要向他們感恩。</p>\n<p>並且一路上家人的陪伴與支持，更是要感恩，因為最辛苦的不是自己而已，而是他們陪伴的心與實質付出的行動。</p>\n<h2 id=\"不恥下問\"><a href=\"#不恥下問\" class=\"headerlink\" title=\"不恥下問\"></a>不恥下問</h2><p>在程式沒有蠢問題，因為程式語言也是一門語言，而語言是需要使用與養成的，唯有不斷的提問跟反覆練習，才能慢慢的熟練，許多答案是問出來的，不一定是想出來的。與經驗較豐富的工程師提問，而提問不一定是要拿到答案，而是跟著他們的思維走一遍，並且自己再多練習幾次，答案便會呼之欲出。</p>\n<h2 id=\"整理在專案上的學習\"><a href=\"#整理在專案上的學習\" class=\"headerlink\" title=\"整理在專案上的學習\"></a>整理在專案上的學習</h2><p>分類資料夾很重要，把資源有系統的整理，不僅在找線索快速，也讓自己整理過去學習的思緒，把遇到不熟悉或是新的知識轉換成為文字與部落格，最大的受益者一定是自己。慢慢的會發現，許多情境都很像，只是主題不同，專案很多都是換湯不換藥。</p>\n<h2 id=\"工作時間的調配\"><a href=\"#工作時間的調配\" class=\"headerlink\" title=\"工作時間的調配\"></a>工作時間的調配</h2><p>學習可以納入工作時間的一部分，我會利用早上兩個小時先做學習，因為精神較好，專注力較集中，效果也較好，而下午較長的時間，拿來解決專案問題，並善用 <code>codepen</code> 或是其他程式網站，把不懂的 code 先記錄下來，再反覆的研究，使用 todolist 規劃自己每天的進度，並搭配番茄鐘是很好的成效，透過番茄鐘可以知道自己在專案上花了多少時間，讓自己適當工作也適當休息。</p>\n<p>目前平均在工作上大概都花費 12~14 顆番茄鐘，並設定短休息 5 分鐘與長休息 10 分鐘，希望可以在提升效率能夠控制在 10 顆番茄鐘內。</p>\n<h2 id=\"工作前的第一件事\"><a href=\"#工作前的第一件事\" class=\"headerlink\" title=\"工作前的第一件事\"></a>工作前的第一件事</h2><h3 id=\"整理思緒\"><a href=\"#整理思緒\" class=\"headerlink\" title=\"整理思緒\"></a>整理思緒</h3><p>不要馬上工作，我會在座位上先禱告沉澱心情，讓自己安靜心，進入工作模式與思維，不要馬上開網頁跟專案，思維模式開始運作後，會比較進入狀況。</p>\n<h3 id=\"不要打開-email\"><a href=\"#不要打開-email\" class=\"headerlink\" title=\"不要打開 email\"></a>不要打開 email</h3><p>通常急事一定會打內線連絡，email 我都是接近中午才開，還有下午三點左右再開一次，看看是否有重要行政通知。</p>\n<h2 id=\"與同事的溝通\"><a href=\"#與同事的溝通\" class=\"headerlink\" title=\"與同事的溝通\"></a>與同事的溝通</h2><p>人際互動在職場是很重要的環節，關係打好了，工作上也會比較舒服，不會因為爭執影響情緒，導致工作效益降低，並且思考如何以團隊勝利主義出發，團隊變強，自己也是相對變強。</p>\n<h2 id=\"前端與後端\"><a href=\"#前端與後端\" class=\"headerlink\" title=\"前端與後端\"></a>前端與後端</h2><p>前後端完整分離的公司可遇不可求，大多中小企業人力不足，幾乎前後端都要有了解，只是了解層面多寡，建議都吸收，都了解。有利無弊!</p>\n<h2 id=\"撰寫程式碼的思維\"><a href=\"#撰寫程式碼的思維\" class=\"headerlink\" title=\"撰寫程式碼的思維\"></a>撰寫程式碼的思維</h2><p>對於有些工程師來說，寫 JavaScript 才是寫程式(笑)，這是個人觀點問題，個人就不評論，但主管告訴我，寫 JS 可以用兩個方向做思考，動作與程序，先有動作，再把程序連接起來，最後再來優化，這樣比較不會卡關，並且把問題切到最碎片化，就會發現其實每一個小問題都會回到最基本的程式架構。</p>\n<h2 id=\"放棄吧-不要鑽牛角尖\"><a href=\"#放棄吧-不要鑽牛角尖\" class=\"headerlink\" title=\"放棄吧!不要鑽牛角尖\"></a>放棄吧!不要鑽牛角尖</h2><p>對於有些程式碼的來源不一定當下馬上要弄懂，因為工作是解決問題，並非做學問，做中學是最快的方式，可能當下不懂，但寫多了，假以時日再回來看程式碼，會突然發現懂了，所以卡關超過 30 分鐘，先放下吧!繼續往下走。</p>\n<h2 id=\"不只找貴人，也要成為別人的貴人\"><a href=\"#不只找貴人，也要成為別人的貴人\" class=\"headerlink\" title=\"不只找貴人，也要成為別人的貴人\"></a>不只找貴人，也要成為別人的貴人</h2><p>對我來說，output 比 input 的學習成效更高，在尋求幫助之時，也把得到的答案與做法寫下來，並分享在部落格，或許這個方法也間接幫助到遇到相同問題的人，甚至還會招喚大神出來修正觀念，怎麼說都是賺到。</p>\n<h2 id=\"正確的問題才會得到正確的答案\"><a href=\"#正確的問題才會得到正確的答案\" class=\"headerlink\" title=\"正確的問題才會得到正確的答案\"></a>正確的問題才會得到正確的答案</h2><p>從設計師轉換成工程師最棒一個禮物就是學習如何提出正確的問題，很多時候會不知道怎麼提問，但透過提問不只是把問題重新整理，在整理的過程中，還有可能會找到答案，減少不必要的問題。</p>\n<h2 id=\"無法改變環境，那就先適應環境\"><a href=\"#無法改變環境，那就先適應環境\" class=\"headerlink\" title=\"無法改變環境，那就先適應環境\"></a>無法改變環境，那就先適應環境</h2><p>沒有相關資訊背景，轉換職涯跑道會遇到一個狀態就是技術力掌握度不如同部門的人，而我目前任職的公司每一個人在專案上都有一定的經驗程度，先排除程式碼寫得好不好，再怎麼樣程式邏輯都比我這個跨行的來得強，雖然在技術上有些沒有使用，也很想導入新技術，但因現在無法改變環境，就先透過試用期觀察以下幾點：</p>\n<ol>\n<li><strong>部門文化</strong>：我個人覺得這很重要，觀察就有同仁之間的互動與風氣，講話方式與音量，就可以知道這個公司的專案樂趣度到哪裡。<del>(好吧!可能我的公司滿無聊的 XD)</del></li>\n<li><strong>會議氛圍</strong>：在會議上也可以觀察出與會者與報告者，以及上位者的互動，來看一下這間公司的眼界到哪裡，部門主管與高層主管之間的想法是否一致，跨部門會議的共識是否相同，都是很值得觀察的地方。</li>\n<li><strong>行政運作</strong>：像我是待在中型企業，有些行政聯繫方式也可以看得出公司運作的狀況，使用的工具或是聯繫的管道，是較傳統還是新穎，至於是否先進，就見仁見智了，對於行政來說，可以順利運作就好。</li>\n<li><strong>閒聊話題</strong>：除了工作與專案外，同事們都在聊什麼? 我們部門是很少講話，真的滿悶的，不過隔壁部門到是滿常講幹話就是了。</li>\n</ol>\n<h2 id=\"如果一行程式碼無法解決，那就寫兩行\"><a href=\"#如果一行程式碼無法解決，那就寫兩行\" class=\"headerlink\" title=\"如果一行程式碼無法解決，那就寫兩行\"></a>如果一行程式碼無法解決，那就寫兩行</h2><p>身為剛入職的前端工程師，除了把握學習的機會外，也要規劃怎麼讓自己在專案中成長，若有機會多看前人的程式碼有個好處，去了解原本程式碼脈絡跟思維，但也不要太苛求自己要馬上寫出行雲流水般的程式碼，因為那是不可能的，但可以具備一個思維是把程式碼改成可讀性更高或著更值觀的程式碼是件很棒的事情，當哪天或其他工程師接手時，不用再看邏輯，而是看程式碼。但還是要追求簡短又可讀性高的程式碼，這個就要靠專案慢慢來成長了。</p>\n<p>先求可以讓專案動起來，哪天有空再回頭重構程式碼，也是檢視自己能力的好機會。</p>\n<h2 id=\"保護眼睛\"><a href=\"#保護眼睛\" class=\"headerlink\" title=\"保護眼睛\"></a>保護眼睛</h2><p>因為要長時間看螢幕，我入職後就去配了一副抗藍光眼鏡，真的長時間看電腦比較不疲勞喔!!<br>如果配合番茄鐘休息，起來伸展跟走走，會更好，讓眼睛適當休息，也讓身體休息。</p>\n<h2 id=\"結語\"><a href=\"#結語\" class=\"headerlink\" title=\"結語\"></a>結語</h2><p>前端工程師是一條不順遂的道路，要習慣跟挫折相處，因為光是一個 bug 就可以卡個幾個小時甚至幾天，但破解後真的會有滿滿的成就感，加上載具的蓬勃發展，許多技術如雨後春筍般出現，可能會無所適從，不過也不需要太緊張，掌握好基本觀念，其他都是這些基本觀念延伸出來的工具，並且多跟厲害的人交流，日積月累一定會成長的。</p>\n","categories":["Learning Experience"],"tags":["前端學習之路"]},{"title":"JS 筆記 - querySelector、setAttribute 用法","url":"/javascript/20200622/114236291/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/JavaScript%20note-01.jpg?alt=media&token=7bee0261-72ac-4de4-9f5a-f39d58735b7d\" alt=\"JavaScript Note\"></p>\n<p>前面學過 textContent 使用方法，如何用更簡短且易讀的程式碼來控制網頁元素？</p>\n<h2 id=\"透過變數管理相同的程式碼\"><a href=\"#透過變數管理相同的程式碼\" class=\"headerlink\" title=\"透過變數管理相同的程式碼\"></a>透過變數管理相同的程式碼</h2><p>原本要控制 id 的寫法都會是：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"nameId\"</span>).textContent = value;</span><br></pre></td></tr></table></figure>\n\n<p>但可以這樣寫會更易讀且未來維護也更便利：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> el = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"nameId\"</span>);</span><br><span class=\"line\"><span class=\"comment\">//建立一個變數，將原本要控制的條件用變數來管理</span></span><br><span class=\"line\">el.textContent = value;</span><br><span class=\"line\"><span class=\"comment\">//透過變數管理的程式碼，後面加上需要的屬性，就能更快得到所要的值</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>在網頁 id 是唯一性，不可以同時存在兩種相同的 id 名稱</p>\n</blockquote>\n<hr>\n<h2 id=\"querySelector-選擇單一元素\"><a href=\"#querySelector-選擇單一元素\" class=\"headerlink\" title=\"querySelector 選擇單一元素\"></a>querySelector 選擇單一元素</h2><p>跟上方的寫法很像，是這樣寫的：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> el = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\".titleClass\"</span>);</span><br><span class=\"line\"><span class=\"comment\">//不只可以選擇 id，也可以選擇 class</span></span><br><span class=\"line\">el.textContent = value;</span><br><span class=\"line\"><span class=\"comment\">//透過變數管理的程式碼，後面加上需要的屬性，就能更快得到所要的值</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>若只有選擇單一元素，可以使用此語法。<br>多個 class 若用此語法時，只會存取第一個 Class 內的資料。</p>\n</blockquote>\n<p>codepen: <a href=\"https://codepen.io/hnzxewqw/pen/JjdRojN\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/JjdRojN</a></p>\n<hr>\n<h2 id=\"querySelectorAll-重複選取多個元素\"><a href=\"#querySelectorAll-重複選取多個元素\" class=\"headerlink\" title=\"querySelectorAll 重複選取多個元素\"></a>querySelectorAll 重複選取多個元素</h2><p>與上方寫法一樣，只是選擇屬性不同：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> el = <span class=\"built_in\">document</span>.querySelectorAll(<span class=\"string\">\".titleClass em\"</span>);</span><br><span class=\"line\"><span class=\"comment\">//不只可以選擇 id，也可以選擇 class 裡面的多個選項。</span></span><br><span class=\"line\">el.textContent = value;</span><br><span class=\"line\"><span class=\"comment\">//透過變數管理的程式碼，後面加上需要的屬性，就能更快得到所要的值</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>若有多個重複的元素要選擇，可以使用此語法。</p>\n</blockquote>\n<blockquote>\n<p>通常會搭配<strong>陣列</strong>與<strong>迴圈</strong>使用：</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> el = <span class=\"built_in\">document</span>.querySelectorAll(<span class=\"string\">\".titleClass em\"</span>);</span><br><span class=\"line\"><span class=\"comment\">//不只可以選擇 id，也可以選擇 class。</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(el); <span class=\"comment\">//結果會得到陣列的值</span></span><br><span class=\"line\">el[<span class=\"number\">0</span>].textContent = <span class=\"string\">\"123\"</span>;</span><br><span class=\"line\">el[<span class=\"number\">1</span>].textContent = <span class=\"string\">\"456\"</span>;</span><br></pre></td></tr></table></figure>\n\n<p>倘若不知道抓取的資料有多少，就使用迴圈依序來抓取資料</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> el = <span class=\"built_in\">document</span>.querySelectorAll(<span class=\"string\">\".titleClass em\"</span>);</span><br><span class=\"line\"><span class=\"comment\">//不只可以選擇 id，也可以選擇 class。</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(el); <span class=\"comment\">//結果會得到陣列的值</span></span><br><span class=\"line\"></span><br><span class=\"line\">el[<span class=\"number\">0</span>].textContent = <span class=\"string\">\"123\"</span>;</span><br><span class=\"line\">el[<span class=\"number\">1</span>].textContent = <span class=\"string\">\"123\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> elTotal = el.length;</span><br><span class=\"line\"><span class=\"comment\">//抓取 elTotal 的數值總長度</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; elTotal; i++) &#123;</span><br><span class=\"line\">  el[i].textContent = i + <span class=\"string\">\"123\"</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//會得到結果是</span></span><br><span class=\"line\"><span class=\"comment\">//0123</span></span><br><span class=\"line\"><span class=\"comment\">//1123</span></span><br></pre></td></tr></table></figure>\n\n<p>codepen: <a href=\"https://codepen.io/hnzxewqw/pen/dyopPGd\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/dyopPGd</a></p>\n<hr>\n<h2 id=\"setAttribute-增加標籤屬性\"><a href=\"#setAttribute-增加標籤屬性\" class=\"headerlink\" title=\"setAttribute 增加標籤屬性\"></a>setAttribute 增加標籤屬性</h2><p>透過 JavaScript 增加 HTML 標籤屬性，例如要動態加上一個 <code>a</code> 連結，可以這樣寫：<br>先在 HTML 新增一個 class，</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"titleClass\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>Link<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"js/practice1.js\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>JS 動態新增標籤屬性</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> el = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\".titleClass\"</span>); <span class=\"comment\">//選擇單一元素為 HTML 裡的 class 名稱為 titleClass</span></span><br><span class=\"line\">el.setAttribute(<span class=\"string\">\"href\"</span>, <span class=\"string\">\"www.facebook.com\"</span>); <span class=\"comment\">//前面是屬性，後面是內容</span></span><br></pre></td></tr></table></figure>\n\n<p>這樣就可以透過 JS 新增一個連結到 HTML</p>\n<hr>\n<p><strong>動態新增 id 來操控 HTML</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"str\"</span>&gt;</span>title<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"js/practice1.js\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>在 CSS 動態新增 id</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-id\">#strId</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: blue;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">18px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>透過 JS 來操控</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> elStr = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\".str\"</span>); <span class=\"comment\">//選擇單一元素為 HTML 的 class 名稱為 str</span></span><br><span class=\"line\">elStrt.setAttribute(<span class=\"string\">\"id\"</span>, <span class=\"string\">\"strId\"</span>); <span class=\"comment\">//因為在 CSS 有動態新增一個 id，所以選擇新增的 id 屬性來控制他的值(會帶回 CSS 的設定內容)</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"結語\"><a href=\"#結語\" class=\"headerlink\" title=\"結語\"></a>結語</h2><p>querySelector 可以選擇 Class 變得相當方便與高彈性，是很好用的語法。</p>\n","categories":["JavaScript"],"tags":["JavaScript"]},{"title":"jQuery 筆記 - Swiper 套件起手式","url":"/jQuery/20200616/1889697036/","content":"<p><img src=\"https://swiperjs.com/i/share-banner.png\" alt=\"swiper\"></p>\n<p>Swiper.js 是一款非常好用的第三方插件，筆記一下起初設定。</p>\n<h2 id=\"載入-CSS-跟-JS\"><a href=\"#載入-CSS-跟-JS\" class=\"headerlink\" title=\"載入 CSS 跟 JS\"></a>載入 CSS 跟 JS</h2><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"https://unpkg.com/swiper/swiper-bundle.css\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"https://unpkg.com/swiper/swiper-bundle.min.css\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"https://unpkg.com/swiper/swiper-bundle.js\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"https://unpkg.com/swiper/swiper-bundle.min.js\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>Swiper 遠端服務網址有時候會換掉，若服務掛掉這是原因之一</p>\n</blockquote>\n<h3 id=\"使用-npm-安裝\"><a href=\"#使用-npm-安裝\" class=\"headerlink\" title=\"使用 npm 安裝\"></a>使用 npm 安裝</h3><figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install swiper</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"使用-cdn-載入\"><a href=\"#使用-cdn-載入\" class=\"headerlink\" title=\"使用 cdn 載入\"></a>使用 cdn 載入</h3><h4 id=\"css\"><a href=\"#css\" class=\"headerlink\" title=\"css\"></a>css</h4><figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">https: //<span class=\"title\">cdnjs.cloudflare.com</span>/<span class=\"title\">ajax</span>/<span class=\"title\">libs</span>/<span class=\"title\">Swiper</span>/5.4.3/<span class=\"title\">css</span>/<span class=\"title\">swiper.css</span>;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"javascript\"><a href=\"#javascript\" class=\"headerlink\" title=\"javascript\"></a>javascript</h4><figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">https://<span class=\"title\">cdnjs.cloudflare.com</span>/<span class=\"title\">ajax</span>/<span class=\"title\">libs</span>/<span class=\"title\">Swiper</span>/5.4.3/<span class=\"title\">js</span>/<span class=\"title\">swiper.js</span></span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Layout\"><a href=\"#Layout\" class=\"headerlink\" title=\"Layout\"></a>Layout</h2><h2 id=\"HTML-程式碼\"><a href=\"#HTML-程式碼\" class=\"headerlink\" title=\"HTML 程式碼\"></a>HTML 程式碼</h2><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- Slider main container --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"swiper-container\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- Additional required wrapper --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"swiper-wrapper\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- Slides --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"swiper-slide\"</span>&gt;</span>Slide 1<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"swiper-slide\"</span>&gt;</span>Slide 2<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"swiper-slide\"</span>&gt;</span>Slide 3<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        ...</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- If we need pagination --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"swiper-pagination\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- If we need navigation buttons --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"swiper-button-prev\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"swiper-button-next\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- If we need scrollbar --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"swiper-scrollbar\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"CSS-設定\"><a href=\"#CSS-設定\" class=\"headerlink\" title=\"CSS 設定\"></a>CSS 設定</h2><figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.swiper-container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">600px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">300px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"JS-設定\"><a href=\"#JS-設定\" class=\"headerlink\" title=\"JS 設定\"></a>JS 設定</h2><h3 id=\"javascript-寫法\"><a href=\"#javascript-寫法\" class=\"headerlink\" title=\"javascript 寫法\"></a>javascript 寫法</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> mySwiper = <span class=\"keyword\">new</span> Swiper(<span class=\"string\">\".swiper-container\"</span>, &#123;</span><br><span class=\"line\">  <span class=\"comment\">// Optional parameters</span></span><br><span class=\"line\">  direction: <span class=\"string\">\"vertical\"</span>,</span><br><span class=\"line\">  loop: <span class=\"literal\">true</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// If we need pagination</span></span><br><span class=\"line\">  pagination: &#123;</span><br><span class=\"line\">    el: <span class=\"string\">\".swiper-pagination\"</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Navigation arrows</span></span><br><span class=\"line\">  navigation: &#123;</span><br><span class=\"line\">    nextEl: <span class=\"string\">\".swiper-button-next\"</span>,</span><br><span class=\"line\">    prevEl: <span class=\"string\">\".swiper-button-prev\"</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// And if we need scrollbar</span></span><br><span class=\"line\">  scrollbar: &#123;</span><br><span class=\"line\">    el: <span class=\"string\">\".swiper-scrollbar\"</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"jQuery-寫法\"><a href=\"#jQuery-寫法\" class=\"headerlink\" title=\"jQuery 寫法\"></a>jQuery 寫法</h3><p>直接寫在 jQuery 核心裡面即可</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">$(<span class=\"built_in\">document</span>).ready(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">//initialize swiper when document ready</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> mySwiper = <span class=\"keyword\">new</span> Swiper(<span class=\"string\">\".swiper-container\"</span>, &#123;</span><br><span class=\"line\">    <span class=\"comment\">// Optional parameters</span></span><br><span class=\"line\">    direction: <span class=\"string\">\"vertical\"</span>,</span><br><span class=\"line\">    loop: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"其他-DEMO-樣式\"><a href=\"#其他-DEMO-樣式\" class=\"headerlink\" title=\"其他 DEMO 樣式\"></a>其他 DEMO 樣式</h2><p>可以參考官網樣式，挑選喜歡的<a href=\"https://swiperjs.com/demos/\" target=\"_blank\" rel=\"noopener\">版型</a>，各版型都有提供 source code ，只要改成自己欲呈現的內容即可，相當方便。</p>\n<h2 id=\"Swiper-參數\"><a href=\"#Swiper-參數\" class=\"headerlink\" title=\"Swiper 參數\"></a>Swiper 參數</h2><p>挑幾個比較常用的介紹：</p>\n<ul>\n<li><strong>direction</strong>: 可選擇水平 (<code>horizontal</code>) 或是垂直 (<code>vertical</code>)，預設為水平。</li>\n<li><strong>initialSlide</strong>: 初始幻燈片的索引號，預設為 0。</li>\n<li><strong>speed</strong>: 幻燈片之間的過渡持續時間（以毫秒為單位），預設為 300 毫秒。</li>\n<li><strong>setWrapperSize</strong>: 啟用此選項，插件將在滑動包裝器上將寬度/高度設置為等於所有幻燈片的總大小。對於大多數不支持 Flexbox 佈局的瀏覽器，通常應將其用作兼容性後備選項，預設為 <code>false</code>。</li>\n<li><strong>spaceBetween</strong>: 幻燈片之間的距離（以 px 為單位），預設為 0。</li>\n<li><strong>loop</strong>: 是否啟用循環，預設值為 <code>false</code>。</li>\n<li><strong>slidesPerView</strong>: 每個視圖的幻燈片數量（同時在滑塊容器上可見的幻燈片）。<blockquote>\n<p>與 <code>loop：true</code> 一起使用，設定值為 auto，會自動輪播，需要指定 <code>loopedSlides</code> 參數以及要循環的幻燈片數量。</p>\n</blockquote>\n</li>\n<li><strong>autoplay</strong>: 自動輪播效果，要搭配 <code>delay</code>。如下方程式碼：</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">autoplay: &#123;</span><br><span class=\"line\">   delay: <span class=\"number\">5000</span>,</span><br><span class=\"line\"> &#125;,</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><strong>effect</strong>:可以選擇 <code>slide</code>(幻燈片)，<code>fade</code>(淡入淡出)，<code>cube</code>(立方體)，<code>coverflow</code>(覆蓋)，<code>flip</code>(翻轉) 等效果。</li>\n</ul>\n<p>參數文件 <a href=\"https://swiperjs.com/api/\" target=\"_blank\" rel=\"noopener\">https://swiperjs.com/api/</a></p>\n<h2 id=\"練習範例\"><a href=\"#練習範例\" class=\"headerlink\" title=\"練習範例\"></a>練習範例</h2><a href=\"https://hsuchihting.github.io/swiper_practice/swiper.html\">\n點我看範例</a>\n\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><ul>\n<li><a href=\"https://swiperjs.com/\" target=\"_blank\" rel=\"noopener\">Swiper 官方網站 </a></li>\n</ul>\n","categories":["jQuery"],"tags":["jQuery"]},{"title":"JS 筆記 - 認識 DOM 文件物件模型","url":"/javascript/20200615/1316819935/","content":"<p><img src=\"https://images.unsplash.com/photo-1519567770579-c2fc5436bcf9?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1350&q=80\" alt=\"tree\"></p>\n<p>常常聽到人家講說 DOM 元素，到底是什麼?</p>\n<p>DOM 的英文全名是 <strong>Document Object Model</strong>，中文是「<strong>文件物件模型</strong>」。</p>\n<blockquote>\n<p>是 HTML、XML 和 SVG 文件的程式介面。它提供了一個文件（樹）的結構化表示法，並定義讓程式可以存取並改變文件<strong>架構</strong>、<strong>風格</strong>和<strong>內容</strong>的方法。DOM 提供了文件以擁有屬性與函式的節點與物件組成的結構化表示。節點也可以附加事件處理程序，一旦觸發事件就會執行處理程序。 本質上，它將網頁與腳本或程式語言連結在一起。</p>\n</blockquote>\n<p>參考來源：<a href=\"https://developer.mozilla.org/zh-TW/docs/Web/API/Document_Object_Model\" target=\"_blank\" rel=\"noopener\">https://developer.mozilla.org/zh-TW/docs/Web/API/Document_Object_Model</a></p>\n<p>另外透過 KURO 老師所寫的<a href=\"https://ithelp.ithome.com.tw/articles/10191666\" target=\"_blank\" rel=\"noopener\">重新認識 JavaScript 的文章</a> 一書中解釋 DOM 是滿簡單明瞭的，文中提到：</p>\n<blockquote>\n<p>DOM 是一個將 HTML 文件以樹狀的結構來表示的模型，而組合起來的樹狀圖，我們稱之為「DOM Tree」。</p>\n</blockquote>\n<p>一開始學習 HTML 時，會學習到基本架構如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width, initial-scale=1.0\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>這是h1<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>這是內容<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>這是一個 a 連結<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>瀏覽器是從上到下一行一行的讀取，DOM tree 就是把所有的節點拆開後，彼此的關係會像一棵樹，故取名之，如下圖：</p>\n<p><img src=\"https://i.imgur.com/h0HoGRC.png\" alt=\"DOM tree\"></p>\n<p>以 document 為起點，可以延伸出許多的 HTML 標籤，一個節點就是一個標籤，往下又可以再延伸出「本文(text)節點」與「屬性 (Attribute)的節點」。JavaScript 就是透過 DOM 提供的 API 來對 HTML 做存取與操作。</p>\n<blockquote>\n<p>一些節點註記：</p>\n<ul>\n<li>Element: html, head, body, ul, li…</li>\n<li>Attribute: a, id, type…</li>\n<li>text: h1, p, span…<br>&lt;以上有誤還請不吝指正。&gt;</li>\n</ul>\n</blockquote>\n<hr>\n<h2 id=\"DOM-API\"><a href=\"#DOM-API\" class=\"headerlink\" title=\"DOM API\"></a>DOM API</h2><p>DOM: JavaScript 用來控制「網頁」的節點與內容的標準，「DOM」有著 W3C 所制定的標準來規範。上方提到的 DOM API 是什麼?</p>\n<p>先解釋一下 API，<strong>應用程式介面</strong>，英文全名是：<strong>Application Programming Interface</strong>。</p>\n<blockquote>\n<p>我個人比較喜歡知道縮寫英文的意思，不然會被英文名詞嚇唬了。超級多英文縮寫名詞啊!</p>\n</blockquote>\n<p>可以透過下方影片了解 API 的概念。</p>\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/zvKadd9Cflc\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n\n<hr>\n<p>想要透過 DOM API 取得節點，透過 JavaScript 可以這樣寫：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 根據傳入的值，找到 DOM 中 id 為 'xxx' 的元素。</span></span><br><span class=\"line\"><span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"xxx\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 針對給定的 tag 名稱，回傳所有符合條件的 NodeList 物件 [註1]</span></span><br><span class=\"line\"><span class=\"built_in\">document</span>.getElementsByTagName(<span class=\"string\">\"xxx\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 針對給定的 class 名稱，回傳所有符合條件的 NodeList 物件。</span></span><br><span class=\"line\"><span class=\"built_in\">document</span>.getElementsByClassName(<span class=\"string\">\"xxx\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 針對給定的 Selector 條件，回傳第一個 或 所有符合條件的 NodeList。</span></span><br><span class=\"line\"><span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\"xxx\"</span>);</span><br><span class=\"line\"><span class=\"built_in\">document</span>.querySelectorAll(<span class=\"string\">\"xxx\"</span>);</span><br></pre></td></tr></table></figure>\n\n<p>而透過 DOM API 選取出來的節點，我們可以透過操作 <code>textContent</code> 屬性來變更它的文字。</p>\n<p>設定一個 HTML 屬性節點為 <code>id</code>，名稱為 <code>greet</code>：</p>\n<p><code>&lt;h1 id=&quot;greet&quot;&gt;&lt;/h1&gt;</code></p>\n<p>可以先透過 <code>document.querySelector()</code> 選取方法來取得節點，然後修改 <code>textContent</code> 屬性：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;<span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'#greet'</span>).textContent = <span class=\"string\">'Hello World!'</span>&lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>可以看一下 <a href=\"https://codepen.io/hnzxewqw/pen/RwPRdjL?editors=1010\" target=\"_blank\" rel=\"noopener\">codepen</a></p>\n<p>這樣就可以透過 JavaScript 在網頁上輸出 <strong>“Hello World!”</strong> 囉！</p>\n<h2 id=\"心得\"><a href=\"#心得\" class=\"headerlink\" title=\"心得\"></a>心得</h2><p>一開始有學到 <code>getByElementById</code> 來賦予 <code>id</code> 的內容，後面會學習到透過 <code>querySelector</code> 能選擇的屬性更多元! jQuery 的 <code>$</code> 錢字號概念就是從 DOM API 取得方式來的。</p>\n<p>參考文章：<a href=\"https://ithelp.ithome.com.tw/articles/10191666\" target=\"_blank\" rel=\"noopener\">https://ithelp.ithome.com.tw/articles/10191666</a></p>\n","categories":["JavaScript"],"tags":["JavaScript"]},{"title":"jQuery 筆記 - 動態改變字體大小與背景顏色","url":"/jQuery/20200612/2695853287/","content":"<p><img src=\"https://images.unsplash.com/photo-1518621615557-ceb61d737b3c?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1950&q=80\" alt=\"different\"></p>\n<p>更換背景與字體顏色與大小，是在許多頁面中很常見的功能，記錄一下這個寫法。</p>\n<h2 id=\"HTML-結構\"><a href=\"#HTML-結構\" class=\"headerlink\" title=\"HTML 結構\"></a>HTML 結構</h2><p>HTML 的結構很簡單，就是把背景按鈕跟字體大小按鈕寫好，另外這邊使用 CSS 與 jQuery ClassName 分離管理，有需要 jQuery 的部分加「前綴詞 jq-xxx」，以便知道這邊要使用 jQuery 來控制。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"wrap\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"header\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btnGroup\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>背景色：<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn btnBlack jq-black\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn btnWhite jq-white\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn btnYellow jq-yellow\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fontSize\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"font jq-large\"</span>&gt;</span>大<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"font jq-medium\"</span>&gt;</span>中<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"font jq-small\"</span>&gt;</span>小<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"main\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>經過刷新，立即。<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">      滑鼠外掛提醒起來思想過了過去免費電影協助著名全部，下載手裡網遊不了穩定深刻回答此處感到下面姑娘都有，熱情本次工廠好了網站一級時期期間，日期基層幫助睡覺住了接到，屏東指南批准轉載使得聰明一部臺灣，資金自主春節全文只有人事專業開關朋友馬上什麼命運人才健康，效。</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">      滑鼠外掛提醒起來思想過了過去免費電影協助著名全部，下載手裡網遊不了穩定深刻回答此處感到下面姑娘都有，熱情本次工廠好了網站一級時期期間，日期基層幫助睡覺住了接到，屏東指南批准轉載使得聰明一部臺灣，資金自主春節全文只有人事專業開關朋友馬上什麼命運人才健康，效。</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">      滑鼠外掛提醒起來思想過了過去免費電影協助著名全部，下載手裡網遊不了穩定深刻回答此處感到下面姑娘都有，熱情本次工廠好了網站一級時期期間，日期基層幫助睡覺住了接到，屏東指南批准轉載使得聰明一部臺灣，資金自主春節全文只有人事專業開關朋友馬上什麼命運人才健康，效。</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"jQuery-寫法\"><a href=\"#jQuery-寫法\" class=\"headerlink\" title=\"jQuery 寫法\"></a>jQuery 寫法</h2><p>因為字體大小與背景顏色算是滿固定的功能，也不需要運算，所以這邊直接動態修改屬性與值。<br>因為網頁預設字體大小是 16px，故將中字體就固定為 16px，這樣在起始頁面時，不會在更換字體時覺得奇怪。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//背景更改</span></span><br><span class=\"line\">$(<span class=\"string\">\".jq-black\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">  event.preventDefault(); <span class=\"comment\">//取消預設行為</span></span><br><span class=\"line\">  $(<span class=\"string\">\".main\"</span>).css(&#123;</span><br><span class=\"line\">    <span class=\"string\">\"background-color\"</span>: <span class=\"string\">\"#333\"</span>,</span><br><span class=\"line\">    color: <span class=\"string\">\"#fff\"</span>,</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">$(<span class=\"string\">\".jq-white\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">  event.preventDefault(); <span class=\"comment\">//取消預設行為</span></span><br><span class=\"line\">  $(<span class=\"string\">\".main\"</span>).css(&#123;</span><br><span class=\"line\">    <span class=\"string\">\"background-color\"</span>: <span class=\"string\">\"#eeeeee\"</span>,</span><br><span class=\"line\">    color: <span class=\"string\">\"#333\"</span>,</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">$(<span class=\"string\">\".jq-yellow\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">  event.preventDefault(); <span class=\"comment\">//取消預設行為</span></span><br><span class=\"line\">  $(<span class=\"string\">\".main\"</span>).css(&#123;</span><br><span class=\"line\">    <span class=\"string\">\"background-color\"</span>: <span class=\"string\">\"#fff891\"</span>,</span><br><span class=\"line\">    color: <span class=\"string\">\"#333\"</span>,</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//文字大小更改</span></span><br><span class=\"line\">$(<span class=\"string\">\".jq-large\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">  event.preventDefault(); <span class=\"comment\">//取消預設行為</span></span><br><span class=\"line\">  $(<span class=\"string\">\"h2\"</span>).css(<span class=\"string\">\"font-size\"</span>, <span class=\"string\">\"28px\"</span>);</span><br><span class=\"line\">  $(<span class=\"string\">\"p\"</span>).css(<span class=\"string\">\"font-size\"</span>, <span class=\"string\">\"18px\"</span>);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">$(<span class=\"string\">\".jq-medium\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">  event.preventDefault(); <span class=\"comment\">//取消預設行為</span></span><br><span class=\"line\">  $(<span class=\"string\">\"h2\"</span>).css(<span class=\"string\">\"font-size\"</span>, <span class=\"string\">\"24px\"</span>);</span><br><span class=\"line\">  $(<span class=\"string\">\"p\"</span>).css(<span class=\"string\">\"font-size\"</span>, <span class=\"string\">\"16px\"</span>);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">$(<span class=\"string\">\".jq-small\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">  event.preventDefault(); <span class=\"comment\">//取消預設行為</span></span><br><span class=\"line\">  $(<span class=\"string\">\"h2\"</span>).css(<span class=\"string\">\"font-size\"</span>, <span class=\"string\">\"20px\"</span>);</span><br><span class=\"line\">  $(<span class=\"string\">\"p\"</span>).css(<span class=\"string\">\"font-size\"</span>, <span class=\"string\">\"12px\"</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<iframe height=\"800\" style=\"width: 100%;\" src=\"https://codepen.io/tim_hsu/embed/ExPKxba?height=265&theme-id=light&default-tab=result\"></iframe>\n","categories":["jQuery"],"tags":["jQuery"]},{"title":"jQuery 筆記 - 下拉收闔選單寫法","url":"/jQuery/20200612/2943313098/","content":"<p><img src=\"https://images.unsplash.com/photo-1586015988173-ee1a56ffe8fd?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1350&q=80\" alt=\"drawer\"><br>很多拍賣網站會看到 header 選單，點擊項目按鈕後，才會出現子選單，這次來筆記一下。</p>\n<h2 id=\"HTML-架構\"><a href=\"#HTML-架構\" class=\"headerlink\" title=\"HTML 架構\"></a>HTML 架構</h2><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"dropdownMenu\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>產品一<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>產品二<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn jq-clickBtn\"</span>&gt;</span>請點我<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"dropdownList jq-dropdown\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>商品一<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>商品二<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>商品三<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>在第三個 <code>li</code> 中放入子選單，把要控制的地方另外加入 <code>className</code>，讓 CSS 與 jQuery 分開管理，因為一開始 <code>dropdownList</code> 要隱藏，所以 CSS 要設定 <code>display:none;</code>，並增加一個 <code>.active</code> ，等等要透過 jQuery 來動態增加 class。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.dropdownList</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: none;</span><br><span class=\"line\">    li &#123;</span><br><span class=\"line\">      <span class=\"selector-tag\">display</span>: <span class=\"selector-tag\">flex</span>;</span><br><span class=\"line\">      <span class=\"selector-tag\">justify-content</span>: <span class=\"selector-tag\">center</span>;</span><br><span class=\"line\">      <span class=\"selector-tag\">align-items</span>: <span class=\"selector-tag\">center</span>;</span><br><span class=\"line\">      // flex-direction: column;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  &amp;<span class=\"selector-class\">.active</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: block;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"jQuery-行為\"><a href=\"#jQuery-行為\" class=\"headerlink\" title=\"jQuery 行為\"></a>jQuery 行為</h2><p>綁定按鈕，並且給予 <code>click</code> 事件，點擊按鈕時動態增加 <code>.active</code>，並且使 <code>dropdownList</code> 產生收合功能。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">$(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  $(<span class=\"string\">'.jq-clickBtn'</span>).click(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">    e.preventDefault();</span><br><span class=\"line\">    $(<span class=\"string\">'.jq-clickBtn'</span>).toggleClass(<span class=\"string\">'active'</span>);</span><br><span class=\"line\">    $(<span class=\"string\">'.jq-dropdown'</span>).slideToggle();</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<iframe height=\"350\" style=\"width: 100%;\" src=\"https://codepen.io/hnzxewqw/embed/QWyELzg?height=265&theme-id=light&default-tab=result\"></iframe>","categories":["jQuery"],"tags":["jQuery"]},{"title":"jQuery 筆記 - delay() 延遲動畫效果","url":"/jQuery/20200612/4108502825/","content":"<p><img src=\"https://images.unsplash.com/photo-1551129455-7d7ada16936c?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1161&q=80\" alt=\"delay\"></p>\n<p>筆記一個很簡單但也滿實用的方法，<code>delay();</code>，可以加在其他動畫效果語法之前，並輸入時間就可以達到效果。</p>\n<p>直接看程式碼，點擊按鈕可以得到三個方塊輪流出現。</p>\n<h2 id=\"HTML-架構\"><a href=\"#HTML-架構\" class=\"headerlink\" title=\"HTML 架構\"></a>HTML 架構</h2><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn jq-click\"</span>&gt;</span>click<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"box box1\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"box box2\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"box box3\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"jQuery-寫法\"><a href=\"#jQuery-寫法\" class=\"headerlink\" title=\"jQuery 寫法\"></a>jQuery 寫法</h2><p>把想要延遲的時間寫在 <code>delay();</code> 中就可以了，很簡單吧!</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">$(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  $(<span class=\"string\">\".jq-click\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">    e.preventDefault();</span><br><span class=\"line\">    $(<span class=\"string\">\".box1\"</span>).delay(<span class=\"number\">600</span>).fadeToggle(<span class=\"number\">300</span>);</span><br><span class=\"line\">    $(<span class=\"string\">\".box2\"</span>).delay(<span class=\"number\">1200</span>).fadeToggle(<span class=\"number\">500</span>);</span><br><span class=\"line\">    $(<span class=\"string\">\".box3\"</span>).delay(<span class=\"number\">1800</span>).fadeToggle(<span class=\"number\">1000</span>);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<iframe height=\"450\" style=\"width: 100%;\" src=\"https://codepen.io/tim_hsu/embed/xxZVKJB?height=265&theme-id=light&default-tab=result\"></iframe>\n","categories":["jQuery"],"tags":["jQuery"]},{"title":"jQuery 筆記 - 讓 checkbox 預設值為選取方法","url":"/jQuery/20200612/3811422616/","content":"<p><img src=\"https://images.unsplash.com/photo-1484480974693-6ca0a78fb36b?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1352&q=80\" alt=\"image alt\"></p>\n<p>這次專案上使用到 checkbox 的方法，若要預設讓 checkbox 為勾選可以這樣寫。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">label</span></span></span><br><span class=\"line\"><span class=\"tag\">  &gt;</span>checkbox</span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span> <span class=\"attr\">checked</span>=<span class=\"string\">\"checked\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"css\">  <span class=\"selector-tag\">input</span><span class=\"selector-pseudo\">:checked</span> &#123;</span></span><br><span class=\"line\">    width: 50px;</span><br><span class=\"line\">    height: 50px;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<iframe height=\"265\" style=\"width: 100%;\"  src=\"https://codepen.io/hnzxewqw/embed/pogbzxW?height=265&theme-id=light&default-tab=result\" ></iframe>\n\n<blockquote>\n<p>CSS 這樣設定可以在選取時讓 checkbox 變大 <del>(好，我知道滿無聊的。)</del></p>\n</blockquote>\n<p>這沒什麼問題，但因為客戶想要預設畫面已經讓 checkbox 勾選，並讓 <code>checkbox</code> 勾選時變色，但 <code>checkbox</code> 無法透過 CSS 改變這個設定，所以就要用到偽元素來做。</p>\n<h2 id=\"偽元素無法取消-checked\"><a href=\"#偽元素無法取消-checked\" class=\"headerlink\" title=\"偽元素無法取消 checked\"></a>偽元素無法取消 checked</h2><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"checkbox-group\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">\"checkbox3\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span> <span class=\"attr\">checked</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">\"checkbox3\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"icon-checkbox\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>Checked<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>如下方所見，如果這樣寫，偽元素變成沒辦法取消選取…</p>\n<iframe height=\"265\" style=\"width: 100%;\" src=\"https://codepen.io/hnzxewqw/embed/abdZoRR?height=265&theme-id=light&default-tab=result\" ></iframe>\n\n<p>然後如果不解決就慘了。</p>\n<h2 id=\"prop\"><a href=\"#prop\" class=\"headerlink\" title=\"prop()\"></a>prop()</h2><p>這時候就可以使用外部賦予值，在 <code>input</code> 刪掉原本的 <code>checked</code> 屬性，再新增一個 <code>class=&quot;jq-checked&quot;</code>，並加上這段 jQuery 程式碼，解決!!</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">\".jq-checked\"</span>).prop(<span class=\"string\">\"checked\"</span>, <span class=\"literal\">true</span>);</span><br></pre></td></tr></table></figure>\n\n<iframe height=\"265\" style=\"width: 100%;\"  src=\"https://codepen.io/hnzxewqw/embed/abdZoaR?height=265&theme-id=light&default-tab=result\"></iframe>\n\n<p>客戶的要求總是發現新玩意!</p>\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><ul>\n<li><a href=\"https://cythilya.github.io/2017/09/10/jquery-attr-vs-prop/\" target=\"_blank\" rel=\"noopener\">jQuery .attr() vs .prop()</a></li>\n</ul>\n","categories":["jQuery"],"tags":["jQuery"]},{"title":"CSS 筆記 - CSS Filter 濾鏡效果","url":"/css/20200610/3064004331/","content":"<p><img src=\"https://images.unsplash.com/photo-1588618943372-a99e4ac947fe?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1945&q=80\" alt=\"filter\"></p>\n<p>CSS 的 <code>filter</code> 濾鏡功能非常好用，除了不用一直設定 CSS 的屬性外，也是讓效果透過簡單的程式碼就可以解決！如果懶得再用 <code>Photoshop</code> 調整圖片，也是一個不錯的選擇！</p>\n<p>語法相當簡單，就是在想要做特效的標籤中加入 <code>filter:濾鏡效果(參數);</code> 就可以了，例如：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">img</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">400px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">filter</span>: <span class=\"built_in\">blur</span>(<span class=\"number\">3px</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>濾鏡效果如下：</p>\n<h2 id=\"drop-shadow-下拉陰影\"><a href=\"#drop-shadow-下拉陰影\" class=\"headerlink\" title=\"drop-shadow 下拉陰影\"></a>drop-shadow 下拉陰影</h2><p><code>drop-shadow</code> 會按照元素的原始內容去產生陰影，而 <code>box-shadow</code> 則是以區塊的方式來產生。<br>語法:<code>filter: drop-shadow(8px 8px 10px #000);</code> 其對應位置與 <code>box-shadow</code> 相同。</p>\n<ul>\n<li>格式：(水平 垂直 模糊度 擴散 顏色)</li>\n<li>水平/垂直(px)：設定陰影的位置</li>\n<li>模糊度(px)：設定陰影模糊程度，值越大就越模糊</li>\n<li>擴大(px)：設定陰影模糊放大的程度，一樣是值越大就越就越大</li>\n<li>顏色(色碼)：設定陰影的顏色</li>\n</ul>\n<h2 id=\"blur-高斯模糊\"><a href=\"#blur-高斯模糊\" class=\"headerlink\" title=\"blur 高斯模糊\"></a>blur 高斯模糊</h2><p>高斯模糊的參數單位使用 <code>px</code> 或是 <code>rem</code>，0 為最清晰，數值越高越模糊，不接受百分比 <code>%</code> 做為單位，可以輸入，但不會產生效果。</p>\n<h2 id=\"grayscale-灰階\"><a href=\"#grayscale-灰階\" class=\"headerlink\" title=\"grayscale 灰階\"></a>grayscale 灰階</h2><p>灰階程度，參數單位為小數點 (ex.0.7) 或是 70% 的灰階，皆為相同效果。</p>\n<h2 id=\"hue-rotate-色相旋轉\"><a href=\"#hue-rotate-色相旋轉\" class=\"headerlink\" title=\"hue-rotate 色相旋轉\"></a>hue-rotate 色相旋轉</h2><p>以<code>度(deg)</code>為單位，<code>0 度</code> 與 <code>180 度</code>效果相同，<code>90 度</code>與 <code>270 度</code>效果相同，另外可使用 <code>turn</code> 做為旋轉的幅度，</p>\n<blockquote>\n<p>ex. <code>1</code> 為一圈 <code>360 度</code>， <code>0.5turn</code> 為 <code>180 度</code>，但我懶得轉換運算，所以大多用度來設定。</p>\n</blockquote>\n<h2 id=\"invert-負片效果\"><a href=\"#invert-負片效果\" class=\"headerlink\" title=\"invert 負片效果\"></a>invert 負片效果</h2><p>以小數點或百分比為單位，0.3 跟 30% 的效果相同。50% 的效果會變成全灰。</p>\n<h2 id=\"opacity-透明度\"><a href=\"#opacity-透明度\" class=\"headerlink\" title=\"opacity 透明度\"></a>opacity 透明度</h2><p>以小數點或百分比為單位，0.3 跟 30% 的效果相同。</p>\n<h2 id=\"saturate-飽和度\"><a href=\"#saturate-飽和度\" class=\"headerlink\" title=\"saturate 飽和度\"></a>saturate 飽和度</h2><p>以百分比為單位，0% 為無效果，100% 正常飽和度，200%過飽和度。</p>\n<h2 id=\"sepia-懷舊\"><a href=\"#sepia-懷舊\" class=\"headerlink\" title=\"sepia 懷舊\"></a>sepia 懷舊</h2><p>以小數點或百分比為單位，0.3 跟 30% 的效果相同。</p>\n<h2 id=\"contrast-對比度\"><a href=\"#contrast-對比度\" class=\"headerlink\" title=\"contrast 對比度\"></a>contrast 對比度</h2><p>以小數點或百分比為單位，初始值 100%，大於對比變大，小於對比變小。</p>\n<h2 id=\"brightness-亮度\"><a href=\"#brightness-亮度\" class=\"headerlink\" title=\"brightness 亮度\"></a>brightness 亮度</h2><p>初始值 100%，大於就變亮，小於就變暗。</p>\n<iframe height=\"600\" style=\"width: 100%;\"  src=\"https://codepen.io/hnzxewqw/embed/MWKKVpR?height=265&theme-id=light&default-tab=result\" ></iframe>\n參考資料：\n\n<ul>\n<li><a href=\"https://wcc723.github.io/css/2013/10/06/css-fliter/\" target=\"_blank\" rel=\"noopener\">CSS 沒有極限 - CSS3 Fliter 效果</a></li>\n<li><a href=\"https://devdocs.io/css/filter\" target=\"_blank\" rel=\"noopener\">CSS Demo: filter</a></li>\n<li><a href=\"https://www.eztrust.com.tw/html/webdesign/show.aspx?num=13&category=B&kind=10\" target=\"_blank\" rel=\"noopener\">什麼?? CSS 也有濾鏡可以用! (CSS3 filter)</a></li>\n<li><a href=\"https://www.oxxostudio.tw/articles/201407/css-webkit-filter.html\" target=\"_blank\" rel=\"noopener\">CSS webkit filter</a></li>\n</ul>\n","categories":["CSS"],"tags":["CSS"]},{"title":"CSS 筆記 - 寫一個 iPhone 開關效果","url":"/css/20200610/4073219914/","content":"<p><img src=\"https://images.unsplash.com/photo-1591182136289-67ff16828fd4?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1267&q=80\" alt=\"image alt\"></p>\n<p>再研究 checkbox 屬性，看到<a href=\"https://www.youtube.com/watch?v=XCyrzYp3aCY&feature=youtu.be\" target=\"_blank\" rel=\"noopener\">此篇</a>覺得非常實用，就拿來當作筆記，未來有機會就可以不用再重新查找，透過純 CSS 來寫一個開關，很純，沒有 JavaScript。</p>\n<h2 id=\"HTML-架構\"><a href=\"#HTML-架構\" class=\"headerlink\" title=\"HTML 架構\"></a>HTML 架構</h2><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"switch\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"checkbox\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn_box\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"text\"</span>&gt;</span>OFF / ON<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><code>input</code> 是用 <code>checkbox</code> 的類別，因為通常開關會很多，且獨立可個別點擊。</p>\n<h2 id=\"CSS-樣式\"><a href=\"#CSS-樣式\" class=\"headerlink\" title=\"CSS 樣式\"></a>CSS 樣式</h2><p>再看一下 CSS layout，其中因為要做成膠囊式的 <code>input</code>，建議使用像素，不要用百分比，只要像素條得夠大，都會是膠囊式的呈現。</p>\n<p><code>.btn_box</code> 使用 <code>display:inline-block</code> 為了可以讓該元素與文字可以做對齊而使用。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.btn_box</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: inline-block;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">40px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">  border-radius: 100px; //膠囊式圓角不要用百分比</span><br><span class=\"line\">  <span class=\"selector-tag\">background-color</span>: <span class=\"selector-id\">#cccccc</span>;</span><br><span class=\"line\">  box-shadow: 0px 3px 2px rgba($color: #000000, $alpha: 0.2) inset; //按鈕框內部加上陰影</span><br><span class=\"line\">  vertical-align: middle; //因為 `display:inline-block` 的特性，可以使用此語法。</span><br><span class=\"line\">  <span class=\"selector-tag\">margin-right</span>: 10<span class=\"selector-tag\">px</span>;</span><br><span class=\"line\">  <span class=\"selector-class\">.btn</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: block;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">border-radius</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: <span class=\"number\">#ffffff</span>;</span><br><span class=\"line\">    <span class=\"attribute\">margin-left</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">    transition: all 0.5s; //為了讓按鈕有漸變移動的效果</span><br><span class=\"line\">    box-shadow: 1px 2px 5px rgba($color: #000000, $alpha: 0.3);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>完成後，之後會得到一個靜態無法使用的開關了，目前已經完成一半，接下來要給開關來點動畫效果。</p>\n<h3 id=\"動畫效果\"><a href=\"#動畫效果\" class=\"headerlink\" title=\"動畫效果\"></a>動畫效果</h3><p>善用 <code>transition</code> 可以完成好多動畫效果，這個語法真的超級好用，因為外層已經有包覆 <code>label</code>，所以點選文字也可以有觸動 <code>checkbox</code> 的效果，但視覺上是用讓開關能夠使用，要把 <code>checkbox</code> 隱藏。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.checkbox</span> &#123;</span><br><span class=\"line\">  position: absolute; //絕對定位沒有特別寫位置，元素不會亂跑，會留在原位。</span><br><span class=\"line\">  opacity: 0; //隱藏 checkbox</span><br><span class=\"line\">  // input[type='checkbox']</span><br><span class=\"line\">  &amp;<span class=\"selector-pseudo\">:checked</span> + <span class=\"selector-class\">.btn_box</span> &#123;</span><br><span class=\"line\">    //選取到下一個元素</span><br><span class=\"line\">    <span class=\"selector-tag\">background-color</span>: <span class=\"selector-id\">#5ee45e</span>;</span><br><span class=\"line\">    <span class=\"selector-class\">.btn</span> &#123;</span><br><span class=\"line\">      <span class=\"attribute\">margin-left</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"隱藏-checkbox\"><a href=\"#隱藏-checkbox\" class=\"headerlink\" title=\"隱藏 checkbox\"></a>隱藏 checkbox</h3><ul>\n<li><p>直接使用絕對定位來做，絕對定位沒有特別寫位置，元素不會亂跑，會留在原位。把 <code>opacity</code> 改成 1，就會看到了。</p>\n</li>\n<li><p>再寫上當使用 <code>:checked</code> 效果時 <code>.btn_box</code> 會改變顏色，並且 <code>.btn</code> 會往左推 20px。</p>\n</li>\n</ul>\n<iframe height=\"265\" style=\"width: 100%;\" src=\"https://codepen.io/hnzxewqw/embed/MWKKVjx?height=265&theme-id=light&default-tab=result\"></iframe>\n\n<p>這樣就完成了！真的很有意思!</p>\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><ul>\n<li><a href=\"https://ithelp.ithome.com.tw/articles/10222941\" target=\"_blank\" rel=\"noopener\">:checked 表單狀態選取器 - 讓你可以開開關關好開勳</a></li>\n<li></li>\n<li><a href=\"https://www.youtube.com/watch?v=XCyrzYp3aCY&feature=youtu.be\" target=\"_blank\" rel=\"noopener\">阿莫斯の網頁料理室 : CSS checked 選取器的應用 | CSS 教學 | CSS3 | 網頁教學 | 切版</a></li>\n</ul>\n","categories":["CSS"],"tags":["CSS"]},{"title":"jQuery 筆記 - 選擇器的選法與基本動畫效果語法","url":"/jQuery/20200609/184811241/","content":"<p><img src=\"https://images.unsplash.com/photo-1583365978529-042d9f46dccc?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1350&q=80\" alt=\"animation\"></p>\n<p>jQuery 是直接控制網頁元素的效果，直關且強大，筆記一些基本會使用到的語法。當然更多可以參考<a href=\"https://api.jquery.com/\" target=\"_blank\" rel=\"noopener\">官網</a>。</p>\n<h2 id=\"選擇器\"><a href=\"#選擇器\" class=\"headerlink\" title=\"選擇器\"></a>選擇器</h2><p>使用 <code>$</code> 字號當作選擇器，相當於原生語法的 <code>document.getElementById()</code> 以及 <code>querySelector</code>，一個錢字號就可以少打這麼多字母。</p>\n<p>並且用小括號與引號包住要選擇的 <code>class</code> 或 <code>id</code> 或<code>網頁元素</code>，結尾要用分號標示，才會是完整的語法，如 <code>$(&#39; &#39;);</code>。</p>\n<p>常見的選擇器使用方式有：</p>\n<h3 id=\"選擇-class\"><a href=\"#選擇-class\" class=\"headerlink\" title=\"選擇 class\"></a>選擇 class</h3><p>因為是選擇 Class ，所以前面要加 <code>.</code> ，如範例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">\".ClassName\"</span>).fadeIn();</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"選擇-id\"><a href=\"#選擇-id\" class=\"headerlink\" title=\"選擇 id\"></a>選擇 id</h3><p>選擇 id，前面要加 <code>#</code> 字號</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">\"#id\"</span>).hide();</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"選擇元素\"><a href=\"#選擇元素\" class=\"headerlink\" title=\"選擇元素\"></a>選擇元素</h3><p>選擇網頁元素，不用加符號。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">\"h1\"</span>).show();</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"hide\"><a href=\"#hide\" class=\"headerlink\" title=\"hide()\"></a>hide()</h2><p>使元素隱藏，在 HTML 會產生 CSS <code>display:none;</code>，參數可放入秒數，ex. 1000 毫秒。</p>\n<h2 id=\"show\"><a href=\"#show\" class=\"headerlink\" title=\"show()\"></a>show()</h2><p>可使原本預設 <code>display:none;</code> 的元素顯示，參數可放入秒數，ex. 1000 毫秒。</p>\n<h2 id=\"toggle\"><a href=\"#toggle\" class=\"headerlink\" title=\"toggle()\"></a>toggle()</h2><p>可切換設定的 <code>hide();</code> 與 <code>show();</code> 的效果，參數可放入秒數，ex. 1000 毫秒。</p>\n<h2 id=\"slide-滑動系列\"><a href=\"#slide-滑動系列\" class=\"headerlink\" title=\"slide() 滑動系列\"></a>slide() 滑動系列</h2><h3 id=\"slideUp\"><a href=\"#slideUp\" class=\"headerlink\" title=\"slideUp()\"></a>slideUp()</h3><p>使元素往上滑動，參數可放入秒數，ex. 1000 毫秒。</p>\n<h3 id=\"slideDown\"><a href=\"#slideDown\" class=\"headerlink\" title=\"slideDown()\"></a>slideDown()</h3><p>使元素往下滑動，參數可放入秒數，ex. 1000 毫秒。</p>\n<h3 id=\"slideToggle\"><a href=\"#slideToggle\" class=\"headerlink\" title=\"slideToggle()\"></a>slideToggle()</h3><p>使元素切換滑動效果，點擊會自動向下/上滑動，參數可放入秒數，ex. 1000 毫秒。</p>\n<h2 id=\"fade-淡化系列\"><a href=\"#fade-淡化系列\" class=\"headerlink\" title=\"fade() 淡化系列\"></a>fade() 淡化系列</h2><h3 id=\"fadeIn\"><a href=\"#fadeIn\" class=\"headerlink\" title=\"fadeIn()\"></a>fadeIn()</h3><p>使元素有淡入效果，參數可放入秒數，ex. 1000 毫秒。</p>\n<h3 id=\"fadeOut\"><a href=\"#fadeOut\" class=\"headerlink\" title=\"fadeOut()\"></a>fadeOut()</h3><p>使元素有淡出效果，參數可放入秒數，ex. 1000 毫秒。</p>\n<h3 id=\"fadeToggle\"><a href=\"#fadeToggle\" class=\"headerlink\" title=\"fadeToggle()\"></a>fadeToggle()</h3><p>使元素自動切換淡入與淡出效果，參數可放入秒數，ex. 1000 毫秒。</p>\n<h2 id=\"Class-常常搭配-active\"><a href=\"#Class-常常搭配-active\" class=\"headerlink\" title=\"Class 常常搭配 active\"></a>Class 常常搭配 active</h2><h3 id=\"addClass\"><a href=\"#addClass\" class=\"headerlink\" title=\"addClass()\"></a>addClass()</h3><p>動態增加 class，參數放入 class 名稱。</p>\n<h3 id=\"removeClass\"><a href=\"#removeClass\" class=\"headerlink\" title=\"removeClass()\"></a>removeClass()</h3><p>動態移除 class，參數放入 class 名稱。</p>\n<h3 id=\"toggleClass\"><a href=\"#toggleClass\" class=\"headerlink\" title=\"toggleClass()\"></a>toggleClass()</h3><p>動態增加與移除 class，參數放入 class 名稱。</p>\n<h2 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h2><iframe height=\"900\" style=\"width: 100%;\" src=\"https://codepen.io/tim_hsu/embed/oNbgXWB?height=265&theme-id=light&default-tab=result\"></iframe>\n","categories":["jQuery"],"tags":["jQuery"]},{"title":"JS 筆記 - 使用 select 選到該功能並執行其中內容","url":"/javascript/20200609/2466460421/","content":"<p><img src=\"https://images.unsplash.com/photo-1475010040281-9c4f94108f91?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1224&q=80\" alt=\"choose\"></p>\n<p>這次要寫一個 select 選單，並選擇該功能後會對應到該功能。</p>\n<h2 id=\"建立選單\"><a href=\"#建立選單\" class=\"headerlink\" title=\"建立選單\"></a>建立選單</h2><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">label</span></span></span><br><span class=\"line\"><span class=\"tag\">  &gt;</span>Select:</span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">\"selectMode\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"1\"</span>&gt;</span>option_01<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"2\"</span>&gt;</span>option_02<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"3\"</span>&gt;</span>option_03<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"4\"</span>&gt;</span>option_04<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"5\"</span>&gt;</span>option_05<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"6\"</span>&gt;</span>option_06<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"JavaScript-寫法\"><a href=\"#JavaScript-寫法\" class=\"headerlink\" title=\"JavaScript 寫法\"></a>JavaScript 寫法</h2><p>首先要綁定 <code>Select</code> 選單，並給一個 <code>change</code> 事件。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> select = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\"#selectMode\"</span>);</span><br><span class=\"line\">select.addEventListener(<span class=\"string\">\"change\"</span>, selectFun);</span><br></pre></td></tr></table></figure>\n\n<p>要執行的 function，將<strong>要取得的值</strong>這個動作<strong>寫在函式中</strong>，不然無法選到。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">selectFun</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> switchValue = select.options[select.selectedIndex].value;</span><br><span class=\"line\">  <span class=\"keyword\">switch</span> (switchValue) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">\"1\"</span>:</span><br><span class=\"line\">      option_01();</span><br><span class=\"line\">      <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">\"2\"</span>:</span><br><span class=\"line\">      option_02();</span><br><span class=\"line\">      <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">\"3\"</span>:</span><br><span class=\"line\">      option_03();</span><br><span class=\"line\">      <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">\"4\"</span>:</span><br><span class=\"line\">      option_04();</span><br><span class=\"line\">      <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">\"5\"</span>:</span><br><span class=\"line\">      option_05();</span><br><span class=\"line\">      <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">\"6\"</span>:</span><br><span class=\"line\">      option_06();</span><br><span class=\"line\">      <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">default</span>:</span><br><span class=\"line\">      <span class=\"keyword\">return</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>對應的函式功能。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">option_01</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  alert(<span class=\"string\">\"選到 option_01\"</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">option_02</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  alert(<span class=\"string\">\"選到 option_02\"</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">option_03</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  alert(<span class=\"string\">\"選到 option_03\"</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">option_04</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  alert(<span class=\"string\">\"選到 option_04\"</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">option_05</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  alert(<span class=\"string\">\"選到 option_05\"</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">option_06</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  alert(<span class=\"string\">\"選到 option_06\"</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>這樣就可以順利取到該功能的內容了，其中這一行程式碼可以有幾個寫法。</p>\n<h3 id=\"原生寫法\"><a href=\"#原生寫法\" class=\"headerlink\" title=\"原生寫法\"></a>原生寫法</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> switchValue = select.options[select.selectedIndex].value;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"使用-this\"><a href=\"#使用-this\" class=\"headerlink\" title=\"使用 this\"></a>使用 this</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> switchValue = <span class=\"keyword\">this</span>.value;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"使用-jQuery\"><a href=\"#使用-jQuery\" class=\"headerlink\" title=\"使用 jQuery\"></a>使用 jQuery</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">\"#selectMode\"</span>).change(selectFun);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">selectFun</span>(<span class=\"params\">value</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> switchValue = $(<span class=\"keyword\">this</span>).val();</span><br><span class=\"line\">  <span class=\"keyword\">switch</span> (switchValue) &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>這時候真心覺得 this 跟 jQuery 真棒!</p>\n<p>CodePen <a href=\"https://codepen.io/hnzxewqw/pen/jOWbjEe\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/jOWbjEe</a></p>\n","categories":["JavaScript"],"tags":["JavaScript","jQuery"]},{"title":"JS 筆記 - 透過 OPEN DATA 取得 JSON 資料","url":"/javascript/20200606/2734980592/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/JavaScript%20note-01.jpg?alt=media&token=7bee0261-72ac-4de4-9f5a-f39d58735b7d\" alt=\"JavaScript Note\"></p>\n<p>在取得 Open Data 前，要先認識 JSON 資料。</p>\n<h2 id=\"什麼是-JSON\"><a href=\"#什麼是-JSON\" class=\"headerlink\" title=\"什麼是 JSON\"></a>什麼是 JSON</h2><p>JSON（<strong>J</strong>ava<strong>S</strong>cript <strong>O</strong>bject <strong>N</strong>otation，<strong>JavaScript 物件表示法</strong>，讀法就有點像是英文名字的 JASON）是一種由道格拉斯·克羅克福特構想和設計、輕量級的資料交換語言，該語言以易於讓人閱讀的文字為基礎，用來傳輸由屬性值或者序列性的值組成的資料物件。儘管 JSON 是 JavaScript 的一個子集，但 JSON 是獨立於語言的文字格式，並且採用了類似於 C 語言家族的一些習慣。</p>\n<p>JSON 資料格式與語言無關。即便它源自 JavaScript，但目前很多程式語言都支援 JSON 格式資料的生成和解析。JSON 的官方 MIME 類型是 application/json，副檔名是 .json。</p>\n<p>參考來源：<a href=\"https://zh.wikipedia.org/wiki/JSON\" target=\"_blank\" rel=\"noopener\">維基百科 JSON</a></p>\n<p>簡單來說就是一個<strong>陣列</strong> + <strong>物件</strong>的文字檔案格式。</p>\n<hr>\n<h2 id=\"取得-OPEN-DATA-資料\"><a href=\"#取得-OPEN-DATA-資料\" class=\"headerlink\" title=\"取得 OPEN DATA 資料\"></a>取得 OPEN DATA 資料</h2><p>這次找了一個相關主題：找尋台北市信義區的哺乳室。</p>\n<blockquote>\n<p>身為一個孩子的爸，因為很常在百貨公司找哺乳室，有孩子的人一定了解找不到的窘境，尤其當新手爸媽好不容易有個在外的晚餐時刻，這時孩子解便的時候，就非常需要!</p>\n</blockquote>\n<hr>\n<p>這次我到台北市政府的首頁，找到路徑 &gt;&gt; _首頁&gt;市政資料館&gt;資訊公開_，再找到 _臺北市政府資料開放平台_，如下圖：</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/JS10-2.png?alt=media&token=ac87ff47-5a0d-457e-800f-e4faa5809920\" alt=\"臺北市政府資料開放平台\"></p>\n<p>點擊後會出現平台首頁：</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/JS10-3.png?alt=media&token=9e37d549-8b73-4d17-919c-faa30d25d05c\" alt=\"臺北市政府資料開放平台首頁\"></p>\n<p>搜尋哺乳室後，只會出現一個項目，點擊後會出現下方畫面，在選擇 API 選項(紅框處)，如下圖：</p>\n<blockquote>\n<p>目前網站改成直接下載 CVS</p>\n</blockquote>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/JS10-4.png?alt=media&token=afa6d63d-b7ff-4c58-89ce-63cdbb163912\" alt=\"臺北市哺集乳室\"></p>\n<p>會出現一些資訊告訴我們要怎麼取得資料，像是有 API 位址，資料異動的時間，使用 AJAX 方法要用 GET 取得資料。</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/JS10-5.png?alt=media&token=02bbaaee-8771-4756-a105-f8c922aaf9c3\" alt=\"API 頁面\"></p>\n<blockquote>\n<p>在練習的時候在 chrome 檢查工具有發現有三個格式有打錯，所以 <code>console</code> 無法顯示資料，等有空再去 PR 台北市政府。</p>\n</blockquote>\n<h2 id=\"使用-Chrome-的擴充套件看-JSON\"><a href=\"#使用-Chrome-的擴充套件看-JSON\" class=\"headerlink\" title=\"使用 Chrome 的擴充套件看 JSON\"></a>使用 Chrome 的擴充套件看 JSON</h2><p>複製 API 網址貼到新視窗的時候，會看到原始的 JSON 資料(嗯…)</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/JS10-6.png?alt=media&token=7dcdbeb5-e730-4ea9-85c8-c803aab04500\" alt=\"JSON 原始資料\"></p>\n<p>這時候可以下載 chrome 商店裡面的套件工具，<a href=\"https://chrome.google.com/webstore/detail/jsonview/chklaanhfefbnpoihckbnefhakgolnmc?hl=zh-TW\" target=\"_blank\" rel=\"noopener\">JSON View</a></p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/JS10-7.png?alt=media&token=a9e94084-a284-4eab-b2e2-846fb528c8c6\" alt=\"JSON 安裝套件\"></p>\n<p>安裝套件後就會看到 JSON 資料清楚很多!</p>\n<h2 id=\"從-JSON-找出需要的資料\"><a href=\"#從-JSON-找出需要的資料\" class=\"headerlink\" title=\"從 JSON 找出需要的資料\"></a>從 JSON 找出需要的資料</h2><p>先把 JSON 資料整個複製到編輯器中，並用一個變數框起來，如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> data=[&#123;</span><br><span class=\"line\">...JSON 資料 <span class=\"comment\">//因為 700 多筆，太長了，就這樣示意</span></span><br><span class=\"line\">&#125;]</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"HTML-環境\"><a href=\"#HTML-環境\" class=\"headerlink\" title=\"HTML 環境\"></a>HTML 環境</h3><p>要透過<strong>網頁</strong>掛載資料，還是需要先設定一下 <code>HTML</code> 環境。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width, initial-scale=1.0\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>台北市哺乳室<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"js/all.js\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"JavaScript\"><a href=\"#JavaScript\" class=\"headerlink\" title=\"JavaScript\"></a>JavaScript</h3><p>透過 JSON 找出台北市<strong>信義區</strong> <strong>百貨賣場</strong>的哺乳室。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> dataTotal = data.length; <span class=\"comment\">//資料長度</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; dataTotal; i++) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (data[i].category == <span class=\"string\">\"百貨賣場\"</span> &amp;&amp; data[i].DIS == <span class=\"string\">\"信義區\"</span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"區域:\"</span> + data[i].DIS + <span class=\"string\">\" 建築類型:\"</span> + data[i].category + <span class=\"string\">\" 地點名稱:\"</span> + data[i].BerName);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>說明：</p>\n<ol>\n<li>宣告一個變數名稱紀錄 data 長度。</li>\n<li>建立一個 for 迴圈。</li>\n<li>使用 if 判斷 data 資料中的<strong>建築類型 category</strong> 跟 <strong>區域 DIS</strong> 兩個條件要相符。</li>\n<li>在使用 console.log 驗證所找到的資料。<blockquote>\n<p>(名稱在<a href=\"https://data.taipei/#/dataset/detail?id=5d1d34d8-1b81-4162-87b6-05e0896af958\" target=\"_blank\" rel=\"noopener\">資料平台</a>上有說明，現已改為 CSV 檔案)</p>\n</blockquote>\n</li>\n</ol>\n<p>在網頁使用 console 檢查，就會出現以下結果：</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/JS10-1.png?alt=media&token=beff9760-cee4-4f9c-bd2d-0f7358ec1576\" alt=\"台北市信義區哺乳室結果\"></p>\n<h2 id=\"心得\"><a href=\"#心得\" class=\"headerlink\" title=\"心得\"></a>心得</h2><p>JSON 取得資料沒有太困難，但思維要清楚，不然很容易不知道自己怎麼取得資料，物件跟陣列取得資料的觀念也要清楚明白，不然在後續 AJAX 就會不知道怎麼做。</p>\n<blockquote>\n<p>信義區的百貨哺乳室竟然這麼少!</p>\n</blockquote>\n","categories":["JavaScript"],"tags":["JavaScript"]},{"title":"jQuery 筆記 - dropdown 選單中的箭頭同步旋轉","url":"/jQuery/20200529/1660679567/","content":"<p><img src=\"https://images.unsplash.com/photo-1468908627957-7783f0c42edb?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2089&q=80\" alt=\"Rotate\"></p>\n<p>這次專案要做一個 dropdown 的下拉式選單，並且要擁有下方條件：</p>\n<ol>\n<li>在選單右側要有一個箭頭圖示，在點擊箭頭圖示時會同步旋轉。</li>\n<li>收合時箭頭要朝下，展開時箭頭要朝上。</li>\n</ol>\n<h4 id=\"HTML\"><a href=\"#HTML\" class=\"headerlink\" title=\"HTML\"></a>HTML</h4><p>HTML 的架構會如下方，</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"dropdown\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"form\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"select\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"--- select ---\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"button\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fas fa-chevron-down fa-sm\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"dropdownList\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>option one<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>option two<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>按鈕的部分，我盡量使用 <code>Button</code> 的語法，讓按鈕單純點，不會受到其他標籤所附加的屬性影響。<br>我把<strong>選單</strong>跟<strong>下拉內容</strong>分開寫，因下拉內容要預設為<strong>隱藏</strong> <code>(display: none;)</code></p>\n<h4 id=\"CSS\"><a href=\"#CSS\" class=\"headerlink\" title=\"CSS\"></a>CSS</h4><p>CSS 比較要注意的是以下部分，</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.button</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">50px</span>;</span><br><span class=\"line\">  .fa-chevron-down &#123;</span><br><span class=\"line\">    <span class=\"selector-tag\">transform</span>: <span class=\"selector-tag\">rotate</span>(0<span class=\"selector-tag\">deg</span>);</span><br><span class=\"line\">    <span class=\"selector-tag\">transition</span>: <span class=\"selector-tag\">all</span> 0<span class=\"selector-class\">.6s</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    &amp;<span class=\"selector-class\">.active</span> &#123;</span><br><span class=\"line\">      <span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(<span class=\"number\">180deg</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>因為旋轉的是箭頭，不是按鈕，所以效果要寫在箭頭中，這邊使用到 <code>transform:rotate();</code> 的函式，原本使用的教是朝下的箭頭，所以預設參數為 0 度，<code>transform:rotate(0deg);</code>，展開選單要翻轉 180 度變成向上，所以參數會是 180 度，<code>transform:rotate(180deg);</code>。</p>\n<blockquote>\n<p>deg = degree (度)</p>\n</blockquote>\n<p>其他樣式內容可以自己設定。</p>\n<h4 id=\"JavaScript\"><a href=\"#JavaScript\" class=\"headerlink\" title=\"JavaScript\"></a>JavaScript</h4><p>互動效果使用 jQuery 來綁定與使用，透過 CSS 跟 jQuery 的各司其職，在網頁上的互動變得相當強大，大家只要專心做自己的事情就可以了。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">$(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  $(<span class=\"string\">\".button\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">    e.preventDefault();</span><br><span class=\"line\">    $(<span class=\"string\">\".dropdownList\"</span>).slideToggle(<span class=\"number\">500</span>);</span><br><span class=\"line\">    $(<span class=\"string\">\".fa-chevron-up\"</span>).toggleClass(<span class=\"string\">\"active\"</span>);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<ol>\n<li>綁定按鈕，並給予點擊事件，首先取消預設效果，因為 <code>.dropdownList</code> 有 <code>a</code> 連結，怕誤觸了 <code>href</code> 屬性，所以使用 <code>preventDefault();</code>，但其實好像不用。</li>\n<li>再來綁定 <code>.dropdownList</code> 使其點擊有下拉/收合效果 0.5 秒。</li>\n<li>最後綁定箭頭 icon，使其增加 <code>.active</code> 的 className，因為已經是使用 <code>toogleClass</code>，所以參數只要寫 <code>active</code> ，不是寫 <code>.active</code>。</li>\n</ol>\n<p>這就完成點擊箭頭按鈕實現下拉選單的收合效果！</p>\n<iframe height=\"300\" style=\"width: 100%;\"src=\"https://codepen.io/hnzxewqw/embed/NWGZVpP?height=265&theme-id=light&default-tab=css,result\"></iframe>\n\n<p>CodePen <a href=\"https://codepen.io/hnzxewqw/pen/NWGZVpP\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/NWGZVpP</a></p>\n<p>參考文章</p>\n<p><a href=\"https://wcc723.github.io/css/2013/10/08/css-transform/\" target=\"_blank\" rel=\"noopener\">CSS 沒有極限 - CSS transform 概觀</a></p>\n<p><a href=\"https://wcc723.github.io/css/2013/10/10/css-transform-origin/\" target=\"_blank\" rel=\"noopener\">CSS 沒有極限 - CSS transform-origin</a></p>\n<p><a href=\"https://ithelp.ithome.com.tw/articles/10135528\" target=\"_blank\" rel=\"noopener\">CSS 沒有極限 - CSS transform 軸線的謊言</a></p>\n","categories":["jQuery"],"tags":["CSS","jQuery"]},{"title":"jQuery 筆記 - 使用 JS 動態來啟用/停用元素？","url":"/jQuery/20200529/1818590975/","content":"<p><img src=\"https://images.unsplash.com/photo-1575538031230-3e9ebd2fd631?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1997&q=80\" alt=\"switch button\"></p>\n<h2 id=\"disabled\"><a href=\"#disabled\" class=\"headerlink\" title=\"disabled\"></a>disabled</h2><p>在 HTML 標籤中有一個 <code>disabled</code> 的屬性，只要在表單元素(<code>Button</code>、<code>Input</code>、<code>Optgroup</code>、<code>Option</code>、<code>Select</code> 及 <code>TextArea</code> )的屬性中加入 <code>disabled</code> 屬性的話，該元素就會被停用了。</p>\n<p>直接看範例：</p>\n<iframe height=\"300\" style=\"width: 100%;\" src=\"https://codepen.io/tim_hsu/embed/YzyMjVZ?height=265&theme-id=light&default-tab=html,result\"></iframe>\n</iframe>\n\n<p>CodePen <a href=\"https://codepen.io/hnzxewqw/pen/YzyoxGx\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/YzyoxGx</a></p>\n<h2 id=\"JS-動態設定\"><a href=\"#JS-動態設定\" class=\"headerlink\" title=\"JS 動態設定\"></a>JS 動態設定</h2><p>既然是 HTML 的一個屬性，可以使用 jQuery 的 <code>attr(key, value)</code> 來變更 <code>disabled</code> 屬性值即可。有以下幾個寫法可以完成這個設定，</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//寫法 1</span></span><br><span class=\"line\">$(<span class=\"string\">\"input\"</span>).attr(<span class=\"string\">\"disabled\"</span>, <span class=\"literal\">true</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 寫法 2：</span></span><br><span class=\"line\">$(<span class=\"string\">\"select\"</span>).attr(<span class=\"string\">\"disabled\"</span>, <span class=\"string\">\"disabled\"</span>);</span><br></pre></td></tr></table></figure>\n\n<p>這時用 F12 檢查 HTML 的程式碼，就會出現 <code>disabled=&quot;disabled&quot;;</code> 的屬性，反之，要啟動就僵值改成 <code>false</code>，或是用 <code>removeAttr(&#39;disabled&#39;);</code> 移除屬性。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">\"button\"</span>).removeAttr(<span class=\"string\">\"disabled\"</span>);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"點擊按鈕使表單元素可以使用\"><a href=\"#點擊按鈕使表單元素可以使用\" class=\"headerlink\" title=\"點擊按鈕使表單元素可以使用\"></a>點擊按鈕使表單元素可以使用</h2><p>給個情境，有天 PM 跑來說，有個介面一開始客戶要求表單元素都無法使用，點擊一個 NEW 按鈕就可以填入表單，送出按鈕在初始畫面為無法使用，在點擊送出按鈕後又回到初始畫面。</p>\n<p><del>所以畫面的東西都無法使用，那為什麼要做?</del></p>\n<p>獲得資訊有：</p>\n<ol>\n<li>畫面上有表單元素，有 input 跟 button。</li>\n<li>除了 NEW 按鈕外還有一個 submit 的按鈕。</li>\n<li>初始畫面除了 NEW，以外都沒有功能。</li>\n<li>按下 NEW 後，除了 NEW 以外都有功能。</li>\n</ol>\n<p>然後就產生下方樣式，</p>\n<iframe height=\"300\" style=\"width: 100%;\"  src=\"https://codepen.io/hnzxewqw/embed/yLeEVeR?height=265&theme-id=light&default-tab=result\"></iframe>\n\n<h2 id=\"結語\"><a href=\"#結語\" class=\"headerlink\" title=\"結語\"></a>結語</h2><p>要思考一開始的狀況，再思考判斷按下按鈕會發生的情況，畢竟 JS 是一次只能做一件事的語法，這次遇到的狀況滿有意思的，似乎也在許多頁面上常常看到。</p>\n<h2 id=\"參考文章\"><a href=\"#參考文章\" class=\"headerlink\" title=\"參考文章\"></a>參考文章</h2><p><a href=\"https://abgne.tw/jquery/jquery-tips/jquery-enabled-or-disabled-element.html\" target=\"_blank\" rel=\"noopener\">[jQ]如何使用 jQuery 來啟用/停用元素？</a></p>\n","categories":["jQuery"],"tags":["JavaScript","jQuery"]},{"title":"首次參加六角學院同學會","url":"/Learning-Experience/20200527/2006749370/","content":"<p>今年最令我期待的活動之一－六角學院三週年同學會！<br>在二月中註冊了六角學院網頁設計師的課程，中間經歷了孩子誕生、陪伴太太坐月子、新手奶爸的生活…<br>就這樣過了七個多月，在這七個月當中也看到自己的成長！</p>\n<p>今天的活動分成幾個部分，就挑幾個部分來記錄一下！</p>\n<h2 id=\"一、六角學院的發展與願景\"><a href=\"#一、六角學院的發展與願景\" class=\"headerlink\" title=\"一、六角學院的發展與願景\"></a>一、六角學院的發展與願景</h2><p>未來會規畫更完善的就職路徑還有課程規劃，還有要拓展 5000 間弱連結的公司做媒合，相當了不起呢!! (因為晚到了，這一段幾乎沒聽到)</p>\n<h2 id=\"二、再來是學長姊的問答與歷程分享\"><a href=\"#二、再來是學長姊的問答與歷程分享\" class=\"headerlink\" title=\"二、再來是學長姊的問答與歷程分享\"></a>二、再來是學長姊的問答與歷程分享</h2><p>一共請來了五位學長姊，分享這兩年中的從加入六角學院到就業後遇到的風風雨雨，這一段算是獲得最多的一環，因為聽到每一位的故事都是現在進行式，可以從他們的身上找尋共通點，並可以大概預期未來會遇到的光景，如何預防，或是如何面對！「順遂」一詞，幾乎不會出現在前端工程師身上，因為有不段出現的 BUG。</p>\n<p>每個人分享的重點可以回歸到兩個部分，一個是學習求知的態度，要永遠不滿足，保持一個開放的心、熱情的心、研究的心。有任何可以進步的資源都不要放過，更重要的是不要放棄！另一個是不要安逸現況，當在職場發現自己已經無法進步的時候，就是轉換領域的機會，讓自己不斷的變強跟吸收新知識，是非常重要的事情！並且要樂於分享所學所會的給想要踏進該領域的人，在教導的過程中也可以檢視自己學會多少東西！</p>\n<h2 id=\"三、老師學員交流\"><a href=\"#三、老師學員交流\" class=\"headerlink\" title=\"三、老師學員交流\"></a>三、老師學員交流</h2><p>話說收到這個消息受寵若驚，我覺得我還是一個超級菜鳥，還在努力爬上大聯盟，但就在同學會的前一天，我收到洧杰校長的邀請，說要在同學會的休息時間有一個問答的機會，分享我最近學習的歷程與心得。有幾個題目，我就順便紀錄一下:</p>\n<h3 id=\"您的背景-科系、前工作、現在的近況是-？\"><a href=\"#您的背景-科系、前工作、現在的近況是-？\" class=\"headerlink\" title=\"您的背景(科系、前工作、現在的近況是)？\"></a>您的背景(科系、前工作、現在的近況是)？</h3><p>大學畢業於造形藝術學系，主修木雕，遙想大一 (2005) 那時是 photoshop7.0 的時代 ，搬進宿舍時，就看見室友正在用 PS 做畫，我覺得真的很屌(因為那時候也不知道到 PS)，我就很想跟他學，後來他教我了一些小技巧，我就順著這個技巧也學會了一招半式，然後在三個月後接了第一個案子，也奠定我之後走平面設計的道路，因為我知道這是未來的趨勢。後來出社會就一路在平面設計領域工作，有做過出版業設計、電商美術、新創 App 行銷設計，目前是自己開設平面設計公司，服務需要平面設計與視覺規劃的客戶。但因為印刷製作物與設計預算的減少，案件幾乎都是用趕件的，工作時間長又比較無法預期(做廣告的都是這樣，來的又急又快)，目前邊工作邊學習前端技術。</p>\n<h3 id=\"2-為什麼想投入前端工程師？\"><a href=\"#2-為什麼想投入前端工程師？\" class=\"headerlink\" title=\"2.為什麼想投入前端工程師？\"></a>2.為什麼想投入前端工程師？</h3><p>如上題所說，因為目前工作型態讓我覺得發展被限制，也看不見未來，就經思考與禱告後，原本想從 UI 學習，經了解與更多的查詢資料，前端工程師更符合我的理想，以及是一塊有前瞻性的藍海產業！門檻高、發展廣、又有無限的可能，很多產業都在退步，唯有程式碼還在進化，且智慧裝置的盛行，這個領域還會再進化！會進化的領域值得投資與學習！</p>\n<h3 id=\"3-目前在投入哪個技能？\"><a href=\"#3-目前在投入哪個技能？\" class=\"headerlink\" title=\"3.目前在投入哪個技能？\"></a>3.目前在投入哪個技能？</h3><p>目前已投入 HTML &amp; CSS、jQuery、RWD、Bootstrap 4、SCSS (正在學習中)。</p>\n<h3 id=\"4-最喜歡六角學院哪些服務？\"><a href=\"#4-最喜歡六角學院哪些服務？\" class=\"headerlink\" title=\"4.最喜歡六角學院哪些服務？\"></a>4.最喜歡六角學院哪些服務？</h3><p>我喜歡 24HR FAQ 回答機制，回答速度很快且專業，尤其老師跟助教是很有耐心又很仔細地回答每一個問題，原本會讓我覺得問題很多，不好意思提問，但會越問越勇敢，畢竟老師與助教都這麼熱血，學不會真的是自己的問題。還有線上問答，我個人覺得這真的是開啟我新視野的服務，雖然是透過線上學習與問答，但透過六角學院累積的線上問答與影片，讓我看見前端真的有無限可能，竟然可以玩出這麼多的議題與討論，不可思議。也透過這樣的服務，讓我產出勇敢不放棄的心態！Nothing is Impossible!</p>\n<h3 id=\"5-跟想加入六角的學弟妹說些鼓勵的話\"><a href=\"#5-跟想加入六角的學弟妹說些鼓勵的話\" class=\"headerlink\" title=\"5.跟想加入六角的學弟妹說些鼓勵的話?\"></a>5.跟想加入六角的學弟妹說些鼓勵的話?</h3><p>不要害怕走進新領域，不在自己的經驗值內的技術與知識，不代表很困難。保持一顆開放的心，不要先入為主的排斥它，也不要人云亦云就對程式碼望之卻步，「程式碼」只是一個名稱，但如果多了解會覺得還是有路可以走的，撞牆沒關係，是正常的事情，撞久了牆會倒的，還有六角學院的影片都講解得非常清楚，問答區也不要放過提問的機會，還有去觀看別人的問題，都會發現新大陸！線上學習會覺得孤單，但你加入社團以及用盡各種方式學習跟努力在前端這條路上，你會發現並不孤單！</p>\n<p>最後用一句話勉勵大家：<strong>走出舒適圈，你的舒適圈就會變得更大！</strong></p>\n<p>期待明年的同學會，我也可以成為祝福別人的前端工程師!</p>\n<p>寫於 2019.09.29</p>\n<hr>\n<p>本文同時發表於 <a href=\"https://ithelp.ithome.com.tw/articles/10222668\" target=\"_blank\" rel=\"noopener\">iT 邦幫忙</a></p>\n","categories":["Learning Experience"],"tags":["前端學習之路"]},{"title":"平面設計踏上前端工程師的旅程","url":"/Learning-Experience/20200527/2108866219/","content":"<p>從事平面設計超過 10 年，在大環境的衝擊下，因自己已經抵達薪資與該領域的瓶頸，想再往更高的專案挑戰也心有餘而力不足，在評估與考量之後，選擇前端工程師的道路！</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*bYnk-x7sAtPOp-wuMTaKLw.jpeg\" alt=\"F2E\"></p>\n<h2 id=\"為什麼選擇前端工程師？\"><a href=\"#為什麼選擇前端工程師？\" class=\"headerlink\" title=\"為什麼選擇前端工程師？\"></a>為什麼選擇前端工程師？</h2><p>從大學就開始做平面設計直到出社會，一路就走了 10 年，而在大環境的變遷與趨勢下，平面設計與印刷品需求逐年下滑，每一年都會想著如果不做設計我可以做什麼? 原本壓根沒有想過會跟寫程式語言有關係，但近五年遠端工作與電子載具儼然成為資訊戰國時代下的產物，各產業也都轉換呈現方式，現在只要透過網路就可以完成許多事情，民生生活習慣也因為數位化而轉變，這時我就在想，如果我可以將我的設計能力延伸到網頁或是載具上，也是非常不錯的一件事情。</p>\n<h2 id=\"投入前端工程師之前\"><a href=\"#投入前端工程師之前\" class=\"headerlink\" title=\"投入前端工程師之前\"></a>投入前端工程師之前</h2><p>面臨著工作案件越來越少，就覺得應該要趕快轉變跑道，面臨著太太半年後即將臨盆的景況，讓我開始評估<strong>實體課程</strong>與<strong>線上課程</strong>什麼比較適合我？但因為需要考量現實能力與狀況，在只有設計背景的條件下，我想說先從 UI 設計師下手，所以先購買了<strong>UI 入門講座的實體課程</strong>，用了三週的時間花了 18 個小時聽課 (共 16,000 元)，但聽完後發現還是在<strong>設計的領域打轉</strong>，這與我想要的不同，因為我覺得應該要用有<strong>設計的能力</strong>當作背景，去做一個跳脫設計從業人員的工作內容。</p>\n<h3 id=\"所以我又開始思考什麼才是我想要的。\"><a href=\"#所以我又開始思考什麼才是我想要的。\" class=\"headerlink\" title=\"所以我又開始思考什麼才是我想要的。\"></a>所以我又開始思考什麼才是我想要的。</h3><p>接著我查詢了資策會的相關課程，也去聽了說明會，了解若去資策會我可以學習成什麼樣的技能，是否會更接近前端工程師。聽完資策會後心裡抱持著遺憾，還是沒辦法投入資策會的學習，因時間上要投入半年，且學費昂貴又無法工作，這樣會沒有收入，面對半年後的小孩出生的景況，家庭張力會非常緊繃，但透過資策會老師說明，讓我確定程式語言會是很好的發展，且可以應用上過去設計的能力，所以這條路可以通。<br>但，怎麼走?</p>\n<h2 id=\"學習的過程\"><a href=\"#學習的過程\" class=\"headerlink\" title=\"學習的過程\"></a>學習的過程</h2><p>在排除資策會與民間電腦補習班的實體課程之後(因曾經在某電腦補習班吃虧過，故不考慮)，在網路上開始找尋線上課程，時間上比較可以配合。就發現了<strong>六角學院</strong>，看到<a href=\"https://www.hexschool.com/qa/how-to.html\" target=\"_blank\" rel=\"noopener\">邁向前端工程師/設計師之路</a>的地圖，讓我覺得我好像可以從網頁設計師開始，畢竟我是非資訊相關科系畢業，要一頭栽入程式的世界好像離我太遠，所以我就先購買了<a href=\"https://shop.hexschool.com/order/create?order=z_bs4_html_jquery_rwd&coupon_code=COUPON_2018_HEXSCHOOL\" target=\"_blank\" rel=\"noopener\">網頁設計師</a>的課程，就在投入近半年的時間，發現好像可以往前端工程師的領域邁進，所以就把其他與前端工程師相關的課程都註冊了。</p>\n<h3 id=\"學習不會是一路順遂，但要定時定量\"><a href=\"#學習不會是一路順遂，但要定時定量\" class=\"headerlink\" title=\"學習不會是一路順遂，但要定時定量\"></a>學習不會是一路順遂，但要定時定量</h3><p>在沒有程式背景之下學習程式語言，我每一步都踩得戰競，深怕一鬆懈或分心，這段學習的時間就會拉得更長。因白天要工作的關係，我安排了一週六天晚上 9:00~12:00 的時間來學習，每個章節的小作業跟練習一定跟著登打一次，課程不懂的就反覆的多聽幾次，並且利用問答區詢問問題，並且把握一個原則：<strong>今天要比昨天的自己還要強</strong>。</p>\n<h3 id=\"對抗心魔的唯一辦法，就是丟掉羞恥心\"><a href=\"#對抗心魔的唯一辦法，就是丟掉羞恥心\" class=\"headerlink\" title=\"對抗心魔的唯一辦法，就是丟掉羞恥心\"></a>對抗心魔的唯一辦法，就是丟掉羞恥心</h3><p>一開始我不太問問題，因為覺得是自己資質不夠，怕問了蠢問題，但後來看到學員社團中大家卯起來問，還有跟老師與助教討論後，反正也沒人認識我，就算問了蠢問題其實也無妨，就這樣，只要有一點不懂，我就會寫在 CodePen 裡面並且提問，也透過提問來釐清自己的思緒，而不是一昧的求得解答。</p>\n<h3 id=\"師父引進門，修行在個人\"><a href=\"#師父引進門，修行在個人\" class=\"headerlink\" title=\"師父引進門，修行在個人\"></a>師父引進門，修行在個人</h3><p>如上面俗諺可知，老師、助教等教學資源都已經預備好，剩下就是要靠自己努力與前進，我是學習技術相關的人，我知道並不是學多少時間，或是學習多少技能就能進入該職場，而是對於這門技術的掌握度有多高，當面對專案時能不能貢獻己力在專案上，而不是拖垮整個團隊或共事的夥伴。<br>我從 2019.2.11 註冊六角學院，學習半年累積皮毛的程式概念與能力後，便積極參與許多學院舉辦的活動。</p>\n<h4 id=\"六角同學會\"><a href=\"#六角同學會\" class=\"headerlink\" title=\"六角同學會\"></a>六角同學會</h4><p>可與畢業且在業界的學長姐做交流，與正在學習路上的同學互相打氣，也看到學院為了這次實體同學會的精心策畫與努力！詳情可看<a href=\"https://hsuchihting.github.io/Learning-Experience/20200527/2006749370/\">這篇</a></p>\n<h4 id=\"THE-F2E-精神時光屋\"><a href=\"#THE-F2E-精神時光屋\" class=\"headerlink\" title=\"THE F2E 精神時光屋\"></a>THE F2E 精神時光屋</h4><p>有超過 18 個頁面可以練習，這些如果通通都能完整地完成，能力一定大幅提升，我就是在<a href=\"https://hsuchihting.github.io/Hotel_booking/hotel_index.html\">旅館訂房頁面</a>的作品中提升我自己的切版與 RWD 的能力，並且也學習到 JavaScript 一些基本的語法與 Git 的使用。</p>\n<h4 id=\"iT-邦幫忙鐵人賽\"><a href=\"#iT-邦幫忙鐵人賽\" class=\"headerlink\" title=\"iT 邦幫忙鐵人賽\"></a>iT 邦幫忙鐵人賽</h4><p>非常推薦參加的比賽，連續撰寫 30 天技術文或是學習筆記，一定會有大幅成長，並且這段過程中看到更多前端好手與神人在其中，跟著他們的思維脈絡學習，會加速成長!</p>\n<h4 id=\"線上直播研討會\"><a href=\"#線上直播研討會\" class=\"headerlink\" title=\"線上直播研討會\"></a>線上直播研討會</h4><p>非常推薦一定要參加，尤其是要累積更快速的技能與知識，投入一個半小時，勝過你自己學習好幾個小時。</p>\n<h2 id=\"不放手，直到前端工作到手\"><a href=\"#不放手，直到前端工作到手\" class=\"headerlink\" title=\"不放手，直到前端工作到手\"></a>不放手，直到前端工作到手</h2><p>經過了一年的學習與累積，我鼓起勇氣開始投遞履歷，並且也詢問校長作品強度，校長建議我可以直接寫履歷並給我相關資料參考，透過面試來了解自己跟產業的落差有多少，我感謝上帝，在經過一個月的投遞履歷，還有八場面試中，我拿到了第一份前端工程師的 offer，也正式踏入前端工程師的里程碑，但真正的挑戰是進入職場的開始。</p>\n<h2 id=\"結語\"><a href=\"#結語\" class=\"headerlink\" title=\"結語\"></a>結語</h2><p>我還有很多需要學習的，但積極的態度與對前端的熱情，一定要把握，要相信自己所做的是非常有前瞻性的工作內容，堅持不放棄，才是完成目標的唯一途徑。</p>\n<hr>\n<p>本文同步發布於 <a href=\"https://medium.com/@hsuchihting/%E5%B9%B3%E9%9D%A2%E8%A8%AD%E8%A8%88%E8%B8%8F%E4%B8%8A%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%B8%AB%E7%9A%84%E6%97%85%E7%A8%8B-d0f226b74868\" target=\"_blank\" rel=\"noopener\">Medium</a></p>\n","categories":["Learning Experience"],"tags":["前端學習之路"]},{"title":"CSS 筆記 - box-shadow & drop-shadow 的差異","url":"/css/20200525/2231842812/","content":"<p><img src=\"https://images.unsplash.com/photo-1464979209783-2e8c3e2a5538?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1950&q=80\" alt=\"shadow\"></p>\n<p>陰影在呈現元素層次非常好用，尤其是扁平化設計的稿件，恰當的使用陰影，更能凸顯質感與層次。</p>\n<h2 id=\"box-shadow\"><a href=\"#box-shadow\" class=\"headerlink\" title=\"box-shadow\"></a>box-shadow</h2><p>幾個比較常用的如下，</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\">//x 軸-位移 | y 軸-位移 | 顏色</span><br><span class=\"line\"><span class=\"selector-tag\">box-shadow</span>: 5<span class=\"selector-tag\">px</span> 5<span class=\"selector-tag\">px</span> <span class=\"selector-tag\">gray</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">//x 軸-位移 | y 軸-位移 | 模糊值 blur-radius｜ 顏色</span><br><span class=\"line\"><span class=\"selector-tag\">box-shadow</span>: 5<span class=\"selector-tag\">px</span> 5<span class=\"selector-tag\">px</span> 5<span class=\"selector-tag\">px</span> <span class=\"selector-tag\">gray</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">//x 軸-位移 | y 軸-位移 | 模糊值 blur-radius｜擴散值 spread-radius｜顏色</span><br><span class=\"line\"><span class=\"selector-tag\">box-shadow</span>: 5<span class=\"selector-tag\">px</span> 5<span class=\"selector-tag\">px</span> 5<span class=\"selector-tag\">px</span> <span class=\"selector-tag\">rgba</span>(0, 0, 0, 0<span class=\"selector-class\">.5</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">//內側 ｜ x 軸-位移 | y 軸-位移 | 模糊值 blur-radius ｜ 擴散值 spread-radius ｜ 顏色</span><br><span class=\"line\"><span class=\"selector-tag\">box-shadow</span>: <span class=\"selector-tag\">inset</span> 0 0 20<span class=\"selector-tag\">px</span> 5<span class=\"selector-tag\">px</span> <span class=\"selector-tag\">gray</span>;</span><br></pre></td></tr></table></figure>\n\n<iframe  src=\"https://codepen.io/tim_hsu/embed/jObRPML?height=265&theme-id=light&default-tab=result\" height=\"300\" style=\"width: 100%;\">  </iframe>\n\n<p>codepen <a href=\"https://codepen.io/tim_hsu/pen/jObRPML\" target=\"_blank\" rel=\"noopener\">https://codepen.io/tim_hsu/pen/jObRPML</a></p>\n<p><code>box-shadow</code> 簡單來說就是以本身的形狀，新增一個相同形狀的元素，並可設定該元素的位置、模糊、顏色等參數；如上範例，所產生的陰影，與原本的元素形狀是相同的。</p>\n<p>如果不想自己腦補空想效果，可以使用 <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Background_and_Borders/Box-shadow_generator\" target=\"_blank\" rel=\"noopener\">Box-shadow 產生器</a>。</p>\n<p>但如果是一張去背的圖案想加入陰影的話，可以用 <code>drop-shadow</code>。</p>\n<h2 id=\"drop-shadow\"><a href=\"#drop-shadow\" class=\"headerlink\" title=\"drop-shadow\"></a>drop-shadow</h2><p>跟 <code>box-shadow</code> 用法相似，可以處理不規則的圖片陰影，寫法稍微有點不同，如下:</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">filter</span>: <span class=\"selector-tag\">drop-shadow</span>(5<span class=\"selector-tag\">px</span> 5<span class=\"selector-tag\">px</span> 5<span class=\"selector-tag\">px</span> <span class=\"selector-tag\">rgba</span>(0, 0, 0, 0<span class=\"selector-class\">.8</span>));</span><br></pre></td></tr></table></figure>\n\n<p><code>box-shadow</code> 是以元素的形狀延伸的陰影，而 <code>drop-shadow</code> 可以按照元素的的條件形成對應的陰影，並不會直接填滿顏色。</p>\n<iframe  src=\"https://codepen.io/tim_hsu/embed/KKdYpyQ?height=265&theme-id=light&default-tab=result\" height=\"400\" style=\"width: 100%;\"> </iframe>\n\n<p>codepen: <a href=\"https://codepen.io/tim_hsu/pen/KKdYpyQ\" target=\"_blank\" rel=\"noopener\">https://codepen.io/tim_hsu/pen/KKdYpyQ</a></p>\n<p>參考資料：</p>\n<ul>\n<li><a href=\"https://developer.mozilla.org/zh-TW/docs/Web/CSS/box-shadow\" target=\"_blank\" rel=\"noopener\">MDN box-shadow</a></li>\n<li><a href=\"https://ithelp.ithome.com.tw/articles/10131544\" target=\"_blank\" rel=\"noopener\">CSS 沒有極限 - box-shadow</a></li>\n<li><a href=\"https://abgne.tw/css/css3-lab/css3-box-shadow.html\" target=\"_blank\" rel=\"noopener\">[CSS3]box-shadow 區塊陰影</a></li>\n<li><a href=\"http://blog.shihshih.com/drop-shadow-vs-box-shadow/\" target=\"_blank\" rel=\"noopener\">CSS 陰影效果的比較：Drop-Shadow 與 Box-Shadow</a></li>\n</ul>\n","categories":["CSS"],"tags":["CSS"]},{"title":"CSS 筆記 -右側欄選單收合","url":"/css/20200525/1233449136/","content":"<p><img src=\"https://images.unsplash.com/photo-1585452549211-935bd224ada0?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1952&q=80\" alt=\"image alt\"></p>\n<p>因為專案上遇到一個右側選單的寫法，原本天真的以為跟一般的側欄選單的寫法一樣，但還是會有一點不同，記錄一下遇到的狀況。</p>\n<p>側欄選單一般架構如下 HTML</p>\n<h4 id=\"HTML\"><a href=\"#HTML\" class=\"headerlink\" title=\"HTML\"></a>HTML</h4><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"asideMenu\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fas fa-chevron-right fa-2x\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"title\"</span>&gt;</span>Aside Menu<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"list\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"optionTitle\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>index<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>username<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>city<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>number<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>edit<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>delete<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"optionList\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>1<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>Tim<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>Taipei<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>0912345678<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fas fa-edit fa-lg\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fas fa-trash-alt fa-lg\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"CSS\"><a href=\"#CSS\" class=\"headerlink\" title=\"CSS\"></a>CSS</h4><p>因為是在右側，所以選單樣式設定有點不同</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.asideMenu</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">300px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#474747</span>;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">  <span class=\"attribute\">top</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">bottom</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">right</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-left</span>: <span class=\"number\">5px</span> solid <span class=\"number\">#ff9a15</span>;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">box-shadow</span>: <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">5px</span> <span class=\"built_in\">hsla</span>(<span class=\"number\">240</span>, <span class=\"number\">40%</span>, <span class=\"number\">15%</span>, <span class=\"number\">0.6</span>);</span><br><span class=\"line\">  <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateX</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: all <span class=\"number\">0.5s</span>;</span><br><span class=\"line\">  &amp;.active &#123;</span><br><span class=\"line\">    <span class=\"selector-tag\">transform</span>: <span class=\"selector-tag\">translateX</span>(295<span class=\"selector-tag\">px</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>可以看到這邊有使用以下語法，</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">position</span>: <span class=\"selector-tag\">absolute</span>;</span><br><span class=\"line\"><span class=\"selector-tag\">top</span>: 0;</span><br><span class=\"line\"><span class=\"selector-tag\">bottom</span>: 0;</span><br><span class=\"line\"><span class=\"selector-tag\">right</span>: 0;</span><br><span class=\"line\"><span class=\"selector-tag\">transform</span>: <span class=\"selector-tag\">translateX</span>(0);</span><br><span class=\"line\"><span class=\"selector-tag\">transition</span>: <span class=\"selector-tag\">all</span> 0<span class=\"selector-class\">.5s</span>;</span><br><span class=\"line\">&amp;<span class=\"selector-class\">.active</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateX</span>(<span class=\"number\">295px</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>直接設定在 <code>.asideMenu</code> 上，代表父元素 <code>position: relative;</code> 是在 body 上，這樣就會讓選單在右邊了。透過 <code>transform: translateX(0);</code>產生位移，因為預設為顯示，所以參數為 0，後面透過 CSS 動態產生 <code>.active</code> 時，會<strong>向右位移</strong> ，所以參數要是<strong>正數</strong>，<strong>向左移為負數。</strong></p>\n<h4 id=\"JavaScript\"><a href=\"#JavaScript\" class=\"headerlink\" title=\"JavaScript\"></a>JavaScript</h4><p>再透過 javaScript 加入動態，</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">$(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  $(<span class=\"string\">\".btn\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    $(<span class=\"string\">\".asideMenu\"</span>).toggleClass(<span class=\"string\">\"active\"</span>);</span><br><span class=\"line\">    $(<span class=\"string\">\".fa-chevron-right\"</span>).toggleClass(<span class=\"string\">\"rotate\"</span>);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<ol>\n<li>綁定按鈕，並給予 click 監聽事件(按鈕最常就是綁定 click)。</li>\n<li>綁定 <code>.asideMenu</code> 動態增加/刪除 acitve 的 className。</li>\n<li>綁定 <code>.fa-chevron-right</code> 動態增加/刪除 rotate 的 className。</li>\n</ol>\n<p>寫到這邊就會很開心的覺得完成了！</p>\n<h2 id=\"overflow\"><a href=\"#overflow\" class=\"headerlink\" title=\"overflow\"></a>overflow</h2><p>結果會發現怎麼右側選單會超過畫面，且下方出現 X 軸，為什麼!!<br>之前左側選單會自動隱藏於畫面，但右側要自己設定，只要在 CSS 加入，</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">body</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>就會隱藏超過右側的選單，完成右側選單的效果與功能囉!!</p>\n<iframe src=\"https://codepen.io/tim_hsu/embed/eYpQXWW?height=265&theme-id=light&default-tab=result\"  height=\"600\" style=\"width: 100%;\">  </iframe>\n\n<p>CodePen <a href=\"https://codepen.io/tim_hsu/pen/eYpQXWW\" target=\"_blank\" rel=\"noopener\">https://codepen.io/tim_hsu/pen/eYpQXWW</a></p>\n","categories":["CSS"],"tags":["CSS","jQuery"]},{"title":"JS 筆記 - for 迴圈，i++、加總、break 的使用","url":"/javascript/20200525/4038493766/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/JavaScript%20note-01.jpg?alt=media&token=7bee0261-72ac-4de4-9f5a-f39d58735b7d\" alt=\"JavaScript Note\"></p>\n<h2 id=\"i\"><a href=\"#i\" class=\"headerlink\" title=\"i++\"></a>i++</h2><p>for 迴圈內有一個所產生的值，會用 i++ 登打，</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> = <span class=\"number\">0</span>; i &lt; array.length; i++) &#123;</span><br><span class=\"line\"> ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>寫法有三種，但都是在做同一件事情</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> i = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(i); <span class=\"comment\">//結果會是 0</span></span><br><span class=\"line\"></span><br><span class=\"line\">i = i + <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(i); <span class=\"comment\">//結果會是 1</span></span><br><span class=\"line\"></span><br><span class=\"line\">i + <span class=\"number\">1</span> = <span class=\"number\">2</span>; <span class=\"comment\">// (1+1 =2)</span></span><br><span class=\"line\"></span><br><span class=\"line\">i++ = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"comment\">//不斷反覆輸入 i++ 就會一直累加前一次的結果，會變成 2, 3, 4...</span></span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"用-for-迴圈做加總\"><a href=\"#用-for-迴圈做加總\" class=\"headerlink\" title=\"用 for 迴圈做加總\"></a>用 for 迴圈做加總</h2><p>從陣列中取出資料，並使用 for 迴圈做加總的練習。</p>\n<h4 id=\"今天老闆需要知道不同分店可樂的總銷售狀況，可以這樣寫。\"><a href=\"#今天老闆需要知道不同分店可樂的總銷售狀況，可以這樣寫。\" class=\"headerlink\" title=\"今天老闆需要知道不同分店可樂的總銷售狀況，可以這樣寫。\"></a>今天老闆需要知道不同分店可樂的總銷售狀況，可以這樣寫。</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> shops = [</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    captain: <span class=\"string\">\"Tim\"</span>,</span><br><span class=\"line\">    chicken: <span class=\"number\">150</span>,</span><br><span class=\"line\">    coke: <span class=\"number\">200</span>,</span><br><span class=\"line\">    fries: <span class=\"number\">70</span>,</span><br><span class=\"line\">    <span class=\"keyword\">set</span>: 99,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    captain: <span class=\"string\">\"Min\"</span>,</span><br><span class=\"line\">    chicken: <span class=\"number\">99</span>,</span><br><span class=\"line\">    coke: <span class=\"number\">77</span>,</span><br><span class=\"line\">    fries: <span class=\"number\">55</span>,</span><br><span class=\"line\">    <span class=\"keyword\">set</span>: 101,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    captain: <span class=\"string\">\"Mike\"</span>,</span><br><span class=\"line\">    chicken: <span class=\"number\">105</span>,</span><br><span class=\"line\">    coke: <span class=\"number\">111</span>,</span><br><span class=\"line\">    fries: <span class=\"number\">75</span>,</span><br><span class=\"line\">    <span class=\"keyword\">set</span>: 130,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">];</span><br><span class=\"line\">//陣列資料</span><br></pre></td></tr></table></figure>\n\n<p>計算可樂的數量。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> shopsTotal = shops.length; <span class=\"comment\">//先抓取店面的資料</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(shopsTotal); <span class=\"comment\">//結果會得到 3</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> cokeTotal = <span class=\"number\">0</span>; <span class=\"comment\">//先預設數量為 0</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; shopsTotal; i++) &#123;</span><br><span class=\"line\">  <span class=\"comment\">//從第一個開始迴圈；在店家數以內條件以內；加總</span></span><br><span class=\"line\">  cokeTotal += shops[i].coke; <span class=\"comment\">//\"+=\" 要寫在一起，不能空白</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"今年的可樂銷售額為: \"</span> + cokeTotal); <span class=\"comment\">//結果會得到 今年的可樂銷售額為: 388</span></span><br></pre></td></tr></table></figure>\n\n<iframe src=\"https://codepen.io/hnzxewqw/embed/vYEOJMB?height=265&theme-id=light&default-tab=js,result\" width=\"100%\" height=\"300\" frameborder=\"0\" loading=\"lazy\" allowfullscreen></iframe>\n\n\n<p>codepen <a href=\"https://codepen.io/hnzxewqw/pen/vYEOJMB\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/vYEOJMB</a></p>\n<hr>\n<h2 id=\"for-迴圈與-break\"><a href=\"#for-迴圈與-break\" class=\"headerlink\" title=\"for 迴圈與 break\"></a>for 迴圈與 break</h2><p>break 在 for 迴圈中的基本寫法：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; shopsTotal; i++) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(i);</span><br><span class=\"line\">  <span class=\"keyword\">break</span>; <span class=\"comment\">//跑到這裡就停止</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>沿用上方資料，會用到 break 的情況：<br>要找可以買 <strong>100 份炸雞</strong>的老闆</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> shops = [</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    captain: <span class=\"string\">\"Tim\"</span>,</span><br><span class=\"line\">    chicken: <span class=\"number\">150</span>,</span><br><span class=\"line\">    coke: <span class=\"number\">200</span>,</span><br><span class=\"line\">    fries: <span class=\"number\">70</span>,</span><br><span class=\"line\">    <span class=\"keyword\">set</span>: 99,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    captain: <span class=\"string\">\"Min\"</span>,</span><br><span class=\"line\">    chicken: <span class=\"number\">99</span>,</span><br><span class=\"line\">    coke: <span class=\"number\">77</span>,</span><br><span class=\"line\">    fries: <span class=\"number\">55</span>,</span><br><span class=\"line\">    <span class=\"keyword\">set</span>: 101,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    captain: <span class=\"string\">\"Mike\"</span>,</span><br><span class=\"line\">    chicken: <span class=\"number\">105</span>,</span><br><span class=\"line\">    coke: <span class=\"number\">111</span>,</span><br><span class=\"line\">    fries: <span class=\"number\">75</span>,</span><br><span class=\"line\">    <span class=\"keyword\">set</span>: 130,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">];</span><br><span class=\"line\">//陣列資料</span><br></pre></td></tr></table></figure>\n\n<p>因為有條件出現，可以在 for 迴圈中用 if 來寫：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> shopsTotal = shops.length;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(shopsTotal);</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; shopsTotal; i++) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (shops[i].chicken &gt; <span class=\"number\">100</span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(shops[i].captain + <span class=\"string\">\"的店家有足夠 100 份炸雞\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 結果會得到:</span></span><br><span class=\"line\">    <span class=\"comment\">//Tim的店家有足夠 100 份炸雞</span></span><br><span class=\"line\">    <span class=\"comment\">// Mike的店家有足夠 100 份炸雞</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>畫面會顯示如下：</p>\n<p><img src=\"https://ithelp.ithome.com.tw/upload/images/20191205/20119300li6h5uabDP.png\" alt=\"https://ithelp.ithome.com.tw/upload/images/20191205/20119300li6h5uabDP.png\"></p>\n<p>可是只要找到一間店有賣超過 100 份炸雞就可以，所以可以加上 break， break 都是搭配 for 迴圈使用的。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> shops = [</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    captain: <span class=\"string\">\"Tim\"</span>,</span><br><span class=\"line\">    chicken: <span class=\"number\">150</span>,</span><br><span class=\"line\">    coke: <span class=\"number\">200</span>,</span><br><span class=\"line\">    fries: <span class=\"number\">70</span>,</span><br><span class=\"line\">    <span class=\"keyword\">set</span>: 99,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    captain: <span class=\"string\">\"Min\"</span>,</span><br><span class=\"line\">    chicken: <span class=\"number\">99</span>,</span><br><span class=\"line\">    coke: <span class=\"number\">77</span>,</span><br><span class=\"line\">    fries: <span class=\"number\">55</span>,</span><br><span class=\"line\">    <span class=\"keyword\">set</span>: 101,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    captain: <span class=\"string\">\"Mike\"</span>,</span><br><span class=\"line\">    chicken: <span class=\"number\">105</span>,</span><br><span class=\"line\">    coke: <span class=\"number\">111</span>,</span><br><span class=\"line\">    fries: <span class=\"number\">75</span>,</span><br><span class=\"line\">    <span class=\"keyword\">set</span>: 130,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">];</span><br><span class=\"line\">//陣列資料</span><br><span class=\"line\"></span><br><span class=\"line\">var shopsTotal = shops.length;</span><br><span class=\"line\">console.log(shopsTotal);</span><br><span class=\"line\">for (var i = 0; i &lt; shopsTotal; i++) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (shops[i].chicken &gt; <span class=\"number\">100</span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(shops[i].captain + <span class=\"string\">\"的店家有足夠 100 份炸雞\"</span>); <span class=\"comment\">//Tim的店家有足夠 100 份炸雞</span></span><br><span class=\"line\">    shops[i].chicken -= <span class=\"number\">100</span>;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(</span><br><span class=\"line\">      shops[i].captain + <span class=\"string\">\"的店家還剩下 \"</span> + shops[i].chicken + <span class=\"string\">\" 份炸雞\"</span></span><br><span class=\"line\">    ); <span class=\"comment\">//Tim的店家還剩下 50 份炸雞</span></span><br><span class=\"line\">    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>呈現結果如下：</p>\n<p><img src=\"https://ithelp.ithome.com.tw/upload/images/20191205/20119300Qw5A7l5RAA.png\" alt=\"https://ithelp.ithome.com.tw/upload/images/20191205/20119300Qw5A7l5RAA.png\"></p>\n<iframe src=\"https://codepen.io/hnzxewqw/embed/WNbvMOX?height=265&theme-id=light&default-tab=js,result\" width=\"100%\" height=\"500\" frameborder=\"0\" loading=\"lazy\" allowfullscreen></iframe>\n\n<p>codepen <a href=\"https://codepen.io/hnzxewqw/pen/WNbvMOX\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/WNbvMOX</a></p>\n","categories":["JavaScript"],"tags":["JavaScript"]},{"title":"超前部屬的前端工程師學習之路","url":"/Learning-Experience/20200524/3656390146/","content":"<p><img src=\"https://images.unsplash.com/photo-1522252234503-e356532cafd5?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2125&q=80\" alt=\"學習過程\"></p>\n<h2 id=\"開始學習時間\"><a href=\"#開始學習時間\" class=\"headerlink\" title=\"開始學習時間\"></a>開始學習時間</h2><p>2019/2/11 註冊六角學院，那時我對前端工程師領域完全沒有接觸，也覺得自己不會走進資訊領域的工作，一直以來都是專研在設計美術，而在行動載具的興起，消費者獲得資訊的行為改變，各產業呈現品牌與宣傳的方式當然也順應潮流，而在這波衝擊中，我一直思考，除了設計美術外，還可以做什麼工作? 所以開始了<a href=\"https://hsuchihting.github.io/Learning-Experience/20200527/2108866219/\">平面設計踏上前端工程師的旅程</a>。</p>\n<h2 id=\"初期規劃\"><a href=\"#初期規劃\" class=\"headerlink\" title=\"初期規劃\"></a>初期規劃</h2><p>我參考了六角學院前端工程師與網頁設計師的差別，承上所述，若不做設計還可以做什麼? 所以我只參考了這兩個部分，加上現實的考量與未來的發展，我選擇了<a href=\"https://www.hexschool.com/qa/how-to.html\" target=\"_blank\" rel=\"noopener\">前端工程師</a>。六角學院規劃了完整的學習地圖，非常適合非本科的朋友來學習，但問題來了：</p>\n<ul>\n<li>在現實與學習的路上該怎麼規劃呢?</li>\n<li>要全職還是兼職學習?</li>\n<li>學習時間與效益怎麼驗收?</li>\n</ul>\n<h2 id=\"學習路徑\"><a href=\"#學習路徑\" class=\"headerlink\" title=\"學習路徑\"></a>學習路徑</h2><p>首先一定是從最基本的 HTML &amp; CSS 開始學習，洧杰老師用 WORD 當開頭，深入淺出的說明，讓我對於 coding 這件事情減少了許多懼怕。一開始身邊的人知道我要開始學習程式，都說邏輯性很重要。他們說得沒錯，但只對一半，因為更重要的是像我正統文組出身，又是受到長期美術教育薰陶的背景，思維要從天馬行空要馬上進入思維邏輯的領域來說，恐懼才是最大的阻礙。</p>\n<h3 id=\"HTML-CSS-jQuery-RWD-失敗\"><a href=\"#HTML-CSS-jQuery-RWD-失敗\" class=\"headerlink\" title=\"HTML CSS jQuery RWD 失敗\"></a>HTML CSS jQuery RWD 失敗</h3><p>首先，我學習完 HTML &amp; CSS 後，大概能真正自己開始撰寫大概只有六成功力，因為知道的內容實在太少，也還是透過以前文組學習的方式，「課本」教我什麼，我只在這個領域練習，還沒有培養自己 google 的能力，就因為累積的不足，進入 jQuery 時，非常吃力，學習到懷疑人生，這時候已經過了兩個月!</p>\n<p>我覺得這樣不行，太撞牆了，而且很沒有成就感，後來停下一天，回想過去學習技能這條路，如今可以上手是什麼方式跟方法，好好思考學習的路徑，什麼才是對我最有幫助且可以有效的提高掌握度。</p>\n<h3 id=\"HTML-amp-CSS、SCSS、Bootstrap、RWD、JavaScript、jQuery、Vue-js-未完\"><a href=\"#HTML-amp-CSS、SCSS、Bootstrap、RWD、JavaScript、jQuery、Vue-js-未完\" class=\"headerlink\" title=\"HTML &amp; CSS、SCSS、Bootstrap、RWD、JavaScript、jQuery、Vue.js(未完)\"></a>HTML &amp; CSS、SCSS、Bootstrap、RWD、JavaScript、jQuery、Vue.js(未完)</h3><p>後來就按照上面的這個路徑，重新學習。沒錯!就是兩個月的東西砍掉重練，因為中間遇到太太生產，從生產到月子中心這一個月的時間，幾乎下班就是到月子中心陪伴與照顧她。只有大概滑滑手機，看看前端領域到底都要具備什麼能力，還有討論相關的主題跟內容，讓我自己不要跟這個領域脫節，等到太太出月子中心，回到家整頓好後，已經是五月底了，所以我可以說從六月重新學習。</p>\n<p>雖然說是重新學習，但走過的路沒有白費，前兩個月所學習的內容還是記得，且重新再看一次課程，也找出當時沒發現的問題還有未釐清的觀念。且透過 SCSS 管理 CSS 後覺得更是如虎天翼，少了重工的困擾，程式碼也更乾淨，再透過 Bootstrap 的架構，在 RWD 上寫起來更是得心應手。</p>\n<p>後來決定先把樣式這部分掌握好，至少在切版上可以在成效上有把握，後面再進行互動的學習。</p>\n<h4 id=\"JavaScript-的挫折\"><a href=\"#JavaScript-的挫折\" class=\"headerlink\" title=\"JavaScript 的挫折\"></a>JavaScript 的挫折</h4><p>後來陸續也參加 F2E 前端修練時光屋的挑戰，iT 鐵人賽 30 天挑戰賽，這段時間是讓我切版成長最快速的時候，經過鐵人賽的洗禮，我覺得在成效上非常好，且是強迫自己 30 天不斷的接觸程式，產生熟悉感，寫起來也比較得心應手，有些語法也因為這樣不需要思考就可以寫出來了。後來進入 JavaScript 學習時，我覺得這個方式可行，所以要用這個方式來學習，但是有一部分我偷懶了，我大概用了兩週的時間把課程「看」完了，天真的以為我應該可以看得懂程式碼就會寫了。結果根本就是不可能！後來痛定思痛花了近兩個月的時間把 JavaScript 分小節，並且每一章節都做筆記，成為我自己查找資料的字典，並且記錄在鐵人賽的部落格上。也因為有自己整理學習的內容與紀錄，讓自己有「印象」自己到底學了什麼。也建立個人的<a href=\"https://hsuchihting.github.io/\">前端技術部落格</a>，後也因為這樣讓我在工作上也很快速地找到我自己的筆記，解決了工作上的困難。</p>\n<h4 id=\"Vue-js-挫折\"><a href=\"#Vue-js-挫折\" class=\"headerlink\" title=\"Vue.js 挫折\"></a>Vue.js 挫折</h4><p>這時已經開始在寫作品了，我跟洧杰老師討論後，他建議我選<a href=\"https://hsuchihting.github.io/Hotel_booking/hotel_index.html\">旅館訂房頁面</a>當作作品來練習，在這個作品中更讓我釐清 JavaScript 如何讓網頁產生互動，也比較清楚網頁元素三劍客的分工與職責內容。我想說那來學習 Vue.js ，看看能不能加速我在開發上的速度與掌握一個框架，但因為 JavaScript 陣列與資料處理的觀念沒有非常清楚，在學習上相對吃力，後來先暫緩，想說先把 JavaScript 基礎弄好。</p>\n<h4 id=\"實體課程：五倍紅寶石-Vue-js-課程\"><a href=\"#實體課程：五倍紅寶石-Vue-js-課程\" class=\"headerlink\" title=\"實體課程：五倍紅寶石 Vue.js 課程\"></a>實體課程：五倍紅寶石 Vue.js 課程</h4><p>剛好看到五倍紅寶石有一個實體課程，授課老師是在前端界有名的老師 Kuro，也是 Vue Taiwan 社團的創辦人，想說透過實體課程的方式，看看自己能否在實體中提升自己的能力，孰不知依然是 JavaScript 的熟練度還不夠高，學起來還是有點吃力，但因為有看過六角學院的 Vue 課程，所以基礎的還更得上，還需要加強的地方是 component 的使用與觀念，可惜我還是沒有學得很好，但如同前面所說，走過的路沒有白費，因為我更知道我要往哪些方向努力!也因為有參加實體課程，也獲得 Kuro 老師的親筆簽書！(書是我自己買的，<a href=\"https://www.tenlong.com.tw/products/9789864344130\" target=\"_blank\" rel=\"noopener\">購書連結</a>)，也在這個月我拿到了 offer。</p>\n<h2 id=\"學習中的挫折\"><a href=\"#學習中的挫折\" class=\"headerlink\" title=\"學習中的挫折\"></a>學習中的挫折</h2><p>說實在，學習程式的過程孤單又挫折，幾乎每天都跟挫折相處，但也是好處，在程式的世界知道自己的微小，也知道自己該怎麼成長，也變得較務實，因為網頁不會說謊，寫了什麼給它，它就老實的回覆你。</p>\n<p>學習跟挫折與孤獨相處，是很重要的。但值得開心的是六角學院的老師跟同學都可以陪伴你，在程式的世界沒有蠢問題，只怕不問問題跟找問題的源頭，更需要一顆研究的心。</p>\n<h2 id=\"自我挑戰\"><a href=\"#自我挑戰\" class=\"headerlink\" title=\"自我挑戰\"></a>自我挑戰</h2><p>透過挑戰，就可以設立里程碑跟目標，也讓自己在失敗中學習，程式寫失敗沒有關係，把 bug 修好就好，不要想要一步登天，在初學就把程式碼的寫得又有條理跟精簡，因為就是知道哪裡寫得亂七八糟，才有機會修正自己的程式碼，還有撰寫思維。享受自我挑戰的樂趣非常重要，以下是我自己經歷的挑戰過程：</p>\n<h3 id=\"F2E-挑戰失敗\"><a href=\"#F2E-挑戰失敗\" class=\"headerlink\" title=\"F2E 挑戰失敗\"></a>F2E 挑戰失敗</h3><p>第一次挑戰 <a href=\"https://challenge.thef2e.com/\" target=\"_blank\" rel=\"noopener\">F2E 前端修練時光屋</a>，那時是寫番茄鐘，挑戰門檻是七天要完成稿件，原本我用平面設計的思維覺得應該是可以的，但我開始挑戰後，光是一個 aside 就讓我卡了七天，最終宣告放棄，也退出這次的挑戰賽，並且知道我超級不足，連一頁都寫不出來，說實在，挫折感比台北 101 還要高！</p>\n<p>一度很想放棄，但我覺得這樣不行，我目標就是要成為前端工程師，這樣的程度是無法踏進這個領域的，所以開始找方法。</p>\n<h3 id=\"IT-鐵人賽\"><a href=\"#IT-鐵人賽\" class=\"headerlink\" title=\"IT 鐵人賽\"></a>IT 鐵人賽</h3><p>透過 30 天的鐵人賽，我參加<a href=\"https://ithelp.ithome.com.tw/users/20119300/ironman/2600\" target=\"_blank\" rel=\"noopener\">自我挑戰組</a>，找了四個主題來寫，讓我自己透過三十天把四個網頁拆分得很細，並且每天記錄過程，讓自己未來可以回顧，現在看起來雖然很粗淺，但這就是當時我的實力，感謝當時堅持的我，讓我切版的能力提升了！後來因為挑戰成功，主辦單位還有寄獎狀跟獎牌到家裡，真是好棒的成長紀錄！</p>\n<h2 id=\"增廣見聞的地方\"><a href=\"#增廣見聞的地方\" class=\"headerlink\" title=\"增廣見聞的地方\"></a>增廣見聞的地方</h2><h3 id=\"IT-鐵人賽-1\"><a href=\"#IT-鐵人賽-1\" class=\"headerlink\" title=\"IT 鐵人賽\"></a>IT 鐵人賽</h3><p>透過鐵人賽，可以看到許多人不同的文章與撰寫的內容，也讓自己增廣見聞與成長！</p>\n<h3 id=\"研討會\"><a href=\"#研討會\" class=\"headerlink\" title=\"研討會\"></a>研討會</h3><p>音樂詩人方文山曾經在一場簽書會說過：「想成為什麼樣的人，先做那個人要做的事情。」，六角學院固定會舉行線上研討會，為了讓自己的思維更貼近前端工程師，我後來幾乎有時間都會參加研討會，真的是秀才不出門，能知前端事。</p>\n<h3 id=\"F2E-作品\"><a href=\"#F2E-作品\" class=\"headerlink\" title=\"F2E 作品\"></a>F2E 作品</h3><p>我選擇旅房訂房網頁後，好好地並專心打磨此作品且練習手刻能力，大概花了我兩個月的時間，終於作了一個算是有點自信可以拿來面試的作品，雖然功能很陽春，但也是透過這個作品讓我程式撰寫能力大幅成長。</p>\n<h3 id=\"Slack\"><a href=\"#Slack\" class=\"headerlink\" title=\"Slack\"></a>Slack</h3><p>非常推薦進入這個 Slack 群，裡面各種高手學長姐，目前有些專案跟觀念也因為這個群組，解決我不少困難與問題。</p>\n<h3 id=\"FB-社團\"><a href=\"#FB-社團\" class=\"headerlink\" title=\"FB 社團\"></a>FB 社團</h3><p>可以看到許多學院優質的活動與課程推廣，也可以看到同學的成長與互相幫助，許多程式碼上的問題，在過來人的建議與分享，自己也獲得很大的成長與進步，原來我的問題，也是別人遇到的問題！更可貴的，真的可以找到互相扶持的朋友！</p>\n<h3 id=\"身邊的工程師朋友\"><a href=\"#身邊的工程師朋友\" class=\"headerlink\" title=\"身邊的工程師朋友\"></a>身邊的工程師朋友</h3><p>感謝上帝的恩典，我因為有幾位讓我詢問的六角學長，在我作品集還有專案上願意讓我問，也剛好身邊有一位資深全端工程師願意在我有問題的時候即時的發問，他也樂意指引我方向解決問題!真是非常感謝你們這一路的陪伴與協助!</p>\n<h3 id=\"兩位老師\"><a href=\"#兩位老師\" class=\"headerlink\" title=\"兩位老師\"></a>兩位老師</h3><p>最重要的，當然就是授課的兩位老師，若沒有你們創立六角學院，我就沒辦法透過最適合我的線上學習，踏進前端工程師的工作，也謝謝你們願意花時間跟分析我學習的方向，還有通話解決我的疑問，也非常謝謝助教 Ray 願意額外在晚上的時間教我如何架設部落格，還有解決我一些前端的問題，真是非常感謝你們無私的奉獻！</p>\n<h2 id=\"結語\"><a href=\"#結語\" class=\"headerlink\" title=\"結語\"></a>結語</h2><p>用下面三段話作為這次學習之路的結尾。</p>\n<h3 id=\"沒有可以複製的方式，只有最適合自己的道路\"><a href=\"#沒有可以複製的方式，只有最適合自己的道路\" class=\"headerlink\" title=\"沒有可以複製的方式，只有最適合自己的道路\"></a>沒有可以複製的方式，只有最適合自己的道路</h3><p>可能會在社團看到誰誰誰在幾個月後找到工作，擔心自己是否太慢或是無法踏入該領域，千萬別這麼想，因為這是剛好他找到最適合他的方式來幫助他自己學習，但適合的他不一定適合自己，只要按照自己的步調學習，確定知道，今天的自己比昨天強，這樣就夠了。</p>\n<h3 id=\"掌握技術熟練度，比預定時間來得重要\"><a href=\"#掌握技術熟練度，比預定時間來得重要\" class=\"headerlink\" title=\"掌握技術熟練度，比預定時間來得重要\"></a>掌握技術熟練度，比預定時間來得重要</h3><p>技術的熟練度掌握度多少，其實是騙不了人的，當你面對編輯器的時候就已經有了答案，與其去在意時間，不如在意把握度到底有多少還比較實際一點，不然會兩頭空，挫折感也會超級大！</p>\n<h3 id=\"沒有最好的決定，是做了決定後做到最好\"><a href=\"#沒有最好的決定，是做了決定後做到最好\" class=\"headerlink\" title=\"沒有最好的決定，是做了決定後做到最好\"></a>沒有最好的決定，是做了決定後做到最好</h3><p>所有的決定都不會是完美的，但是既然決定了，就好好走下去，就算面對任何困難，都不能阻止所做的決定，只要這個決定在心裡是踏實的，而且很多理由讓自己無法前進，只是因為自己懼怕與懶惰的藉口，最後也祝福在轉職的路上的朋友，要好好感謝你身邊的家人，因為若沒有他們的支持，也很難走得長遠！</p>\n<p>還有很多要學習的，繼續加油! Be Strong and Courageous, impossible is nothing!</p>\n<p><strong>我喜歡的一段話，與大家分享與自勉：</strong> Think Big, Start Small, Being Now!</p>\n","categories":["Learning Experience"],"tags":["前端學習之路"]},{"title":"JS 筆記 - 取得與清除 input 的值","url":"/javascript/20200518/1372907171/","content":"<p><img src=\"https://images.unsplash.com/photo-1493953659556-556b14bdaca8?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2091&q=80\" alt=\"clean\"></p>\n<h2 id=\"Submit\"><a href=\"#Submit\" class=\"headerlink\" title=\"Submit\"></a>Submit</h2><p>許多網站都有表單要填寫，寫完後按下送出就會將資料送到後台資料庫，在 W3School 有介紹這個寫法，</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">\"name\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>Name:<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"name\"</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">\"your name\"</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"submit\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"submit\"</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">\"submit\"</span>&gt;</span>Submit<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>可以看到有 <code>input</code> 跟 <code>button</code> 兩種，並且都有 <code>type=&quot;submit&quot;</code> 的方法可以使用，至於 <code>input</code> 跟 <code>button</code> 差別在哪裡，可以看<a href=\"https://www.zhihu.com/question/20839977\" target=\"_blank\" rel=\"noopener\">這篇文章</a>。</p>\n<p>簡單來說，為了避免使用者不小心將資料直接就送到後台，可以使用 <code>button</code> 來設計，如果是沒有疑慮的表單內容，可以使用 <code>input</code> 方式來設計。</p>\n<blockquote>\n<p>我自己是常用 <code>button</code> 來做設計，因為可以按照需求與功能進行。</p>\n</blockquote>\n<h2 id=\"Reset\"><a href=\"#Reset\" class=\"headerlink\" title=\"Reset\"></a>Reset</h2><p>有送出表單內容，當然也有清空表單內容，而 W3School 也有提供範本寫法，</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;label <span class=\"keyword\">for</span>=<span class=\"string\">\"email\"</span>&gt;</span><br><span class=\"line\">    &lt;span&gt;Email&lt;<span class=\"regexp\">/span&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    &lt;input type=\"email\" name=\"email\" id=\"email\" placeholder=\"your email\"&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    &lt;input type=\"reset\" value=\"reset\"&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    &lt;button type=\"reset\"&gt;Reset&lt;/</span>button&gt;</span><br><span class=\"line\">  &lt;<span class=\"regexp\">/label&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>上方的兩個寫法，記得要用 form 標籤，因為 input 本身是 form 的元素，要包住才會有效果！</p>\n<h2 id=\"透過-JS-取得值與清空-input-內容\"><a href=\"#透過-JS-取得值與清空-input-內容\" class=\"headerlink\" title=\"透過 JS 取得值與清空 input 內容\"></a>透過 JS 取得值與清空 input 內容</h2><p>本文重點，透過 JS 取得 input 輸入的值跟清空該怎麼寫? 直接看程式碼，</p>\n<h4 id=\"HTML\"><a href=\"#HTML\" class=\"headerlink\" title=\"HTML\"></a>HTML</h4><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">\"testInput\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>TEXT: <span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">\"test\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"testInput\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"submitBtn\"</span>&gt;</span>SUBMIT<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">\"reset\"</span>&gt;</span>RESET<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Javascript\"><a href=\"#Javascript\" class=\"headerlink\" title=\"Javascript\"></a>Javascript</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> testInput = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"testInput\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> submitBtn = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\".submitBtn\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">FsubmitBtn</span>(<span class=\"params\">value</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> str = <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> submitValue = testInput.value;</span><br><span class=\"line\">  str = submitValue;</span><br><span class=\"line\">  alert(str);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">submitBtn.addEventListener(<span class=\"string\">\"click\"</span>, FsubmitBtn);</span><br></pre></td></tr></table></figure>\n\n<p>說明：</p>\n<ol>\n<li>綁定 <code>input</code> 表格與 <code>button</code> 按鈕。</li>\n<li>寫一個 function 給監聽事件用。</li>\n<li>先宣告一個字串變數為空值。</li>\n<li>在宣告變數是 <code>input</code> 所得到的值。</li>\n<li>字串變數為 <code>input</code> 的值。</li>\n<li>執行 function 會跳出 alert 視窗，並顯示輸入的值。</li>\n<li><code>button type=&quot;reset&quot;</code> 在 <code>form</code> 標籤內，會自動執行清空 <code>input</code> 的功能。</li>\n</ol>\n<iframe src=\"https://codepen.io/hnzxewqw/embed/YzyRxVy?height=265&theme-id=light&default-tab=result\" width=\"100%\" height=\"450\" frameborder=\"0\" loading=\"lazy\" allowfullscreen> </iframe>\n\n<p>CodePen <a href=\"https://codepen.io/hnzxewqw/pen/YzyRxVy\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/YzyRxVy</a></p>\n<hr>\n<p>參考資料</p>\n<p><a href=\"https://pjchender.blogspot.com/2015/11/javascript.html\" target=\"_blank\" rel=\"noopener\">[Guide] 用 JavaScript 來取得表單元素內容的值（取值）</a></p>\n<p><a href=\"https://www.w3schools.com/tags/att_button_type.asp\" target=\"_blank\" rel=\"noopener\">HTML <code>&lt;button&gt;</code> type Attribute</a></p>\n","categories":["JavaScript"],"tags":["JavaScript"]},{"title":"JS 筆記 - for 迴圈 + if 的使用練習","url":"/javascript/20200513/3002099079/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/JavaScript%20note-01.jpg?alt=media&token=7bee0261-72ac-4de4-9f5a-f39d58735b7d\" alt=\"JavaScript Note\"></p>\n<p>之前學過 if，是有條件下的篩選機制，如果是多樣本但只要取出條件下的數值，配上迴圈就會非常好用，下方帶入一個主題：</p>\n<h3 id=\"有三間賣炸雞的餐廳要被評鑑銷售量，套餐要超過-100-筆訂單的就可獲得獎品。\"><a href=\"#有三間賣炸雞的餐廳要被評鑑銷售量，套餐要超過-100-筆訂單的就可獲得獎品。\" class=\"headerlink\" title=\"有三間賣炸雞的餐廳要被評鑑銷售量，套餐要超過 100 筆訂單的就可獲得獎品。\"></a>有三間賣炸雞的餐廳要被評鑑銷售量，套餐要超過 100 筆訂單的就可獲得獎品。</h3><p>三家炸雞店的資料如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> shops = [</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    captain: <span class=\"string\">\"Tim\"</span>,</span><br><span class=\"line\">    chicken: <span class=\"number\">150</span>,</span><br><span class=\"line\">    coke: <span class=\"number\">200</span>,</span><br><span class=\"line\">    fries: <span class=\"number\">70</span>,</span><br><span class=\"line\">    <span class=\"keyword\">set</span>: 99,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    captain: <span class=\"string\">\"Min\"</span>,</span><br><span class=\"line\">    chicken: <span class=\"number\">99</span>,</span><br><span class=\"line\">    coke: <span class=\"number\">77</span>,</span><br><span class=\"line\">    fries: <span class=\"number\">55</span>,</span><br><span class=\"line\">    <span class=\"keyword\">set</span>: 101,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    captain: <span class=\"string\">\"Mike\"</span>,</span><br><span class=\"line\">    chicken: <span class=\"number\">105</span>,</span><br><span class=\"line\">    coke: <span class=\"number\">111</span>,</span><br><span class=\"line\">    fries: <span class=\"number\">75</span>,</span><br><span class=\"line\">    <span class=\"keyword\">set</span>: 130,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">];</span><br><span class=\"line\">//陣列資料</span><br></pre></td></tr></table></figure>\n\n<p>因為只有三筆資料，可以很輕易地用眼睛看出來誰的套餐超過 100 套，但如果資料一多，就要使用迴圈了。<br>先用 <code>length</code> 查一下資料長度：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> setTotal = shops.length;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(setTotal); <span class=\"comment\">//結果會得到 3</span></span><br></pre></td></tr></table></figure>\n\n<p>使用迴圈來找超過一百套的店家吧！</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; setTotal; i++) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (shops[i].set &gt; <span class=\"number\">100</span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(shops[i].captain + <span class=\"string\">\"的套餐在本月賣超過 100 套，以資鼓勵\"</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ol>\n<li>建立迴圈，從第一筆資料找起，條件為當變數小於 setTotal 資料數，更新的內容。關於迴圈可以看<a href=\"https://ithelp.ithome.com.tw/articles/10229230\" target=\"_blank\" rel=\"noopener\">這篇</a></li>\n<li>使用 if，在 shops 中，找到 set 套餐大於 100 套的店家。</li>\n<li>找到這些店長的名字。</li>\n</ol>\n<p>畫面結果如下：</p>\n<p><img src=\"https://ithelp.ithome.com.tw/upload/images/20191204/20119300EXa4P0aumU.png\" alt=\"https://ithelp.ithome.com.tw/upload/images/20191204/20119300EXa4P0aumU.png\"></p>\n<hr>\n<h2 id=\"結語\"><a href=\"#結語\" class=\"headerlink\" title=\"結語\"></a>結語</h2><ol>\n<li>練習 JS 至今，要建立一些情境才能更明確的來練習該內容，會比較有方向，也練習如果未來面對開發的需求，會遇到的條件，滿有意思的！</li>\n<li>陣列與物件很常被使用，要多多練習。</li>\n</ol>\n","categories":["JavaScript"],"tags":["JavaScript"]},{"title":"JS 筆記 - 透過 JavaScript 生成一個檔案並下載","url":"/javascript/20200513/3866185586/","content":"<p><img src=\"https://images.unsplash.com/photo-1563906267088-b029e7101114?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1950&q=80\" alt=\"download\"></p>\n<p>看到上方這張圖片，如果喜歡的話會怎麼儲存呢?</p>\n<p>沒錯~就是在圖片上點選右鍵並且選擇「另存圖片」下載它，那該怎麼做?</p>\n<h2 id=\"在-a-連結中即可實現\"><a href=\"#在-a-連結中即可實現\" class=\"headerlink\" title=\"在 a 連結中即可實現\"></a>在 a 連結中即可實現</h2><p>W3School 的範例程式碼：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"/images/myw3schoolsimage.jpg\"</span> <span class=\"attr\">download</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>只要在 <code>image</code> 資料中的檔案，透過 <code>a</code> 連結，最後加上 <code>download</code> 屬性就可以完成這個功能。</p>\n<p>但是今天 PM 跑來說：<br>「客戶那邊要求在表單下方要有一個按鈕，表單所產生的 data 的資料，按下按鈕可以下載，然後這個檔案要用 excel 打開。」</p>\n<p>所以獲得以下資訊：</p>\n<ol>\n<li>有一個按鈕。</li>\n<li>會有 data 資料產生。</li>\n<li>有下載功能。</li>\n<li>要用 excel 可以打開的格式。</li>\n</ol>\n<p>這時馬上請教 Google 大神，然後找到了 Blob，跟想起來好像 excel 匯出有一個叫做 CSV 格式檔案，會用來匯入的。</p>\n<h2 id=\"CSV-逗號分隔值\"><a href=\"#CSV-逗號分隔值\" class=\"headerlink\" title=\"CSV 逗號分隔值\"></a>CSV 逗號分隔值</h2><p>逗號分隔值（Comma-Separated Values，CSV，有時也稱為字元分隔值，因為分隔字元也可以不是逗號），其檔案以純文字形式儲存表格資料（數字和文字），<a href=\"https://zh.wikipedia.org/wiki/%E9%80%97%E5%8F%B7%E5%88%86%E9%9A%94%E5%80%BC\" target=\"_blank\" rel=\"noopener\">更多請看維基百科</a>。</p>\n<h2 id=\"Blob\"><a href=\"#Blob\" class=\"headerlink\" title=\"Blob\"></a>Blob</h2><blockquote>\n<p><a href=\"https://developer.mozilla.org/zh-TW/docs/Web/API/Blob\" target=\"_blank\" rel=\"noopener\">MDN</a> 這樣解釋：<br>Blob（Binary Large Object）物件代表了一個相當於檔案（原始資料）的不可變物件。Blob 中的資料並不一定是 JavaScript 原生的格式。File 介面基於 Blob，繼承 blob 並擴充其功能以支援操作使用者系統上的檔案。</p>\n</blockquote>\n<p>看一下程式碼：</p>\n<h4 id=\"HTML\"><a href=\"#HTML\" class=\"headerlink\" title=\"HTML\"></a>HTML</h4><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"downloadBtn\"</span>&gt;</span>Download File<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"JavaScript\"><a href=\"#JavaScript\" class=\"headerlink\" title=\"JavaScript\"></a>JavaScript</h4><p>綁定 <code>button</code> 與建立監聽事件 <code>click</code>,</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> downloadBtn = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\".downloadBtn\"</span>);</span><br><span class=\"line\">downloadBtn.addEventListener(<span class=\"string\">\"click\"</span>, downloadFile);</span><br></pre></td></tr></table></figure>\n\n<p>在函式 <code>downloadFile();</code> 寫入要下載的方法：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">downloadFile</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">//藉型別陣列建構的 blob 來建立 URL</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> fileName = <span class=\"string\">\"fileName.csv\"</span>;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> data = getRandomData();</span><br><span class=\"line\">  <span class=\"keyword\">let</span> blob = <span class=\"keyword\">new</span> Blob([data], &#123;</span><br><span class=\"line\">    type: <span class=\"string\">\"application/octet-stream\"</span>[註<span class=\"number\">1</span>],</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  <span class=\"keyword\">var</span> href = URL.createObjectURL(blob);</span><br><span class=\"line\">  <span class=\"comment\">// 從 Blob 取出資料</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> link = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">\"a\"</span>);</span><br><span class=\"line\">  <span class=\"built_in\">document</span>.body.appendChild(link);</span><br><span class=\"line\">  link.href = href;</span><br><span class=\"line\">  link.download = fileName;</span><br><span class=\"line\">  link.click();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ol>\n<li><p>先命名一個變數等於下載的檔案名稱。</p>\n</li>\n<li><p>data 用一個 function 取得。</p>\n</li>\n<li><p>new Blob 的方法參考 MDN 介紹的 <code>Blob。</code></p>\n<blockquote>\n<p>var blob = new Blob([typedArray], {type: ‘application/octet-binary’}); // pass a useful mime type here<br>var url = URL.createObjectURL(blob);</p>\n</blockquote>\n</li>\n<li><p>接下來命名一個變數，讓其在網頁建立一個 a 連結功能。</p>\n</li>\n<li><p>在網頁文件的 body 瀏覽器新增一個子節點，其參數為剛剛建立的 a 連結。</p>\n</li>\n<li><p>a 連結的屬性等於剛剛宣告的 href 變數。</p>\n</li>\n<li><p>再給 a 連結一個 download 點擊事件等於宣告的文件檔案名稱。</p>\n</li>\n<li><p>產生點擊事件。</p>\n</li>\n</ol>\n<blockquote>\n<p>補充：<br>外部建立 <code>click</code> 的監聽事件，是呼叫 function 用，而 function 內的 <code>click();</code>，是針對透過 JS 建立的 <code>a</code> 連結所產生的點擊事件，所以兩個是不同的！</p>\n</blockquote>\n<h4 id=\"假資料\"><a href=\"#假資料\" class=\"headerlink\" title=\"假資料\"></a>假資料</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getRandomData</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> header = <span class=\"string\">\"RandomHeader\"</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> data = <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> j = <span class=\"number\">0</span>; j &lt; <span class=\"number\">2</span>; j++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (j &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        data = data + <span class=\"string\">\",\"</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      data = data + <span class=\"string\">\"Item\"</span> + i + <span class=\"string\">\"_\"</span> + j;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> header + data;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>codepen: <a href=\"https://codepen.io/hnzxewqw/pen/WNQKMKG\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/WNQKMKG</a></p>\n<h2 id=\"用-JS-寫一個載入檔案-load-File-功能\"><a href=\"#用-JS-寫一個載入檔案-load-File-功能\" class=\"headerlink\" title=\"用 JS 寫一個載入檔案 load File 功能\"></a>用 JS 寫一個載入檔案 load File 功能</h2><p>有下載檔案，一定也有透過本地端載入檔案到網頁上的功能，在 HTML 5 有建立一個 load 的語法，但會有預設的樣式，</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"file\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"myfile\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"myfile\"</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>Codepen <a href=\"https://codepen.io/hnzxewqw/pen/dyYQzOy\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/dyYQzOy</a></p>\n<p>但這次專案中是使用 button 按鈕來取得檔案，要有美美的按鈕，所以改寫一下，</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"file\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"file\"</span> <span class=\"attr\">hidden</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn_loadFile\"</span>&gt;</span>Load File<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>因為在 input 使用 hidden 屬性，所以原本預設的 input 就會看不見。必須使用 JS 來控制該功能，這邊使用的是 jQuery，</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">\".btn_loadFile\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  $(<span class=\"string\">\":file\"</span>).trigger(<span class=\"string\">\"click\"</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>這樣就可以實現檔案下載的功能，又能具備好看的 button。</p>\n<p>CodePen <a href=\"https://codepen.io/hnzxewqw/pen/zYvMdoy\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/zYvMdoy</a></p>\n<blockquote>\n<p>註 1.<br>網際網路媒體類型（Internet media type，也稱為 MIME 類型（MIME type）或內容類型（content type））是給網際網路上傳輸的內容賦予的分類類型。這邊的情境是<br><a href=\"https://zh.wikipedia.org/wiki/%E4%BA%92%E8%81%94%E7%BD%91%E5%AA%92%E4%BD%93%E7%B1%BB%E5%9E%8B#Type_application\" target=\"_blank\" rel=\"noopener\">application/octet-stream:任意的二進制檔案（通常做為通知瀏覽器下載檔案）</a>，還有很多種類型的介紹，請見維基百科。</p>\n</blockquote>\n","categories":["JavaScript"],"tags":["JavaScript"]},{"title":"jQuery 筆記 - 使用 fadeToggle 產生按鈕互動","url":"/jQuery/20200508/3013406974/","content":"<p><img src=\"https://i.imgur.com/acDsVRc.png\" alt=\"sample pic\"></p>\n<p>這是專案上所提出的一個使用情境，不是很新穎的技術，但會是一個綜合使用體驗的安排，記錄一下該功能與語法的內容。使用到的技術與語法如下：</p>\n<ul>\n<li>jQuery function:<ul>\n<li>fadeIn();</li>\n<li>fadeOut();</li>\n<li>fadeToggle();</li>\n</ul>\n</li>\n<li>SCSS 預處理器。</li>\n<li>CSS3 function calc。</li>\n</ul>\n<h2 id=\"起源\"><a href=\"#起源\" class=\"headerlink\" title=\"起源\"></a>起源</h2><p>PM 某天跑來這樣說：<br>這個頁面一開始看不到資訊頁內容，會有一個視窗蓋在畫面前面，要加上一個關閉按鈕，希望關閉後可以透過點擊按鈕再次叫出與關閉，資訊頁需要一個按鈕獨立控制。</p>\n<blockquote>\n<p>整串聽完只聽到一直開開關關…</p>\n</blockquote>\n<p>歸類有下方條件：</p>\n<ol>\n<li>一開始有一個小視窗。</li>\n<li>一開始資訊頁是看不見的。</li>\n<li>會有一個按鈕可以開啟資訊頁。</li>\n<li>會有一個按鈕可以控制小視窗頁開跟關。</li>\n</ol>\n<h2 id=\"版面處理\"><a href=\"#版面處理\" class=\"headerlink\" title=\"版面處理\"></a>版面處理</h2><p>使用 CSS3 function calc 方式做規劃，分成兩邊，一邊為 <code>width: calc(100% * 4 / 12);</code>，資訊頁為 <code>width: calc(100% * 4 / 12);</code>，這個方法真的非常好用啊!</p>\n<p>看一下 HTML 的結構分成三塊，兩個 <code>button</code>，小視窗 <code>.box</code>，資訊頁 <code>.info</code>，</p>\n<h4 id=\"HTML\"><a href=\"#HTML\" class=\"headerlink\" title=\"HTML\"></a>HTML</h4><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"container\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btnGroup\"</span>&gt;</span></span><br><span class=\"line\">    //button</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>點擊按鈕產生互動<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"toggleBtn\"</span>&gt;</span>OPEN / CLOSE<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"openInfoBtn\"</span>&gt;</span>CLICK TO SHOW INFO<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"box\"</span>&gt;</span></span><br><span class=\"line\">    //小視窗</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"box_container\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>哪一個用詞正確<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"li_Info\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>這是一批賽馬<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>這是一匹賽馬<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>這只是普通馬<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"closeBtn\"</span>&gt;</span>CLOSE<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"info\"</span>&gt;</span></span><br><span class=\"line\">    //資訊頁</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">img</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">src</span>=<span class=\"string\">\"https://images.unsplash.com/photo-1588763475559-b854628a953c?ixlib=rb-1.2.1&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;auto=format&amp;fit=crop&amp;w=1947&amp;q=80\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    /&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">      必須防止科技有限公司翻譯，默認確認，師傅環保積分是指條款，這個人們程度防止網遊，求職理由其實健康我的心環境篇文章給你我真幾乎，分類又有定義整合檢測登記手術登陸郵件少年異常電影寶寶簡直造型，全家特徵導航地上沒想到語音辦公水晶記憶經營研究生氣奇蹟高效，說了大。</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>因為一開始只有小視窗 <code>.box</code>，並且隱藏資訊頁 <code>.info</code>，所以這邊會使用 <code>display:none / block</code> 來呈現。</p>\n<p>另外要讓小視窗「蓋在」資訊頁上面，變使用 <code>z-index</code> 的順序來制訂，這邊使用 99 (我預定範圍為 1~99，使用最高的階層，避免未來維護時不小心被蓋過)。並使用 <code>position: absolute;</code> 將其絕對定位在瀏覽器，因為沒有特別寫 <code>position:relative;</code> 在別的地方，所以就會預設瀏覽器為父元素。</p>\n<h4 id=\"box\"><a href=\"#box\" class=\"headerlink\" title=\".box\"></a>.box</h4><figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.box</span> &#123;</span><br><span class=\"line\">   display: block; //一開始顯示</span><br><span class=\"line\">   <span class=\"selector-tag\">position</span>: <span class=\"selector-tag\">absolute</span>;</span><br><span class=\"line\">   <span class=\"selector-tag\">z-index</span>: 99;</span><br><span class=\"line\">   <span class=\"selector-tag\">top</span>: 30%;</span><br><span class=\"line\">   <span class=\"selector-tag\">left</span>: 40%;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"info\"><a href=\"#info\" class=\"headerlink\" title=\".info\"></a>.info</h4><figure class=\"highlight\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.info</span> &#123;</span><br><span class=\"line\">  display: none; //一開始隱藏</span><br></pre></td></tr></table></figure>\n\n<p>完成基本畫面設置後，就要透過 jQuery 來做互動效果。這次是要透過按鈕來做互動，所以先來看一下按鈕，</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"toggleBtn\"</span>&gt;</span>OPEN / CLOSE<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"openInfoBtn\"</span>&gt;</span>CLICK TO SHOW INFO<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>先綁定到 <code>.toggleBtn</code> 並產生 <code>click</code> 事件，當點擊此按鈕時， <code>.box</code> 小視窗，會於 0.5 秒淡出，再次點擊會於 0.5 秒後淡入，透過 <code>fadeToggle(填入時間參數);</code> 便可以實現此功能。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">\".toggleBtn\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  $(<span class=\"string\">\".box\"</span>).fadeToggle(<span class=\"number\">500</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>接者綁定 <code>.openInfoBtn</code> 並產生 <code>click</code> 事件，當點擊此按鈕時，會產生兩種行為，淡入顯示， <code>.box</code> 便淡出消失，</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">\".openInfoBtn\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  $(<span class=\"string\">\".info\"</span>).fadeIn(<span class=\"number\">300</span>);</span><br><span class=\"line\">  $(<span class=\"string\">\".box\"</span>).fadeOut(<span class=\"number\">500</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>最後在 <code>.box</code> 小視窗中也有一個 close 按鈕，也綁定 <code>click</code> 事件，點擊按鈕後，視窗會於 0.5 秒後淡出消失。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">\".closeBtn\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  $(<span class=\"string\">\".box\"</span>).fadeOut(<span class=\"number\">500</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>Codepen: <a href=\"https://codepen.io/hnzxewqw/pen/rNOddaX\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/rNOddaX</a></p>\n<h2 id=\"參考文章：\"><a href=\"#參考文章：\" class=\"headerlink\" title=\"參考文章：\"></a>參考文章：</h2><ol>\n<li><a href=\"https://ithelp.ithome.com.tw/articles/10130065\" target=\"_blank\" rel=\"noopener\">CSS 沒有極限 - CSS 的神奇 Calc 運算</a></li>\n<li><a href=\"https://api.jquery.com/fadetoggle/\" target=\"_blank\" rel=\"noopener\">jQuery fadeToggle</a></li>\n</ol>\n","categories":["jQuery"],"tags":["JavaScript","jQuery"]},{"title":"JS 筆記 - for 迴圈 + array 陣列的使用方法","url":"/javascript/20200504/976232810/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/JavaScript%20note-01.jpg?alt=media&token=7bee0261-72ac-4de4-9f5a-f39d58735b7d\" alt=\"JavaScript Note\"></p>\n<h2 id=\"透過迴圈來取得陣列裡的資料\"><a href=\"#透過迴圈來取得陣列裡的資料\" class=\"headerlink\" title=\"透過迴圈來取得陣列裡的資料\"></a>透過迴圈來取得陣列裡的資料</h2><p>當得到龐大的陣列資料時，透過迴圈來存取資料會輕鬆又省事，所以陣列跟迴圈常常會搭配使用。</p>\n<h4 id=\"情境\"><a href=\"#情境\" class=\"headerlink\" title=\"情境\"></a>情境</h4><p>倘若今天要查詢兩間店家的老闆姓名，拿到兩個陣列資料，程式碼如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> shops = [</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    captain: <span class=\"string\">\"Tim\"</span>,</span><br><span class=\"line\">    coke: <span class=\"number\">10</span>,</span><br><span class=\"line\">    cookie: <span class=\"number\">25</span>,</span><br><span class=\"line\">    egg: <span class=\"number\">170</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    captain: <span class=\"string\">\"Min\"</span>,</span><br><span class=\"line\">    coke: <span class=\"number\">77</span>,</span><br><span class=\"line\">    cookie: <span class=\"number\">44</span>,</span><br><span class=\"line\">    egg: <span class=\"number\">58</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">];</span><br><span class=\"line\"><span class=\"comment\">//陣列資料</span></span><br></pre></td></tr></table></figure>\n\n<p>之前學過透過陣列存取資料的方法為：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(shops.length); <span class=\"comment\">//結果會得到 2</span></span><br></pre></td></tr></table></figure>\n\n<p>不過有時候在工作上得到資料無法預期有多少的資料，可以用下方寫法找出有多少筆資料：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> captainTotal = shops.length;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(captainTotal); <span class=\"comment\">//結果會得到 2</span></span><br></pre></td></tr></table></figure>\n\n<hr>\n<h3 id=\"使用迴圈存取陣列資料\"><a href=\"#使用迴圈存取陣列資料\" class=\"headerlink\" title=\"使用迴圈存取陣列資料\"></a>使用迴圈存取陣列資料</h3><p>透過迴圈存取陣列資料，程式碼如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> shops = [</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    captain: <span class=\"string\">\"Tim\"</span>,</span><br><span class=\"line\">    coke: <span class=\"number\">10</span>,</span><br><span class=\"line\">    cookie: <span class=\"number\">25</span>,</span><br><span class=\"line\">    egg: <span class=\"number\">170</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    captain: <span class=\"string\">\"Min\"</span>,</span><br><span class=\"line\">    coke: <span class=\"number\">77</span>,</span><br><span class=\"line\">    cookie: <span class=\"number\">44</span>,</span><br><span class=\"line\">    egg: <span class=\"number\">58</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">];</span><br><span class=\"line\"><span class=\"comment\">//陣列資料</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; captainTotal; i++) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(shops[<span class=\"number\">0</span>].captain);</span><br><span class=\"line\">  <span class=\"comment\">//帶入陣列長度的變數。</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>但迴圈這樣帶會有一個問題，上面得知 <code>captainsTotal</code> 的資料長度是 2，但是這樣迴圈會直接抓兩次第一個陣列的 <code>captain</code> 兩次，會變這樣：</p>\n<p><img src=\"https://ithelp.ithome.com.tw/upload/images/20191204/20119300jgqAQaQYFq.png\" alt=\"https://ithelp.ithome.com.tw/upload/images/20191204/20119300jgqAQaQYFq.png\"></p>\n<p>但今天的目標是要把兩個物件內的店長姓名找出來，所以會變成下方程式碼：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; captainTotal; i++) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(shops[i].captain);</span><br><span class=\"line\">  <span class=\"comment\">//帶入陣列長度的變數。</span></span><br><span class=\"line\">  <span class=\"comment\">//陣列裡改成 i</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>因為 <code>captainTotal</code> 資料有兩筆，所以迴圈會跑兩次，要記得在陣列中起始的數字為 0，不是 1，所以會跑兩次的原因是這樣。<br>這樣就會找到兩個物件中店長的名字，如下方畫面：</p>\n</blockquote>\n<p><img src=\"https://ithelp.ithome.com.tw/upload/images/20191204/20119300TnN8QLw9b2.png\" alt=\"https://ithelp.ithome.com.tw/upload/images/20191204/20119300TnN8QLw9b2.png\"></p>\n<hr>\n<h3 id=\"結語\"><a href=\"#結語\" class=\"headerlink\" title=\"結語\"></a>結語</h3><ol>\n<li>如果陣列中的物件資料非常多，使用迴圈存取資料真的準確又方便。</li>\n<li>存取陣列資料的寫法需要多熟悉。</li>\n<li>迴圈條件中的值，可以換成<strong>設定的變數名稱</strong>。</li>\n</ol>\n","categories":["JavaScript"],"tags":["JavaScript"]},{"title":"C# 筆記 - 類別","url":"/c/20200428/284475535/","content":"<p><img src=\"https://robertlan.com/wp-content/uploads/2018/09/C-1024x384.png\" alt=\"C# ASP.NET\"></p>\n<p>這篇沒有很深入的紀錄內容，主要是因為工作上看到這些詞覺得疑惑，不太知道該屬性，所以簡單做個紀錄，讓我下次看到相關的程式碼時，可以查找。</p>\n<h2 id=\"類別-class\"><a href=\"#類別-class\" class=\"headerlink\" title=\"類別 class\"></a>類別 class</h2><ul>\n<li><code>class</code> 是 C# 的最基本類型。</li>\n<li>類別是以單一單位結合狀態 (欄位) 和動作 (方法及其他函式成員) 的資料結構。</li>\n<li>類別可以為動態建立的類別「執行個體」(稱為「物件」) 提供定義。</li>\n<li>類別支援「繼承」和「多型」，這些是可供「衍生類別」 將「基底類別」延伸及特製化的機制。</li>\n</ul>\n<h3 id=\"建立新類別\"><a href=\"#建立新類別\" class=\"headerlink\" title=\"建立新類別\"></a>建立新類別</h3><p>建立 class 是使用類別宣告來建立。類別宣告的開頭是一個標頭，此標頭會指定類別的<strong>屬性</strong>和<strong>修飾詞</strong>、<strong>類別的名稱</strong>、<strong>基底類別</strong> (如果提供)，以及<strong>類別所實作的介面</strong>。 此標頭後面會接著類別主體，此主體是由在 <code>{</code> 與 <code>}</code> 分隔符號之間撰寫的成員宣告清單所組成。</p>\n<blockquote>\n<p>沒錯，官網講得通常都很文言 <del>(看不懂)</del>。</p>\n</blockquote>\n<p>直接看範例程式碼：</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Point</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>翻譯：<br>一開始要用一個修飾詞當作<strong>引介點</strong>，之前有提過 C# 進入點只有一個，<code>public</code> 的如字面解釋，就是公開，沒有限制條件就讀取的<strong>進入點</strong>(後面會有說明)。並使用 <code>class</code> 類別，與<strong>自訂義的名稱</strong> <code>point</code>，並且用一個<strong>大括號</strong>建立，期內放入要撰寫的程式碼。</p>\n<h2 id=\"屬性\"><a href=\"#屬性\" class=\"headerlink\" title=\"屬性\"></a>屬性</h2><ul>\n<li><code>public</code>：訪問不受限制。</li>\n<li><code>protected</code>：訪問僅限於此類或從此類派生的類。</li>\n<li><code>internal</code>：訪問僅限於當前程式集（<code>.exe</code>、<code>.dll</code> 等）。</li>\n<li><code>protected internal</code>：訪問僅限於包含類、派生自包含類的類或同一程式集中的類。</li>\n<li><code>private</code>：訪問僅限於此類。</li>\n<li><code>private protected</code>：訪問僅限於從同一程式集中的包含類型派生的包含類或類。</li>\n</ul>\n<h2 id=\"欄位\"><a href=\"#欄位\" class=\"headerlink\" title=\"欄位\"></a>欄位</h2><p>「欄位」是與類別或類別執行個體關聯的變數。使用 <code>static</code> 修飾詞來宣告的欄位會定義靜態欄位。 靜態欄位只會識別一個儲存位置。無論創建多少個類的實例，靜態欄位只有一個副本。<br>未使用 <code>static</code> 修飾詞來宣告的欄位會定義執行個體欄位。 每個類別執行個體都包含一個該類別所有執行個體欄位的個別複本。</p>\n<blockquote>\n<p>看完之後只知道 <code>static</code> 是靜態的修飾詞，英文本身意思也是靜態的意思。</p>\n</blockquote>\n<p>後來看到<a href=\"https://dotblogs.com.tw/im_sqz777/2017/11/14/235408\" target=\"_blank\" rel=\"noopener\">這篇文</a>就有比較了解 <code>static</code>。</p>\n<p>引用一下說明：</p>\n<blockquote>\n<p>用物件導向的方式來解釋用到 <code>static</code> 這個修飾詞時和不使用 <code>static</code> 這個修飾詞時意義上的差異：</p>\n<p>假設今天有一個<strong>公開類別</strong>名稱叫做「人類」有個方法叫做「賺錢」。<br>如果賺錢這個方法是靜態方法 則大家賺的錢就是大家的 <del>(超爽 der 可以開始耍廢了</del><br>如果是非靜態方法，則大家自己賺的錢就是自己的。</p>\n</blockquote>\n<p>所以說使用 <code>static</code> 會影響到其他的程式碼，沒有使用就是自身的影響的程式碼，這跟 JS 的全域與區域變數感覺有點像。 <del>(但前輩叫我不要用 JS 去想 C#)</del></p>\n","categories":["C#"],"tags":["C#"]},{"title":"Moment.js 套件筆記 - 使用 Moment.js 套件做一個電子時鐘","url":"/javascript/20200428/2819232808/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/momentClock.jpg?alt=media&token=7fb1360f-9e69-4d6c-83e3-b009ffb45fe8\" alt=\"moment.js\"></p>\n<p>這次因為專案關係，研究了這個套件，之前就有聽過很好用，但一直沒實際使用過，查考網路很多教學都只有按照官網說明有哪些功能可以使用，但卻找不到會呈現在 HTML 的文章，想說趁著還熟悉就紀錄一下這次的製作方式。</p>\n<h2 id=\"契機\"><a href=\"#契機\" class=\"headerlink\" title=\"契機\"></a>契機</h2><p>事情是這樣，專案上需要一個時間可以自動更新，不需要手動操作的資料，所以我就找了這個套件來用。這次做了一個電子時鐘當作筆記。</p>\n<h2 id=\"關於-Moment-js-與下載套件\"><a href=\"#關於-Moment-js-與下載套件\" class=\"headerlink\" title=\"關於 Moment.js 與下載套件\"></a>關於 Moment.js 與下載套件</h2><p>這是一個關於日期與時間的套件，網路上非常多說明，就不再贅述，可以參照下方文章有更完整的說明。</p>\n<p><a href=\"https://momentjs.com/\" target=\"_blank\" rel=\"noopener\">Moment.js 官方網站</a></p>\n<p><a href=\"https://ithelp.ithome.com.tw/articles/10208995\" target=\"_blank\" rel=\"noopener\">moment.js - 關於時間的一切</a></p>\n<p><a href=\"https://codertw.com/%E7%A8%8B%E5%BC%8F%E8%AA%9E%E8%A8%80/122725/\" target=\"_blank\" rel=\"noopener\">Moment.js 常見用法總結</a></p>\n<p>進入官網後有幾個安裝套件的方式：</p>\n<ol>\n<li><p>透過終端機安裝套件 <a href=\"https://momentjs.com/docs/\" target=\"_blank\" rel=\"noopener\">https://momentjs.com/docs/</a> 方法有很多，可以進入官網看。</p>\n</li>\n<li><p>透過 cdnjs</p>\n</li>\n</ol>\n<p>moment.min.js (普通的套件)</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">https://<span class=\"title\">cdnjs.cloudflare.com</span>/<span class=\"title\">ajax</span>/<span class=\"title\">libs</span>/<span class=\"title\">moment.js</span>/2.24.0/<span class=\"title\">moment.min.js</span></span></span><br></pre></td></tr></table></figure>\n\n<p>moment-with-locales.min.js (有含時區的套件)</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">https://<span class=\"title\">cdnjs.cloudflare.com</span>/<span class=\"title\">ajax</span>/<span class=\"title\">libs</span>/<span class=\"title\">moment.js</span>/2.24.0/<span class=\"title\">moment</span>-<span class=\"title\">with</span>-<span class=\"title\">locales.min.js</span></span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>直接下載套件，並安裝到 js 資料夾中。</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;script src=<span class=\"string\">\"js/moment.js\"</span>&gt;<span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n\n<p>然後加入這段其實就可以使用 moment.js 套件了，</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">moment();</span><br></pre></td></tr></table></figure>\n\n<p>對了!要跟 jQuery 一樣放在 <code>head</code> 裡面，不然會找不到核心， <code>console</code> 會跳錯！是可以在 <code>console</code> 裡面看到時間了…</p>\n<p>但是，最重要的是要讓它在 HTML 上呈現阿…</p>\n<h2 id=\"進入正題\"><a href=\"#進入正題\" class=\"headerlink\" title=\"進入正題\"></a>進入正題</h2><p>這次要做一個電子時鐘，有小時，有分鐘，有秒數，所以這邊會使用到 <code>setInterval()</code> 的用法，是固定延遲了某段時間之後，才去執行對應的程式碼，然後「不斷循環」。與 <code>setTimeout()</code> 不同之處是 <code>setTimeout()</code> 只會執行一次就結束，而 <code>setInterval()</code> 則是會在間隔固定的時間不斷重複。</p>\n<blockquote>\n<p>引用文章: <a href=\"https://kuro.tw/posts/2019/02/23/%E8%AB%87%E8%AB%87-JavaScript-%E7%9A%84-setTimeout-%E8%88%87-setInterval/\" target=\"_blank\" rel=\"noopener\">談談 JavaScript 的 setTimeout 與 setInterval</a></p>\n</blockquote>\n<p>首先在 HTML 綁定一個 <code>id=&quot;clock&quot;</code> 。</p>\n<p>JS 也同步綁定一個這個 <code>id</code>，</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> clock = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"clock\"</span>);</span><br></pre></td></tr></table></figure>\n\n<p>並利用 <code>setInterval()</code> 來製造一秒跳一次的效果，</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">setInterval(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> time = moment();</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">\"time is being updated\"</span>); <span class=\"comment\">//會看到文字旁邊會有數字一秒跳一下</span></span><br><span class=\"line\">&#125;, <span class=\"number\">1000</span>);</span><br></pre></td></tr></table></figure>\n\n<p>這時官方語法有一個是 <code>format();</code>，是讓我們可以閱讀的格式，會呈現完整的日期與時間，</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">moment().<span class=\"built_in\">format</span>();</span><br></pre></td></tr></table></figure>\n\n<p>所以把剛剛宣告的變數後面加上 <code>format();</code></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> readTime = time.format();</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(readTime); <span class=\"comment\">//就會看到時間格式了 2020-04-28T22:22:03+08:00</span></span><br></pre></td></tr></table></figure>\n\n<p>但陽春一點的電子鐘，只有時間還有制度 (12/24hr)，依照官網所說明的我們這邊在 <code>format();</code>裡面加上 <code>&quot;hh:mm:ss A&quot;</code></p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/moment.keyword.png?alt=media&token=d9854c12-5b0f-49d3-948c-050a5931b7ff\" alt=\"moment.js keyword\"></p>\n<blockquote>\n<p>補充：<br>A: 顯示大寫的 AM/PM<br>a: 顯示小寫的 am/pm</p>\n</blockquote>\n<p>完成後在 console 應該會得到我們想要的樣子，最後終於要印在網頁上啦!!只要加上最基本的語法，</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">clock.textContent = readTime;</span><br></pre></td></tr></table></figure>\n\n<p>目前打完的完整程式碼：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> clock = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"clock\"</span>);</span><br><span class=\"line\">setInterval(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> time = moment();</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">\"time is being updated\"</span>);</span><br><span class=\"line\">  <span class=\"keyword\">let</span> readTime = time.format();</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(readTime);</span><br><span class=\"line\">  clock.textContent = readTime;</span><br><span class=\"line\">&#125;, <span class=\"number\">1000</span>);</span><br></pre></td></tr></table></figure>\n\n<p>這樣就完成了!!</p>\n<p>但是，這樣的程式碼太凌亂，另外建立一個具名函式，在將這個具名函式放到 setInterval() 的函式內，並且最後在執行這個函式，這樣程式碼既簡潔也好閱讀。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> clock = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"clock\"</span>);</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">updateTime</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> time = moment();</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">\"time is being updated\"</span>);</span><br><span class=\"line\">  <span class=\"keyword\">let</span> readTime = time.format(<span class=\"string\">\"hh:mm:ss A\"</span>);</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(readTime);</span><br><span class=\"line\">  clock.textContent = readTime;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">setInterval(updateTime, <span class=\"number\">1000</span>);</span><br><span class=\"line\">updateTime();</span><br></pre></td></tr></table></figure>\n\n<p>CodePen <a href=\"https://codepen.io/hnzxewqw/pen/zYvzjNG\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/zYvzjNG</a></p>\n","categories":["JavaScript"],"tags":["JavaScript","Moment.js"]},{"title":"Vue 筆記 - 使用 v-on 處理互動式行為","url":"/vue-js/20200427/1872522243/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/vue%20cover.png?alt=media&token=5f8b5aa0-eb3e-4d21-a715-07c5442dafbc\" alt=\"vue.js\"></p>\n<p>傳統在寫 JS 或是 jQuery 的時候，要綁定 DOM 來控制，假設要綁定在按鈕上的事件，就要寫成：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">'.btn'</span>).click(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\"> ...</span><br><span class=\"line\"> &#125;);</span><br></pre></td></tr></table></figure>\n\n<p>或是</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">'.btn'</span>).on(click, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\"> ...</span><br><span class=\"line\"> &#125;)</span><br></pre></td></tr></table></figure>\n\n<p>在 vue 中會直接寫在 html 上，並且在 vue 的程式碼中新增一個 <code>methods</code> 方法來對應 <code>v-on</code> 事件，vue 的原始碼中都是用<strong>物件</strong>來呈現資料，所以 <code>methods</code> 也要是物件。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">     el: <span class=\"string\">'#app'</span>,</span><br><span class=\"line\">     data: &#123;</span><br><span class=\"line\">       text: <span class=\"string\">''</span>,</span><br><span class=\"line\">       newText: <span class=\"string\">''</span>,</span><br><span class=\"line\">     &#125;,</span><br><span class=\"line\">     methods: &#123;</span><br><span class=\"line\">       ...</span><br><span class=\"line\">     &#125;,</span><br><span class=\"line\">   &#125;);</span><br></pre></td></tr></table></figure>\n\n<p>在 <code>methods</code> 中新增的方法名稱要對應在 <code>v-on</code> 的事件名稱中，登打方式如下方程式碼，並透過 <code>console.log</code> 檢查是否有正確產生事件。</p>\n<p>html</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">\"button\"</span> <span class=\"attr\">v-on:click</span>=<span class=\"string\">\"theNewText\"</span>&gt;</span>click<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>javascript</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  el: <span class=\"string\">\"#app\"</span>,</span><br><span class=\"line\">  data: &#123;</span><br><span class=\"line\">    text: <span class=\"string\">\"\"</span>,</span><br><span class=\"line\">    newText: <span class=\"string\">\"\"</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\">    theNewText: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">\"you click me\"</span>); <span class=\"comment\">//有正確顯示於 console 中</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>倘若我今天要在 <code>input</code> 輸入文字，並且點擊按鈕產生事件，可以使用 <code>this.text</code> 指向 text 本身。</p>\n<blockquote>\n<p>在 vue 中已經將 <code>this</code> 定義為資料本身。</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">methods: &#123;</span><br><span class=\"line\">theNewText: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">'this.text'</span>); <span class=\"comment\">//點擊按鈕後會顯示 this.text</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n\n<p>如果要將 <code>input</code> 中輸入的文字輸出到 ，可以這樣寫：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">methods: &#123;</span><br><span class=\"line\">  theNewText: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.newText = <span class=\"keyword\">this</span>.text;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"縮寫\"><a href=\"#縮寫\" class=\"headerlink\" title=\"縮寫\"></a>縮寫</h3><p>v-on 的縮寫為 <code>@</code>，所以像是這裡的事件就可以寫成： <code>@click=&quot;theNewText&quot;</code></p>\n<h2 id=\"v-on-結合修飾詞-Modifiers-將可以使用更多事件操作\"><a href=\"#v-on-結合修飾詞-Modifiers-將可以使用更多事件操作\" class=\"headerlink\" title=\"v-on 結合修飾詞 (Modifiers) 將可以使用更多事件操作\"></a>v-on 結合修飾詞 (Modifiers) 將可以使用更多事件操作</h2><p>修飾詞是用來增強指令附加功能的語法糖， vue 的修飾詞分兩種:<strong>表單元素</strong>與<strong>事件</strong>的修飾詞。使用方式為 <code>v-XXX</code> 後面加上 <code>.xxx</code>。ex: <code>v-on:click.prevent</code></p>\n<ul>\n<li>stop-相當於 event.stopPropagation()。</li>\n<li>prevent-相當於 event.preventDefault()。</li>\n<li>capture - 添加事件偵聽器時使用 capture 模式。(很少用)</li>\n<li>self - 當事件是從偵聽器綁定的元素本身觸發時才觸發。</li>\n<li>keyCode- 當事件是從特定鍵觸發時才觸發。</li>\n<li>native - 監聽組件根元素的原生事件。</li>\n<li>once - 只觸發一次。</li>\n<li>left - (2.2.0) 當點擊鼠標左鍵時觸發。</li>\n<li>right - (2.2.0) 當點擊鼠標右鍵時觸發。</li>\n<li>middle - (2.2.0) 當點擊鼠標中鍵時觸發。</li>\n<li>passive- (2.3.0)以{ passive: true }模式添加偵聽器 (沒用過)</li>\n</ul>\n<blockquote>\n<p>從 2.4.0 開始，<code>v-on</code> 同樣支持不帶參數綁定一個事件/監聽器鍵值對的對象。注意當使用對象語法時，是不支持任何修飾器的。</p>\n</blockquote>\n<h3 id=\"按鍵修飾詞\"><a href=\"#按鍵修飾詞\" class=\"headerlink\" title=\"按鍵修飾詞\"></a>按鍵修飾詞</h3><p>常用的還有一個是<a href=\"https://cn.vuejs.org/v2/guide/events.html#%E6%8C%89%E9%94%AE%E4%BF%AE%E9%A5%B0%E7%AC%A6\" target=\"_blank\" rel=\"noopener\">按鍵修飾符</a>，其中一個很好用的就是 <code>enter</code>，顧名思義就是按下 <code>enter</code> 鍵時，就能把資料送出。</p>\n<p>程式碼可以這樣寫： <code>@keyup.enter=&quot;theNewText&quot;</code></p>\n<p>Codepen: <a href=\"https://codepen.io/hnzxewqw/pen/XWmRvrW\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/XWmRvrW</a></p>\n<hr>\n<h2 id=\"v-on-指令練習\"><a href=\"#v-on-指令練習\" class=\"headerlink\" title=\"v-on 指令練習\"></a>v-on 指令練習</h2><h3 id=\"在指令中輸入方法，點擊按鈕會-count-會自動往上加-1\"><a href=\"#在指令中輸入方法，點擊按鈕會-count-會自動往上加-1\" class=\"headerlink\" title=\"在指令中輸入方法，點擊按鈕會 count 會自動往上加 1\"></a>在指令中輸入方法，點擊按鈕會 count 會自動往上加 1</h3><p>在 <code>button</code> 綁定 v-on 指令，並寫入<strong>加總為 1 (+=1)</strong>，在 vue 實體中的 <code>data</code> 中加上同步綁定的 <code>counter</code> ，便會有此效果。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"counter += 1\"</span>&gt;</span>Add 1<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>The button above has been clicked &#123;&#123; counter &#125;&#125; times.<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"actionscript\">  <span class=\"keyword\">var</span> example1 = <span class=\"keyword\">new</span> Vue(&#123;</span></span><br><span class=\"line\"><span class=\"actionscript\">    el: <span class=\"string\">\"#app\"</span>,</span></span><br><span class=\"line\">    data: &#123;</span><br><span class=\"line\">      counter: 0,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"在-vue-實體中加入-methods-，點擊按鈕會自動往上加-1\"><a href=\"#在-vue-實體中加入-methods-，點擊按鈕會自動往上加-1\" class=\"headerlink\" title=\"在 vue 實體中加入 methods ，點擊按鈕會自動往上加 1\"></a>在 vue 實體中加入 methods ，點擊按鈕會自動往上加 1</h3><p>如上方所說，<code>v-on</code> 會加上對應的 <code>methods</code>，這邊範例是在 <code>button</code> 上加上 <code>v-on</code> 指令，並在 vue 實體中加上 <code>methods</code>，並把指令的名稱當作一個 <code>function</code> 放入 methods 之中，<code>大括弧內要寫入與function</code> 一樣的名稱，<code>this</code> 指的是 <code>counter</code> 本身，便會產生此效果。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"add\"</span>&gt;</span>Add 1<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>The button above has been clicked &#123;&#123; counter &#125;&#125; times.<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"actionscript\">  <span class=\"keyword\">var</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span></span><br><span class=\"line\"><span class=\"actionscript\">    el: <span class=\"string\">\"#app\"</span>,</span></span><br><span class=\"line\">    data: &#123;</span><br><span class=\"line\">      counter: 0,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    methods: &#123;</span><br><span class=\"line\"><span class=\"actionscript\">      add: <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">()</span> </span>&#123;</span></span><br><span class=\"line\"><span class=\"actionscript\">        <span class=\"keyword\">this</span>.counter++;</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>codepen: <a href=\"https://codepen.io/hnzxewqw/pen/MWamNyN\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/MWamNyN</a></p>\n<h3 id=\"在-vue-實體中加入-methods-，帶入參數點擊按鈕時會依照參數數字往上加總\"><a href=\"#在-vue-實體中加入-methods-，帶入參數點擊按鈕時會依照參數數字往上加總\" class=\"headerlink\" title=\"在 vue 實體中加入 methods ，帶入參數點擊按鈕時會依照參數數字往上加總\"></a>在 vue 實體中加入 methods ，帶入參數點擊按鈕時會依照參數數字往上加總</h3><p>除了上方兩種基本方法外，也可以在 v-on 指令中加上參數，並在函式中也帶入相關參數值，在點擊按鈕時，就會產生相關事件。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"add(1, $event)\"</span>&gt;</span>Add 1<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"add(2, $event)\"</span>&gt;</span>Add 2<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"add(3)\"</span>&gt;</span>Add 3<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"add(4)\"</span>&gt;</span>Add 4<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"add(5)\"</span>&gt;</span>Add 5<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>The button above has been clicked &#123;&#123; counter &#125;&#125; times.<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"actionscript\">  <span class=\"keyword\">var</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span></span><br><span class=\"line\"><span class=\"actionscript\">    el: <span class=\"string\">\"#app\"</span>,</span></span><br><span class=\"line\">    data: &#123;</span><br><span class=\"line\">      counter: 0,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    methods: &#123;</span><br><span class=\"line\"><span class=\"actionscript\">      add: <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">(val, ev)</span> </span>&#123;</span></span><br><span class=\"line\"><span class=\"actionscript\">        <span class=\"keyword\">this</span>.counter += val;</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>Codepen: <a href=\"https://codepen.io/hnzxewqw/pen/KKdmOmj\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/KKdmOmj</a></p>\n<h3 id=\"修飾詞練習\"><a href=\"#修飾詞練習\" class=\"headerlink\" title=\"修飾詞練習\"></a>修飾詞練習</h3><h4 id=\"prevent-使其原本屬性取消\"><a href=\"#prevent-使其原本屬性取消\" class=\"headerlink\" title=\"prevent: 使其原本屬性取消\"></a>prevent: 使其原本屬性取消</h4><p>上方有提到修飾詞，這邊使用 prevent 修飾詞，使 <code>a</code> 連結取消原本屬性。這方法跟在 jQuery 中使用的 <code>preventDefault</code> 功能相同，但 vue 直接加在指令中，變得相當直覺也清楚。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"https://www.facebook.com/\"</span> @<span class=\"attr\">click.prevent</span>=<span class=\"string\">\"link\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    &gt;</span>原本點擊後會跳轉到 Facebook<span class=\"tag\">&lt;/<span class=\"name\">a</span></span></span><br><span class=\"line\"><span class=\"tag\">  &gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"actionscript\">  <span class=\"keyword\">var</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span></span><br><span class=\"line\"><span class=\"actionscript\">    el: <span class=\"string\">\"#app\"</span>,</span></span><br><span class=\"line\">    methods: &#123;</span><br><span class=\"line\"><span class=\"actionscript\">      link: <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">(e)</span> </span>&#123;</span></span><br><span class=\"line\"><span class=\"actionscript\">        <span class=\"comment\">// e =&gt; event</span></span></span><br><span class=\"line\"><span class=\"actionscript\">        <span class=\"comment\">// e.preventDefault();</span></span></span><br><span class=\"line\"><span class=\"actionscript\">        alert(<span class=\"string\">\"我取消了連結功能\"</span>);</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>Codepen: <a href=\"https://codepen.io/hnzxewqw/pen/QWjveme\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/QWjveme</a></p>\n<h4 id=\"lazy-相較於-JS-原生的-blur-語法，離開-input-後才會顯示結果\"><a href=\"#lazy-相較於-JS-原生的-blur-語法，離開-input-後才會顯示結果\" class=\"headerlink\" title=\"lazy: 相較於 JS 原生的 blur 語法，離開 input 後才會顯示結果\"></a>lazy: 相較於 JS 原生的 blur 語法，離開 input 後才會顯示結果</h4><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>lazy 效果: 輸入資料後，離開 input 後才會顯示結果<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">v-model.lazy</span>=<span class=\"string\">\"msg\"</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>msg: &#123;&#123; msg &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"actionscript\">  <span class=\"keyword\">var</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span></span><br><span class=\"line\"><span class=\"actionscript\">    el: <span class=\"string\">\"#app\"</span>,</span></span><br><span class=\"line\">    data: &#123;</span><br><span class=\"line\"><span class=\"actionscript\">      msg: <span class=\"string\">\"hello\"</span>,</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"number-使輸入的數字自動轉為數字格式\"><a href=\"#number-使輸入的數字自動轉為數字格式\" class=\"headerlink\" title=\"number: 使輸入的數字自動轉為數字格式\"></a>number: 使輸入的數字自動轉為數字格式</h4><p>下方有兩個表格，透過 number 修飾詞，可以自動轉成數字，透過 vue 實體解析後，便會自動相加。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">v-model.number</span>=<span class=\"string\">\"num1\"</span> /&gt;</span> +</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">v-model.number</span>=<span class=\"string\">\"num2\"</span> /&gt;</span> = &#123;&#123; sum &#125;&#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"actionscript\">  <span class=\"keyword\">var</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span></span><br><span class=\"line\"><span class=\"actionscript\">    el: <span class=\"string\">\"#app\"</span>,</span></span><br><span class=\"line\">    data: &#123;</span><br><span class=\"line\">      num1: 0,</span><br><span class=\"line\">      num2: 0,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    computed: &#123;</span><br><span class=\"line\">      sum() &#123;</span><br><span class=\"line\"><span class=\"actionscript\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.num1 + <span class=\"keyword\">this</span>.num2;</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>Codepen: <a href=\"https://codepen.io/hnzxewqw/pen/ZEbKgVO\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/ZEbKgVO</a></p>\n<h4 id=\"trim-自動取消資料前後的空格\"><a href=\"#trim-自動取消資料前後的空格\" class=\"headerlink\" title=\"trim: 自動取消資料前後的空格\"></a>trim: 自動取消資料前後的空格</h4><p>透過 <code>trim</code> 修飾詞，會自動刪除<strong>資料中前後的空白</strong>，但字串中間有空白則無法執行此效果</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">v-model.trim</span>=<span class=\"string\">\"msg\"</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>msg: &#123;&#123; msg &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"actionscript\">  <span class=\"keyword\">var</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span></span><br><span class=\"line\"><span class=\"actionscript\">    el: <span class=\"string\">\"#app\"</span>,</span></span><br><span class=\"line\">    data: &#123;</span><br><span class=\"line\"><span class=\"actionscript\">      msg: <span class=\"string\">\"Hello\"</span>,</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>Codepen: <a href=\"https://codepen.io/hnzxewqw/pen/BaoRXEe\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/BaoRXEe</a></p>\n<p>參考資料</p>\n<p><a href=\"https://cn.vuejs.org/v2/api/#v-on\" target=\"_blank\" rel=\"noopener\">Vue 官網 - 指令 v-on</a></p>\n","categories":["vue.js"],"tags":["vue.js"]},{"title":"JS 筆記 - ES6：展開與其餘參數","url":"/javascript/20200427/496196438/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/js-ES6.png?alt=media&token=0bf94bee-c7cd-4cc0-b619-45e5bf71d07b\" alt=\"ES6\"></p>\n<h2 id=\"使用展開語法合併陣列\"><a href=\"#使用展開語法合併陣列\" class=\"headerlink\" title=\"使用展開語法合併陣列\"></a>使用展開語法合併陣列</h2><p>下方有兩個陣列資料：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> groupA = [<span class=\"string\">\"1\"</span>, <span class=\"string\">\"2\"</span>, <span class=\"string\">\"3\"</span>];</span><br><span class=\"line\"><span class=\"keyword\">let</span> groupB = [<span class=\"string\">\"4\"</span>, <span class=\"string\">\"5\"</span>];</span><br></pre></td></tr></table></figure>\n\n<p>將兩個陣列資料合併的傳統寫法如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> groupAll = groupA.concat(groupB);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(groupAll); <span class=\"comment\">//[\"1\", \"2\", \"3\", \"4\", \"5\"]</span></span><br></pre></td></tr></table></figure>\n\n<p>但比較不易閱讀且不夠直觀，ES6 後來發明了下方寫法：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> groupAll = [...groupA, ...groupB];</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(groupAll); <span class=\"comment\">//[\"1\", \"2\", \"3\", \"4\", \"5\"]</span></span><br></pre></td></tr></table></figure>\n\n<p><code>... ary</code> 就是展開陣列資料，且這樣的寫法就可以得知在陣列裡有兩筆陣列，且閱讀上也直觀。</p>\n<h2 id=\"淺複製觀念\"><a href=\"#淺複製觀念\" class=\"headerlink\" title=\"淺複製觀念\"></a>淺複製觀念</h2><p>下方有兩個陣列，因 <code>groupB = groupA</code>，所以兩個內容的值會相同，且陣列跟物件都是傳參考，不是傳值，所以如果在 <code>groupB</code> 新增一個值，<code>groupA</code> 裡面也會新增一個值，故在此特性下會新增相同的值在其中。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> groupA = [<span class=\"string\">\"1\"</span>, <span class=\"string\">\"2\"</span>, <span class=\"string\">\"3\"</span>];</span><br><span class=\"line\"><span class=\"keyword\">let</span> groupB = groupA;</span><br><span class=\"line\">groupB.push(<span class=\"string\">\"4\"</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(groupA); <span class=\"comment\">//[\"1\", \"2\", \"3\", \"4\"]</span></span><br></pre></td></tr></table></figure>\n\n<p>但如果要使 <code>groupA</code> 不受影響的話可以這樣寫。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> groupA = [<span class=\"string\">\"1\"</span>, <span class=\"string\">\"2\"</span>, <span class=\"string\">\"3\"</span>];</span><br><span class=\"line\"><span class=\"keyword\">let</span> groupB = [...groupA];</span><br><span class=\"line\">groupB.push(<span class=\"string\">\"4\"</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(groupA); <span class=\"comment\">//[\"1\", \"2\", \"3\"]</span></span><br></pre></td></tr></table></figure>\n\n<p>按照上方展開陣列資料的特性，展開陣列後是取出 <code>groupA</code> 資料再回傳到新陣列 […groupA] 內，所以就不會被 <code>groupB</code> 影響。</p>\n<h2 id=\"類陣列觀念\"><a href=\"#類陣列觀念\" class=\"headerlink\" title=\"類陣列觀念\"></a>類陣列觀念</h2><p>類陣列就是很像陣列格式，但其實不是陣列，其 proto 的方法也很少。一般在 function 中會傳入參數值做運算，得到預期的值。</p>\n<p>因第二個 update 資料較多，透過 <code>console.log</code> 檢查會顯示一個陣列資料。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> origin = <span class=\"number\">1000</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">update</span>(<span class=\"params\">money</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> arg = <span class=\"built_in\">arguments</span>;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"built_in\">arguments</span>); <span class=\"comment\">//會得到一個陣列資料</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">update(<span class=\"number\">0</span>);</span><br><span class=\"line\">update(<span class=\"number\">10</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">2</span>, <span class=\"number\">100</span>, <span class=\"number\">5</span>, <span class=\"number\">10</span>, <span class=\"number\">10</span>, <span class=\"number\">500</span>);</span><br></pre></td></tr></table></figure>\n\n<p>另一個觀念：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> origin = <span class=\"number\">1000</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">update</span>(<span class=\"params\">money</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> arg = [...arguments]; <span class=\"comment\">//轉成新的陣列</span></span><br><span class=\"line\">  <span class=\"comment\">// console.log(arguments);</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> sum = arg.reduce(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">accumulator, currentValue</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> accumulator + currentValue;</span><br><span class=\"line\">  &#125;, <span class=\"number\">0</span>);</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">\"我有\"</span> + sum + <span class=\"string\">\"元\"</span>); <span class=\"comment\">//sum 的值得到相加後顯示</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">update(<span class=\"number\">0</span>); <span class=\"comment\">//我有 0 元</span></span><br><span class=\"line\">update(<span class=\"number\">10</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">2</span>, <span class=\"number\">100</span>, <span class=\"number\">5</span>, <span class=\"number\">10</span>, <span class=\"number\">10</span>, <span class=\"number\">500</span>); <span class=\"comment\">// 我有 641 元</span></span><br></pre></td></tr></table></figure>\n\n<p>reduce 是陣列中的方法，在類陣列中是無法使用的，所以要透過<strong>展開</strong>將原本的 arguments 轉成一個新陣列，就會得到預期的結果。</p>\n<h2 id=\"其餘參數\"><a href=\"#其餘參數\" class=\"headerlink\" title=\"其餘參數\"></a>其餘參數</h2><p>一般時候，若在 function 內設定好參數，輸入參數會自動對應其位置，如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">more</span>(<span class=\"params\">a, b, c</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(a, b, c); <span class=\"comment\">//100, 200, 300</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">more(<span class=\"number\">100</span>, <span class=\"number\">200</span>, <span class=\"number\">300</span>);</span><br></pre></td></tr></table></figure>\n\n<p>但有時候傳入的參數不確定有多少數量時，可以<strong>展開</strong>用<strong>其餘參數</strong>的方式抓取，變成陣列資料。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">more</span>(<span class=\"params\">...more</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(more); <span class=\"comment\">// [100, 200, 300, 400, 500]</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">more(<span class=\"number\">100</span>, <span class=\"number\">200</span>, <span class=\"number\">300</span>, <span class=\"number\">400</span>, <span class=\"number\">500</span>);</span><br></pre></td></tr></table></figure>\n\n<p>倘若前面加入一個變數，會顯示變數內容，後面的參數會用其餘參數的方式顯示。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">more</span>(<span class=\"params\">name, ...more</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(name, more); <span class=\"comment\">//阿忠 (5) [100, 200, 300, 400, 500]</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">more(<span class=\"string\">\"阿忠\"</span>, <span class=\"number\">100</span>, <span class=\"number\">200</span>, <span class=\"number\">300</span>, <span class=\"number\">400</span>, <span class=\"number\">500</span>);</span><br></pre></td></tr></table></figure>\n","categories":["JavaScript"],"tags":["JavaScript","ES6"]},{"title":"JS 筆記 - 認識  for 迴圈","url":"/javascript/20200427/3020170567/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/JavaScript%20note-01.jpg?alt=media&token=7bee0261-72ac-4de4-9f5a-f39d58735b7d\" alt=\"JavaScript Note\"></p>\n<h2 id=\"為什麼要用-for-迴圈\"><a href=\"#為什麼要用-for-迴圈\" class=\"headerlink\" title=\"為什麼要用 for 迴圈\"></a>為什麼要用 for 迴圈</h2><p>前面學習了陣列與物件的組合用法，在資料存取相對方便，但如果是<strong>大筆資料</strong>去做存取時，使用迴圈就可以<strong>避免大量的程式碼</strong>，比如說今天的專案是<strong>小專案</strong>，是做兩間養雞場的母雞資料，那這時候只要使用<strong>陣列跟物件</strong>就可以快速地取得兩間的母雞資料，可是今天如果是要做全台灣的養雞場，假如說有 100 間以上，光是陣列跟資料要取得的寫法就會看到滿滿的 console.log…</p>\n<p>這時候 for 迴圈就可以幫助在同性質的條件中，存取母雞的資料。</p>\n<hr>\n<h2 id=\"for-迴圈的寫法\"><a href=\"#for-迴圈的寫法\" class=\"headerlink\" title=\"for 迴圈的寫法\"></a>for 迴圈的寫法</h2><p>基本寫法：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; array.length; i++) &#123;</span><br><span class=\"line\">  <span class=\"comment\">//使用 for 迴圈 (初始狀態；條件;更新內容)</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(i); <span class=\"comment\">//執行內容</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<ol>\n<li>初始狀態：可以自訂任何數字。</li>\n<li>條件：設定要跑的條件長度或範圍。</li>\n<li>更新內容：會依照給予的條件去跑該次數。</li>\n<li>for 後面的變數條件內容要用分號 <code>&quot;;&quot;</code> 隔開。</li>\n</ol>\n</blockquote>\n<p>迴圈會判斷條件相符時開始執行，若條件不符就不會執行，如果跑完了也會停止執行。</p>\n<hr>\n<h2 id=\"學-JavaScript-必寫「九九乘法表」\"><a href=\"#學-JavaScript-必寫「九九乘法表」\" class=\"headerlink\" title=\"學 JavaScript 必寫「九九乘法表」\"></a>學 JavaScript 必寫「九九乘法表」</h2><p>來做一個綜合練習，會使用以下方法：</p>\n<blockquote>\n<p>變數<br>innerHTML<br>for 迴圈<br>計算功能</p>\n</blockquote>\n<p>建立一個 HTML 環境，這邊的 <code>container</code> 目的是讓畫面居中，為了讓九九乘法表呈現在 <code>box</code> 內，所以有設定了九個 <code>box，</code></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"container\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>九九乘法表<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"container\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"box\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"box\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"box\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"box\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"box\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"box\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"box\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"box\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"box\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>設定兩個變數，a 為乘數， b 為被乘數，用陣列呈現資料，a 的乘數只有八個，原因是九九乘法表從 2 開始，</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = [<span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>]; <span class=\"comment\">//乘數</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> b = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>]; <span class=\"comment\">//被乘數</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> el = <span class=\"built_in\">document</span>.querySelectorAll(<span class=\"string\">\".box\"</span>); <span class=\"comment\">//選取全部的 box</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> aLen = a.length;</span><br><span class=\"line\"><span class=\"comment\">// console.log(aLen); 結果為 8</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> bLen = b.length;</span><br><span class=\"line\"><span class=\"comment\">// console.log(bLen); 結果為 9</span></span><br></pre></td></tr></table></figure>\n\n<p>在來使用 for 迴圈來計算<strong>乘數</strong>與<strong>被乘數</strong>，</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; aLen; i++) &#123;</span><br><span class=\"line\">  <span class=\"comment\">//乘數迴圈</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> str = <span class=\"string\">\"\"</span>; <span class=\"comment\">// 預計將結果填入 str</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> j = <span class=\"number\">0</span>; j &lt; bLen; j++) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//被乘數迴圈</span></span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"為什麼-b-的迴圈會包在-a-裡面呢\"><a href=\"#為什麼-b-的迴圈會包在-a-裡面呢\" class=\"headerlink\" title=\"為什麼 b 的迴圈會包在 a 裡面呢?\"></a>為什麼 b 的迴圈會包在 a 裡面呢?</h3><p>因為是要用 <code>a*b</code>，讓 <code>b</code> 在 <code>a</code> 裡面跑九次，創造出九九乘法表的效果，因為要兩者相乘後要有一個數值，所以設定 <code>var str = &quot;&quot;</code>，在計算結果後要丟進 <code>str</code>。</p>\n<blockquote>\n<p>這個觀念很重要，要記起來。</p>\n</blockquote>\n<p>再來就是要呈現九九乘法了，這時候來組標籤(變數加字串)，<code>a</code> 陣列乘上 <code>b</code> 陣列，等於 <code>a</code>、<code>b</code> 陣列相乘，當中<strong>相乘</strong>與<strong>等於</strong>的符號是為了在網頁上呈現的，所以標示為字串。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> count = a[i] + <span class=\"string\">\"*\"</span> + b[j] + <span class=\"string\">\"=\"</span> + a[i] * b[j]; <span class=\"comment\">//組字串</span></span><br><span class=\"line\"><span class=\"comment\">// console.log(count); 結果為九九乘法表</span></span><br></pre></td></tr></table></figure>\n\n<p>為了讓 <code>str</code> 完整呈現 從 <code>2*1=1</code> 計算到 <code>2*9=18</code> ，這時候就使用 <code>str</code> 加總的功能，把所有的組合完成後，變成 <code>&lt;p&gt;</code> 標籤，丟回 <code>str</code> 裡面</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">str += <span class=\"string\">\"&lt;div&gt;\"</span> + count + <span class=\"string\">\"&lt;/div&gt;\"</span>; <span class=\"comment\">//將結果套回 str</span></span><br></pre></td></tr></table></figure>\n\n<p>最後，就在 <code>b</code> 的迴圈裡呈現所有 <code>a</code> 變數中九九乘法表跑完的結果，並把這個結果透過剛剛<code>變數 str</code> 的設定，渲染到網頁上。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">el[i].innerHTML = str; <span class=\"comment\">// 將 box 裡的乘數，透過 innerHTML 渲染於網頁</span></span><br></pre></td></tr></table></figure>\n\n<p>這樣就透過 JavaScript 的語法，完成了九九乘法表了！</p>\n<p>codepen: <a href=\"https://codepen.io/hnzxewqw/pen/rNVWRdR\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/rNVWRdR</a></p>\n<h3 id=\"優化\"><a href=\"#優化\" class=\"headerlink\" title=\"優化\"></a>優化</h3><p>但是這樣會是一整排的數列，頁面會太長，為了讓畫面更好看，在 CSS 的 <code>.box</code> 中加入下方語法：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">display</span>: <span class=\"selector-tag\">flex</span>;</span><br><span class=\"line\"><span class=\"selector-tag\">flex-direction</span>: <span class=\"selector-tag\">column</span>;</span><br><span class=\"line\"><span class=\"selector-tag\">flex-wrap</span>: <span class=\"selector-tag\">wrap</span>;</span><br><span class=\"line\"><span class=\"selector-tag\">padding</span>: 70<span class=\"selector-tag\">px</span> 40<span class=\"selector-tag\">px</span>;</span><br></pre></td></tr></table></figure>\n\n<p>使數列橫向排列，並且垂直對齊，斷行的部分也按照寬度做斷行，在 <code>padding</code> 到喜歡的效果即可！</p>\n","categories":["JavaScript"],"tags":["JavaScript"]},{"title":"Vue 筆記 - 動態產生多筆資料於網頁上 v-for、v-if","url":"/vue-js/20200421/2762058618/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/vue%20cover.png?alt=media&token=5f8b5aa0-eb3e-4d21-a715-07c5442dafbc\" alt=\"vue.js\"></p>\n<p><code>data</code> 中除了之前所放入的屬性與資料內容外，也可以放入 JSON 的資料結構。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  el: <span class=\"string\">\"#app\"</span>,</span><br><span class=\"line\">  data: &#123;</span><br><span class=\"line\">    list: [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        name: <span class=\"string\">\"Min\"</span>,</span><br><span class=\"line\">        age: <span class=\"number\">56</span>,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        name: <span class=\"string\">\"Tim\"</span>,</span><br><span class=\"line\">        age: <span class=\"number\">55</span>,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        name: <span class=\"string\">\"Joshua\"</span>,</span><br><span class=\"line\">        age: <span class=\"number\">20</span>,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    ],</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"v-for\"><a href=\"#v-for\" class=\"headerlink\" title=\"v-for\"></a>v-for</h2><p>這次要透過列表的方式將 JSON 資料呈現在網頁上，傳統 jQuery 可能要寫很多的 <code>li</code> 才能實現此畫面，透過 Vue 只要寫這樣：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"item in list\"</span>&gt;</span>&#123;&#123;item.name&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>說明：<br>透過 <code>v-for</code> 指令 ( 同等於 JS 的 for 迴圈篩選資料 ) 來取得資料，item 為自訂義的資料名稱，也就是指的是 <code>data</code> 中每一筆的物件資料，list 指的就是 JSON 本身，白話文可以解釋成：透過 <code>v-for</code> 從 list 篩選出每一筆的 item 資料內容，大括號指的是資料中的屬性。</p>\n<h3 id=\"加入索引-index\"><a href=\"#加入索引-index\" class=\"headerlink\" title=\"加入索引 index\"></a>加入索引 index</h3><p>如果要加入索引，可以這樣寫：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"(item, index) in list\"</span> <span class=\"attr\">:key</span>=<span class=\"string\">\"index\"</span>&gt;</span></span><br><span class=\"line\">    &#123;&#123; index +1 &#125;&#125; - &#123;&#123; item.name &#125;&#125; 是 &#123;&#123;item.age&#125;&#125; 歲</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>要記得索引是從 0 開始，如果要讓使用者從 1 開始，要設定成 <code>index +1</code>。</p>\n<p><a href=\"https://codepen.io/hnzxewqw/pen/PoPzNma\" target=\"_blank\" rel=\"noopener\">CodePen:</a></p>\n<blockquote>\n<p>其實現在編輯器相當人性，只要在 <code>li</code> 輸入 <code>v-for</code>，按下 tab，就會跳出預設的格式，再修改成自己要的對應名稱即可。</p>\n</blockquote>\n<h2 id=\"v-if\"><a href=\"#v-if\" class=\"headerlink\" title=\"v-if\"></a>v-if</h2><p>簡單來說就是在 HTML 標籤中加入判斷式，以上方例子為例，倘若今天要判斷年紀超過 20 歲的人物顯示在網頁上。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"(item, index) in list\"</span> <span class=\"attr\">:key</span>=<span class=\"string\">\"index\"</span> <span class=\"attr\">v-if</span>=<span class=\"string\">\"item.age &gt; 20\"</span>&gt;</span></span><br><span class=\"line\">    &#123;&#123; index +1 &#125;&#125; - &#123;&#123; item.name &#125;&#125; 是 &#123;&#123;item.age&#125;&#125; 歲</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"補充觀念\"><a href=\"#補充觀念\" class=\"headerlink\" title=\"補充觀念\"></a>補充觀念</h3><p>官網不推薦同時使用 <code>v-if</code> 和 <code>v-for</code>，原因是 <code>v-for</code> 的權重比較高。可看官網的<a href=\"https://cn.vuejs.org/v2/style-guide/#%E9%81%BF%E5%85%8D-v-if-%E5%92%8C-v-for-%E7%94%A8%E5%9C%A8%E4%B8%80%E8%B5%B7%E5%BF%85%E8%A6%81\" target=\"_blank\" rel=\"noopener\">指令說明</a>與<a href=\"https://cn.vuejs.org/v2/guide/list.html#v-for-object\" target=\"_blank\" rel=\"noopener\">渲染列表說明</a>，通常 <code>v-if</code> 會與 <code>v-show</code> 一起使用，這後面會提到。</p>\n<h3 id=\"v-for-列表渲染\"><a href=\"#v-for-列表渲染\" class=\"headerlink\" title=\"v-for 列表渲染\"></a>v-for 列表渲染</h3><p>在 <code>li</code> 建立 <code>v-for</code> 指令，讓 <code>li</code> 產生多個清單，再透過雙向綁定的方法，使得 HTML 的程式碼很乾淨。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">id</span>=<span class=\"string\">\"ex1\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"item in List\"</span>&gt;</span></span><br><span class=\"line\">    &#123;&#123;item.msg&#125;&#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><code>item</code> 為 <code>List</code> 中的清單資料，並且透過 <code>data</code> 中的 <code>List</code> 資料內容，同步到頁面上，這個列表不管是 HTML 或是資料的程式碼都乾淨且不會搞混。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  el: <span class=\"string\">\"#ex1\"</span>,</span><br><span class=\"line\">  data: &#123;</span><br><span class=\"line\">    List: [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        msg: <span class=\"string\">\"Good\"</span>,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        msg: <span class=\"string\">\"Wonderful\"</span>,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    ],</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>Codepen <a href=\"https://codepen.io/hnzxewqw/pen/xxwRVaZ\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/xxwRVaZ</a></p>\n<p>實際範例：今日要查找公司的銷售員名單，並且有編號在前。</p>\n<p>HTML</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"(s, index) in sales\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>&#123;&#123; index &#125;&#125; &#123;&#123; s.name &#125;&#125;: <span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>age: &#123;&#123; s.age &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>company: &#123;&#123; s.company &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>email: &#123;&#123; s.email &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>JavaScript</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  el: <span class=\"string\">\"#app\"</span>,</span><br><span class=\"line\">  data: &#123;</span><br><span class=\"line\">    sales: [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        age: <span class=\"number\">26</span>,</span><br><span class=\"line\">        name: <span class=\"string\">\"Sarah Zamora\"</span>,</span><br><span class=\"line\">        company: <span class=\"string\">\"ZINCA\"</span>,</span><br><span class=\"line\">        email: <span class=\"string\">\"sarah_zamora@zinca.ca\"</span>,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        age: <span class=\"number\">37</span>,</span><br><span class=\"line\">        name: <span class=\"string\">\"Cameron Wilder\"</span>,</span><br><span class=\"line\">        company: <span class=\"string\">\"NIKUDA\"</span>,</span><br><span class=\"line\">        email: <span class=\"string\">\"cameron_wilder@nikuda.biz\"</span>,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        age: <span class=\"number\">40</span>,</span><br><span class=\"line\">        name: <span class=\"string\">\"Roach Hubbard\"</span>,</span><br><span class=\"line\">        company: <span class=\"string\">\"EMOLTRA\"</span>,</span><br><span class=\"line\">        email: <span class=\"string\">\"roach_hubbard@emoltra.me\"</span>,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        age: <span class=\"number\">38</span>,</span><br><span class=\"line\">        name: <span class=\"string\">\"Juliet Sykes\"</span>,</span><br><span class=\"line\">        company: <span class=\"string\">\"PROWASTE\"</span>,</span><br><span class=\"line\">        email: <span class=\"string\">\"juliet_sykes@prowaste.org\"</span>,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        age: <span class=\"number\">21</span>,</span><br><span class=\"line\">        name: <span class=\"string\">\"Jerri Jimenez\"</span>,</span><br><span class=\"line\">        company: <span class=\"string\">\"ACCUPHARM\"</span>,</span><br><span class=\"line\">        email: <span class=\"string\">\"jerri_jimenez@accupharm.tv\"</span>,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    ],</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>Codepen <a href=\"https://codepen.io/hnzxewqw/pen/VwvmjKy\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/VwvmjKy</a></p>\n<p>或是做有分頁的選單也很不錯，</p>\n<p>HTML</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"pager\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span> <span class=\"symbol\">&amp;lt;</span> <span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"pager\"</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"n in 10\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- n 從 1 開始計算 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>&#123;&#123; n  &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"pager\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span> <span class=\"symbol\">&amp;gt;</span> <span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>Codepen <a href=\"https://codepen.io/hnzxewqw/pen/yLYVJEO\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/yLYVJEO</a></p>\n<blockquote>\n<p>雖然 vue 裡面沒有寫東西，但因為要套用指令效果，所以在 <code>script</code> 中還是要寫入 vue。</p>\n</blockquote>\n<h3 id=\"v-for-key\"><a href=\"#v-for-key\" class=\"headerlink\" title=\"v-for + key\"></a>v-for + key</h3><p>加上 key 是考量到效能，在預設狀況下，Vue.js 會盡量重複使用已經渲染好的元素，若不設定 key，不會重新渲染，只會部分更新。故當元素更新時 ( 例如:改變順序 ) 有可識別唯一性的 key <strong>可以確保列表有重新渲染</strong>。</p>\n<p>HTML</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>filtered by age less then 40: <span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"(s, index) in filteredSales\"</span> <span class=\"attr\">:key</span>=<span class=\"string\">\"s.name\"</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>&#123;&#123; index &#125;&#125; &#123;&#123; s.name &#125;&#125;: <span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>age: &#123;&#123; s.age &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>company: &#123;&#123; s.company &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>email: &#123;&#123; s.email &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>JavaScript</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  el: <span class=\"string\">\"#app\"</span>,</span><br><span class=\"line\">  computed: &#123;</span><br><span class=\"line\">    filteredSales() &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.sales.filter(<span class=\"function\">(<span class=\"params\">d</span>) =&gt;</span> d.age &lt; <span class=\"number\">40</span>);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  data: &#123;</span><br><span class=\"line\">    search: <span class=\"string\">\"\"</span>,</span><br><span class=\"line\">    sales: [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        age: <span class=\"number\">26</span>,</span><br><span class=\"line\">        name: <span class=\"string\">\"Sarah Zamora\"</span>,</span><br><span class=\"line\">        company: <span class=\"string\">\"ZINCA\"</span>,</span><br><span class=\"line\">        email: <span class=\"string\">\"sarah_zamora@zinca.ca\"</span>,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        age: <span class=\"number\">37</span>,</span><br><span class=\"line\">        name: <span class=\"string\">\"Cameron Wilder\"</span>,</span><br><span class=\"line\">        company: <span class=\"string\">\"NIKUDA\"</span>,</span><br><span class=\"line\">        email: <span class=\"string\">\"cameron_wilder@nikuda.biz\"</span>,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        age: <span class=\"number\">40</span>,</span><br><span class=\"line\">        name: <span class=\"string\">\"Roach Hubbard\"</span>,</span><br><span class=\"line\">        company: <span class=\"string\">\"EMOLTRA\"</span>,</span><br><span class=\"line\">        email: <span class=\"string\">\"roach_hubbard@emoltra.me\"</span>,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        age: <span class=\"number\">38</span>,</span><br><span class=\"line\">        name: <span class=\"string\">\"Juliet Sykes\"</span>,</span><br><span class=\"line\">        company: <span class=\"string\">\"PROWASTE\"</span>,</span><br><span class=\"line\">        email: <span class=\"string\">\"juliet_sykes@prowaste.org\"</span>,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        age: <span class=\"number\">21</span>,</span><br><span class=\"line\">        name: <span class=\"string\">\"Jerri Jimenez\"</span>,</span><br><span class=\"line\">        company: <span class=\"string\">\"ACCUPHARM\"</span>,</span><br><span class=\"line\">        email: <span class=\"string\">\"jerri_jimenez@accupharm.tv\"</span>,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    ],</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"v-if-v-else-amp-v-show\"><a href=\"#v-if-v-else-amp-v-show\" class=\"headerlink\" title=\"v-if / v-else &amp; v-show\"></a>v-if / v-else &amp; v-show</h2><p>大部分 <code>v-if</code> 跟 <code>v-show</code> 會拿來一起使用或比較，兩者最大的差別是在對 DOM 元素的操作。</p>\n<h3 id=\"v-if-1\"><a href=\"#v-if-1\" class=\"headerlink\" title=\"v-if\"></a>v-if</h3><p>會依照條件決定<strong>是否將元件渲染在網頁上</strong>，並決定事件與資料的監聽是否要綁定至元件或直接銷毀元件。</p>\n<p>透過 <code>v-if</code> 加入判斷，倘若條件相符，就顯示於網頁上。</p>\n<p>HTML</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">v-if</span>=<span class=\"string\">\"option1\"</span>&gt;</span>Yes<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">hr</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">v-if</span>=<span class=\"string\">\"option2\"</span>&gt;</span>Yes<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">v-else</span>&gt;</span>No<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>JavaScript</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  el: <span class=\"string\">\"#app\"</span>,</span><br><span class=\"line\">  data: &#123;</span><br><span class=\"line\">    cond1: <span class=\"number\">1</span> &gt; <span class=\"number\">0</span>,</span><br><span class=\"line\">    cond2: <span class=\"literal\">false</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>Codepen <a href=\"https://codepen.io/hnzxewqw/pen/gOaLwpV\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/gOaLwpV</a></p>\n<h3 id=\"v-show\"><a href=\"#v-show\" class=\"headerlink\" title=\"v-show\"></a>v-show</h3><p>則是<strong>一定會產出元件</strong>，但以條件來切換 CSS <code>(display:block / none)</code> 的顯示與否。若條件更動頻繁，則適合用此方法。</p>\n<p>HTML</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">v-if</span>=<span class=\"string\">\"cond1\"</span>&gt;</span>Yes<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">v-else</span>&gt;</span>No<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">hr</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">v-show</span>=<span class=\"string\">\"cond2\"</span>&gt;</span>Yes<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">v-show</span>=<span class=\"string\">\"!cond2\"</span>&gt;</span>No<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>JavaScript</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  el: <span class=\"string\">\"#app\"</span>,</span><br><span class=\"line\">  data: &#123;</span><br><span class=\"line\">    cond1: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    cond2: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>Codepen <a href=\"https://codepen.io/hnzxewqw/pen/abvBmNG\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/abvBmNG</a></p>\n","categories":["vue.js"],"tags":["vue.js"]},{"title":"ASP.NET MVC 筆記 - 認識 MVC 與建立第一個 ASP.NET MVC","url":"/ASP-NET-MVC/20200421/3396145742/","content":"<p><img src=\"https://www.webpromedya.com/wp-content/uploads/2018/08/asp-net.jpg\" alt=\"image alt\"></p>\n<h2 id=\"什麼是-MVC\"><a href=\"#什麼是-MVC\" class=\"headerlink\" title=\"什麼是 MVC\"></a>什麼是 MVC</h2><p>MVC 模式（Model–view–controller）是軟體工程中的一種軟體架構模式，把軟體系統分為三個基本部分：模型（Model）、視圖（View）和控制器（Controller）。不是新技術，而是開發網頁的一種觀念，著重在關注點分離。</p>\n<p>目的是實現一種動態的程式設計，使後續對程式的修改和擴充簡化，並且使程式某一部分的重複利用成為可能。除此之外，此模式透過對複雜度的簡化，使程式結構更加直覺。軟體系統透過對自身基本部分分離的同時也賦予了各個基本部分應有的功能。專業人員可以依據自身的專長分組：</p>\n<ul>\n<li><strong>控制器（Controller）</strong>- 負責轉發請求，對請求進行處理。</li>\n<li><strong>視圖（View）</strong> - 介面設計人員進行圖形介面設計。</li>\n<li><strong>模型（Model）</strong>- 程式設計師編寫程式應有的功能（實現演算法等等）、資料庫專家進行資料管理和資料庫設計(可以實現具體的功能)。</li>\n</ul>\n<h2 id=\"建立-ASP-NET-MVC\"><a href=\"#建立-ASP-NET-MVC\" class=\"headerlink\" title=\"建立 ASP.NET MVC\"></a>建立 ASP.NET MVC</h2><p>ASP.NET 是微軟開發的網頁套件，並搭配 visual studio 2019 編輯器來使用，新手建議環境直接使用 windows，畢竟這整套都是微軟開發的。</p>\n<p>這邊就不介紹編輯器的使用，若有興趣可以看<a href=\"https://visualstudio.microsoft.com/zh-hant/vs/getting-started/\" target=\"_blank\" rel=\"noopener\">官網有教學</a>，下面直接進入 ASP.NET 來建立一個基本的網站。</p>\n<h3 id=\"建立新專案\"><a href=\"#建立新專案\" class=\"headerlink\" title=\"建立新專案\"></a>建立新專案</h3><p>首先開啟 visual studio 2019，選擇「建立新專案」:</p>\n<p><img src=\"https://ithelp.ithome.com.tw/upload/images/20190902/20120055S4ugLPlmyF.png\" alt=\"建立新專案\"></p>\n<h3 id=\"選擇專案類型\"><a href=\"#選擇專案類型\" class=\"headerlink\" title=\"選擇專案類型\"></a>選擇專案類型</h3><p>選擇後會看到很多專案類型可以選，因公司專案是使用 C#，故語言類選擇 C#，平台是 windows，專案類型選擇「ASP.NET Web 應用程式 (.NET Framework)」，</p>\n<p><img src=\"https://i.imgur.com/a2wREqp.png\" alt=\"選擇專案類型\"></p>\n<h3 id=\"設定專案名稱\"><a href=\"#設定專案名稱\" class=\"headerlink\" title=\"設定專案名稱\"></a>設定專案名稱</h3><p>檔案名稱就打容易記得的，沒有特別想法可以使用預設的名稱，儲存位置與架構若沒特別需要可以使用預設值。</p>\n<p><img src=\"https://i.imgur.com/n435d8x.png\" alt=\"設定專案名稱\"></p>\n<h3 id=\"挑選使用的框架\"><a href=\"#挑選使用的框架\" class=\"headerlink\" title=\"挑選使用的框架\"></a>挑選使用的框架</h3><p>選擇 MVC 專案，然後就會開始建立!</p>\n<p><img src=\"https://i.imgur.com/LijOuUm.png\" alt=\"MVC\"></p>\n<h3 id=\"建立完成\"><a href=\"#建立完成\" class=\"headerlink\" title=\"建立完成\"></a>建立完成</h3><p>跑完之後會看到右側有很多的資料夾，並當中會看到 Model、Controller、View 三個主要的資料夾，其餘資料夾都是放套件或是存放資料用。</p>\n<p><img src=\"https://i.imgur.com/nrLNkl5.png\" alt=\"資料夾\"></p>\n<h4 id=\"Controller-控制器在哪\"><a href=\"#Controller-控制器在哪\" class=\"headerlink\" title=\"Controller 控制器在哪?\"></a>Controller 控制器在哪?</h4><p>它位於在 Controller 資料夾內，專案建立時會預設建立 HomeController.cs，稱為 Home 控制器，其中定義了 <code>Index()</code>、<code>About()</code>、<code>Contact()</code> 三個 Action Methods (動作方法)。</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Linq;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Web;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Web.Mvc;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">chartTest.Controllers</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">HomeController</span> : <span class=\"title\">Controller</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> ActionResult <span class=\"title\">Index</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> View();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> ActionResult <span class=\"title\">About</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>        &#123;</span><br><span class=\"line\">            ViewBag.Message = <span class=\"string\">\"Your application description page.\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">return</span> View();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> ActionResult <span class=\"title\">Contact</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>        &#123;</span><br><span class=\"line\">            ViewBag.Message = <span class=\"string\">\"Your contact page.\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">return</span> View();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Model-在哪\"><a href=\"#Model-在哪\" class=\"headerlink\" title=\"Model 在哪?\"></a>Model 在哪?</h4><p>位於 Model 資料夾中，目前為空，因尚未建立任何資料，類別會定義 Properties 屬性，用來存放資料。</p>\n<h4 id=\"View-在哪\"><a href=\"#View-在哪\" class=\"headerlink\" title=\"View 在哪?\"></a>View 在哪?</h4><p>位於 View 資料夾中，內有 <code>Home</code> 跟 <code>Shared</code> 兩個子資料夾，此兩個資料夾是對應 <code>Home</code> 控制器，通常一個 Aciton 方法會對應一個 View 檔案。</p>\n<p><img src=\"https://i.imgur.com/YbMJYPA.png\" alt=\"\"></p>\n<blockquote>\n<p>例如: Index()會對應到一個 <code>Index.cshtml</code>，<code>.cshtml</code> 就是 C# 的 html 檔案。</p>\n</blockquote>\n<h2 id=\"手動建立-Model、Controller、View\"><a href=\"#手動建立-Model、Controller、View\" class=\"headerlink\" title=\"手動建立 Model、Controller、View\"></a>手動建立 Model、Controller、View</h2><p>雖然使用專案可以自動建立 MVC 樣版檔案，但學會自己手動建立，才能證明自己跨入了 MVC 大門。</p>\n<h3 id=\"建立-Controller\"><a href=\"#建立-Controller\" class=\"headerlink\" title=\"建立 Controller\"></a>建立 Controller</h3><p>在 Controller 資料夾上點選【右鍵】、選擇【加入】、選擇【控制器】。</p>\n<p>後會跳出控制器建立選項，選擇【MVC 5 控制器 - 空白】，並自訂控制器名稱，便完成建立了控制器。</p>\n<p><img src=\"https://i.imgur.com/rztlQtx.png\" alt=\"\"></p>\n<p>完成的控制器。</p>\n<p><img src=\"https://i.imgur.com/71udtkg.png\" alt=\"\"></p>\n<h3 id=\"建立-View\"><a href=\"#建立-View\" class=\"headerlink\" title=\"建立 View\"></a>建立 View</h3><p>點開剛剛建立的控制器，會看到有一個 <code>Index()</code> 的 Action。</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Linq;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Web;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Web.Mvc;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">chartTest.Controllers</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">productController</span> : <span class=\"title\">Controller</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"comment\">// GET: product</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> ActionResult <span class=\"title\">Index</span>(<span class=\"params\"></span>) <span class=\"comment\">// Index 上點右鍵</span></span></span><br><span class=\"line\"><span class=\"function\"></span>        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> View();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>在其上點選【右鍵】，選擇第一個【新增檢視】選項，檢視名稱維持 Index，範本也維持 Empty，按【加入】即建立完成。</p>\n<blockquote>\n<p>本來有試著修改名稱，但後面卻跳錯找不到 URL，所以建議先按照這裡的設定，熟悉流程。</p>\n</blockquote>\n<p>會看到在 View 資料夾下會產生一個 product 的資料夾，並產生 <code>index.cshtml</code> 檢視檔案，與 <code>index()</code> Action 相對應。</p>\n<p><img src=\"https://i.imgur.com/TL3VMg5.png\" alt=\"\"></p>\n<p>裡面程式碼長這樣。</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"code\"><pre><span class=\"line\">@&#123;</span><br><span class=\"line\">    ViewBag.Title = <span class=\"string\">\"Index\"</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;h2&gt;Index&lt;/h2&gt;</span><br></pre></td></tr></table></figure>\n\n<p>這時可以象徵性的修改 Index 中的 <code>&lt;h2&gt;</code> 的標題以及加入一張圖片，在按下 <code>F5</code> 會看到原本中間的區塊改變了。</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"code\"><pre><span class=\"line\">@&#123;</span><br><span class=\"line\">    ViewBag.Title = <span class=\"string\">\"Index\"</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;h2&gt;car&lt;/h2&gt;</span><br><span class=\"line\">&lt;img src=<span class=\"string\">\"https://images.unsplash.com/photo-1542362567-b07e54358753?ixlib=rb-1.2.1&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;auto=format&amp;fit=crop&amp;w=500&amp;q=60\"</span> alt=<span class=\"string\">\"\"</span> /&gt;</span><br></pre></td></tr></table></figure>\n\n<p>F5 預覽頁面。</p>\n<p><img src=\"https://i.imgur.com/0B9Cpim.png\" alt=\"預覽畫面\"></p>\n<h3 id=\"建立-Model\"><a href=\"#建立-Model\" class=\"headerlink\" title=\"建立 Model\"></a>建立 Model</h3><p>在 Model 資料夾點擊【右鍵】、【加入】、【類別】(在最下方)，選擇第一個「類別」並且最下方的命名處命名「Product.cs」、【新增】即建立完成。</p>\n<p><img src=\"https://i.imgur.com/kY8lxhT.png\" alt=\"類別選單\"></p>\n<blockquote>\n<p>Model 檔案可隨意命名，它和 Controller 或 View 名稱沒有約定上的連動關係與限制。</p>\n</blockquote>\n<h4 id=\"定義-Model-的-Property-屬性\"><a href=\"#定義-Model-的-Property-屬性\" class=\"headerlink\" title=\"定義 Model 的 Property 屬性\"></a>定義 Model 的 Property 屬性</h4><p>在 Product 模型中加入 <code>Id</code>、<code>ProductName</code> 和 <code>UnitPrice</code> 三個 Property 屬性，用來存放資料。</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Dynamic;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Linq;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Web;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">chartTest.Models</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">product</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">int</span> Id &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> ProductName &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">int</span> UnitPrice &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>參考資料</p>\n<p>網頁程式設計 ASP.NET MVC 5.x 範例完美演繹-第三版(適用 Visual C# 2019/2017)</p>\n","categories":["ASP.NET MVC"],"tags":["ASP.NET MVC"]},{"title":"Vue 筆記 - 使用 v-bind 動態新增屬性","url":"/vue-js/20200421/4264825025/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/vue%20cover.png?alt=media&token=5f8b5aa0-eb3e-4d21-a715-07c5442dafbc\" alt=\"vue.js\"></p>\n<p>v-bind 縮寫為 <code>:</code></p>\n<h2 id=\"用法：\"><a href=\"#用法：\" class=\"headerlink\" title=\"用法：\"></a>用法：</h2><p>動態地綁定一個或多個特性，或一個組件 <code>prop</code> 到表達式。<br>在綁定 <code>class</code> 或 <code>style</code> 特性時，支持其它類型的值，如數組或對象。可以通過下面的教程鏈接查看詳情。</p>\n<blockquote>\n<p><code>Mustache</code> 不可作為屬性使用，如果要在 HTML 標記內的屬性帶入 data 或運算後的內容，要用 <code>v-bind</code> 來進行綁定。</p>\n</blockquote>\n<p>一般 html 程式碼是下方這樣</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"https://cn.vuejs.org/\"</span>&gt;</span>請點選連結<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">img</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">src</span>=<span class=\"string\">\"https://images.unsplash.com/photo-1523049673857-eb18f1d7b578?ixlib=rb-1.2.1&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;auto=format&amp;fit=crop&amp;w=1268&amp;q=80\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">alt</span>=<span class=\"string\">\"fruit\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>加入 vue 後的程式碼：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">:href</span>=<span class=\"string\">\"link\"</span>&gt;</span>請點選連結<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">:src</span>=<span class=\"string\">\"imgUrl\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"fruit\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"actionscript\">  <span class=\"keyword\">var</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span></span><br><span class=\"line\"><span class=\"actionscript\">    el: <span class=\"string\">\"#app\"</span>,</span></span><br><span class=\"line\">    data: &#123;</span><br><span class=\"line\"><span class=\"actionscript\">      link: <span class=\"string\">\"https://cn.vuejs.org/\"</span>,</span></span><br><span class=\"line\">      imgUrl:</span><br><span class=\"line\"><span class=\"actionscript\">        <span class=\"string\">\"https://images.unsplash.com/photo-1523049673857-eb18f1d7b578?ixlib=rb-1.2.1&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;auto=format&amp;fit=crop&amp;w=1268&amp;q=80\"</span>,</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>Codepen: <a href=\"https://codepen.io/tim_hsu/pen/ExVYbNg\" target=\"_blank\" rel=\"noopener\">https://codepen.io/tim_hsu/pen/ExVYbNg</a></p>\n<h2 id=\"動態加上-className\"><a href=\"#動態加上-className\" class=\"headerlink\" title=\"動態加上 className\"></a>動態加上 className</h2><p>來個綜合練習，有一個 box，透過 v-bind 動態加上 class，點擊 button 後旋轉 box，並且會變成粉紅色。</p>\n<p>HTML</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"container\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"box rotate\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    //這時正方形是 45 度</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">hr</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn\"</span>&gt;</span>button<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>SCSS</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">500px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> auto;</span><br><span class=\"line\">  .box &#123;</span><br><span class=\"line\">    <span class=\"selector-tag\">width</span>: 100<span class=\"selector-tag\">px</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">height</span>: 100<span class=\"selector-tag\">px</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">margin-top</span>: 50<span class=\"selector-tag\">px</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">transition</span>: <span class=\"selector-tag\">transform</span> 0<span class=\"selector-class\">.5s</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">border</span>: 1<span class=\"selector-tag\">px</span> <span class=\"selector-tag\">solid</span> <span class=\"selector-id\">#000</span>;</span><br><span class=\"line\">    transition: all 0.5s ease; //旋轉顏色漸變效果</span><br><span class=\"line\">    &amp;<span class=\"selector-class\">.rotate</span> &#123;</span><br><span class=\"line\">      transform: rotate(45deg); //旋轉45 度</span><br><span class=\"line\">      background-color: pink; //旋轉後變粉紅色</span><br><span class=\"line\">      border: 5px solid red; //旋轉後外框變粗變色</span><br><span class=\"line\">      border-radius: 20px; //旋轉有圓角效果</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"selector-tag\">hr</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">margin</span>: <span class=\"number\">50px</span> <span class=\"number\">0</span> <span class=\"number\">10px</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>vue</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  el: <span class=\"string\">\"#app\"</span>,</span><br><span class=\"line\">  data: &#123;</span><br><span class=\"line\">    isTransform: <span class=\"literal\">false</span>, <span class=\"comment\">//預設不旋轉</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>這時透過 v-bind 動態加上 class，語法是 <code>&lt;div class=&quot;box&quot; :class=&quot;{&#39;要加入的 className&#39;:判斷式}&quot;&gt;&lt;/div&gt;</code></p>\n<p>所以完成後的程式碼變為:</p>\n<p>HTML</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"container\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"box\"</span> <span class=\"attr\">:class</span>=<span class=\"string\">\"&#123;'rotate':isTransform&#125;\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">hr</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn\"</span>&gt;</span>button<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>透過 vue 開發工具會看到 <code>isTransform: false;</code>，改成 true 就會看到 box 會旋轉，代表效果有吃到。</p>\n<p>有 button 就會有 <code>click</code> 事件，所以在 button 中加上 <code>@click=&quot;rotatebox&quot;</code>，程式碼如下:<br><code>&lt;button class=&quot;btn&quot; @click=&quot;rotatebox&quot;&gt;button&lt;/button&gt;</code></p>\n<p>並且在 data 裡面加入 methods，</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">methods: &#123;</span><br><span class=\"line\">  rotatebox()&#123;</span><br><span class=\"line\">   <span class=\"keyword\">this</span>.isTransform = !<span class=\"keyword\">this</span>.isTransform</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"> &#125;,</span><br></pre></td></tr></table></figure>\n\n<p>CodePen: <a href=\"https://codepen.io/hnzxewqw/pen/dyYXexX\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/dyYXexX</a></p>\n","categories":["vue.js"],"tags":["vue.js"]},{"title":"C# 筆記 - 運算式與陳述式基本認識","url":"/c/20200420/2434136122/","content":"<p><img src=\"https://robertlan.com/wp-content/uploads/2018/09/C-1024x384.png\" alt=\"C# ASP.NET\"></p>\n<h2 id=\"運算式\"><a href=\"#運算式\" class=\"headerlink\" title=\"運算式\"></a>運算式</h2><ul>\n<li>「運算式」是由「運算元」和「運算子」建構而成。運算式的運算子會指出要將哪些運算套用到運算元。</li>\n<li>運算子範例包括 <code>+</code>、<code>-</code>、<code>*</code>、<code>/</code> 及 <code>new</code>。</li>\n<li>運算元範例包括<strong>常值</strong>、<strong>欄位</strong>、<strong>區域變數</strong>及<strong>運算式</strong>。</li>\n</ul>\n<p><img src=\"https://ithelp.ithome.com.tw/upload/images/20190908/20120055CTeRE2CKnA.png\" alt=\"運算式示意圖\n\"></p>\n<p>當運算式包含多個運算子時，運算子的「優先順序」會控制評估個別運算子的順序。 例如，運算式 <code>x + y * z</code> 會評估為<code>x + (y * z)</code>，因為 <code>*</code> 運算子的優先順序高於 <code>+</code> 運算子。</p>\n<blockquote>\n<p>白話文：先乘除，後加減。</p>\n</blockquote>\n<p>更多運算子可參考下面兩篇</p>\n<p><a href=\"https://docs.microsoft.com/zh-tw/dotnet/csharp/language-reference/operators/\" target=\"_blank\" rel=\"noopener\">C# 運算子 (C# 參考)</a></p>\n<p><a href=\"https://ithelp.ithome.com.tw/articles/10213220\" target=\"_blank\" rel=\"noopener\">Day08-C#運算式與運算子(+、-、*、/、&gt;、&lt;….等)-來用 C#算數學吧!(上)</a></p>\n<h2 id=\"陳述式\"><a href=\"#陳述式\" class=\"headerlink\" title=\"陳述式\"></a>陳述式</h2><p>程式的動作是藉由陳述式來表達。 C# 支援數種不同類型的陳述式，其中一些是以內嵌陳述式來定義。</p>\n<h3 id=\"區塊宣告陳述式：\"><a href=\"#區塊宣告陳述式：\" class=\"headerlink\" title=\"區塊宣告陳述式：\"></a>區塊宣告陳述式：</h3><p>可允許在許可單一陳述式的內容中撰寫多個陳述式。 區塊是由在 <code>{</code> 與 <code>}</code> 分隔符號之間撰寫的陳述式清單所組成，可用來宣告區域變數和常數。</p>\n<h4 id=\"區域變數宣告\"><a href=\"#區域變數宣告\" class=\"headerlink\" title=\"區域變數宣告\"></a>區域變數宣告</h4><figure class=\"highlight csharp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Declarations</span>(<span class=\"params\"><span class=\"keyword\">string</span>[] args</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> a;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> b = <span class=\"number\">2</span>, c = <span class=\"number\">3</span>;</span><br><span class=\"line\">    a = <span class=\"number\">1</span>;</span><br><span class=\"line\">    Console.WriteLine(a + b + c);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"區域常數宣告\"><a href=\"#區域常數宣告\" class=\"headerlink\" title=\"區域常數宣告\"></a>區域常數宣告</h4><figure class=\"highlight csharp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">ConstantDeclarations</span>(<span class=\"params\"><span class=\"keyword\">string</span>[] args</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keyword\">float</span> pi = <span class=\"number\">3.1415927f</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keyword\">int</span> r = <span class=\"number\">25</span>;</span><br><span class=\"line\">    Console.WriteLine(pi * r * r);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"運算式陳述式\"><a href=\"#運算式陳述式\" class=\"headerlink\" title=\"運算式陳述式\"></a>運算式陳述式</h3><figure class=\"highlight csharp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Expressions</span>(<span class=\"params\"><span class=\"keyword\">string</span>[] args</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> i;</span><br><span class=\"line\">    i = <span class=\"number\">123</span>;                <span class=\"comment\">// Expression statement</span></span><br><span class=\"line\">    Console.WriteLine(i);   <span class=\"comment\">// Expression statement</span></span><br><span class=\"line\">    i++;                    <span class=\"comment\">// Expression statement</span></span><br><span class=\"line\">    Console.WriteLine(i);   <span class=\"comment\">// Expression statement</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"「選取範圍陳述式」\"><a href=\"#「選取範圍陳述式」\" class=\"headerlink\" title=\"「選取範圍陳述式」\"></a>「選取範圍陳述式」</h3><p>可用來選取一些可能陳述式的其中之一，以根據某個運算式的值來執行。</p>\n<h4 id=\"if-陳述式\"><a href=\"#if-陳述式\" class=\"headerlink\" title=\"if 陳述式\"></a>if 陳述式</h4><p>加入判斷條件。</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">IfStatement</span>(<span class=\"params\"><span class=\"keyword\">string</span>[] args</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (args.Length == <span class=\"number\">0</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        Console.WriteLine(<span class=\"string\">\"No arguments\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        Console.WriteLine(<span class=\"string\">\"One or more arguments\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"switch-陳述式\"><a href=\"#switch-陳述式\" class=\"headerlink\" title=\"switch 陳述式\"></a>switch 陳述式</h4><figure class=\"highlight csharp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">SwitchStatement</span>(<span class=\"params\"><span class=\"keyword\">string</span>[] args</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n = args.Length;</span><br><span class=\"line\">    <span class=\"keyword\">switch</span> (n)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">0</span>:</span><br><span class=\"line\">            Console.WriteLine(<span class=\"string\">\"No arguments\"</span>);</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">            Console.WriteLine(<span class=\"string\">\"One argument\"</span>);</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">default</span>:</span><br><span class=\"line\">            Console.WriteLine(<span class=\"string\">$\"<span class=\"subst\">&#123;n&#125;</span> arguments\"</span>);</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"反覆運算陳述式\"><a href=\"#反覆運算陳述式\" class=\"headerlink\" title=\"反覆運算陳述式\"></a>反覆運算陳述式</h3><p>可用來重複執行內嵌的陳述式。</p>\n<h4 id=\"while-陳述式\"><a href=\"#while-陳述式\" class=\"headerlink\" title=\"while 陳述式\"></a>while 陳述式</h4><p>while 迴圈寫法</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">WhileStatement</span>(<span class=\"params\"><span class=\"keyword\">string</span>[] args</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (i &lt; args.Length)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        Console.WriteLine(args[i]);</span><br><span class=\"line\">        i++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"do-陳述式\"><a href=\"#do-陳述式\" class=\"headerlink\" title=\"do 陳述式\"></a>do 陳述式</h4><figure class=\"highlight csharp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">DoStatement</span>(<span class=\"params\"><span class=\"keyword\">string</span>[] args</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">string</span> s;</span><br><span class=\"line\">    <span class=\"keyword\">do</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        s = Console.ReadLine();</span><br><span class=\"line\">        Console.WriteLine(s);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">while</span> (!<span class=\"keyword\">string</span>.IsNullOrEmpty(s));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"for-陳述式\"><a href=\"#for-陳述式\" class=\"headerlink\" title=\"for 陳述式\"></a>for 陳述式</h4><figure class=\"highlight csharp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">ForStatement</span>(<span class=\"params\"><span class=\"keyword\">string</span>[] args</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; args.Length; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        Console.WriteLine(args[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"foreach-陳述式\"><a href=\"#foreach-陳述式\" class=\"headerlink\" title=\"foreach 陳述式\"></a>foreach 陳述式</h4><figure class=\"highlight csharp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">ForEachStatement</span>(<span class=\"params\"><span class=\"keyword\">string</span>[] args</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">foreach</span> (<span class=\"keyword\">string</span> s <span class=\"keyword\">in</span> args)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        Console.WriteLine(s);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"跳躍陳述式\"><a href=\"#跳躍陳述式\" class=\"headerlink\" title=\"跳躍陳述式\"></a>跳躍陳述式</h3><p>可用來轉移控制項。</p>\n<h4 id=\"break-陳述式\"><a href=\"#break-陳述式\" class=\"headerlink\" title=\"break 陳述式\"></a>break 陳述式</h4><figure class=\"highlight csharp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">BreakStatement</span>(<span class=\"params\"><span class=\"keyword\">string</span>[] args</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">string</span> s = Console.ReadLine();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">string</span>.IsNullOrEmpty(s))</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        Console.WriteLine(s);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"continue-陳述式\"><a href=\"#continue-陳述式\" class=\"headerlink\" title=\"continue 陳述式\"></a>continue 陳述式</h4><figure class=\"highlight csharp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">ContinueStatement</span>(<span class=\"params\"><span class=\"keyword\">string</span>[] args</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; args.Length; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (args[i].StartsWith(<span class=\"string\">\"/\"</span>))</span><br><span class=\"line\">            <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">        Console.WriteLine(args[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"goto-陳述式\"><a href=\"#goto-陳述式\" class=\"headerlink\" title=\"goto 陳述式\"></a>goto 陳述式</h4><figure class=\"highlight csharp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">GoToStatement</span>(<span class=\"params\"><span class=\"keyword\">string</span>[] args</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">goto</span> check;</span><br><span class=\"line\">    loop:</span><br><span class=\"line\">    Console.WriteLine(args[i++]);</span><br><span class=\"line\">    check:</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (i &lt; args.Length)</span><br><span class=\"line\">        <span class=\"keyword\">goto</span> loop;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"return-陳述式\"><a href=\"#return-陳述式\" class=\"headerlink\" title=\"return 陳述式\"></a>return 陳述式</h4><figure class=\"highlight csharp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">int</span> <span class=\"title\">Add</span>(<span class=\"params\"><span class=\"keyword\">int</span> a, <span class=\"keyword\">int</span> b</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a + b;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">ReturnStatement</span>(<span class=\"params\"><span class=\"keyword\">string</span>[] args</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">   Console.WriteLine(Add(<span class=\"number\">1</span>, <span class=\"number\">2</span>));</span><br><span class=\"line\">   <span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"yield-陳述式\"><a href=\"#yield-陳述式\" class=\"headerlink\" title=\"yield 陳述式\"></a>yield 陳述式</h4><figure class=\"highlight csharp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">static</span> System.Collections.Generic.<span class=\"function\">IEnumerable&lt;<span class=\"keyword\">int</span>&gt; <span class=\"title\">Range</span>(<span class=\"params\"><span class=\"keyword\">int</span> start, <span class=\"keyword\">int</span> end</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = start; i &lt; end; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">yield</span> <span class=\"keyword\">return</span> i;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">yield</span> <span class=\"keyword\">break</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">YieldStatement</span>(<span class=\"params\"><span class=\"keyword\">string</span>[] args</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">foreach</span> (<span class=\"function\"><span class=\"keyword\">int</span> i <span class=\"keyword\">in</span> <span class=\"title\">Range</span>(<span class=\"params\"><span class=\"number\">-10</span>,<span class=\"number\">10</span></span>))</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">        Console.WriteLine(i);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"throw-陳述式和-try-陳述式\"><a href=\"#throw-陳述式和-try-陳述式\" class=\"headerlink\" title=\"throw 陳述式和 try 陳述式\"></a>throw 陳述式和 try 陳述式</h3><p>可用來攔截在執行區塊時發生的例外狀況，而 <code>try</code> … <code>finally</code> 陳述式則可用來指定不論是否發生例外狀況都一律會執行的最終處理程式碼。</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">double</span> <span class=\"title\">Divide</span>(<span class=\"params\"><span class=\"keyword\">double</span> x, <span class=\"keyword\">double</span> y</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (y == <span class=\"number\">0</span>)</span><br><span class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> DivideByZeroException();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> x / y;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">TryCatch</span>(<span class=\"params\"><span class=\"keyword\">string</span>[] args</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">try</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (args.Length != <span class=\"number\">2</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> InvalidOperationException(<span class=\"string\">\"Two numbers required\"</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">double</span> x = <span class=\"keyword\">double</span>.Parse(args[<span class=\"number\">0</span>]);</span><br><span class=\"line\">        <span class=\"keyword\">double</span> y = <span class=\"keyword\">double</span>.Parse(args[<span class=\"number\">1</span>]);</span><br><span class=\"line\">        Console.WriteLine(Divide(x, y));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">catch</span> (InvalidOperationException e)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        Console.WriteLine(e.Message);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">finally</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        Console.WriteLine(<span class=\"string\">\"Good bye!\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"checked-和-unchecked-陳述式\"><a href=\"#checked-和-unchecked-陳述式\" class=\"headerlink\" title=\"checked 和 unchecked 陳述式\"></a>checked 和 unchecked 陳述式</h4><p>可用來控制整數型別算術運算和轉換的溢位檢查內容。</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">CheckedUnchecked</span>(<span class=\"params\"><span class=\"keyword\">string</span>[] args</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> x = <span class=\"keyword\">int</span>.MaxValue;</span><br><span class=\"line\">    <span class=\"keyword\">unchecked</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        Console.WriteLine(x + <span class=\"number\">1</span>);  <span class=\"comment\">// Overflow</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">checked</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        Console.WriteLine(x + <span class=\"number\">1</span>);  <span class=\"comment\">// Exception</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"lock-陳述式\"><a href=\"#lock-陳述式\" class=\"headerlink\" title=\"lock 陳述式\"></a>lock 陳述式</h3><p>可用來取得所指定物件的互斥鎖定、執行陳述式，然後釋放鎖定。</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title\">Account</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">decimal</span> balance;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">readonly</span> <span class=\"keyword\">object</span> sync = <span class=\"keyword\">new</span> <span class=\"keyword\">object</span>();</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">Withdraw</span>(<span class=\"params\"><span class=\"keyword\">decimal</span> amount</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">lock</span> (sync)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (amount &gt; balance)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(</span><br><span class=\"line\">                    <span class=\"string\">\"Insufficient funds\"</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            balance -= amount;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"using-陳述式\"><a href=\"#using-陳述式\" class=\"headerlink\" title=\"using 陳述式\"></a>using 陳述式</h3><p>可用來取得資源、執行陳述式，然後處置該資源。</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">UsingStatement</span>(<span class=\"params\"><span class=\"keyword\">string</span>[] args</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">using</span> (TextWriter w = File.CreateText(<span class=\"string\">\"test.txt\"</span>))</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        w.WriteLine(<span class=\"string\">\"Line one\"</span>);</span><br><span class=\"line\">        w.WriteLine(<span class=\"string\">\"Line two\"</span>);</span><br><span class=\"line\">        w.WriteLine(<span class=\"string\">\"Line three\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>參考資料</p>\n<p><a href=\"https://docs.microsoft.com/zh-tw/dotnet/csharp/tour-of-csharp/statements\" target=\"_blank\" rel=\"noopener\">陳述式</a></p>\n","categories":["C#"],"tags":["C#"]},{"title":"C# 筆記 - 型別與變數","url":"/c/20200420/951951981/","content":"<p><img src=\"https://robertlan.com/wp-content/uploads/2018/09/C-1024x384.png\" alt=\"C# ASP.NET\"></p>\n<h2 id=\"資料型別\"><a href=\"#資料型別\" class=\"headerlink\" title=\"資料型別\"></a>資料型別</h2><p>C# 中有兩種型別：<strong>實值型別</strong>和<strong>參考型別</strong>。</p>\n<h3 id=\"實值型別\"><a href=\"#實值型別\" class=\"headerlink\" title=\"實值型別\"></a>實值型別</h3><p>變數的記憶體空間存放的是實際的值。如 <code>int x = 5</code>，x 的內容就是 5。</p>\n<p>實值型別可進一步細分為<strong>簡單型別</strong>、<strong>列舉型別</strong>、<strong>結構型別</strong>和<strong>可為 Null 的實值型別</strong>。</p>\n<ul>\n<li><p><strong>簡單型別</strong></p>\n<ul>\n<li>帶正負號的整數︰<code>sbyte</code>、<code>short</code>、<code>int</code>、<code>long</code>。</li>\n<li>不帶正負號的整數︰<code>byte</code>、<code>ushort</code>、<code>uint</code>、<code>ulong</code>。</li>\n<li>Unicode 字元：<code>char</code>。</li>\n<li>IEEE 二進位浮點：<code>float</code>、<code>double</code>。</li>\n<li>高精確度十進位浮點：<code>decimal</code>。</li>\n<li>布林值：<code>bool</code>。</li>\n</ul>\n<blockquote>\n<p>C# 的 <code>bool</code> 型別用來代表布林值 — 不是 <code>true</code> 或 <code>false</code> 的值。</p>\n</blockquote>\n</li>\n<li><p><strong>枚舉類型</strong><br>使用者定義型別，格式為 <code>enum E {...}</code>。</p>\n</li>\n<li><p><strong>結構型別</strong><br>使用者定義型別，格式為 <code>struct S {...}</code>。</p>\n</li>\n<li><p><strong>可為 Null 的實值類型</strong><br>含有 <code>null</code> 值的所有其他數值型別的擴充。</p>\n</li>\n</ul>\n<h3 id=\"參考型別\"><a href=\"#參考型別\" class=\"headerlink\" title=\"參考型別\"></a>參考型別</h3><p>變數的記憶體空間存放的是值的記憶體位置，也就是放值的記憶體第一個開頭的地方。如 <code>int[] A = new int[] {1,4,2}</code>。<code>A</code> 存的就是 <code>[1,4,2]</code> 的記憶體位置。當要讀取 <code>4</code> 的時候，就是讀取 <code>A[1]</code>，指的是 <code>A</code> 記憶體位置的第二個值 (因陣列第一個序列為 0)。</p>\n<p>參考型別可進一步細分為<strong>類別型別 (物件、字串、自訂類別)</strong>、<strong>介面型別</strong>、<strong>陣列型別</strong>和<strong>委派型別</strong>。</p>\n<ul>\n<li><strong>類別類型</strong><ul>\n<li>所有其他型別的基底類別︰<code>object</code>。</li>\n<li>Unicode 字串：<code>string</code>。</li>\n<li>使用者定義型別，格式為 <code>class C {...}</code>。</li>\n</ul>\n</li>\n<li><strong>介面型別</strong><br>使用者定義型別，格式為 <code>interface I {...}</code>。</li>\n<li><strong>陣列類型</strong><br>單一維度和多維度，例如 <code>int[]</code> 和 <code>int[,]</code>。</li>\n<li><strong>委派型別</strong><br>使用者定義型別，格式為 <code>delegate int D(...)</code>。</li>\n</ul>\n<h3 id=\"C-常用到的基本資料型別\"><a href=\"#C-常用到的基本資料型別\" class=\"headerlink\" title=\"C# 常用到的基本資料型別\"></a>C# 常用到的基本資料型別</h3><p><img src=\"https://i.imgur.com/h3q18Kf.png\" alt=\"C# 常用的資料型別\"></p>\n<blockquote>\n<p>橘色標示的是比較常使用到的型別。了解<a href=\"https://docs.microsoft.com/zh-tw/dotnet/csharp/tour-of-csharp/types-and-variables\" target=\"_blank\" rel=\"noopener\">更多</a></p>\n</blockquote>\n<ul>\n<li>考量到記憶體的使用效能，整數分類較多。</li>\n<li>物件導向設計裡，萬物都是物件，物件在宣告時都需要使用 new 的方式給他一個新的記憶體空間。但值類型的基本型別 (object 除外)，宣告都不需要使用 new。</li>\n</ul>\n<h2 id=\"變數與變數宣告\"><a href=\"#變數與變數宣告\" class=\"headerlink\" title=\"變數與變數宣告\"></a>變數與變數宣告</h2><p>跟 JavaScript 有點像，都需要變數宣告、定義變數名稱還有給予其值。</p>\n<ol>\n<li><strong>變數定義</strong>: 用來表示值的名稱。顧名思義，存在變數裡的值是可以被改變的。</li>\n<li><strong>宣告方式</strong>: <code>資料型別 變數名稱 = 內容</code>。</li>\n<li>類別、結構、靜態變數、陳列元素中的變數宣告時若無指派初值，會自動給予初始值。</li>\n<li>數字型別初始值為 <code>0</code>。</li>\n<li>參考型別初始值為 <code>null</code>。</li>\n<li>布林預設值為 <code>false</code>。</li>\n</ol>\n<p>常用的方式如下 <del>(跟 JS 有 87% 像)</del></p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> a;<span class=\"comment\">// 宣告 a 是一個可以存整數的變數</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> a = <span class=\"number\">1</span>;<span class=\"comment\">// 宣告 a 是一個整數，且賦值1給a</span></span><br><span class=\"line\"><span class=\"keyword\">char</span> sex = <span class=\"string\">'F'</span>;<span class=\"comment\">// 字元宣告用單引號</span></span><br><span class=\"line\"><span class=\"keyword\">string</span> apple = <span class=\"string\">\"好吃\"</span>;<span class=\"comment\">// 字串宣告用雙引號</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> a,b,c;<span class=\"comment\">// 可以一次宣告多個同型別的變數</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> a,b = <span class=\"number\">0</span>,c = <span class=\"number\">1</span>;<span class=\"comment\">// 也可以同時賦值</span></span><br></pre></td></tr></table></figure>\n\n<p>參考資料</p>\n<p><a href=\"https://docs.microsoft.com/zh-tw/dotnet/csharp/tour-of-csharp/types-and-variables\" target=\"_blank\" rel=\"noopener\">型別與變數</a></p>\n<p><a href=\"https://ithelp.ithome.com.tw/articles/10213219\" target=\"_blank\" rel=\"noopener\">Day06-C#變數與變數宣告、常數與常數宣告、var、型別轉換</a></p>\n","categories":["C#"],"tags":["C#"]},{"title":"C# 筆記 - C# 語言的基本認識","url":"/c/20200420/1210559046/","content":"<p><img src=\"https://robertlan.com/wp-content/uploads/2018/09/C-1024x384.png\" alt=\"C# ASP.NET\"></p>\n<p>C# 是微軟推出的一種基於 <strong>.NET 框架</strong>的、<strong>物件導向</strong>的進階程式語言。C# 以 .NET 框架類別館作為基礎，擁有類似 Visual Basic 的快速開發能力。C# 由安德斯·海爾斯伯格主持開發，微軟在 2000 年發布了這種語言，希望藉助這種語言來取代 Java。 C# 已經成為 ECMA 國際和國際標準組織的標準規範。</p>\n<p><a href=\"https://zh.wikipedia.org/wiki/C%E2%99%AF\" target=\"_blank\" rel=\"noopener\">若要看更多關於 C# 的資訊，可見維基百科</a></p>\n<h2 id=\"何謂-C\"><a href=\"#何謂-C\" class=\"headerlink\" title=\"何謂 C#\"></a>何謂 C#</h2><ol>\n<li><p>C# ( 念法為 C Sharp )。源自於 C 語言。</p>\n</li>\n<li><p>C# 為<strong>強型別的語言</strong>，指的是每一個物件都<strong>必須</strong>指定型別。使用前你要先幫它規定好，該是整數就是整數 ( int )，該是字串就是字串 ( string )，要把整數當成字串用，就需要使用<strong>轉型</strong>。在各型別的<strong>繼承關係</strong>中，最上層的型別是 Object，意即，所有的東西都是物件。</p>\n</li>\n<li><p>C# 副檔名為 .cs，應用範圍廣，如網頁、大型作業系統、小型嵌入式系統…等皆可以用其來開發。</p>\n</li>\n<li><p>為了確保 C# 程式和庫能夠隨著時間的推移以相容的方式發展，在 C# 設計中，已非常強調版本控制。 許多程式設計語言很少注意這個問題。 因此，引入依賴庫的較新版本時，用這些其他語言編寫的程式中斷的頻率超過必要。 C# 設計中受版本控制注意事項直接影響的方面包括單獨 <code>virtual</code> 和 <code>override</code> 修改器、方法重載解析規則以及對顯式介面成員聲明的支援。</p>\n</li>\n</ol>\n<h2 id=\"Hello-World\"><a href=\"#Hello-World\" class=\"headerlink\" title=\"Hello World\"></a>Hello World</h2><p>以下為 C# 官方起手式的寫法，並附上說明：</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title\">Hello</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">        Console.WriteLine(<span class=\"string\">\"Hello, World\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"using\"><a href=\"#using\" class=\"headerlink\" title=\"using\"></a>using</h2><p>寫在最上方用來匯入函式庫(其他命名空間)使用，這也是 <code>using</code> 最常用的用法。</p>\n<ul>\n<li>為什麼要匯入其他函式?</li>\n</ul>\n<p>用法類似寫 SCSS 使用的 <code>import</code> ，匯入外部程式碼，就可以直接在程式中使用命名空間裡的型別，而不用指定型別的詳細空間，以縮短程式碼。</p>\n<h2 id=\"namespace-命名空間\"><a href=\"#namespace-命名空間\" class=\"headerlink\" title=\"namespace 命名空間\"></a>namespace 命名空間</h2><p>通常會在 <code>using System</code> 之後，在 <code>class</code> 之前，打包程式碼的空間，把相同功能者聚集在一起，用 <code>namespace</code> 名稱 <code>{ }</code> 一組大括號包起來，可以自訂義名稱，預設建立時會設定的跟專案( project )名稱一樣，當其他地方要用到的時候可以呼叫這個名字，如上方 using 後方也都是命名空間。<strong>用來指名程式所屬範圍，避免相同名稱類別產生衝突，可以控制類別的範圍。</strong> 一個檔案只有一個命名空間。</p>\n<h2 id=\"class\"><a href=\"#class\" class=\"headerlink\" title=\"class\"></a>class</h2><ul>\n<li>開頭要使用 <code>using</code>, <code>System</code> 代表使用這個命名空間，命名空間包含數個型別 (如程式中參考的 <code>Console</code> 類別)，和數個其他命名空間 (如 <code>IO</code> 和 <code>Collections</code>)。並且每一段程式碼要用 <code>;</code> 分號結尾。</li>\n<li>如上方簡介提到 C# 為強型別語言，也就是都要先定義類別 <code>(class)</code> 並給予一個變數名稱，這裡使用變數名稱為 <code>Hello</code>。</li>\n<li>C# 是階層式的語法，從宣告 <code>class</code> 開始，都要使用大括號包住下一層的程式碼。</li>\n</ul>\n<h3 id=\"static-void-Main-進入點寫法\"><a href=\"#static-void-Main-進入點寫法\" class=\"headerlink\" title=\"static void Main(){ }: 進入點寫法\"></a>static void Main(){ }: 進入點寫法</h3><p>整份程式碼非常多，C# 的世界裡，要告訴電腦從哪一行開始往下讀。這是 <code>Console</code> 模式裡進入點的寫法。C# 只能有一個進入點。</p>\n<ol>\n<li><strong>static</strong>: 一般類別中的方法必須先建立該類別的實體物件 (new) 後才能使用。若宣告為 <code>static</code>，<strong>代表一開始就存在在記憶體中</strong>，不用先建立 <code>Main()</code> 的物件實體就能叫用。</li>\n<li><strong>void</strong>: 表示不會傳回任何值。</li>\n<li><strong>Main()</strong>: 為程式開始執行的進入點。</li>\n<li><strong>string[] args</strong>:代表執行 <code>Main()</code> 方法時會將接在專案執行檔後面的參數置入 <code>args</code> 陣列。<code>args</code> 是一個字串陣列。</li>\n</ol>\n<blockquote>\n<p>在函式參數中看到這串參數 <code>string[] args</code> ，表示命令列引數是字串陣列，就是說，你在命令列 <code>[]</code> 裡輸入的引數可以使多個字串(在某種意義上意味著什麼都可以是命令列引數)。</p>\n<ul>\n<li>執行時會彈出命令視窗,你可以在那裡輸入一些引數，<code>string[] args</code> 指的就是你在命令視窗輸入的引數。<code>args</code> 是用來處理命令列引數的。命令列引數，就是你執行這個程式的時候給它傳的引數。它是可選項，不是必須。</li>\n</ul>\n</blockquote>\n<h3 id=\"Console\"><a href=\"#Console\" class=\"headerlink\" title=\"Console\"></a>Console</h3><p><code>Console.WritLine(&quot;Hello World!&quot;);</code></p>\n<ul>\n<li><strong>console</strong>: 是在 <code>console</code> 執行，所以目標就是 <code>console</code>。</li>\n<li><strong>WriteLine()</strong>: 這是一種方法，代表 <strong>輸出 + 換行</strong> 這個動作。<code>()</code> 內要放參數，或是我們要輸出的內容。由於我們要輸出的 <code>Hello World</code> 是字串，要用雙引號包起來。更多輸出內容可以參考 <a href=\"https://docs.microsoft.com/zh-tw/dotnet/api/system.console.writeline?view=netframework-4.8\" target=\"_blank\" rel=\"noopener\">MSDN</a></li>\n<li>C#每行程式需要用分號 <code>;</code> 結尾。</li>\n</ul>\n<p><code>Console.Read();</code></p>\n<p>架構跟上方相同，<code>Read()</code> 這個方法是讀入主控台輸入的字串。這一行是因為，程式預設一執行完就會關閉視窗，會看不到輸出結果。加了這一行它就會等著我們輸入字串暫時不關閉視窗。也可以寫<code>Console.ReadKey();</code>，讀入一個鍵的意思。</p>\n<p>接著按下上方執行輸出結果，恭喜你完成 <code>Hello World!</code> 了!</p>\n<h2 id=\"C-讀入與輸出\"><a href=\"#C-讀入與輸出\" class=\"headerlink\" title=\"C# 讀入與輸出\"></a>C# 讀入與輸出</h2><h3 id=\"讀入\"><a href=\"#讀入\" class=\"headerlink\" title=\"讀入\"></a>讀入</h3><p><code>Console.Read()</code>: 讀入一個字元。<br><code>Console.ReadLine()</code>: 讀入一行字串。<br><code>Console.ReadKey()</code>: 讀入一個鍵。</p>\n<h3 id=\"輸出\"><a href=\"#輸出\" class=\"headerlink\" title=\"輸出\"></a>輸出</h3><p><code>Console.Write()</code>: 輸出一段字但不換行。<br><code>Console.WriteLine()</code>: 輸出一段字並換行。</p>\n<p>所呈現的程式碼內容會如下圖:</p>\n<p><img src=\"https://ithelp.ithome.com.tw/upload/images/20190903/20120055SKBEyvMP6B.png\" alt=\"the first C#\"></p>\n<blockquote>\n<p>以上為自學筆記，若有誤還請各位前輩提點指正。</p>\n</blockquote>\n<p>參考資料:</p>\n<p><a href=\"https://ithelp.ithome.com.tw/articles/10213373\" target=\"_blank\" rel=\"noopener\">Day04-用 C#寫出第一個 Hello World 吧!(Console 模式/Visual Studio)</a></p>\n<p><a href=\"https://docs.microsoft.com/zh-tw/dotnet/csharp/tour-of-csharp/\" target=\"_blank\" rel=\"noopener\">C# 語言之旅</a></p>\n","categories":["C#"],"tags":["C#"]},{"title":"JS 筆記 - 控制判斷(if、else if、switch)","url":"/javascript/20200420/4050508230/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/JavaScript%20note-01.jpg?alt=media&token=7bee0261-72ac-4de4-9f5a-f39d58735b7d\" alt=\"JavaScript Note\"></p>\n<h2 id=\"if\"><a href=\"#if\" class=\"headerlink\" title=\"if\"></a>if</h2><p>光看英文單字，if 有如果的意思，在這邊程式碼也是直接使用字面上的感覺。<br>if 的程式碼如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> name = value;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (name == value) &#123; <span class=\"comment\">//判斷式</span></span><br><span class=\"line\">  ...<span class=\"comment\">//陳述式</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>判斷式<strong>先判斷</strong>小括號內的條件是否<strong>符合</strong>變數給的值，若相同就會執行陳述式，若不同則不會執行，所以 if 的感覺很直覺，想什麼講什麼就是了。</p>\n<p>if 後面的小括號要放<code>比較運算子</code>，也就是 <code>name == value</code>，不能放 <code>name = value</code>，這樣會變成<strong>變數值</strong>。</p>\n<hr>\n<h2 id=\"else-if、else\"><a href=\"#else-if、else\" class=\"headerlink\" title=\"else if、else\"></a>else if、else</h2><p>是延續 <code>if</code> 的屬性，倘若 <code>if</code> 內陳述式的程式碼與判斷式<strong>不相符</strong>，就會直接執行 <code>else if</code> 的陳述式，結尾要用 <code>else</code>。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> name = value;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (condition) &#123; <span class=\"comment\">//判斷式</span></span><br><span class=\"line\">  ... <span class=\"comment\">//陳述式</span></span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>&#123;</span><br><span class=\"line\">  ... <span class=\"comment\">//倘若第一個陳述式沒有滿足條件，就會執行 else 裡面的程式碼</span></span><br><span class=\"line\">  ...</span><br><span class=\"line\">  ...</span><br><span class=\"line\">  ... <span class=\"comment\">// else if 可以很多程式碼</span></span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">  ...<span class=\"comment\">//最後結尾會執行 else 的程式碼</span></span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>else 不用滿足條件，可以直接顯示結果，是滿好用的語法</p>\n</blockquote>\n<hr>\n<h2 id=\"Switch\"><a href=\"#Switch\" class=\"headerlink\" title=\"Switch\"></a>Switch</h2><p><code>Switch</code> 的用法跟 <code>if</code>、 <code>else if</code> 有點像，差別是 <code>if</code> 會把所有的程式碼都讀取過，相對渲染會比較慢，效能相對較低，而 <code>Switch</code> 會全部都讀過，但會只先看條件，看到有相符的型別才會再進去讀取相關內容，讀取後執行其他程式碼就不會再存取了，相對效能較高。</p>\n<p>switch 的程式碼如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">switch</span> (key) &#123; <span class=\"comment\">//設定一個表達式，且包含條件</span></span><br><span class=\"line\">  <span class=\"keyword\">case</span> value: <span class=\"comment\">//要先寫一個 case 然後加上**變數名稱**(字串要加引號，不用小括弧)，給一個冒號：寫裡面的內容，結尾用分號 ; ，結束有點像 CSS</span></span><br><span class=\"line\">    ...</span><br><span class=\"line\">    <span class=\"keyword\">break</span>; <span class=\"comment\">//每個 case 都要用一個 break 做結束。</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">default</span>: <span class=\"comment\">//defalt 用法有點像 else，就如果沒有滿足的條件就會執行這個內容，但其位置可以任意放置，但我會習慣放在最後面，這樣寫程式碼比較有邏輯一點</span></span><br><span class=\"line\">    ...</span><br><span class=\"line\">    <span class=\"keyword\">break</span>; <span class=\"comment\">// 結束也要用一個 break 當作結束。</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>建立 switch：設立一個表達式，且包含條件，用小括號包起來。<br>case: 後方會開始比對，如果符合就會執行相關連的程式碼。<br>break: 每個 case 後方都會補上一個 break，如果讀取到條件相符，就會停止讀取後方的程式碼。</p>\n</blockquote>\n<hr>\n<h3 id=\"加入-function-到-Switch\"><a href=\"#加入-function-到-Switch\" class=\"headerlink\" title=\"加入 function 到 Switch\"></a>加入 function 到 Switch</h3><blockquote>\n<ol>\n<li>建立變數。</li>\n<li>建立 function。</li>\n<li>帶入 switch，switch 裡面可以帶入多個相同條件的 case。</li>\n</ol>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> name = value;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">name</span>(<span class=\"params\">params</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(params);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">switch</span> (key) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">case</span> value: <span class=\"comment\">//case1</span></span><br><span class=\"line\">    ...</span><br><span class=\"line\">    <span class=\"keyword\">break</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">case</span> value: <span class=\"comment\">//case2</span></span><br><span class=\"line\">    name(params); <span class=\"comment\">//帶入 function</span></span><br><span class=\"line\">    <span class=\"keyword\">break</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">default</span>:</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>實際遇到的<a href=\"https://hsuchihting.github.io/JavaScript-Note/20200325/2975558676/\">jQuery 筆記 - 使用 select 選取 option 的資料，並同步渲染於網頁</a></p>\n","categories":["JavaScript"],"tags":["JavaScript"]},{"title":"Vue 筆記 - 資料綁定與模板 v-model、v-text、v-html","url":"/vue-js/20200419/2954354756/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/vue04.png?alt=media&token=b2202a44-956f-4b67-81a9-401df1d363cf\" alt=\"pic\"></p>\n<p>先前已經提過 Vue 的概念是受到 M-V-VM 的概念為啟發，並非完全的 M-V-VM，至於概念可看<a href=\"https://zh.wikipedia.org/wiki/MVVM\" target=\"_blank\" rel=\"noopener\">維基百科</a>。</p>\n<p>下方有一個 vue 的程式碼，data 中有一個預設字串，想把 data 中的資料顯示於網頁上，可以使用雙大括號 ( Mustache 語法 ) 做同步的顯示，如果想透過網頁操作資料，可以使用指令 <code>v-model</code> 在 <code>input</code> 的表單中控制其資料內容。</p>\n<blockquote>\n<p><code>Mustache</code> 不可作為屬性使用，如果要在 HTML 標記內的屬性帶入 data 或運算後的內容，要用 <code>v-bind</code> 來進行綁定。</p>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"actionscript\">  <span class=\"keyword\">var</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span></span><br><span class=\"line\"><span class=\"actionscript\">    el: <span class=\"string\">'#app'</span>,</span></span><br><span class=\"line\">    data: &#123;</span><br><span class=\"line\"><span class=\"actionscript\">      text: <span class=\"string\">'the sample'</span>,</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"v-model\"><a href=\"#v-model\" class=\"headerlink\" title=\"v-model\"></a>v-model</h2><ul>\n<li>表單的元件可透過 <code>v-model</code> 來進行資料的「雙向」綁定，並會根據不同的表單類別來更新元素的內容。表面上看似神奇，只要輸入綁定的區域就可以同步顯示資料，但實際上 Vue 在背後負責監聽網頁的事件與更新實體的內容。 (M-V-VM)。</li>\n<li><code>v-model</code> 不會處理表單元件的預設值，如：<code>checked</code>/<code>selected</code> 等，表單內的值一律由綁定的資料來決定。</li>\n<li><code>v-model</code> 指令中的屬性就是 <code>data</code> 中 <code>text</code> 的屬性，所以可以透過指令的設定，控制所指定的資料內容。</li>\n</ul>\n<h3 id=\"v-model-使用的範圍\"><a href=\"#v-model-使用的範圍\" class=\"headerlink\" title=\"v-model 使用的範圍\"></a>v-model 使用的範圍</h3><p>你可以用 <code>v-model</code> 指令在表單 <code>&lt;input&gt;</code>、<code>&lt;textarea&gt;</code> 及 <code>&lt;select&gt;</code> 元素上創建雙向數據綁定。</p>\n<h4 id=\"example\"><a href=\"#example\" class=\"headerlink\" title=\"example\"></a>example</h4><ul>\n<li>input</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"form\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>message is :&#123;&#123; msg &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">\"edit me\"</span> <span class=\"attr\">v-model</span>=<span class=\"string\">\"msg\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>checkbox</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"checkbox\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app2\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">\"checkbox\"</span>&gt;</span>checked: &#123;&#123;checked&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"checkbox\"</span> <span class=\"attr\">v-model</span>=<span class=\"string\">\"checked\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>checkboxes</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"checkboxes\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app3\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">\"checkbox\"</span>&gt;</span>Jack <span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"jack\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"jack\"</span> <span class=\"attr\">v-model</span>=<span class=\"string\">\"checkedNames\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">\"checkbox\"</span>&gt;</span>Mary <span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"mary\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"mary\"</span> <span class=\"attr\">v-model</span>=<span class=\"string\">\"checkedNames\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">\"checkbox\"</span>&gt;</span>Tom <span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"tom\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"tom\"</span> <span class=\"attr\">v-model</span>=<span class=\"string\">\"checkedNames\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>Checked Name: &#123;&#123; checkedNames &#125;&#125; 狀態<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>radio</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"radio\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app4\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">\"one\"</span>&gt;</span> One <span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"radio\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"one\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"One\"</span> <span class=\"attr\">v-model</span>=<span class=\"string\">\"picked\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">\"two\"</span>&gt;</span> Two <span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"radio\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"two\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"Two\"</span> <span class=\"attr\">v-model</span>=<span class=\"string\">\"picked\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>Picked: &#123;&#123;picked&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>select</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"select\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app5\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">v-model</span>=<span class=\"string\">\"selected\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">option</span>&gt;</span>A<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">option</span>&gt;</span>B<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">option</span>&gt;</span>C<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>Selected: &#123;&#123;selected&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><a href=\"https://codepen.io/hnzxewqw/pen/ZEbOoGx\" target=\"_blank\" rel=\"noopener\">範例 CodePen</a></p>\n<blockquote>\n<p>v-model 會忽略所有表單元素的 <code>value</code>、<code>checked</code>、<code>selected</code> 的屬性初始值。</p>\n</blockquote>\n<p><a href=\"https://cn.vuejs.org/v2/guide/forms.html#%E5%9C%A8%E7%BB%84%E4%BB%B6%E4%B8%8A%E4%BD%BF%E7%94%A8-v-model\" target=\"_blank\" rel=\"noopener\">官網</a>註明 v-model 對應的類別與使用的屬性與事件：</p>\n<ul>\n<li><code>text</code> 和 <code>textarea</code> 元素使用 value 屬性和 <code>input</code> 事件。</li>\n<li><code>checkbox</code> 和 <code>radio</code> 使用 checked 屬性和 <code>change</code> 事件。</li>\n<li><code>select</code> 字段將 value 作為 prop 並將 <code>change</code> 作為事件。</li>\n</ul>\n<blockquote>\n<p>個人目前在 <code>input</code> 跟 <code>select</code> 最常使用 v-model，並且只要綁定 v-model 後，在 data 中就要同步加入該屬性。</p>\n</blockquote>\n<h2 id=\"其他資料綁定的指令\"><a href=\"#其他資料綁定的指令\" class=\"headerlink\" title=\"其他資料綁定的指令\"></a>其他資料綁定的指令</h2><p>除了這兩個以外還有另外的指令可以把資料內容顯示於網頁。</p>\n<h2 id=\"v-text\"><a href=\"#v-text\" class=\"headerlink\" title=\"v-text\"></a>v-text</h2><p>用來渲染純文字</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-text</span>=<span class=\"string\">\"text\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"v-html\"><a href=\"#v-html\" class=\"headerlink\" title=\"v-html\"></a>v-html</h2><p>用來渲染 HTML 解析後的內容，並新增 html 標籤到網頁上。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-html</span>=<span class=\"string\">\"text\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>兩個透過 console 檢查，都會顯示：<code>&lt;div&gt;the sample&lt;/div&gt;</code></p>\n</blockquote>\n<p><a href=\"https://codepen.io/hnzxewqw/pen/OJyXNbE\" target=\"_blank\" rel=\"noopener\">CodePen</a></p>\n<p>參考文章</p>\n<p><a href=\"https://cythilya.github.io/2017/04/14/vue-data-v-model/\" target=\"_blank\" rel=\"noopener\">Vue.js: data、v-model 與雙向綁定</a></p>\n<p><a href=\"https://cn.vuejs.org/v2/guide/forms.html#%E5%9C%A8%E7%BB%84%E4%BB%B6%E4%B8%8A%E4%BD%BF%E7%94%A8-v-model\" target=\"_blank\" rel=\"noopener\">Vue 官網</a></p>\n","categories":["vue.js"],"tags":["vue.js"]},{"title":"jQuery 筆記 - datepicker 與 timepicker 套件練習","url":"/jQuery/20200414/1101598249/","content":"<p><img src=\"https://images.unsplash.com/photo-1506784365847-bbad939e9335?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1348&q=80\" alt=\"calender\"></p>\n<p>還記得之前挑戰<a href=\"https://w3c.hexschool.com/blog/bde2f503\" target=\"_blank\" rel=\"noopener\">旅館訂房網站</a>頁面，手刻月曆真是花了很長的時間，不過也首次見識到 flex 排版的威力。</p>\n<p>後來才知道有月曆跟時間的套件…就來記錄一下使用的方式。</p>\n<h2 id=\"匯入套件\"><a href=\"#匯入套件\" class=\"headerlink\" title=\"匯入套件\"></a>匯入套件</h2><p>如果想要修改月曆配色，可以使用 cdn 或<a href=\"https://jqueryui.com/resources/download/jquery-ui-1.12.1.zip\" target=\"_blank\" rel=\"noopener\">官網</a>下載套件或是 <strong>jQuery UI CSS cdn</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"./jquery-ui-1.12.1/jquery-ui.css\"</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>我是下載整包檔案</p>\n</blockquote>\n<h2 id=\"datepicker\"><a href=\"#datepicker\" class=\"headerlink\" title=\"datepicker\"></a>datepicker</h2><p>datepicker cdnjs <a href=\"https://cdnjs.com/libraries/datepicker\" target=\"_blank\" rel=\"noopener\">https://cdnjs.com/libraries/datepicker</a></p>\n<p>我這次是選擇用 jQuery UI 的 <a href=\"https://jqueryui.com/datepicker/\" target=\"_blank\" rel=\"noopener\">datepicker 套件</a>，進入頁面後可以在右側欄選擇喜歡的月曆的出現形式，使用的前提是要搭配 <code>input</code>，<code>type=&quot;text&quot;</code>，雖然原本 input 就有預設 <code>date</code> 類型，但樣式太醜，所以才用此套件。</p>\n<p><strong>官網範例程式碼</strong></p>\n<p>HTML</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Date: <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"datepicker\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>javascript</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  $( <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    $( <span class=\"string\">\"#datepicker\"</span> ).datepicker();</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>預設顯示為 日/月/年，但我比較喜歡年/月/日，官網也提供修改的方式：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">$(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  $(<span class=\"string\">\"#datepicker\"</span>).datepicker(&#123;</span><br><span class=\"line\">    dateFormat: <span class=\"string\">\"yy-mm-dd\"</span>, <span class=\"comment\">//修改顯示順序</span></span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"timepicker\"><a href=\"#timepicker\" class=\"headerlink\" title=\"timepicker\"></a>timepicker</h2><p>我是找這個<a href=\"https://timepicker.co/\" target=\"_blank\" rel=\"noopener\">套件</a>，</p>\n<p>timepicker cdnjs <a href=\"https://cdnjs.com/libraries/timepicker\" target=\"_blank\" rel=\"noopener\">https://cdnjs.com/libraries/timepicker</a></p>\n<p>跟 datepicker 很類似，一樣先參考官網程式碼，再修正成喜歡的樣式跟內容：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">\".timepicker\"</span>).timepicker(&#123;</span><br><span class=\"line\">  timeFormat: <span class=\"string\">\"h:mm p\"</span>, <span class=\"comment\">// 時間隔式</span></span><br><span class=\"line\">  interval: <span class=\"number\">60</span>, <span class=\"comment\">//時間間隔</span></span><br><span class=\"line\">  minTime: <span class=\"string\">\"10\"</span>, <span class=\"comment\">//最小時間</span></span><br><span class=\"line\">  maxTime: <span class=\"string\">\"6:00pm\"</span>, <span class=\"comment\">//最大時間</span></span><br><span class=\"line\">  defaultTime: <span class=\"string\">\"11\"</span>, <span class=\"comment\">//預設起始時間</span></span><br><span class=\"line\">  startTime: <span class=\"string\">\"10:00\"</span>, <span class=\"comment\">// 開始時間</span></span><br><span class=\"line\">  dynamic: <span class=\"literal\">true</span>, <span class=\"comment\">//是否顯示項目，使第一個項目按時間順序緊接在所選時間之後</span></span><br><span class=\"line\">  dropdown: <span class=\"literal\">true</span>, <span class=\"comment\">//是否顯示時間條目的下拉列表</span></span><br><span class=\"line\">  scrollbar: <span class=\"literal\">true</span>, <span class=\"comment\">//是否顯示捲軸</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>一樣要同步寫入 CSS，才會在點擊 <code>input</code> 後出現在下方。</p>\n<blockquote>\n<p>datepicker 跟 timepicker 的樣式都是直接從預設樣式修改成要的，不是自己另外寫。</p>\n</blockquote>\n<p>Codepen <a href=\"https://codepen.io/hnzxewqw/pen/LYppObK\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/LYppObK</a></p>\n","categories":["jQuery"],"tags":["JavaScript","jQuery"]},{"title":"JS 筆記 - Object & Array 物件與陣列的綜合應用","url":"/javascript/20200413/690135993/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/JavaScript%20note-01.jpg?alt=media&token=7bee0261-72ac-4de4-9f5a-f39d58735b7d\" alt=\"JavaScript Note\"></p>\n<p>本篇記錄物件與陣列的綜合應用，會使用到以下內容，順便複習一下寫法：</p>\n<p><strong>變數 var</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">1</span>;</span><br></pre></td></tr></table></figure>\n\n<p><strong>函式 function</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">name</span>(<span class=\"params\">params</span>) </span>&#123;&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>陣列 array</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> array = [<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>],</span><br></pre></td></tr></table></figure>\n\n<p><strong>物件 object</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> object = &#123;</span><br><span class=\"line\">  text: <span class=\"string\">\"string\"</span>,</span><br><span class=\"line\">  number: <span class=\"number\">10</span>,</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"物件-函式\"><a href=\"#物件-函式\" class=\"headerlink\" title=\"物件 + 函式\"></a>物件 + 函式</h2><p>物件內建立函式，可以透過函式的功能來做運算，讓物件成為一系列的內容，會相當好用。<br>以一個家庭為例，程式碼如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> home = &#123;</span><br><span class=\"line\">  dad: <span class=\"string\">\"Tim\"</span>,</span><br><span class=\"line\">  mom: <span class=\"string\">\"Min\"</span>,</span><br><span class=\"line\">  son: [<span class=\"string\">\"Joshua\"</span>, <span class=\"string\">\"John\"</span>],</span><br><span class=\"line\">  chair: <span class=\"number\">4</span>,</span><br><span class=\"line\">  table: <span class=\"number\">3</span>,</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p>如果要在物件內加入函式，若要顯示：「Tim，該吃晚餐囉！」可以這樣寫：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> home = &#123;</span><br><span class=\"line\">  dad: <span class=\"string\">\"Tim\"</span>,</span><br><span class=\"line\">  mom: <span class=\"string\">\"Min\"</span>,</span><br><span class=\"line\">  son: [<span class=\"string\">\"Joshua\"</span>, <span class=\"string\">\"John\"</span>],</span><br><span class=\"line\">  chair: <span class=\"number\">4</span>,</span><br><span class=\"line\">  table: <span class=\"number\">3</span>,</span><br><span class=\"line\">  dinner: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//建立函式</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(home.dad + <span class=\"string\">\"，該吃晚餐囉!\"</span>); <span class=\"comment\">//函式執行內容</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">home.dinner(); <span class=\"comment\">//執行物件 home 裡面的函式 dinner 的內容</span></span><br></pre></td></tr></table></figure>\n\n<p>就會得到 Tim，該吃晚餐囉！的結果</p>\n<hr>\n<h3 id=\"存取物件中函式資料\"><a href=\"#存取物件中函式資料\" class=\"headerlink\" title=\"存取物件中函式資料\"></a>存取物件中函式資料</h3><p>倘若今天要計算物件裡面桌子椅子的總數量，可以在物件中建立另一個函式，做為計算的功能，可以這樣寫：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> home = &#123;</span><br><span class=\"line\">  dad: <span class=\"string\">\"Tim\"</span>,</span><br><span class=\"line\">  mom: <span class=\"string\">\"Min\"</span>,</span><br><span class=\"line\">  son: [<span class=\"string\">\"Joshua\"</span>, <span class=\"string\">\"John\"</span>],</span><br><span class=\"line\">  chair: <span class=\"number\">4</span>,</span><br><span class=\"line\">  table: <span class=\"number\">3</span>,</span><br><span class=\"line\">  dinner: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//建立函式</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(home.dad + <span class=\"string\">\"，該吃晚餐囉!\"</span>); <span class=\"comment\">//函式執行內容</span></span><br><span class=\"line\">  &#125;, <span class=\"comment\">//新增新物件要用逗點隔開</span></span><br><span class=\"line\">  furniture: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> furnitureNum = home.chair + home.table; <span class=\"comment\">//增加一個區域變數，把物件中的要抓取的屬性放進來</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(furnitureNum); <span class=\"comment\">//執行函式中的區域變數內容</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">home.dinner(); <span class=\"comment\">//執行物件 home 裡面的函式 dinner 的內容 ()</span></span><br><span class=\"line\">home.furnitureNum(); <span class=\"comment\">//執行物件 home 裡面的函式中的區域變數，結果會得到 7</span></span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"陣列-物件\"><a href=\"#陣列-物件\" class=\"headerlink\" title=\"陣列 + 物件\"></a>陣列 + 物件</h2><p>可以利用陣列整合資料的觀念，把物件變成陣列資料，如果今天有兩個家庭為例，程式碼會如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> homes = [</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    dad: <span class=\"string\">\"Tim\"</span>,</span><br><span class=\"line\">    mom: <span class=\"string\">\"Min\"</span>,</span><br><span class=\"line\">    son: [<span class=\"string\">\"Joshua\"</span>, <span class=\"string\">\"John\"</span>],</span><br><span class=\"line\">    chair: <span class=\"number\">4</span>,</span><br><span class=\"line\">    table: <span class=\"number\">3</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    dad: <span class=\"string\">\"Jerry\"</span>,</span><br><span class=\"line\">    mom: <span class=\"string\">\"Nancy\"</span>,</span><br><span class=\"line\">    son: [<span class=\"string\">\"Ethan\"</span>, <span class=\"string\">\"Elijah\"</span>, <span class=\"string\">\"Emma\"</span>],</span><br><span class=\"line\">    chair: <span class=\"number\">5</span>,</span><br><span class=\"line\">    table: <span class=\"number\">4</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">];</span><br></pre></td></tr></table></figure>\n\n<p><em>因為是物件，所以在大括號中間還是要用逗號隔開</em><br><em>陣列中加入物件，物件前面就不用再寫一個變數名稱，因為直接在陣列裡面變成資料了</em></p>\n<hr>\n<h3 id=\"存取陣列中的物件資料\"><a href=\"#存取陣列中的物件資料\" class=\"headerlink\" title=\"存取陣列中的物件資料\"></a>存取陣列中的物件資料</h3><p>延續上方程式碼，今天要存取物件資料的寫法如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> homes = [</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    dad: <span class=\"string\">\"Tim\"</span>,</span><br><span class=\"line\">    mom: <span class=\"string\">\"Min\"</span>,</span><br><span class=\"line\">    son: [<span class=\"string\">\"Joshua\"</span>, <span class=\"string\">\"John\"</span>],</span><br><span class=\"line\">    chair: <span class=\"number\">4</span>,</span><br><span class=\"line\">    table: <span class=\"number\">3</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    dad: <span class=\"string\">\"Jerry\"</span>,</span><br><span class=\"line\">    mom: <span class=\"string\">\"Nancy\"</span>,</span><br><span class=\"line\">    son: [<span class=\"string\">\"Ethan\"</span>, <span class=\"string\">\"Elijah\"</span>, <span class=\"string\">\"Emma\"</span>],</span><br><span class=\"line\">    chair: <span class=\"number\">5</span>,</span><br><span class=\"line\">    table: <span class=\"number\">4</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(homes[<span class=\"number\">0</span>].dad);</span><br><span class=\"line\"><span class=\"comment\">//會找到陣列中第一筆物件的資料，再找到裡面的 dad 的值，結果會是 Tim</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(homes[<span class=\"number\">1</span>].son[<span class=\"number\">2</span>]);</span><br><span class=\"line\"><span class=\"comment\">//會找到陣列中第二筆物件的資料，再找到裡面的 son 的第三個值，結果會是 Elijah</span></span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"心得\"><a href=\"#心得\" class=\"headerlink\" title=\"心得\"></a>心得</h2><ol>\n<li>要把變數、函式、陣列、物件四個寫法搞清楚。</li>\n<li>因為四個東西有相關聯，要把不同的存取方法搞清楚，也要把彼此程式綜合應用時讀取的方式也要搞清楚，</li>\n<li>存取資料的方法要想得直覺一點，不要想得太複雜，不然會卡關。</li>\n<li>這一篇要連同前面的單元重複複習幾次，要熟悉。</li>\n</ol>\n","categories":["JavaScript"],"tags":["JavaScript"]},{"title":"JS 筆記 - 控制判斷 (比較運算子、邏輯運算子)","url":"/javascript/20200413/2524097541/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/JavaScript%20note-01.jpg?alt=media&token=7bee0261-72ac-4de4-9f5a-f39d58735b7d\" alt=\"JavaScript Note\"></p>\n<p>此次內容是 JavaScript 的控制判斷，<strong>比較運算子</strong>跟<strong>邏輯運算子</strong>的筆記。<br>用途會是在驗證資料是否有與原本設定的條件相同，例如：今天填寫一個表單，如果勾選「是」，就可以繼續往下填寫之類的控制判斷。</p>\n<hr>\n<h2 id=\"運算子\"><a href=\"#運算子\" class=\"headerlink\" title=\"運算子\"></a>運算子</h2><h3 id=\"比較運算子\"><a href=\"#比較運算子\" class=\"headerlink\" title=\"比較運算子 ==\"></a>比較運算子 <code>==</code></h3><p>用來比較 a 與 b 是否為正確或不正確，例如：設定兩個變數比較他們的關係。<br>會發現有兩個地方不同， <code>=</code> 跟 <code>==</code>， <code>=</code> 的用法是給予變數一個值； <code>==</code> 他是用比較兩個數值之間的關係是否為 true 還是 false。</p>\n<p>然後有兩種寫法：</p>\n<blockquote>\n<p><code>==</code> 等於</p>\n<p><code>!==</code> 不等於</p>\n</blockquote>\n<p>簡單的範例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> b = <span class=\"number\">1</span>;</span><br><span class=\"line\">a == b; <span class=\"comment\">//結果會得到 true</span></span><br></pre></td></tr></table></figure>\n\n<p>反之 <code>!==</code></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> b = <span class=\"number\">1</span>;</span><br><span class=\"line\">a !== b; <span class=\"comment\">//結果會得到 false</span></span><br></pre></td></tr></table></figure>\n\n<hr>\n<p>加上情境，倘若今天一間餐廳有當月壽星禮，可以這樣做控制判斷</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> myBirthdayMonth = <span class=\"number\">3</span>; <span class=\"comment\">//我的生日月份</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> nowMonth = <span class=\"number\">12</span>; <span class=\"comment\">//本月壽星</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> birthdayMonthCheck = myBirthdayMonth == nowMonth; <span class=\"comment\">//判斷我是否為本月壽星</span></span><br><span class=\"line\"><span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"birthdayId\"</span>).textContent = birthdayMonthCheck; <span class=\"comment\">//本月為 12 月，我是 3 月壽星，故結果會得到 false</span></span><br></pre></td></tr></table></figure>\n\n<hr>\n<h3 id=\"嚴謹模式\"><a href=\"#嚴謹模式\" class=\"headerlink\" title=\"嚴謹模式 ===\"></a>嚴謹模式 <code>===</code></h3><p>因為 <code>==</code> 比較不嚴謹，如果有些資料要確認型別，就會用到 <code>===</code>，假如下方程式碼：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span> == <span class=\"string\">\"1\"</span>;</span><br><span class=\"line\"><span class=\"comment\">//會得到結果是 true，可是一邊是數字，另一邊是字串，資料型別不同啊?</span></span><br></pre></td></tr></table></figure>\n\n<p>因為 <code>==</code> 會在比較時發現值如果數字跟字串長一樣的時候，會自動轉型，被比較成一樣，所以如果剛好遇到類似的數值跟字串內容會一樣時，為了讓資料更明確的比較，就會用到嚴謹模式 <code>===</code>，例如：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span> === <span class=\"string\">\"1\"</span>;</span><br><span class=\"line\"><span class=\"comment\">//得到的結果就會是 false</span></span><br></pre></td></tr></table></figure>\n\n<hr>\n<h3 id=\"大於-gt-、小於-lt-、大於等於-gt-、小於等於-gt\"><a href=\"#大於-gt-、小於-lt-、大於等於-gt-、小於等於-gt\" class=\"headerlink\" title=\"大於 &gt;、小於 &lt;、大於等於 &gt;=、小於等於 =&gt;\"></a>大於 <code>&gt;</code>、小於 <code>&lt;</code>、大於等於 <code>&gt;=</code>、小於等於 <code>=&gt;</code></h3><p>用法就跟字面一樣，可以自己玩一下，例如：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">3</span> &gt; <span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"number\">7</span> &lt; <span class=\"number\">8</span>;</span><br><span class=\"line\"><span class=\"number\">13</span> &gt;= <span class=\"number\">13</span>;</span><br><span class=\"line\"><span class=\"number\">15</span> &lt;= <span class=\"number\">21</span>;</span><br></pre></td></tr></table></figure>\n\n<p>以上結果都會得到 true <del>(廢話)</del></p>\n<hr>\n<h2 id=\"邏輯運算式-amp-amp-and-、-or-、-not\"><a href=\"#邏輯運算式-amp-amp-and-、-or-、-not\" class=\"headerlink\" title=\"邏輯運算式 &amp;&amp; (and)、|| (or)、! (not)\"></a>邏輯運算式 &amp;&amp; (and)、|| (or)、! (not)</h2><p>要滿足預設的兩個條件要用 and，這樣寫： <code>&amp;&amp;</code>，只要滿足其中一個條件用 or ，這樣寫： <code>||</code>，如果要表示「不是」則是用 <code>!</code>。</p>\n<hr>\n<h3 id=\"amp-amp-所有條件皆符合\"><a href=\"#amp-amp-所有條件皆符合\" class=\"headerlink\" title=\"&amp;&amp; 所有條件皆符合\"></a>&amp;&amp; 所有條件皆符合</h3><p>以搭飛機為例，出入境都需要<strong>機票</strong>跟<strong>護照</strong>的話，程式碼如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> passport = <span class=\"literal\">true</span>; <span class=\"comment\">//有帶護照</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> ticket = <span class=\"literal\">true</span>; <span class=\"comment\">//有帶機票</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> pass = passport == <span class=\"literal\">true</span> &amp;&amp; ticket == <span class=\"literal\">true</span>; <span class=\"comment\">// 出入境條件</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(pass); <span class=\"comment\">// 結果會是 true</span></span><br></pre></td></tr></table></figure>\n\n<p>如果沒有機票的話，程式碼如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> passport = <span class=\"literal\">true</span>; <span class=\"comment\">//有帶護照</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> ticket = <span class=\"literal\">false</span>; <span class=\"comment\">//沒帶機票</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> pass = passport == <span class=\"literal\">true</span> &amp;&amp; ticket == <span class=\"literal\">true</span>; <span class=\"comment\">// 出入境條件</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(pass); <span class=\"comment\">// 結果會是 false</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>在條件上可以自行定義多寡，但建議一到兩個就好，最多三個，不然程式碼會太長。</p>\n</blockquote>\n<hr>\n<h3 id=\"符合一項條件\"><a href=\"#符合一項條件\" class=\"headerlink\" title=\"|| 符合一項條件\"></a>|| 符合一項條件</h3><p>以餐廳優惠為例，餐廳很多都有當月壽星禮，程式碼如下：</p>\n<p>剛好是當月壽星：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//餐廳折扣優惠</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> myBirthdMonth = <span class=\"literal\">true</span>; <span class=\"comment\">//當月壽星禮</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> fbTag = <span class=\"literal\">true</span>; <span class=\"comment\">//臉書打卡</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> discount = myBirthdMonth == <span class=\"literal\">true</span> || fbTag == <span class=\"literal\">true</span>; <span class=\"comment\">// 符合折扣條件</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(discount); <span class=\"comment\">// 結果會是 true</span></span><br></pre></td></tr></table></figure>\n\n<hr>\n<h3 id=\"不是\"><a href=\"#不是\" class=\"headerlink\" title=\"! 不是\"></a>! 不是</h3><p>Not 會把原本的意思改成不是的意思，例如：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">2</span> &lt; <span class=\"number\">3</span>; <span class=\"comment\">//true</span></span><br><span class=\"line\"></span><br><span class=\"line\">!(<span class=\"number\">2</span> &lt; <span class=\"number\">3</span>); <span class=\"comment\">// false</span></span><br></pre></td></tr></table></figure>\n","categories":["JavaScript"],"tags":["JavaScript"]},{"title":"CSS 筆記 - 使用 overflow 顯示一個捲軸與自訂顏色","url":"/css/20200410/3203726250/","content":"<p><img src=\"https://images.unsplash.com/photo-1580501170888-80668882ca0c?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1350&q=80\" alt=\"scroll\"></p>\n<blockquote>\n<p>Scroll 英文叫做滾動，在網頁中是捲軸。</p>\n</blockquote>\n<p>這次一樣是紀錄工作遇到的問題，目前的專案是一個後臺開發，遇到一個 table 版面，資料會從 API 回傳數據後填入，所以會有很多筆，但因為版面的關係，PM 希望 table 表格可以自己使用捲軸，這次用到 CSS 的 overflow 的語法。</p>\n<h2 id=\"overflow\"><a href=\"#overflow\" class=\"headerlink\" title=\"overflow\"></a>overflow</h2><p>之前過用 <code>overflow:hidden;</code> 是用<a href=\"https://medium.com/@smallmoney1224/%E5%BE%9E0%E9%96%8B%E5%A7%8B%E8%A4%87%E7%BF%92-html-css-javascript-%E5%9C%96%E7%89%87%E5%8F%96%E4%BB%A3%E6%96%87%E5%AD%97-with-h1-logo-be56c85159a4\" target=\"_blank\" rel=\"noopener\">圖片取代文字</a>而已…</p>\n<p>透過這次專案稍微研究一下 overflow 相關資料，才知道有以下屬性：</p>\n<p>overflow 屬性用來定義元素超過某個範圍的時候該如何呈現，例如圖片超過預設區域的大小、文字長度超出原本的範圍等，這時候可以透過 CSS overflow 屬性來制定該區塊是否顯示 scrollbar（卷軸）或者是否要隱藏該元素。</p>\n<ul>\n<li><p><code>overflow: auto;</code> 預設會自動使用 x, y 捲軸</p>\n<ul>\n<li>overflow-x 產生 X 軸。</li>\n<li>overflew-y 產生 Y 軸。</li>\n</ul>\n</li>\n<li><p><code>overflow:visible;</code> 顯示的文字或圖片會直接超出範圍，不使用捲軸。</p>\n</li>\n<li><p><code>overflow:hidden;</code> 自動隱藏超出的文字或圖片。</p>\n</li>\n<li><p><code>overflow:scroll;</code> 自動產生捲軸。</p>\n</li>\n<li><p><code>overflow:inherit;</code> 繼承自父元素的可見性</p>\n</li>\n</ul>\n<p>這次要做的專案就是在特定範圍高度內要產生一個 scroll 捲軸，但在嘗試的時候發現以下幾件事情：</p>\n<ol>\n<li>一定要寫在<code>&lt;div&gt;</code> 上，不是寫在 <code>&lt;table&gt;</code> 上。</li>\n<li>要限制高度，資料超過就會自動產生 scroll，但有些版面不會。</li>\n</ol>\n<p>例如畫面類似這樣的樣式：</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/overflow-01.png?alt=media&token=7ed8d6b1-24f8-4cb9-8670-c3f3e911c1ad\" alt=\"sample\"></p>\n<p><strong>HTML</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"wrap\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"topbox\"</span>&gt;</span></span><br><span class=\"line\">    this is header</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"boxBottom\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"boxLeft\"</span>&gt;</span></span><br><span class=\"line\">      // overflow 要下在這一層</span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>...lorem...<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"boxRight\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">img</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">src</span>=<span class=\"string\">\"https://images.unsplash.com/photo-1558981806-ec527fa84c39?ixlib=rb-1.2.1&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;auto=format&amp;fit=crop&amp;w=1350&amp;q=80\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">alt</span>=<span class=\"string\">\"\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>overflow 下在這個地方 (因 CSS 有點長，只擷取片段程式碼)。</p>\n<p><strong>CSS</strong></p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.boxLeft</span> &#123;</span><br><span class=\"line\">  height: 400px; //限定高度</span><br><span class=\"line\">  overflow-y: auto; //自動產生 y 軸捲軸</span><br><span class=\"line\">  <span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">line-height</span>: <span class=\"number\">1.5</span>;</span><br><span class=\"line\">    <span class=\"attribute\">padding</span>: <span class=\"number\">1em</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>這樣就可以達到想要的效果了。</p>\n<p>可以把其他屬性複製起來，套用在 overflow 的地方，看一下效果!</p>\n<p>codepen <a href=\"https://codepen.io/hnzxewqw/pen/LYpYQRK\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/LYpYQRK</a></p>\n<h2 id=\"同場加映-修改-ScrollBar-樣式\"><a href=\"#同場加映-修改-ScrollBar-樣式\" class=\"headerlink\" title=\"同場加映 - 修改 ScrollBar 樣式\"></a>同場加映 - 修改 ScrollBar 樣式</h2><p><code>table</code> 表格若遇到很多資料，但版面有限時如何增加捲軸?</p>\n<p>目前有一個捲軸程式碼如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"wrap\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Our Family<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"tableGroup\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"style-3\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">thead</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>INDEX<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>NAME<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>JOB<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>OTHER<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">thead</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>01<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>Tim<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>F2E<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>null<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>02<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>Mary<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>HR<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>null<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>03<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>Mike<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>Sales<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>like eating<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>04<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>Joshua<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>Baby<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>Sleeping<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>05<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>Min<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>Teacher<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>Like drinking<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>06<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>Brandon<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>PM<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>Sport<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>可以看到共有六個項目，然後今天 PM 說：<strong>UI 設計稿上最多顯示四筆資料，目前資料超過四筆，請使用捲軸呈現。</strong></p>\n<p>這時用 CSS 就可以辦到此效果，上面有提到如何使用捲軸的方法，這邊就在 <code>table</code> 外面的 <code>div</code> 寫上找到的捲軸設定，一定要在 <code>div</code>，沒辦法放在 <code>table</code> 上。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"tableGroup\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"style-3\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\">    ---以下省略---</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>再把設定帶入 CSS 中，這邊我只修改顏色跟調整 scroll bar 的寬度，可以自行玩玩看。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\">//捲軸底色</span><br><span class=\"line\"><span class=\"selector-id\">#style-3</span><span class=\"selector-pseudo\">::-webkit-scrollbar-track</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">-webkit-box-shadow</span>: inset <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">6px</span> <span class=\"built_in\">rgba</span>(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0.3</span>);</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#ffc0cb</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">//捲軸寬度</span><br><span class=\"line\"><span class=\"selector-id\">#style-3</span><span class=\"selector-pseudo\">::-webkit-scrollbar</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">6px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: black;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">//捲軸本體顏色</span><br><span class=\"line\"><span class=\"selector-id\">#style-3</span><span class=\"selector-pseudo\">::-webkit-scrollbar-thumb</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#bb6573</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>Webkit 可以利用 CSS 修改 Scoll bar 的外觀，有試過其他瀏覽器是不行的，而有時候在使用局部範圍的 <code>overflow: auto</code>，會需要較為纖細的 scroll bar，如果不在意 webkit 以外的瀏覽器，可以試試看這個方法。</p>\n</blockquote>\n<p><strong>注意</strong><br>本範例只有 <code>Webkit</code> 瀏覽器有效，Chrome or Safari，如果要跨瀏覽器的 scrollbar，就建議使用 javascript 或是 jquery 了。</p>\n<p>Codepen: <a href=\"https://codepen.io/hnzxewqw/pen/XWmXpMB\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/XWmXpMB</a></p>\n<hr>\n<p>參考文章：</p>\n<p><a href=\"https://pjchender.github.io/2018/08/30/css-%E6%BB%91%E9%BC%A0%E9%81%B8%E8%BB%B8%E6%BB%BE%E5%8B%95-scroll/\" target=\"_blank\" rel=\"noopener\">[CSS] 滑鼠選軸滾動 scroll</a></p>\n<p><a href=\"https://www.wibibi.com/info.php?tid=157\" target=\"_blank\" rel=\"noopener\">CSS overflow 屬性用法</a></p>\n<p><a href=\"https://codepen.io/devstreak/pen/dMYgeO\" target=\"_blank\" rel=\"noopener\">捲軸改色</a></p>\n<p><a href=\"https://wcc723.github.io/css/2014/12/03/css-scrollbar/\" target=\"_blank\" rel=\"noopener\">Webkit 自定義 Scroll Bar 外觀</a></p>\n","categories":["CSS"],"tags":["CSS"]},{"title":"Vue 筆記 - 使用 vue CLI 建立 SPA 專案","url":"/vue-js/20200404/497821688/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/vueCli-00.png?alt=media&token=fbc73968-437f-40fb-9b00-34d8b2dd69fb\" alt=\"Vue CLI\"></p>\n<p>面對現在正流行的 SPA 專案，若要用原生碼或傳統作法也不是不行，就會變整個專案很大一包，而且程式碼冗長，開發與維護都相當不容易。透過 Vue CLI 建立一個專案，不僅方便快速，且因為 MVVM 的特性，在開發不僅可以專注於資料上，且維護也較為容易。</p>\n<h2 id=\"使用-Vue-CLI-建立專案\"><a href=\"#使用-Vue-CLI-建立專案\" class=\"headerlink\" title=\"使用 Vue CLI 建立專案\"></a>使用 Vue CLI 建立專案</h2><p>VueCLI: A simple CLI (command-line interface) for scaffolding Vue.js projects.<br>整合了 webpack、vue-loader 與其他周邊開發套件 如 Vuex / sass-loader 等的建構工具。</p>\n<h3 id=\"安裝\"><a href=\"#安裝\" class=\"headerlink\" title=\"安裝\"></a>安裝</h3><p>VueCLI 需要先安裝 npm 或 yarn，然後透過指令來進行安裝。</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm install -g @vue/cli</span><br></pre></td></tr></table></figure>\n\n<p>或</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">yarn global add @vue/cli</span><br></pre></td></tr></table></figure>\n\n<p>我個人是使用 npm 比較習慣，所以我就輸入 npm 指令進行安裝，安裝完畢後再輸入下方指令確認版本號。</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">vue -V</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>注意：-V 的 V 要大寫，不然會跳錯，目前版本號為 <code>@vue/cli 4.2.3</code></p>\n</blockquote>\n<h3 id=\"開啟專案\"><a href=\"#開啟專案\" class=\"headerlink\" title=\"開啟專案\"></a>開啟專案</h3><p>首先開啟命令列或終端機，輸入</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">vue create [專案名稱]</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>也就是 vue create newProject，括弧不用打</p>\n</blockquote>\n<p>或者已經在專案目錄中了，那就輸入</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">vue create .</span><br></pre></td></tr></table></figure>\n\n<p>cli 就會提示你是否直接在這個目錄中建立專案，選擇 y，並選擇手動建立專案 (Manually select features)，如下圖。</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/vueCli-01.png?alt=media&token=f6b99f3b-4dc2-474f-bdcd-eecb95900e6f\" alt=\"建立專案\"></p>\n<h3 id=\"選擇套件\"><a href=\"#選擇套件\" class=\"headerlink\" title=\"選擇套件\"></a>選擇套件</h3><h4 id=\"常用套件選擇\"><a href=\"#常用套件選擇\" class=\"headerlink\" title=\"常用套件選擇\"></a>常用套件選擇</h4><p>選 Babel、Vuex、CSS Pre-processors 以及 Linter / Formatter。</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/vueCli-02.png?alt=media&token=1a6f8eb0-9472-4c59-880a-8bcac07ec9e7\" alt=\"選擇套件\"></p>\n<h4 id=\"CSS-預處理器\"><a href=\"#CSS-預處理器\" class=\"headerlink\" title=\"CSS 預處理器\"></a>CSS 預處理器</h4><p>Sass / SCSS (with node-sass)</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/vueCli-03.png?alt=media&token=aad50ffc-e0ae-4d64-b3a0-d617c38dbb5c\" alt=\"CSS 預處理器\"></p>\n<h4 id=\"選擇規範\"><a href=\"#選擇規範\" class=\"headerlink\" title=\"選擇規範\"></a>選擇規範</h4><p>此範例我們選 SASS 與 ESLint + Airbnb config，當然也可以按照自己習慣調整。</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/vueCli-04.png?alt=media&token=250a1ec3-c6e0-4d67-9e3a-9a02be4c5de7\" alt=\"選擇規範\"></p>\n<blockquote>\n<p>開發若使用此功能，就會很容易程式碼不符合規範時一直跳錯，是滿煩的，但為了工作上的 coding style 其實還是有必要的。</p>\n</blockquote>\n<h4 id=\"Lint-存檔\"><a href=\"#Lint-存檔\" class=\"headerlink\" title=\"Lint 存檔\"></a>Lint 存檔</h4><p>只以這次為主。</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/vueCli-05.png?alt=media&token=dc9e47e0-f121-4bde-9e7a-7487cdcddc58\" alt=\"Lint\"></p>\n<h4 id=\"存檔在-package-json\"><a href=\"#存檔在-package-json\" class=\"headerlink\" title=\"存檔在 package.json\"></a>存檔在 package.json</h4><p>本次專案相關設定就會從這邊取出，如果要設定相關內容也從 package.json 修改，就可以讓整個專案吃到了，相當方便。</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/vueCli-06.png?alt=media&token=b65c1bb9-0ba2-4546-9656-842ad026b77a\" alt=\"package.json\"></p>\n<h4 id=\"不要儲存相關設定\"><a href=\"#不要儲存相關設定\" class=\"headerlink\" title=\"不要儲存相關設定\"></a>不要儲存相關設定</h4><p>最後會詢問，是否要儲存相關設定，在未來的專案使用，建議選擇 no，相關設定要看未來專案選擇。</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/vueCli-07.png?alt=media&token=0a20cd4f-972a-417f-b7ea-abe05544a006\" alt=\"請選擇不要\"></p>\n<p>選擇完畢後就會安裝所選擇的套件，這時就可以去倒杯水，回到座位看到下方畫面，代表完成了。</p>\n<h4 id=\"安裝完成\"><a href=\"#安裝完成\" class=\"headerlink\" title=\"安裝完成\"></a>安裝完成</h4><p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/vueCli-08.png?alt=media&token=7660ab32-fdbc-4251-a9f0-68613a6e6333\" alt=\"Vue CLI 安裝完成\"></p>\n<p>這時候按照上方條件輸入後就會跳出下方畫面</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/vueCli-09.png?alt=media&token=5d4e95e0-cc41-447d-814f-cf35444bb366\" alt=\"done\"></p>\n<p>打開瀏覽器輸入所得到的 localhost 的位址，若出現下方畫面，就是代表建立完成一個新的 SPA 專案囉!</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/vueCli-10.png?alt=media&token=75d77f86-2238-4812-8b57-3c542a8a9412\" alt=\"Vue SPA 專案建立完成\"></p>\n<h2 id=\"專案架構\"><a href=\"#專案架構\" class=\"headerlink\" title=\"專案架構\"></a>專案架構</h2><p>生成的專案架構大概會向下方這樣：</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/vueCli-11.png?alt=media&token=59c88031-8e83-489d-b540-37d43d0fca64\" alt=\"專案架構\"></p>\n<p>開發主要會動到的檔案，大多集中在 src 目錄，以及 public 裡的 index.html 。</p>\n<h2 id=\"Vue-的單一元件檔\"><a href=\"#Vue-的單一元件檔\" class=\"headerlink\" title=\"Vue 的單一元件檔\"></a>Vue 的單一元件檔</h2><p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/vueCli-12_%E5%B7%A5%E4%BD%9C%E5%8D%80%E5%9F%9F%201.png?alt=media&token=4238ffea-3f4a-47be-bb6a-2187c9466e8a\" alt=\"Vue 的單一元件檔\"></p>\n<p>一個獨立的 vue 檔案，也就是一個 component，通常會包含</p>\n<ul>\n<li>HTML</li>\n<li>JavaScript</li>\n<li>CSS</li>\n</ul>\n<p>這三個部分，分別由 <code>&lt;template&gt;</code> 、 <code>&lt;script&gt;</code> 與 <code>&lt;style&gt;</code> 這三個標籤來表示。</p>\n<p>而 <code>.vue</code> 檔案也可以透過 <code>import</code> 其他 <code>.vue</code> 檔案，來將其他 component 引入作為自己的子元件。</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/vueCli-13.png?alt=media&token=4a7a4db1-7697-41fa-b7b4-f30f0119eba2\" alt=\"components\"></p>\n","categories":["vue.js"],"tags":["vue.js","vue CLI"]},{"title":"JS 筆記 - ES6：使用 let 與 const 宣告變數","url":"/javascript/20200404/784099098/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/js-ES6.png?alt=media&token=0bf94bee-c7cd-4cc0-b619-45e5bf71d07b\" alt=\"ES6\"></p>\n<p><code>var</code>、<code>let</code>、<code>const</code> 都是宣告變數的方法，倘若沒有使用變數宣告，就會變成<strong>全域變數</strong>，那這些宣告的方法中，在作用域中的範圍是哪些，來記錄一下釐清觀念。</p>\n<h2 id=\"var-let-的作用域差異\"><a href=\"#var-let-的作用域差異\" class=\"headerlink\" title=\"var let 的作用域差異\"></a>var let 的作用域差異</h2><p>下方有一個範例，宣告後並透過一個<a href=\"https://developer.mozilla.org/zh-TW/docs/Glossary/IIFE\" target=\"_blank\" rel=\"noopener\">立即函式</a>來執行其內容，</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> mom = <span class=\"string\">'mary'</span>;</span><br><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">console</span>.log(<span class=\"string\">'mom'</span>) <span class=\"comment\">// mary</span></span><br><span class=\"line\">&#125;)();</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><strong>立即函式</strong>：IIFE (Immediately Invoked Function Expression) 是一個定義完馬上就執行的 JavaScript function。</p>\n</blockquote>\n<p>可知會得到 <code>mary</code> 這個值，把 <code>var</code> 換成 <code>let</code> 也會有一樣的結果。<br>但若把 <code>console.log</code> 複製一個並移到最上面，結果會如何呢?</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">'mom'</span>) <span class=\"comment\">//mom is not defined</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> mom = <span class=\"string\">'mary'</span>;</span><br><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">console</span>.log(<span class=\"string\">'mom'</span>) </span><br><span class=\"line\">&#125;)();</span><br></pre></td></tr></table></figure>\n\n<p>會直接跳錯，並顯示：<code>mom is not defined</code>，因為變數尚未定義，所以會找不到，但如果又把 <code>let</code> 換成 <code>var</code> 就會得到下方結果：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">'mom'</span>) <span class=\"comment\">//undefined</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> mom = <span class=\"string\">'mary'</span>;</span><br><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">console</span>.log(<span class=\"string\">'mom'</span>) <span class=\"comment\">// mary</span></span><br><span class=\"line\">&#125;)();</span><br></pre></td></tr></table></figure>\n<p>兩個都會被執行，不會跳錯，究竟 <code>not defined</code> 跟 <code>undefined</code> 的差別在哪裡呢? 這在開發時檢查會很常遇到，這邊紀錄一下。</p>\n<h3 id=\"undefined\"><a href=\"#undefined\" class=\"headerlink\" title=\"undefined\"></a>undefined</h3><p>記憶體已經準備好空間，但讀不到相關資料，之所以 <code>var</code> 可以抓到 <code>undefined</code>，是 <strong>Hoisting</strong> 向上提升的特性。</p>\n<blockquote>\n<p>Hoisting 向上提升：在變數與函數宣告時，會在編譯階段就被放入記憶體。</p>\n</blockquote>\n<h3 id=\"not-defined\"><a href=\"#not-defined\" class=\"headerlink\" title=\"not defined\"></a>not defined</h3><p>記憶體還沒有準備空間，所以沒辦法抓取資料到記憶體。</p>\n<p>為了<strong>避免汙染全域</strong>，現在都會建議使用 <code>let</code>。</p>\n<h2 id=\"var-與-let-的作用域\"><a href=\"#var-與-let-的作用域\" class=\"headerlink\" title=\"var 與 let 的作用域\"></a>var 與 let 的作用域</h2><p>透過下方 function 的範例，來了解，<code>var</code> 與 <code>let</code> 的作用域範圍。</p>\n<h3 id=\"var-的作用域範圍是-function-scope\"><a href=\"#var-的作用域範圍是-function-scope\" class=\"headerlink\" title=\"var 的作用域範圍是 function scope\"></a>var 的作用域範圍是 function scope</h3><p>若是在 function 內所宣告的 <code>var</code>，皆會被影響，若重複宣告變數的值，後宣告的變數內容會去<strong>覆蓋</strong>這個 function 內先前所宣告的變數內容。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">funA</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> name = <span class=\"string\">'小明'</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(<span class=\"literal\">true</span>)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> name = <span class=\"string\">'大明'</span>;\t</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log (name); <span class=\"comment\">// '大明'</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"let-的作用域範圍是-block\"><a href=\"#let-的作用域範圍是-block\" class=\"headerlink\" title=\"let 的作用域範圍是 block\"></a>let 的作用域範圍是 block</h3><p>若是在 function 內使用 <code>let</code> ，只會讀取該<strong>「大括號」</strong>的內變數內容。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">funA</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> name = <span class=\"string\">'小明'</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(<span class=\"literal\">true</span>)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> name = <span class=\"string\">'大明'</span>;\t</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log (name); <span class=\"comment\">// '小明'</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>由此可知，<code>var</code> 因為比較容易汙染到全域，所以使用 <code>let</code> 會比較容易管理 function 的內容。</p>\n<h2 id=\"var-與-let-經典的-for-迴圈範例\"><a href=\"#var-與-let-經典的-for-迴圈範例\" class=\"headerlink\" title=\"var 與 let 經典的 for 迴圈範例\"></a>var 與 let 經典的 for 迴圈範例</h2><p>此範例希望出現的是在 console 內顯示 「這是第幾次執行」的文字，並且 <code>i</code> 的內容會是 0~9，所以預期的結果應該如下：</p>\n<blockquote>\n<p>這是第0次執行<br>這是第1次執行<br>這是第2次執行<br>這是第3次執行<br>這是第4次執行<br>這是第5次執行<br>這是第6次執行<br>這是第7次執行<br>這是第8次執行<br>這是第9次執行</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++)&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(i);</span><br><span class=\"line\">  setTimeout (<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'這是第'</span>+i+<span class=\"string\">'次執行'</span>)</span><br><span class=\"line\">  &#125;,<span class=\"number\">10</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>可看到一個 for 迴圈裏面有一個非同步事件，並且這個 for 迴圈並沒有被 function 包住，是直接執行的，邏輯上 setTimeout 的位置應該在 for 迴圈之外，如下程式碼：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++)&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(i);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">setTimeout (<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123; <span class=\"comment\">//應該在 i 加總完之後，才在這裡執行</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'這是第'</span>+i+<span class=\"string\">'次執行'</span>)</span><br><span class=\"line\">\t&#125;,<span class=\"number\">10</span>);</span><br></pre></td></tr></table></figure>\n<p>透過第一範例知道這裡使用 <code>var</code> 宣告 <code>i</code> 的時候，此時 <code>i</code> 是全域變數，在 <code>console.log</code> 中輸入 window.i 時，會出現 10 的結果。所以 setTimeout 會執行的是全域變數底下的 <code>i</code>，並不會依序的執行，所以這並非預期出現的結果。</p>\n<p>但如果將 <code>var</code> 改成 <code>let</code>，作用域就會變成 block，就只會執行該大括號內的內容。所以就會得到預期的結果，並且在 console 中輸入 window.i 結果會出現 <code>undefined</code>。</p>\n<h2 id=\"const-的特性\"><a href=\"#const-的特性\" class=\"headerlink\" title=\"const 的特性\"></a>const 的特性</h2><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> a = <span class=\"number\">1</span>;</span><br><span class=\"line\">a = <span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a); <span class=\"comment\">//2</span></span><br></pre></td></tr></table></figure>\n<p>在開發人員工具，就會出現跳錯的訊息，</p>\n<p><code>Uncaught SyntaxError: Identifier &#39;a&#39; has already been declared</code></p>\n<p>所以只要是不能變更的資訊，就可以使用 <code>const</code> 來宣告。(例如 AJAX 中的 API 網址。)</p>\n<h3 id=\"但是-const-宣告的物件是可以修改內容的\"><a href=\"#但是-const-宣告的物件是可以修改內容的\" class=\"headerlink\" title=\"但是 const 宣告的物件是可以修改內容的\"></a>但是 const 宣告的物件是可以修改內容的</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> family = &#123;</span><br><span class=\"line\">  mom: <span class=\"string\">'媽媽'</span>,</span><br><span class=\"line\">\tson: <span class=\"string\">'兒子'</span>,</span><br><span class=\"line\">\tsister: <span class=\"string\">'妹妹'</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">family.dad = <span class=\"string\">'爸爸'</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(family); </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//就會得到 </span></span><br><span class=\"line\"><span class=\"comment\">//mom: \"媽媽\"</span></span><br><span class=\"line\"><span class=\"comment\">//son: \"兒子\"</span></span><br><span class=\"line\"><span class=\"comment\">//sister: \"妹妹\"</span></span><br><span class=\"line\"><span class=\"comment\">//dad: \"爸爸\"</span></span><br></pre></td></tr></table></figure>\n<p>因為 <code>const</code> 物件是傳參考，不是傳值，所以並非改變物件中的值，所以是可以的。<br>但如果把上方物件修改成： <code>family = {};</code><br>因為修改了值，就會跳錯。</p>\n<h2 id=\"心得\"><a href=\"#心得\" class=\"headerlink\" title=\"心得\"></a>心得</h2><p>了解 <code>var</code> 跟 <code>let</code> 作用域的概念以及 <code>const</code> 的特行，在使用 function 上，比較不會因為程式碼一多，就會搞亂。</p>\n","categories":["JavaScript"],"tags":["JavaScript","ES6"]},{"title":"JS 筆記 - Object 物件的基本認識","url":"/javascript/20200331/3067475316/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/JavaScript%20note-01.jpg?alt=media&token=7bee0261-72ac-4de4-9f5a-f39d58735b7d\" alt=\"JavaScript Note\"></p>\n<blockquote>\n<p>一個物件可以是個零至多種屬性的集合，而屬性是鍵 (key) 與值 (value) 之間的關聯。 一個屬性的「值」可以是某個基本型別，也可以是另一個物件，甚至可以是一個函數。<br>*引用 KURO 老師<a href=\"http://https://ithelp.ithome.com.tw/articles/10190962\" target=\"_blank\" rel=\"noopener\">這篇文章</a>對於物件的陳述</p>\n</blockquote>\n<hr>\n<h2 id=\"物件的寫法\"><a href=\"#物件的寫法\" class=\"headerlink\" title=\"物件的寫法\"></a>物件的寫法</h2><p>宣告一個變數 var ，<strong>自定義</strong>一個名稱，直接用一個<strong>大括號</strong> <code>{}</code> 的方式來建立物件，資料結尾要用逗號 <code>,</code> ，也是 JSON 格式的核心語法，寫法如下：</p>\n<p><code>var object ={};</code></p>\n<p>有點像寫 CSS 格式的感覺，用這個聯想就滿好記的。</p>\n<p><code>.header{};</code></p>\n<h3 id=\"在物件中加上屬性\"><a href=\"#在物件中加上屬性\" class=\"headerlink\" title=\"在物件中加上屬性\"></a>在物件中加上屬性</h3><p>在大括號裡面，會給物件一些內容，稱之為<strong>屬性</strong>跟<strong>值</strong>。<br>如果以一個家為例，家裡面有爸爸，名字叫做 Tim，那物件內容就會這樣寫：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> home =&#123;</span><br><span class=\"line\">  dad: <span class=\"string\">\"Tim\"</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>增加屬性內容要注意的地方是：給屬性一個<strong>自定義</strong>的名稱，加上<strong>冒號</strong> <code>：</code>，後面一樣要按照變數的資料型態來寫，字串要加上引號，數字則不用，多個物件內容要用<strong>逗點</strong> <code>,</code> ，但最後一個物件項目，無須逗點。如下方程式碼：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> home =&#123;</span><br><span class=\"line\">  dad: <span class=\"string\">\"Tim\"</span>,</span><br><span class=\"line\">  mom: <span class=\"string\">\"Min\"</span>,</span><br><span class=\"line\">  son: <span class=\"string\">\"Joshua\"</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h3 id=\"存取物件的屬性\"><a href=\"#存取物件的屬性\" class=\"headerlink\" title=\"存取物件的屬性\"></a>存取物件的屬性</h3><p>物件本身不會被執行，要把物件中的屬性做<strong>存取的動作</strong>，才會被執行，假如要存取下方物件中的內容，要在物件名稱後加上點 <code>.</code>，才能取得屬性的值，程式碼可以這樣寫：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> home =&#123;</span><br><span class=\"line\">  dad: <span class=\"string\">\"Tim\"</span>,</span><br><span class=\"line\">  mom: <span class=\"string\">\"Min\"</span>,</span><br><span class=\"line\">  son: [<span class=\"string\">\"Joshua\"</span>,<span class=\"string\">\"John\"</span>],</span><br><span class=\"line\">  chair:<span class=\"number\">4</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">home.dad; <span class=\"comment\">//會得到 Tim 這個結果</span></span><br><span class=\"line\">home.son[<span class=\"number\">0</span>] <span class=\"comment\">//會得到 Joshua 這個結果</span></span><br></pre></td></tr></table></figure>\n\n<p>白話文：</p>\n<ol>\n<li>在 home 的物件中，找到 dad 屬性中裡面的值，所以結果會得到 Tim。</li>\n<li>在 home 的物件中，找到 son 陣列裡的第一個值，所以結果會得到 Joshua。</li>\n</ol>\n<hr>\n<h3 id=\"新增物件屬性\"><a href=\"#新增物件屬性\" class=\"headerlink\" title=\"新增物件屬性\"></a>新增物件屬性</h3><p>如果要在物件外，直接新增屬性到物件內的話，可以這樣寫：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> home =&#123;</span><br><span class=\"line\">  dad: <span class=\"string\">\"Tim\"</span>,</span><br><span class=\"line\">  mom: <span class=\"string\">\"Min\"</span>,</span><br><span class=\"line\">  son: [<span class=\"string\">\"Joshua\"</span>,<span class=\"string\">\"John\"</span>],</span><br><span class=\"line\">  chair:<span class=\"number\">4</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">home.dog = <span class=\"number\">1</span>; <span class=\"comment\">//增加屬性 dog，值為 1 的內容到物件內</span></span><br><span class=\"line\">home.dog; <span class=\"comment\">//存取值就會得到 1</span></span><br></pre></td></tr></table></figure>\n\n<hr>\n<h3 id=\"刪除物件屬性\"><a href=\"#刪除物件屬性\" class=\"headerlink\" title=\"刪除物件屬性\"></a>刪除物件屬性</h3><p>如果要在物件外，直接刪除物件內屬性，可以這樣寫：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> home =&#123;</span><br><span class=\"line\">  dad: <span class=\"string\">\"Tim\"</span>,</span><br><span class=\"line\">  mom: <span class=\"string\">\"Min\"</span>,</span><br><span class=\"line\">  son: [<span class=\"string\">\"Joshua\"</span>,<span class=\"string\">\"John\"</span>],</span><br><span class=\"line\">  chair:<span class=\"number\">4</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">home.dog = <span class=\"number\">1</span>; <span class=\"comment\">//增加屬性 dog，值為 1 的內容到物件內</span></span><br><span class=\"line\">home.dog; <span class=\"comment\">//存取值就會得到 1</span></span><br><span class=\"line\"><span class=\"keyword\">delete</span> home.dog; <span class=\"comment\">//刪除物件 home 裡面的屬性 dog</span></span><br><span class=\"line\">home.dog; <span class=\"comment\">//存取值會得到 undefined</span></span><br></pre></td></tr></table></figure>\n\n<p><em>其實滿直覺的</em></p>\n<p>參考文章 <a href=\"https://ithelp.ithome.com.tw/articles/10190962\" target=\"_blank\" rel=\"noopener\">https://ithelp.ithome.com.tw/articles/10190962</a></p>\n","categories":["JavaScript"],"tags":["JavaScript"]},{"title":"jQuery 筆記 - Chart.js 基本使用","url":"/jQuery/20200327/3238077972/","content":"<p><img src=\"https://images.unsplash.com/photo-1460925895917-afdab827c52f?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2004&q=80\" alt=\"chart.js\"></p>\n<h2 id=\"Chart-js-簡介\"><a href=\"#Chart-js-簡介\" class=\"headerlink\" title=\"Chart.js 簡介\"></a>Chart.js 簡介</h2><p>Chart.js 是一款彈性很高的圖表 JavaScript library，支援八種常見的統計圖表類型，夠將圖表混合在一起使用，也支援動畫的效果，讓我們製作出來的圖表更加精美！Chart.js 可以與 ES6 模塊，純 JavaScript 和模塊加載器一起使用。</p>\n<h2 id=\"載入-chart-js\"><a href=\"#載入-chart-js\" class=\"headerlink\" title=\"載入 chart.js\"></a>載入 chart.js</h2><p>您可以從 <a href=\"https://github.com/chartjs/Chart.js/releases/tag/v2.9.3\" target=\"_blank\" rel=\"noopener\">GitHub</a> 版本下載最新版本的 Chart.js  或使用 <a href=\"https://cdnjs.com/libraries/Chart.js/\" target=\"_blank\" rel=\"noopener\">Chart.js CDN</a>。</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;script src=\"https://cdnjs.cloudflare.com/ajax/libs/Chart.js/<span class=\"number\">2</span>.<span class=\"number\">9</span>.<span class=\"number\">3</span>/Chart.min.js\"&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<p>要把這一段加在 <code>&lt;head&gt;</code> 標籤中，不然會讀取不到資料，記得也要加入 js 的 <code>&lt;script&gt;</code> 標籤。</p>\n<blockquote>\n<p>因會不定期更新，最新版本請見官網。</p>\n</blockquote>\n<h2 id=\"用法\"><a href=\"#用法\" class=\"headerlink\" title=\"用法\"></a>用法</h2><p>把圖表放在 html 中的位置中，並且要用 <code>&lt;canvas&gt;</code> 標籤包住。如下方程式碼。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">canvas</span> <span class=\"attr\">id</span>=<span class=\"string\">\"chart-area\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">canvas</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>可用 CSS 或是直接在 <code>&lt;canvas&gt;</code> 中加入寬度與高度的設定，但我個人習慣用 CSS 獨立管理，這裡便不贅述。</p>\n<h3 id=\"綁定-id\"><a href=\"#綁定-id\" class=\"headerlink\" title=\"綁定 id\"></a>綁定 id</h3><p>提供四種綁定方式，任擇一即可。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> ctx = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'myChart'</span>);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> ctx = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'myChart'</span>).getContext(<span class=\"string\">'2d'</span>);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> ctx = $(<span class=\"string\">'#myChart'</span>);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> ctx = <span class=\"string\">'myChart'</span>;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"設定自己的圖表\"><a href=\"#設定自己的圖表\" class=\"headerlink\" title=\"設定自己的圖表\"></a>設定自己的圖表</h3><p>放入了位置與綁定了元素，就可以開始定義或創建自己的圖表類型了！以下為官網範例的條形圖，該條形圖顯示了不同顏色的數值表，y 軸從 0 開始。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> ctx = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'myChart'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> myChart = <span class=\"keyword\">new</span> Chart(ctx, &#123;</span><br><span class=\"line\">  type: <span class=\"string\">'bar'</span>, <span class=\"comment\">//圖表類型</span></span><br><span class=\"line\">  data: &#123;</span><br><span class=\"line\">    <span class=\"comment\">//標題</span></span><br><span class=\"line\">    labels: [<span class=\"string\">'Red'</span>, <span class=\"string\">'Blue'</span>, <span class=\"string\">'Yellow'</span>, <span class=\"string\">'Green'</span>, <span class=\"string\">'Purple'</span>, <span class=\"string\">'Orange'</span>],</span><br><span class=\"line\">    datasets: [&#123;</span><br><span class=\"line\">      label: <span class=\"string\">'# test'</span>, <span class=\"comment\">//標籤</span></span><br><span class=\"line\">      data: [<span class=\"number\">12</span>, <span class=\"number\">19</span>, <span class=\"number\">3</span>, <span class=\"number\">5</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>], <span class=\"comment\">//資料</span></span><br><span class=\"line\">      <span class=\"comment\">//圖表背景色</span></span><br><span class=\"line\">      backgroundColor: [</span><br><span class=\"line\">        <span class=\"string\">'rgba(255, 99, 132, 0.2)'</span>,</span><br><span class=\"line\">        <span class=\"string\">'rgba(54, 162, 235, 0.2)'</span>,</span><br><span class=\"line\">        <span class=\"string\">'rgba(255, 206, 86, 0.2)'</span>,</span><br><span class=\"line\">        <span class=\"string\">'rgba(75, 192, 192, 0.2)'</span>,</span><br><span class=\"line\">        <span class=\"string\">'rgba(153, 102, 255, 0.2)'</span>,</span><br><span class=\"line\">        <span class=\"string\">'rgba(255, 159, 64, 0.2)'</span></span><br><span class=\"line\">      ],</span><br><span class=\"line\">      <span class=\"comment\">//圖表外框線色</span></span><br><span class=\"line\">      borderColor: [</span><br><span class=\"line\">        <span class=\"string\">'rgba(255, 99, 132, 1)'</span>,</span><br><span class=\"line\">        <span class=\"string\">'rgba(54, 162, 235, 1)'</span>,</span><br><span class=\"line\">        <span class=\"string\">'rgba(255, 206, 86, 1)'</span>,</span><br><span class=\"line\">        <span class=\"string\">'rgba(75, 192, 192, 1)'</span>,</span><br><span class=\"line\">        <span class=\"string\">'rgba(153, 102, 255, 1)'</span>,</span><br><span class=\"line\">        <span class=\"string\">'rgba(255, 159, 64, 1)'</span></span><br><span class=\"line\">      ],</span><br><span class=\"line\">      <span class=\"comment\">//外框線寬度</span></span><br><span class=\"line\">      borderWidth: <span class=\"number\">1</span></span><br><span class=\"line\">    &#125;]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  options: &#123;</span><br><span class=\"line\">    scales: &#123;</span><br><span class=\"line\">      yAxes: [&#123;</span><br><span class=\"line\">        ticks: &#123;</span><br><span class=\"line\">          beginAtZero: <span class=\"literal\">true</span>,</span><br><span class=\"line\">          responsive: <span class=\"literal\">true</span> <span class=\"comment\">//符合響應式</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>codepen <a href=\"https://codepen.io/hnzxewqw/pen/LYVMNPX\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/LYVMNPX</a></p>\n<h2 id=\"結合兩個圖表使用\"><a href=\"#結合兩個圖表使用\" class=\"headerlink\" title=\"結合兩個圖表使用\"></a>結合兩個圖表使用</h2><p>Chart.js 也支援<a href=\"https://www.chartjs.org/docs/latest/charts/mixed.html\" target=\"_blank\" rel=\"noopener\">混合類型的圖表</a>，能夠將多個 bar chart 跟多個 line chart 放在一起比較；最外層的圖表類型必須設定為 bar，接著在 dataset 的第一個物件後，加上第二個物件，即可插入第二個圖表，例如以下程式碼：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">datasets: [&#123;</span><br><span class=\"line\">     label: <span class=\"string\">'test01'</span>, <span class=\"comment\">//標籤</span></span><br><span class=\"line\">     data: [<span class=\"number\">12</span>, <span class=\"number\">19</span>, <span class=\"number\">3</span>, <span class=\"number\">5</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>], <span class=\"comment\">//資料</span></span><br><span class=\"line\">     <span class=\"comment\">//圖表背景色</span></span><br><span class=\"line\">     backgroundColor: [</span><br><span class=\"line\">       <span class=\"string\">'rgba(255, 99, 132, 0.5)'</span>,</span><br><span class=\"line\">       <span class=\"string\">'rgba(54, 162, 235, 0.5)'</span>,</span><br><span class=\"line\">       <span class=\"string\">'rgba(255, 206, 86, 0.5)'</span>,</span><br><span class=\"line\">       <span class=\"string\">'rgba(75, 192, 192, 0.5)'</span>,</span><br><span class=\"line\">       <span class=\"string\">'rgba(153, 102, 255, 0.5)'</span>,</span><br><span class=\"line\">       <span class=\"string\">'rgba(255, 159, 64, 0.5)'</span></span><br><span class=\"line\">     ],</span><br><span class=\"line\">     <span class=\"comment\">//圖表外框線色</span></span><br><span class=\"line\">     borderColor: [</span><br><span class=\"line\">       <span class=\"string\">'rgba(255, 99, 132, 1)'</span>,</span><br><span class=\"line\">       <span class=\"string\">'rgba(54, 162, 235, 1)'</span>,</span><br><span class=\"line\">       <span class=\"string\">'rgba(255, 206, 86, 1)'</span>,</span><br><span class=\"line\">       <span class=\"string\">'rgba(75, 192, 192, 1)'</span>,</span><br><span class=\"line\">       <span class=\"string\">'rgba(153, 102, 255, 1)'</span>,</span><br><span class=\"line\">       <span class=\"string\">'rgba(255, 159, 64, 1)'</span></span><br><span class=\"line\">     ],</span><br><span class=\"line\">     <span class=\"comment\">//外框線寬度</span></span><br><span class=\"line\">     borderWidth: <span class=\"number\">1</span>, <span class=\"comment\">//從這裡開始加第二筆物件資料</span></span><br><span class=\"line\">   &#125;, &#123;</span><br><span class=\"line\">     type: <span class=\"string\">'line'</span>,</span><br><span class=\"line\">     label: <span class=\"string\">'test02'</span>,</span><br><span class=\"line\">     data: [<span class=\"number\">12</span>, <span class=\"number\">19</span>, <span class=\"number\">3</span>, <span class=\"number\">5</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>],</span><br><span class=\"line\">     borderColor: <span class=\"string\">'rgba(255, 99, 132, 1)'</span>,</span><br><span class=\"line\">     backgroundColor:<span class=\"string\">'rgba(255, 255, 255, 1)'</span></span><br><span class=\"line\">   &#125;]</span><br><span class=\"line\"> &#125;,</span><br></pre></td></tr></table></figure>\n\n<p>codepen <a href=\"https://codepen.io/hnzxewqw/pen/PoqXNYw\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/PoqXNYw</a></p>\n<h2 id=\"相關選項註記\"><a href=\"#相關選項註記\" class=\"headerlink\" title=\"相關選項註記\"></a>相關選項註記</h2><p><a href=\"https://www.chartjs.org/docs/latest/general/\" target=\"_blank\" rel=\"noopener\">常規配置</a></p>\n<p>這些部分描述了可在文檔中其他位置應用的常規配置選項。</p>\n<ul>\n<li><strong>響應式</strong>定義適用於所有圖表的響應式圖表選項。</li>\n<li><strong>設備像素比率</strong>定義顯示像素與渲染像素之間的比率。</li>\n<li><strong>交互</strong>定義了反映懸停圖表元素如何工作的選項。</li>\n<li><strong>選項</strong>可腳本化和可索引的選項語法。</li>\n<li><strong>顏色</strong>定義可接受的顏色值。</li>\n<li><strong>字體</strong>定義各種字體選項。</li>\n<li><strong>性能</strong>為需要效能的應用程式給予提示。</li>\n</ul>\n<blockquote>\n<p>若有翻譯不好的地方還請指教。</p>\n</blockquote>\n<h2 id=\"心得\"><a href=\"#心得\" class=\"headerlink\" title=\"心得\"></a>心得</h2><p><code>datasets</code> 呈現的是 JSON 格式資料，所以對於陣列與物件的用法也要熟悉，在插入資料時比較不會搞混。</p>\n<p>參考資料</p>\n<p><a href=\"https://www.chartjs.org/docs/latest/\" target=\"_blank\" rel=\"noopener\">chart.js 官網</a></p>\n<p><a href=\"https://ithelp.ithome.com.tw/articles/10194425\" target=\"_blank\" rel=\"noopener\">十分鐘學習 Chart.js - 圖表繪製</a></p>\n<p><a href=\"https://dotblogs.com.tw/wellwind/2016/12/30/front-end-chart-js\" target=\"_blank\" rel=\"noopener\">Chart.js - 輕鬆完成資料視覺化</a></p>\n","categories":["jQuery"],"tags":["JavaScript","jQuery"]},{"title":"jQuery 筆記 - jQuery 基本認識","url":"/jQuery/20200326/177388252/","content":"<p><img src=\"https://images.unsplash.com/photo-1525651561332-f1382d2bb6c4?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1350&q=80\" alt=\"jquery\"></p>\n<h2 id=\"簡介\"><a href=\"#簡介\" class=\"headerlink\" title=\"簡介\"></a>簡介</h2><p>jQuery 是一套跨瀏覽器的 JavaScript 函式庫，簡化 HTML 與 JavaScript 之間的操作。由約翰·雷西格（John Resig）在 2006 年 1 月的 BarCamp NYC 上釋出第一個版本。目前是由 Dave Methvin 領導的開發團隊進行開發。全球前 10,000 個存取最高的網站中，有 65% 使用了 jQuery，是目前最受歡迎的 JavaScript 函式庫。</p>\n<h2 id=\"特色\"><a href=\"#特色\" class=\"headerlink\" title=\"特色\"></a>特色</h2><p>jQuery有下列特色：</p>\n<ul>\n<li>使用多瀏覽器開源選擇器引擎 Sizzle（jQuery 專案的衍生產品）進行 DOM 元素選擇。</li>\n<li>基於 CSS 選擇器的 DOM 操作，使用元素的名稱和屬性（如 id 和 class）作為選擇 DOM 中節點的條件。</li>\n<li>事件。</li>\n<li>特效和動畫。</li>\n<li>Ajax。</li>\n<li>Deferred 和 Promise 物件來控制非同步處理。</li>\n<li>JSON 解析。</li>\n<li>通過外掛程式擴充。</li>\n<li>工具函式，如特徵檢測。</li>\n<li>現代瀏覽器中原生的相容性方法，但對於舊版瀏覽器需要後備（fallback）方法，比如 <code>inArray()</code> 和 <code>each()</code>。</li>\n<li>多瀏覽器（不要與跨瀏覽器混淆）支援。</li>\n</ul>\n<h2 id=\"載入-jQuery\"><a href=\"#載入-jQuery\" class=\"headerlink\" title=\"載入 jQuery\"></a>載入 jQuery</h2><p><a href=\"https://jquery.com/download/\" target=\"_blank\" rel=\"noopener\">官網</a><br><a href=\"https://cdnjs.com/libraries/jquery\" target=\"_blank\" rel=\"noopener\">cdn</a>，或複製下方網址匯入 script 標籤。(目前最新版本)。</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">https://<span class=\"title\">cdnjs.cloudflare.com</span>/<span class=\"title\">ajax</span>/<span class=\"title\">libs</span>/<span class=\"title\">jquery</span>/3.4.1/<span class=\"title\">jquery.min.js</span></span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"使用-jQuery-函式\"><a href=\"#使用-jQuery-函式\" class=\"headerlink\" title=\"使用 jQuery 函式\"></a>使用 jQuery 函式</h2><p>有別於原生 JavaScript 要寫落落長的程式碼。起手式很容易，可以這樣寫：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">$(<span class=\"built_in\">document</span>).ready(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">//要執行的內容</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>或是，</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">$(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">//要執行的內容</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>目前比較推薦這個寫法。</p>\n</blockquote>\n<h2 id=\"子專案\"><a href=\"#子專案\" class=\"headerlink\" title=\"子專案\"></a>子專案</h2><blockquote>\n<p>以下專案均是源自於Interface外掛程式</p>\n</blockquote>\n<h3 id=\"jQuery-UI\"><a href=\"#jQuery-UI\" class=\"headerlink\" title=\"jQuery UI\"></a>jQuery UI</h3><p>更多資訊：<a href=\"https://jqueryui.com/\" target=\"_blank\" rel=\"noopener\">jQuery UI</a><br>基於jQuery的使用者介面庫，包括拖放、縮放、對話方塊、標籤頁等多個組件。</p>\n<h3 id=\"jQuery-Tools\"><a href=\"#jQuery-Tools\" class=\"headerlink\" title=\"jQuery Tools\"></a>jQuery Tools</h3><p>jQuery Tools 是一個第三方的套件，基於 jQuery。包括了標籤頁、表單驗證、滑鼠滾輪事件等多個組件。</p>\n<h3 id=\"jQuery-Mobile\"><a href=\"#jQuery-Mobile\" class=\"headerlink\" title=\"jQuery Mobile\"></a>jQuery Mobile</h3><p>基於 jQuery 的手機網頁製作工具，jQuery Mobile 的網站上包含了網頁的設計工具、主題設計工具。另外 jQuery Mobile 的 js 外掛程式包含了換頁、事件等的多項功能。</p>\n<p>文章參考 <a href=\"https://zh.wikipedia.org/wiki/JQuery_UI\" target=\"_blank\" rel=\"noopener\">https://zh.wikipedia.org/wiki/JQuery_UI</a></p>\n","categories":["jQuery"],"tags":["JavaScript","jQuery"]},{"title":"jQuery 筆記 - 使用 select 選取 option 的資料，並同步渲染於網頁","url":"/javascript/20200325/2975558676/","content":"<p><img src=\"https://images.unsplash.com/photo-1583361426589-e04f4a812dd5?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1489&q=80\" alt=\"select\"></p>\n<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>主要紀錄這次工作上遇到的狀況，一開始想得太複雜了，但還好今天有解決，但在網路上找不到合適的筆記與範例，就把這個狀況記錄下來當作筆記。</p>\n<h2 id=\"狀況\"><a href=\"#狀況\" class=\"headerlink\" title=\"狀況\"></a>狀況</h2><p>要使用 <code>select</code> 當中有數個 <code>option</code>，當選擇到該 <code>option</code> 時，對應的資料要做呈現於網頁上，所以會有以下資訊：</p>\n<ul>\n<li><code>select</code>，<code>option</code> 標籤。</li>\n<li>要呈現的資料。</li>\n<li>使用 jQuery 控制，所以會使用 <code>change</code> 事件。</li>\n</ul>\n<h2 id=\"解法-1\"><a href=\"#解法-1\" class=\"headerlink\" title=\"解法 1\"></a>解法 1</h2><p>我第一個想法是使用 <code>select</code> + <code>option</code> 來製作下拉選單，另外資料我是使用在選單下方呈現，所以程式碼會長這樣。</p>\n<h3 id=\"HTML\"><a href=\"#HTML\" class=\"headerlink\" title=\"HTML\"></a>HTML</h3><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"wrap\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">name</span>=<span class=\"string\">\"s01\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"s01\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"0\"</span>&gt;</span>--請選擇--<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"1\"</span>&gt;</span>1<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"2\"</span>&gt;</span>2<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"show\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"show01\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">img</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">src</span>=<span class=\"string\">\"https://images.unsplash.com/photo-1552728089-57bdde30beb3?ixlib=rb-1.2.1&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;auto=format&amp;fit=crop&amp;w=667&amp;q=80\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">alt</span>=<span class=\"string\">\"\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"show02\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">        一定會天氣，書記出來天空並不據說破解一對只是，註冊時間三星檢驗事故正確實用是個激情之後我家植物一半一下子，整理大聲過去通過回事一句危機調查理想股份有限公司，中港路實驗審核暴力網頁課程，圖文之下先進教育否則，注意蔬菜信用，日月潭提供打擊奇蹟其他衣服能夠，請。</span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>這邊都算簡單，重點來了，我該怎麼讓資料在還沒選取到的時候先不要顯示呢?<br>我第一時間想到的是用 <code>display:none;</code>，結果後來就寫不下去了，後來受不了，趕緊請教資深工程師，很快速的點醒我的思路，原來是我想得太複雜，卻忘記了 <strong>JS 只能一次做一件事情的特性</strong>。</p>\n<p>很重要所以說三次：</p>\n<blockquote>\n<ul>\n<li>JS 只能一次做一件事情！</li>\n<li>JS 只能一次做一件事情！</li>\n<li>JS 只能一次做一件事情！</li>\n</ul>\n</blockquote>\n<h3 id=\"JavaScript\"><a href=\"#JavaScript\" class=\"headerlink\" title=\"JavaScript\"></a>JavaScript</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">$(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">//一開始所有資料都隱藏</span></span><br><span class=\"line\">  $(<span class=\"string\">\".show01\"</span>).hide(); <span class=\"comment\">//第一個資料隱藏</span></span><br><span class=\"line\">  $(<span class=\"string\">\".show02\"</span>).hide(); <span class=\"comment\">//第二個資料隱藏</span></span><br><span class=\"line\">  $(<span class=\"string\">\"#s01\"</span>).change(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">val</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//因為是 select 所以綁定 change 事件</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> ($(<span class=\"string\">\"#s01\"</span>).val() === <span class=\"string\">\"1\"</span>) &#123;</span><br><span class=\"line\">      <span class=\"comment\">//當 select 中 option 的值等於 1 時</span></span><br><span class=\"line\">      $(<span class=\"string\">\".show01\"</span>).show(); <span class=\"comment\">//第一個資料顯示</span></span><br><span class=\"line\">      $(<span class=\"string\">\".show02\"</span>).hide(); <span class=\"comment\">//第二個資料隱藏</span></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> ($(<span class=\"string\">\"#s01\"</span>).val() === <span class=\"string\">\"2\"</span>) &#123;</span><br><span class=\"line\">      <span class=\"comment\">//當 select 中 option 的值等於 2 時</span></span><br><span class=\"line\">      $(<span class=\"string\">\".show02\"</span>).show(); <span class=\"comment\">//第二個資料顯示</span></span><br><span class=\"line\">      $(<span class=\"string\">\".show01\"</span>).hide(); <span class=\"comment\">//第一個資料隱藏</span></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">//否則兩筆都隱藏</span></span><br><span class=\"line\">      $(<span class=\"string\">\".show01\"</span>).hide();</span><br><span class=\"line\">      $(<span class=\"string\">\".show02\"</span>).hide();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>附上 codepen: <a href=\"https://codepen.io/hnzxewqw/pen/ZEGmEVW\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/ZEGmEVW</a></p>\n<h2 id=\"解法-2\"><a href=\"#解法-2\" class=\"headerlink\" title=\"解法 2\"></a>解法 2</h2><p>透過 CSS 新增 <code>.active</code>，再透過 jQuery 來動態控制 CSS，並且把 <code>if</code> 判斷是改成 <code>switch</code>，因為這樣在效能上可以提高！</p>\n<p>HTML 不變， CSS 更動成下方所示：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.show01</span>,</span><br><span class=\"line\"><span class=\"selector-class\">.show02</span> &#123;</span><br><span class=\"line\">  display: none; //預設不顯示。</span><br><span class=\"line\">  &amp;<span class=\"selector-class\">.active</span> &#123;</span><br><span class=\"line\">    display: block; //動態新增 .active 用 jQuery 控制顯示出來。</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>因為透過 <code>if</code>、<code>else if</code> 判斷式很吃效能，目前範例只有兩個，倘若有 20 筆，可能會寫到崩潰，所以這邊也學到，資料少可以用 <code>if</code>，但資料多要使用 <code>switch</code>，這要具備的思維跟觀念！</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">$(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  $(<span class=\"string\">\"#s01\"</span>).change(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">switch</span> (</span><br><span class=\"line\">      $(<span class=\"keyword\">this</span>).val() <span class=\"comment\">//指到 select 自己的選項。</span></span><br><span class=\"line\">    ) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">case</span> <span class=\"string\">\"0\"</span>: <span class=\"comment\">// 當選到 value 是 0 的時候，移除兩個 class。</span></span><br><span class=\"line\">        $(<span class=\"string\">\".show01\"</span>).removeClass(<span class=\"string\">\"active\"</span>);</span><br><span class=\"line\">        $(<span class=\"string\">\".show02\"</span>).removeClass(<span class=\"string\">\"active\"</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      <span class=\"keyword\">case</span> <span class=\"string\">\"1\"</span>: <span class=\"comment\">// 當選到 value 是 1 的時候，新增 .show01，移除 .show02。</span></span><br><span class=\"line\">        $(<span class=\"string\">\".show01\"</span>).addClass(<span class=\"string\">\"active\"</span>);</span><br><span class=\"line\">        $(<span class=\"string\">\".show02\"</span>).removeClass(<span class=\"string\">\"active\"</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      <span class=\"keyword\">case</span> <span class=\"string\">\"2\"</span>: <span class=\"comment\">// 當選到 value 是 2 的時候，新增 .show02，移除 .show01。</span></span><br><span class=\"line\">        $(<span class=\"string\">\".show02\"</span>).addClass(<span class=\"string\">\"active\"</span>);</span><br><span class=\"line\">        $(<span class=\"string\">\".show01\"</span>).removeClass(<span class=\"string\">\"active\"</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      <span class=\"keyword\">default</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>當資料讀取完，就把所有的結果都跑完了，很棒的方法呢!!</p>\n<h4 id=\"學長補充說明：\"><a href=\"#學長補充說明：\" class=\"headerlink\" title=\"學長補充說明：\"></a>學長補充說明：</h4><ul>\n<li><p>第一個是這種 <code>show</code> &amp; <code>hide</code> 可以用 CSS 處理就不要用 JS，例如在 <code>.show01</code> &amp; <code>.show02</code> CSS 可以先 <code>display: none;</code> 再設定一個 <code>active</code><br>class 處理 <code>display: block;</code> JS 的部分只要根據條件 <code>addClass</code> or <code>removeClass</code> 即可。這樣的好處是 browser 渲染會比較有效率，而且 jQuery 的 <code>show</code> &amp; <code>hide</code> 是直接寫 inline style 在 HTML tag 上面，權重有點過高。</p>\n</li>\n<li><p>第二是 JS 的 <code>if else</code> 可以嘗試用 <code>switch</code> 判斷會比較易讀一點。現在因為 <code>option</code> 只有兩個，到時候如果 <code>option</code> <strong>一多例如有 20 個，用 <code>if else</code> 會寫到脫窗，而且難以維護</strong>，最後是善用 <code>$(this)</code>。因為 change event 已經綁定 <code>$(&quot;#s01&quot;)</code> 了，所以 function 內要 target <code>$(&quot;#s01&quot;)</code>的話用<code>$(this)</code> 即可，這樣寫比較不容易出現不可預期的錯誤。</p>\n</li>\n</ul>\n<p>codepen: <a href=\"https://codepen.io/hnzxewqw/pen/YzXRerX\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/YzXRerX</a></p>\n","categories":["JavaScript"],"tags":["JavaScript","jQuery"]},{"title":"JS 筆記 - Array 陣列 的基本認識","url":"/javascript/20200323/233651811/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/JavaScript%20note-01.jpg?alt=media&token=7bee0261-72ac-4de4-9f5a-f39d58735b7d\" alt=\"JavaScript Note\"></p>\n<p>進入一個新的名稱，陣列 (Array) 與物件 (Object)，看到新名稱就心慌慌，但搞清楚後就有點豁然開朗，來記錄目前所學的這兩個新語法。</p>\n<h2 id=\"Array-陣列\"><a href=\"#Array-陣列\" class=\"headerlink\" title=\"Array 陣列\"></a>Array 陣列</h2><blockquote>\n<p>Array 原本的英文意思是數列，有興趣的可以去查字典或是 Google 看看。透過英文原本的意思，再回到程式來看，會比較知道為什麼要取這樣的名字，其實沿用原本英文的意義，這樣就會好懂些！</p>\n</blockquote>\n<blockquote>\n<p>陣列內可以是<strong>原始的資料類型</strong>、<strong>其他陣列</strong>、<strong>函式</strong>等等。 要注意的是，陣列是個<strong>有順序性的集合</strong>，且只能透過 <code>[]</code> 來存取。</p>\n</blockquote>\n<h3 id=\"一切從變數開始\"><a href=\"#一切從變數開始\" class=\"headerlink\" title=\"一切從變數開始\"></a>一切從變數開始</h3><p>JavaScript 的世界，是從<strong>變數</strong>開始，然後用 <code>console.log</code> 做驗證。所以在陣列的觀念中也是從變數延伸，但如果變數很多的時候，不可能把所有的變數都一股腦丟給對方，這樣收到一堆變數會很崩潰。所以陣列的出現就是將<strong>相同的變數</strong>集合成一個數列，於是陣列就這樣出現了，透過英文的意思來聯想會比較好記!。</p>\n<hr>\n<p>複習一下變數的寫法是，用 「var」 宣告變數，自定義「變數名稱」，給予變數的「值」，如下所示：</p>\n<p><code>var man = &quot;menName&quot;;</code></p>\n<p>但工作上不可能只有一排變數，如果以家庭為例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> father = <span class=\"string\">\"Tom\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> mother = <span class=\"string\">\"Mary\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> son = <span class=\"string\">\"John\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> daughter = <span class=\"string\">\"Linda\"</span>;</span><br></pre></td></tr></table></figure>\n\n<p>如上就有四個變數，但如果<strong>變數項目增加，但內容不同</strong>該怎麼辦? 像是有 4 張椅子，有紅色，有藍色，就會變下方這樣：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> father = <span class=\"string\">\"Tom\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> mother = <span class=\"string\">\"Mary\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> son = <span class=\"string\">\"John\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> daughter = <span class=\"string\">\"Linda\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> chair = <span class=\"number\">4</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> chair1 = <span class=\"string\">\"red\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> chair2 = <span class=\"string\">\"blue\"</span>;</span><br></pre></td></tr></table></figure>\n\n<p>這樣程式碼就變多了，如果要套很多資料，也不好撰寫，可能要寫好幾次，這時候就需要陣列。</p>\n<hr>\n<h3 id=\"陣列的寫法\"><a href=\"#陣列的寫法\" class=\"headerlink\" title=\"陣列的寫法\"></a>陣列的寫法</h3><p>一樣是用變數宣告，<strong>自定義</strong>陣列名稱，但陣列要用<strong>中括號</strong> <code>[]</code> 呈現，結束要用<strong>分號</strong> <code>;</code> 收尾，寫法如下：</p>\n<p><code>var array = [&quot;a&quot;];</code></p>\n<p>所以椅子有四張，有紅色，有藍色可以這樣寫成陣列，有<strong>相同的名稱</strong>，有<strong>不同的參數</strong>，要用<strong>逗號</strong> <code>,</code> 分開，呈現如下：</p>\n<p><code>var chair =[&quot;red&quot; , &quot;blue&quot;];</code></p>\n<hr>\n<h3 id=\"陣列的排序\"><a href=\"#陣列的排序\" class=\"headerlink\" title=\"陣列的排序\"></a>陣列的排序</h3><p>一般排序的邏輯會從 1 開始，但陣列的世界是從 0 開始，所以今天如果家裡有四個地方要增加桌子，就要增加四個變數，但這樣太多行了，如果使用陣列，並且知道哪個房間有幾張桌子，可以這樣寫，目前實務上也比較常見這樣的寫法，要抓取陣列資料會這樣寫：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> desk = [<span class=\"number\">4</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>];</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(desk[<span class=\"number\">0</span>]); <span class=\"comment\">// 因為排序第一是 4，所以結果會出現 4</span></span><br></pre></td></tr></table></figure>\n\n<p>以此類推，如果在 console 裡面的中括號，寫其他順序，會出現相對應的結果。</p>\n<p>也可以這樣寫：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> desk = [<span class=\"number\">4</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> desk1 = desk[<span class=\"number\">0</span>];</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(desk[<span class=\"number\">0</span>]); <span class=\"comment\">// 結果會出現 4</span></span><br></pre></td></tr></table></figure>\n\n<hr>\n<h3 id=\"length-長度\"><a href=\"#length-長度\" class=\"headerlink\" title=\"length 長度\"></a>length 長度</h3><p>要查陣列的資料長度可以使用 length 這個語法，英文原意也是長度的意思。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> desk = [<span class=\"number\">4</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> desk1 = desk[<span class=\"number\">0</span>];</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(desk[<span class=\"number\">0</span>]); <span class=\"comment\">// 結果會出現 4</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(desk.length); <span class=\"comment\">//結果會出現 4，代表有陣列的長度有四個</span></span><br></pre></td></tr></table></figure>\n\n<hr>\n<h3 id=\"push-增加陣列的語法\"><a href=\"#push-增加陣列的語法\" class=\"headerlink\" title=\".push 增加陣列的語法\"></a>.push 增加陣列的語法</h3><p>若想要在陣列外新增元素時，可以透過 <code>number.push()</code> 這個語法增加，_透過 <code>.</code> 代表要增加後面的屬性_：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> number = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>];</span><br><span class=\"line\">number.length; <span class=\"comment\">// 會顯示 3，指有三個陣列資料</span></span><br><span class=\"line\"></span><br><span class=\"line\">number.push(<span class=\"number\">4</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(number); <span class=\"comment\">// [1, 2, 3, 4] 新增第四個陣列資料</span></span><br></pre></td></tr></table></figure>\n\n<hr>\n<h3 id=\"splice-刪除陣列語法\"><a href=\"#splice-刪除陣列語法\" class=\"headerlink\" title=\".splice 刪除陣列語法\"></a>.splice 刪除陣列語法</h3><p>有增加就有刪除，可以透過 number.splice(起始位置,資料數量) 這個語法刪除:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> number = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>];</span><br><span class=\"line\">number.length; <span class=\"comment\">// 會顯示 3，指有三個陣列資料</span></span><br><span class=\"line\"></span><br><span class=\"line\">number.splice(<span class=\"number\">0</span>, <span class=\"number\">2</span>); <span class=\"comment\">//從第一筆資料刪除，刪除兩筆資料</span></span><br><span class=\"line\">number; <span class=\"comment\">// [3]</span></span><br></pre></td></tr></table></figure>\n\n<p>參考資料 <a href=\"https://ithelp.ithome.com.tw/articles/10190962\" target=\"_blank\" rel=\"noopener\">https://ithelp.ithome.com.tw/articles/10190962</a></p>\n","categories":["JavaScript"],"tags":["JavaScript"]},{"title":"Vue 筆記 - vue 的生命週期","url":"/vue-js/20200318/1480837360/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/vue_lifecycle_hooks.png?alt=media&token=9cde8325-aa24-4714-994a-f088b67d102c\" alt=\"vue lifecycle hooks\"></p>\n<h2 id=\"何謂生命週期\"><a href=\"#何謂生命週期\" class=\"headerlink\" title=\"何謂生命週期?\"></a>何謂生命週期?</h2><blockquote>\n<p><strong>官方文件說明：</strong></p>\n<p>每個 Vue 實例在被創建時都要經過一系列的初始化過程——例如，需要設置數據監聽、編譯模板、將實例掛載到 DOM 並在數據變化時更新 DOM 等。同時在這個過程中也會運行一些叫做生命週期鉤子(hook)的<strong>函數</strong>，這給了用戶在不同階段添加自己的代碼的機會。</p>\n</blockquote>\n<p>當宣告一個 vue 實體後，會開始進入生命週期，下方說明圖可以得知分成幾個部分：</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/lifecycle.png?alt=media&token=868328e3-92d1-4323-a80f-929beb4e2a9f\" alt=\"vue 官方生命週期圖片\"></p>\n<ul>\n<li><p><strong>beforecreate</strong><br>元件實體剛被建立，屬性計算之前。</p>\n</li>\n<li><p><strong>created</strong><br>元件實體已經建立，屬性也綁定了，但 DOM 還沒有生成。</p>\n</li>\n<li><p><strong>beforeMount</strong><br>模板編譯 (template)或掛載至 HTML 之前。</p>\n</li>\n<li><p><strong>mounted</strong><br>模板編譯 (template)或掛載至 HTML 之後。</p>\n</li>\n<li><p><strong>beforeUpdate</strong><br>元件 (element) 被更新前。</p>\n</li>\n<li><p><strong>updated</strong><br>元件 (element) 被更新後。</p>\n</li>\n<li><p><strong>activated</strong></p>\n</li>\n<li><p><em>keep-alived*</em> 用，元件被<strong>啟動</strong>時呼叫。</p>\n</li>\n<li><p><strong>deactivated</strong></p>\n</li>\n<li><p><em>keep-alived*</em> 用，元件被<strong>移除</strong>時呼叫。</p>\n</li>\n<li><p><strong>beforeDistroy</strong><br>元件被銷毀前呼叫。</p>\n</li>\n<li><p><strong>destroyed</strong><br>元件被銷毀後呼叫。</p>\n</li>\n</ul>\n<blockquote>\n<p>beforeDistroy，destroyed 較少使用。</p>\n</blockquote>\n<p>以上它們的資料型態全都是 function。</p>\n<h2 id=\"常用的生命週期狀態\"><a href=\"#常用的生命週期狀態\" class=\"headerlink\" title=\"常用的生命週期狀態\"></a>常用的生命週期狀態</h2><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">\tel: <span class=\"string\">'#app'</span>,</span><br><span class=\"line\">\tdata: &#123;</span><br><span class=\"line\">  <span class=\"comment\">//資料選項</span></span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\tbeforeCreate() &#123;</span><br><span class=\"line\">\t<span class=\"comment\">//實體初始化。</span></span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\tcreated() &#123;</span><br><span class=\"line\">\t<span class=\"comment\">//實體建立完成。資料 $data 已可取得，但 $el 屬性還未被建立。</span></span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\tbeforeMount() &#123;</span><br><span class=\"line\">\t<span class=\"comment\">//執行元素掛載之前。</span></span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\tmounted() &#123;</span><br><span class=\"line\">\t<span class=\"comment\">//元素已掛載， $el 被建立。</span></span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\tbeforeUpdate() &#123;</span><br><span class=\"line\">\t<span class=\"comment\">//當資料變化時被呼叫，還不會描繪 View。</span></span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\tupdated() &#123;</span><br><span class=\"line\">\t<span class=\"comment\">//DOM 的更新已經完成，View 被顯示在畫面上。</span></span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<p>參考資料:</p>\n<p><a href=\"https://cn.vuejs.org/v2/guide/instance.html#%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA-Vue-%E5%AE%9E%E4%BE%8B\" target=\"_blank\" rel=\"noopener\">vue 官網</a></p>\n<p><a href=\"http://blog.tonycube.com/2017/04/vuejs-8-lifecycle.html\" target=\"_blank\" rel=\"noopener\">Vue.js (8) - Vue 實體與生命週期</a></p>\n<p><a href=\"https://medium.com/pierceshih/vue-js-%E5%AD%B8%E7%BF%92%E7%AD%86%E8%A8%98-day14-vue%E7%94%9F%E5%91%BD%E9%80%B1%E6%9C%9F-65bc934dfd47\" target=\"_blank\" rel=\"noopener\">「Vue.js 學習筆記 Day14」- Vue生命週期</a></p>\n","categories":["vue.js"],"tags":["vue.js"]},{"title":"Vue 筆記 - Vue 的實體與特性","url":"/vue-js/20200318/2845412352/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/vue%20cover.png?alt=media&token=5f8b5aa0-eb3e-4d21-a715-07c5442dafbc\" alt=\"vue.js\"></p>\n<h2 id=\"Vue-的實體\"><a href=\"#Vue-的實體\" class=\"headerlink\" title=\"Vue 的實體\"></a>Vue 的實體</h2><p>Vue 的實體是透過 new 這個關鍵字來建立的。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> app = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  <span class=\"comment\">//實體屬性</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Vue-的起手式\"><a href=\"#Vue-的起手式\" class=\"headerlink\" title=\"Vue 的起手式\"></a>Vue 的起手式</h2><p>在 body 中的第一個 <code>&lt;div&gt;</code> 標籤中給一個 <code>id</code>，並且在實體中，先寫入一個 el (element 的意思)，會與 HTML 中 <code>id</code> 標籤名稱相同，下方給一個 <code>data</code> 的物件。</p>\n<blockquote>\n<p>注意：在實體屬性中，是物件的表示方式。</p>\n</blockquote>\n<p>所以起手式如下：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;div id=\"app\"&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  var vm = new Vue(&#123;</span><br><span class=\"line\"><span class=\"function\">    el:'#<span class=\"title\">app</span>',</span></span><br><span class=\"line\"><span class=\"function\">    <span class=\"title\">data</span>: &#123;</span></span><br><span class=\"line\"><span class=\"function\">      //資料內容</span></span><br><span class=\"line\"><span class=\"function\">    &#125;,</span></span><br><span class=\"line\"><span class=\"function\">  &#125;)</span></span><br><span class=\"line\"><span class=\"function\">&lt;/<span class=\"title\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Vue-的實體基本屬性\"><a href=\"#Vue-的實體基本屬性\" class=\"headerlink\" title=\"Vue 的實體基本屬性\"></a>Vue 的實體基本屬性</h2><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  el: <span class=\"string\">\"#app\"</span>, <span class=\"comment\">//用來掛載 Vue 實體元素</span></span><br><span class=\"line\">  data: &#123; &#125;, <span class=\"comment\">//要綁定的資料</span></span><br><span class=\"line\">  props: &#123; &#125;, <span class=\"comment\">//接收外部資料的屬性</span></span><br><span class=\"line\">  methods: &#123; &#125;, <span class=\"comment\">//定義 vue 實體內使用的函式</span></span><br><span class=\"line\">  watch: &#123; &#125;, <span class=\"comment\">//觀察實體內資料變動</span></span><br><span class=\"line\">  computed: &#123; &#125;, <span class=\"comment\">//自動計算的屬性</span></span><br><span class=\"line\">  template: <span class=\"string\">\"...\"</span>, <span class=\"comment\">//提供 Vue 變更後的樣板</span></span><br><span class=\"line\">  component: &#123; &#125; <span class=\"comment\">//定義子元素</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"el-與-data-的詳述\"><a href=\"#el-與-data-的詳述\" class=\"headerlink\" title=\"el 與 data 的詳述\"></a>el 與 data 的詳述</h2><h3 id=\"el\"><a href=\"#el\" class=\"headerlink\" title=\"el\"></a>el</h3><p>用來把 vue 實體與網頁 DOM 元素做綁定的關鍵實體，當 vue 實體<strong>沒有 <code>el</code> 屬性</strong>時，就只能透過 <strong>vm.$mount()</strong>手動編譯。</p>\n<h3 id=\"data\"><a href=\"#data\" class=\"headerlink\" title=\"data\"></a>data</h3><p>用來存放與實體綁定的資料，當實體建立後，可能過 <code>vm.\\$</code>data`` 取得 <code>data</code> 內的資料，實體內則是用 <code>this.xxx</code> 取得。在子元件時，需要用 <code>function()</code> 的形式回傳。</p>\n<blockquote>\n<p>data 內的屬性開頭名稱不可以為 <code>$</code> 或 <code>_</code>。</p>\n</blockquote>\n<h2 id=\"實際操作\"><a href=\"#實際操作\" class=\"headerlink\" title=\"實際操作\"></a>實際操作</h2><p>今天透過 Vue 建立一個 hello Vue!</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">v-model</span>=<span class=\"string\">\"message\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">      el: <span class=\"string\">'#app'</span>,</span><br><span class=\"line\">      data: &#123;</span><br><span class=\"line\">        message: <span class=\"string\">'hello! Vue!'</span>,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code></code> 概念有點像 ES6，變數中給予什麼內容，透過大括號會呈現在網頁上。</li>\n<li>使用 <code>v-model</code> 建立資料，對應到 <code>data</code> 的 <code>message</code> 的內容，就會渲染在網頁上。</li>\n</ul>\n<p>因為 <code>input</code> 跟 <code>p</code> 段落都是使用相同的資料，所以在 <code>input</code> 輸入新的資料， <code>p</code> 段落會跟著更新。</p>\n<p><a href=\"https://codepen.io/hnzxewqw/pen/gOpKRwV\" target=\"_blank\" rel=\"noopener\">CodePen</a></p>\n","categories":["vue.js"],"tags":["vue.js"]},{"title":"JS 筆記 - ES6 功能：在 JavaScript 中快速組字串","url":"/javascript/20200317/144503038/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/js-ES6.png?alt=media&token=0bf94bee-c7cd-4cc0-b619-45e5bf71d07b\" alt=\"ES6\"></p>\n<h2 id=\"條件\"><a href=\"#條件\" class=\"headerlink\" title=\"條件\"></a>條件</h2><blockquote>\n<ul>\n<li>日期：2020.3.17 (官網不定期更新)</li>\n<li>編輯器：Visual Studio Code</li>\n<li>語法：ES6</li>\n</ul>\n</blockquote>\n<p>會註記上日期原因是 Visual Studio Code 很多功能會一直更新。</p>\n<blockquote>\n<p>官網說明：<a href=\"https://code.visualstudio.com/docs/editor/emmet。\" target=\"_blank\" rel=\"noopener\">https://code.visualstudio.com/docs/editor/emmet。</a></p>\n</blockquote>\n<h2 id=\"修改編輯器內的設定\"><a href=\"#修改編輯器內的設定\" class=\"headerlink\" title=\"修改編輯器內的設定\"></a>修改編輯器內的設定</h2><p>選擇到「設定」，並找到「延伸模組」中的 Emmet，並複製這一段程式碼，並且將其選項「打勾」。</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">\"emmet.triggerExpansionOnTab\": true</span><br></pre></td></tr></table></figure>\n\n<p>如下圖：</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/vscodeSetting.png?alt=media&token=c8e2164a-9aff-4da0-8c95-57b9edb6b821\" alt=\"Emmet 設定\"></p>\n<p>找到 <strong>Include Languages</strong> 選項，再選擇 <strong>在 <em>setting.json</em> 內編輯</strong>。<br>就會看到剛剛打勾的選項也在其中，並把這個片段的程式碼貼到原本程式碼中的最下方。</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">\"emmet.includeLanguages\": &#123;</span><br><span class=\"line\">    \"javascript\": \"javascriptreact\",</span><br><span class=\"line\">    \"vue-html\": \"html\",</span><br><span class=\"line\">    \"razor\": \"html\",</span><br><span class=\"line\">    \"plaintext\": \"pug\"</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>這樣就完成可以在 js 中組 HTML 字串囉!!如下圖: </p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/vscodeSetting03.png?alt=media&token=9e188f2a-7311-4dd5-b3d7-689d4d3e3173\" alt=\"完成設定\"></p>\n<h2 id=\"用-JS-來組字串吧\"><a href=\"#用-JS-來組字串吧\" class=\"headerlink\" title=\"用 JS 來組字串吧!\"></a>用 JS 來組字串吧!</h2><p>會用 JS 組字串的情境，大概像是<strong>口罩地圖</strong>之類的網頁，因為有後端資料庫需要呈現一些內容，要透過 AJAX 取得資料後，渲染在網頁上，那如果透過手動打字串，會非常的繁雜且容易出錯。</p>\n<p>下方有一個清單，裡面沒有任何資料：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"list\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"js/all.js\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>如果要透過 JS 渲染在網頁上，可以這樣寫：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> list = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'.list'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> imgUrl = <span class=\"string\">'https://images.unsplash.com/photo-1558980664-3a031cf67ea8?ixlib=rb-1.2.1&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;auto=format&amp;fit=crop&amp;w=1950&amp;q=80'</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> title = <span class=\"string\">'this is Title'</span>;</span><br></pre></td></tr></table></figure>\n<p>先宣告所要使用的變數，那 imgUrl 可能會是 AJAX 資料。</p>\n<h3 id=\"如何組字串\"><a href=\"#如何組字串\" class=\"headerlink\" title=\"如何組字串\"></a>如何組字串</h3><p>既然我們已經使用了插件，在渲染前就可以依照 HTML 的方式輸入的<strong>結構</strong>，</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">li&gt;h2+img</span><br></pre></td></tr></table></figure>\n<p>在按下 <code>tab</code> 鍵，就會自動展開，</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">list.innerHTML=<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">  <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span></span><br><span class=\"line\">  &lt;img src=\"\" alt=\"\"/&gt;</span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>真是太神奇了</p>\n</blockquote>\n<p>再來加上 ES6 的語法 <code>${變數名稱}</code>，套入上方變數資料，就會變成這樣:</p>\n<ul>\n<li>${imgUrl} //帶入圖片資料</li>\n<li>${title} //帶入 title 資料</li>\n</ul>\n<blockquote>\n<p>用法就是在前面加一個 <code>$</code> 字號，再加上一個<strong>大括弧</strong>，裡面放<strong>變數名稱</strong>。<br>最後兩邊再加上<a href=\"https://zh.wikipedia.org/zh-tw/%E9%87%8D%E9%9F%B3%E7%AC%A6\" target=\"_blank\" rel=\"noopener\">重音符</a>(與鍵盤 「~」 同一顆按鍵)，就完成資料的輸入了。</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">list.innerHTML=<span class=\"string\">`&lt;li&gt;</span></span><br><span class=\"line\"><span class=\"string\">  &lt;h2&gt;<span class=\"subst\">$&#123;title&#125;</span>&lt;/h2&gt;</span></span><br><span class=\"line\"><span class=\"string\">  &lt;img src=\"<span class=\"subst\">$&#123;imgUrl&#125;</span>\" alt=\"\"/&gt;</span></span><br><span class=\"line\"><span class=\"string\">&lt;/li&gt;`</span></span><br></pre></td></tr></table></figure>\n\n<p>Codepen <a href=\"https://codepen.io/hnzxewqw/pen/BaNxeJE\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/BaNxeJE</a></p>\n<h2 id=\"心得\"><a href=\"#心得\" class=\"headerlink\" title=\"心得\"></a>心得</h2><p>學習到這個組字串的語法真的太棒了，先前因為手動組字串，中間的加號，弄得會很混亂，而且速度好慢，重點還容易打錯!!</p>\n","categories":["JavaScript"],"tags":["JavaScript","ES6"]},{"title":"Vue 筆記 - Vue 的基本認識與介紹","url":"/vue-js/20200316/3744633474/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/vue%20cover.png?alt=media&token=5f8b5aa0-eb3e-4d21-a715-07c5442dafbc\" alt=\"vue.js\"></p>\n<h2 id=\"Vue-的介紹\"><a href=\"#Vue-的介紹\" class=\"headerlink\" title=\"Vue 的介紹\"></a>Vue 的介紹</h2><p>vue 音同 「view」，是一個簡單輕量的 JS 漸進式框架，也可以與其他前端框架的函式庫並存共用，有趣的是原本 vue 不是以框架為前提的建構，原本是 library 出發，但後面就慢慢變成了 framework 了。Vue 不支持 IE8 及以下版本，因為 Vue 使用了 IE8 無法模擬的 ECMAScript 5 特性。但它支持所有兼容 ECMAScript 5 的瀏覽器。</p>\n<h3 id=\"vue-DevTools\"><a href=\"#vue-DevTools\" class=\"headerlink\" title=\"vue DevTools\"></a>vue DevTools</h3><p>推薦一個 Chrome 插件，在你的瀏覽器上安裝 <a href=\"https://chrome.google.com/webstore/detail/vuejs-devtools/nhdogjmejiglipccpnnnanhbledajbpd?hl=zh-tw\" target=\"_blank\" rel=\"noopener\">Vue Devtools</a>。可以透過這個工具來檢查 vue 開發時遇到的錯誤。</p>\n<h2 id=\"關注點分離\"><a href=\"#關注點分離\" class=\"headerlink\" title=\"關注點分離\"></a>關注點分離</h2><p>開發者只要專注在<strong>畫面元素</strong>，以及對應的<strong>資料變化</strong>即可， vue 是用資料來控制的畫面的，與原本學習 JavaScript 的概念有點不同。是以操作物件模型為基礎的開發模式，直接描述<strong>狀態</strong>與 <strong>DOM 元素</strong>的對應關係，改變的是<strong>資料</strong>，並不是直接操作 DOM 元素。</p>\n<h2 id=\"漸進式框架\"><a href=\"#漸進式框架\" class=\"headerlink\" title=\"漸進式框架\"></a>漸進式框架</h2><p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/vueAll.png?alt=media&token=e8437854-f74d-46b2-b759-5de585a4855a\" alt=\"vue 漸進式框架\"></p>\n<p>後續還有 vue-router、vuex、Vue-Cli…等等。</p>\n<h2 id=\"採用-MVVM-模式\"><a href=\"#採用-MVVM-模式\" class=\"headerlink\" title=\"採用 MVVM 模式\"></a>採用 MVVM 模式</h2><p>什麼是 MVVM?</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/vue-MVVM.png?alt=media&token=3bbf1341-6a9d-4bf5-bc3a-39be4c310883\" alt=\"MVVM\"></p>\n<p>也就是前面提到的關注點分離的概念，Model, View-Model, View，透過修改資料的內容，便立即反映到畫面上，只要透過 vue 的實體與 HTML 的實體連結，就可以輕易地控制網頁元素。</p>\n<h2 id=\"系統元件簡介\"><a href=\"#系統元件簡介\" class=\"headerlink\" title=\"系統元件簡介\"></a>系統元件簡介</h2><p>系統元件是 Vue 的另一個重要概念，因為它是一種抽象，允許我們使用小型、獨立和通常可複用的組件構建大型應用，幾乎任意類型的應用界面都可以抽象為一個組件樹：</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/vue-%E7%B3%BB%E7%B5%B1%E5%85%83%E4%BB%B6.png?alt=media&token=16a76656-6caa-4fc1-ab53-8170037e615d\" alt=\"系統元件\"></p>\n<p>在一個大型應用中，有必要將整個應用程序劃分為組件，以使開發時更容易管理。</p>\n<h2 id=\"版本間的差異\"><a href=\"#版本間的差異\" class=\"headerlink\" title=\"版本間的差異\"></a>版本間的差異</h2><p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/vue%20soft.png?alt=media&token=b1a3a480-e1cf-4bd7-8a64-2bdad58cc0c7\" alt=\"版本差異\"></p>\n<p>在 <a href=\"https://cn.vuejs.org/v2/guide/installation.html\" target=\"_blank\" rel=\"noopener\">vue 官方網站</a>會看到兩種版本可以下載，一個是<strong>開發版本</strong>，一個是<strong>產品版本</strong>，通常會兩個都下載，但在開發時會使用開發的版本，等開發完畢變成產品要上線前，會更換成產品版本，原因是產品版本是經過壓縮後的大小。</p>\n<h2 id=\"透過-CDN-加入專案\"><a href=\"#透過-CDN-加入專案\" class=\"headerlink\" title=\"透過 CDN 加入專案\"></a>透過 CDN 加入專案</h2><p>對於<strong>製作原型</strong>或<strong>學習</strong>，你可以這樣使用最新版本：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;script src=\"https://cdn.jsdelivr.<span class=\"built_in\">net</span>/npm/vue/dist/vue.js\"&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<p>對於生產環境，我們推薦鏈接到一個明確的版本號和構建文件，以避免新版本造成的不可預期的破壞：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;script src=\"https://cdn.jsdelivr.<span class=\"built_in\">net</span>/npm/vue@<span class=\"number\">2</span>.<span class=\"number\">6</span>.<span class=\"number\">11</span>\"&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<p>參考文章 <a href=\"https://cn.vuejs.org/v2/guide/installation.html\" target=\"_blank\" rel=\"noopener\">https://cn.vuejs.org/v2/guide/installation.html</a></p>\n","categories":["vue.js"],"tags":["vue.js"]},{"title":"JS 筆記 - 利用函式 function 寫一個計算題","url":"/javascript/20200316/526717564/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/JavaScript%20note-01.jpg?alt=media&token=7bee0261-72ac-4de4-9f5a-f39d58735b7d\" alt=\"JavaScript Note\"></p>\n<p>紀錄用函式 function 寫一個計算題，透過練習題與自己寫幾次程式碼，就比較了解 <strong>var</strong>、<strong>function</strong>、<strong>return</strong> 彼此的關係。</p>\n<h3 id=\"目前簡易歸類下面三個概念：\"><a href=\"#目前簡易歸類下面三個概念：\" class=\"headerlink\" title=\"目前簡易歸類下面三個概念：\"></a>目前簡易歸類下面三個概念：</h3><ul>\n<li>JavaScript 裡的變數是基本的元素。</li>\n<li>function 是建立許多要使用的功能，但無法直接執行，需要時再取出來用。</li>\n<li>return 是為了有比較複雜的功能時，可以節省時間，不需要一直反覆打重複的程式碼。<blockquote>\n<p>EX. 買衣服的購物後台如果要買很多品項，甚至還要點選不同尺寸的數量，還有不同的加工，項目一多，如果還要逐步撰寫程式碼，那程式碼就會很長一串，使用 function + return 就可以達到只要功能俱足，利用 return 帶回關鍵數值，就可以快速得到結果。</p>\n</blockquote>\n</li>\n</ul>\n<hr>\n<h2 id=\"用-function-寫個計算題\"><a href=\"#用-function-寫個計算題\" class=\"headerlink\" title=\"用 function 寫個計算題\"></a>用 function 寫個計算題</h2><p>主要練習內容：會使用到 JS 的 <code>textContent</code> 屬性，<code>input</code> 表格裡面的數值是用 <code>id</code> 來控制，並對應到 JS 的內容，到時候就可以因為輸入數字後，點擊 <code>Button</code> 後，就能計算出結果！這次要寫的畫面如下：</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/JS8-calculate.png?alt=media&token=93f803f6-5918-48c1-a5d1-c1857b26dac8\" alt=\"JS 計算題\"></p>\n<h3 id=\"HTML\"><a href=\"#HTML\" class=\"headerlink\" title=\"HTML\"></a>HTML</h3><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>JavaScript 透過表單獲取數值練習<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>漢堡 120 元<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>可樂 60 元<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>我要 <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"hamNumId\"</span>&gt;</span> 個漢堡 + <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"cokeNumId\"</span>&gt;</span> 杯可樂<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">\"button\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"countId\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"計算\"</span>&gt;</span>計算<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>總共是 <span class=\"tag\">&lt;<span class=\"name\">strong</span> <span class=\"attr\">class</span>=<span class=\"string\">\"total\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"totalId\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">strong</span>&gt;</span> 元<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"js/all.js\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"JS-起手式\"><a href=\"#JS-起手式\" class=\"headerlink\" title=\"JS 起手式\"></a>JS 起手式</h2><p>因為今天最終的目的，是要透過 <code>button</code> 按鈕來取得計算數值，所以一開始的程式碼式這一段：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'countId'</span>).onclick = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>說明：透過 <code>getElementById</code> 取得 <code>button</code> 的 <code>id</code>，並且給他一個 <code>onclick</code> 點擊事件，這個事件的功能會包含以下內容 (將其功能的內容寫於其中)。</p>\n<h3 id=\"JavaScript\"><a href=\"#JavaScript\" class=\"headerlink\" title=\"JavaScript\"></a>JavaScript</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'countId'</span>).onclick = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">//button 使用getElementById (後面不用加點，直接套 id 名稱) 加上一個 onclick 事件，並執行 function 內容</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> hamNum = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'hamNumId'</span>).value;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> cokeNum = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'cokeNumId'</span>).value;</span><br><span class=\"line\">  <span class=\"comment\">//命名變數為抓取 input 裡面的數值，所以要用 value</span></span><br><span class=\"line\">  alert(hamNum);</span><br><span class=\"line\">  alert(cokeNum);</span><br><span class=\"line\">  <span class=\"comment\">//使用 alert 做驗證</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ol>\n<li>透過在 <code>input</code> 輸入數值後，再利用 <code>id</code> 抓取其數值，按下 <code>button</code> 時會產生 <code>onclick</code> 事件，這邊先使用 alert。 </li>\n<li>命名變數是透過抓取 <code>id</code> 中的在 <code>input</code> 所得到的值(value)。</li>\n<li>alert 視窗功能做驗證，會彈跳出在 <code>input</code> 輸入的數值。<br>可以玩一下 <a href=\"http://https://codepen.io/hnzxewqw/pen/ExxzraX\" target=\"_blank\" rel=\"noopener\">codepen</a> 看看結果！</li>\n</ol>\n<hr>\n<h2 id=\"typeof-確認屬性\"><a href=\"#typeof-確認屬性\" class=\"headerlink\" title=\"typeof 確認屬性\"></a>typeof 確認屬性</h2><p>在進行計算前，要先確認 input 的值是 string 還是 number，如果要透過 JavaScript 做計算，要先確認輸入的值要是 number，才能正常運算，可以使用下面的方式，確認類型。</p>\n<p>例如現在要確認 hamNum 裡面的值是什麼，就可以這樣確認：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> hamNum = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'hamNumId'</span>).value;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"keyword\">typeof</span>(hamNum)) <span class=\"comment\">//結果會是 string</span></span><br></pre></td></tr></table></figure>\n\n<p>這時如果在 <code>input</code> 輸入 3，<code>console.log</code> 的結果就會變成兩個字串相加，”3” + “3”= 33，但有趣的是，倘若是用相乘，結果竟然會是 “3” * “3” = 9</p>\n<hr>\n<h2 id=\"parseInt-轉換屬性\"><a href=\"#parseInt-轉換屬性\" class=\"headerlink\" title=\"parseInt 轉換屬性\"></a>parseInt 轉換屬性</h2><p>在確認類行為 string 後，要先轉換 <strong>文字變成數字 (string to number)</strong> 的屬性，就可以透過函式來加總。程式碼如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> hamNum = <span class=\"built_in\">parseInt</span>(<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'hamNumId'</span>).value)</span><br></pre></td></tr></table></figure>\n\n<p>將要在 <code>id</code> 所得到的值用 <code>parseInt</code> 語法轉換成數字。</p>\n<hr>\n<p>這時候再把品項的金額用變數做宣告，也將要得到的結果寫在最下方，程式碼如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'countId'</span>).onclick = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//button 使用getElementById (後面不用加點，直接套 id 名稱) 加上一個 onclick 事件，並執行 function 內容</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> hamPrice = <span class=\"number\">50</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> cokePrice = <span class=\"number\">20</span>;</span><br><span class=\"line\">    <span class=\"comment\">//定義變數的內容</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> hamNum = <span class=\"built_in\">parseInt</span>(<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'hamNumId'</span>).value) * hamPrice;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> cokeNum = <span class=\"built_in\">parseInt</span>(<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'cokeNumId'</span>).value) * cokePrice;</span><br><span class=\"line\">    <span class=\"comment\">//命名變數為抓取 input 裡面的數值</span></span><br><span class=\"line\">    <span class=\"comment\">//將要在 id 所得到的值用 parseInt 語法轉換成數字。</span></span><br><span class=\"line\">    <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'totalId'</span>).textContent = hamNum + cokeNum</span><br><span class=\"line\">    <span class=\"comment\">//最終結算的結果</span></span><br></pre></td></tr></table></figure>\n\n<p>可以透過 Codepen 玩玩看! <a href=\"https://codepen.io/hnzxewqw/pen/Yzzbgzm\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/Yzzbgzm</a></p>\n<hr>\n<h2 id=\"return-回傳\"><a href=\"#return-回傳\" class=\"headerlink\" title=\"return 回傳\"></a>return 回傳</h2><p>透過 <code>return</code> 回傳的屬性，可以運算比較複雜的內容，當商品或是後台採購品項較多時，就不用一直打程式碼，前提是參數內的數值要同一個才可以，比如下方例子：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">count</span>(<span class=\"params\">price</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> addTax(price * <span class=\"number\">0.8</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//商品價格要打八折時</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">count</span>(<span class=\"params\">price</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> addTax * <span class=\"number\">1.05</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//當商品要開立發票時</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(count(<span class=\"number\">500</span>);)</span><br><span class=\"line\"><span class=\"comment\">//return 會把 count 的參數 500，套回 function 中，會得到下面結果</span></span><br><span class=\"line\"><span class=\"comment\">// 500 * 0.8</span></span><br><span class=\"line\"><span class=\"comment\">// 500 * 1.05</span></span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"心得\"><a href=\"#心得\" class=\"headerlink\" title=\"心得\"></a>心得</h2><p>這次學習到 JavaScript 新的特性，結合之前所學的，透過 function 建立自己要的功能，在使用不同的語法整理取得自己要的函式，截至目前為止，JS 對我來說是很細緻的給予網頁呈現我想要的行為，並且這個行為會讓使用者更方便，也清楚明瞭好操作！<strong>JS 的語法相對直覺，掌握住一個指令一個動作，不要在 function 建立太複雜的內容。</strong></p>\n","categories":["JavaScript"],"tags":["JavaScript"]},{"title":"JS 筆記 - function 函式 Hoisting 提升觀念","url":"/javascript/20200309/1212075218/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/JavaScript%20note-01.jpg?alt=media&token=7bee0261-72ac-4de4-9f5a-f39d58735b7d\" alt=\"JavaScript Note\"></p>\n<p>瀏覽器在讀取程式碼基本上都是從上到下讀取，在變數的寫法，會是這樣的結果。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(a); <span class=\"comment\">//undefind</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a); <span class=\"comment\">//1</span></span><br></pre></td></tr></table></figure>\n\n<p>上方變數的撰寫跟讀取的結果，會是由上到下讀取，所以在第一行 <code>console.log</code> 因為找不到變數所以結果會是 undefind，第三個 <code>console.log</code> 因為有讀到第二行的變數，所以找到了 a 的值為1。</p>\n<h2 id=\"那-function-呢\"><a href=\"#那-function-呢\" class=\"headerlink\" title=\"那 function 呢?\"></a>那 function 呢?</h2><p>加入一個 function，先看程式碼：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(a); <span class=\"comment\">//undefind</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a); <span class=\"comment\">//1</span></span><br><span class=\"line\"></span><br><span class=\"line\">count();<span class=\"comment\">//會得到什麼?</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">count</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\"> <span class=\"built_in\">console</span>.log(<span class=\"string\">'hello!'</span>); </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>count 結果會是：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">count();<span class=\"comment\">// hello!</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">count</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\"> <span class=\"built_in\">console</span>.log(<span class=\"string\">'hello!'</span>); </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>function 有一個 Hoisting 的向上提升的概念，就是瀏覽器會先把 function 設定為優先讀取，在瀏覽器的讀取順序會變成這樣：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">count</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\"> <span class=\"built_in\">console</span>.log(<span class=\"string\">'hello!'</span>); </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">count();<span class=\"comment\">// hello!</span></span><br></pre></td></tr></table></figure>\n\n<p>故在執行 function 的時候，function 名稱寫在上面或下面是沒有差的，但為了讓自己習慣所有程式碼都遵循由上到下讀取的方式，我還是會寫成剛上方一樣的方式，維持一個習慣寫法，也比較不會讓自己搞混！</p>\n<h2 id=\"補充\"><a href=\"#補充\" class=\"headerlink\" title=\"補充\"></a>補充</h2><p>Hositing 就是將<strong>變數</strong>&amp;<strong>函數</strong>提升到所有程式碼最前面，然後先存進記憶體中，後面在做賦值等動作。由此可知 Hositing 主要跟記憶體有關係，而 Hositing 只是一個觀念。</p>\n<hr>\n<p>文章參考:</p>\n<p><a href=\"https://hsiangfeng.github.io/javascript/20190419/3635730318/\" target=\"_blank\" rel=\"noopener\">https://hsiangfeng.github.io/javascript/20190419/3635730318/</a></p>\n<p><a href=\"https://developer.mozilla.org/zh-TW/docs/Glossary/Hoisting\" target=\"_blank\" rel=\"noopener\">https://developer.mozilla.org/zh-TW/docs/Glossary/Hoisting</a></p>\n","categories":["JavaScript"],"tags":["JavaScript"]},{"title":"JS 筆記 - 函式 function 搭配 return","url":"/javascript/20200302/3851113860/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/JavaScript%20note-01.jpg?alt=media&token=7bee0261-72ac-4de4-9f5a-f39d58735b7d\" alt=\"JavaScript Note\"></p>\n<blockquote>\n<p>函式 function 搭配 return 是一個常用且好用的小技巧。</p>\n</blockquote>\n<hr>\n<h2 id=\"return-回傳\"><a href=\"#return-回傳\" class=\"headerlink\" title=\"return 回傳\"></a>return 回傳</h2><p>透過 <code>return</code> 回傳值的屬性，可以運算其的內容，如下方範例，</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">add</span>(<span class=\"params\">n1, n2</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> n1 + n2;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(add(<span class=\"number\">1</span>, <span class=\"number\">2</span>)); <span class=\"comment\">//3</span></span><br></pre></td></tr></table></figure>\n\n<p>假如說今天有商品或是後台計算方式不同時，只要把相對的方法建立好，再把參數帶回其中，就可以得到想要的結果：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">count</span>(<span class=\"params\">price</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> price * <span class=\"number\">0.8</span>; <span class=\"comment\">// 商品價格要打八折時</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">addtax</span>(<span class=\"params\">price</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> price * <span class=\"number\">1.05</span>; <span class=\"comment\">// 當商品要開立發票時</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(count(<span class=\"number\">500</span>)); <span class=\"comment\">// 500 * 0.8 = 400</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(addtax(<span class=\"number\">1000</span>)); <span class=\"comment\">// 1000* 1.05 = 1050</span></span><br></pre></td></tr></table></figure>\n\n<p><code>return</code> 是幫助資料回傳的一個語法，讓 function 中的語法除了更簡潔外，也更可以提高程式碼閱讀性!</p>\n","categories":["JavaScript"],"tags":["JavaScript"]},{"title":"JS 筆記 - 全域變數與區域變數","url":"/javascript/20200224/3133182567/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/JavaScript%20note-01.jpg?alt=media&token=7bee0261-72ac-4de4-9f5a-f39d58735b7d\" alt=\"JavaScript Note\"></p>\n<p>初學者記法：變數簡單分成兩種，一種在<strong>函式內</strong>、一種在<strong>函式外</strong>，聽起來簡單，但觀念大不同，來紀錄一下。</p>\n<h2 id=\"區域變數\"><a href=\"#區域變數\" class=\"headerlink\" title=\"區域變數\"></a>區域變數</h2><p>簡單來說就是在函式內的變數，函式是這樣寫的：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fName</span>(<span class=\"params\">aName</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> number = aName *<span class=\"number\">10</span>; <span class=\"comment\">//區域變數</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(number); <span class=\"comment\">//驗證變數</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">fName(); <span class=\"comment\">//沒有輸入參數，執行函式</span></span><br></pre></td></tr></table></figure>\n\n<p>上面的寫法會得到的結果是 NaN，因為並沒有帶入其他參數，所以找不到任何的值。</p>\n<p>如果參數帶入 10，會變成這樣寫：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fName</span>(<span class=\"params\">aName</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> number = aName * <span class=\"number\">10</span>; <span class=\"comment\">//區域變數</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(number); <span class=\"comment\">//驗證變數</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">fName(<span class=\"number\">10</span>); <span class=\"comment\">//帶入參數，執行函式</span></span><br></pre></td></tr></table></figure>\n\n<p>執行函式的帶入<strong>參數</strong>後，會帶到<strong>區域變數</strong>，驗證結果會變成 100。</p>\n<p>※區域變數會在執行之後<strong>自動銷毀</strong>，並<strong>同步釋放記憶體</strong>，以免瀏覽器跑很慢，讓使用者體驗不佳。</p>\n<hr>\n<p>以上為原則，但有原則就會有例外，</p>\n<h3 id=\"狀況：開發中也會遇到需要抓之前的變數\"><a href=\"#狀況：開發中也會遇到需要抓之前的變數\" class=\"headerlink\" title=\"狀況：開發中也會遇到需要抓之前的變數\"></a>狀況：開發中也會遇到需要抓之前的變數</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fName</span>(<span class=\"params\">aName</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> number = aName * <span class=\"number\">10</span>; <span class=\"comment\">//區域變數</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(number); <span class=\"comment\">//驗證變數</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">fName(<span class=\"number\">10</span>); <span class=\"comment\">//帶入參數，執行函式</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(number)</span><br></pre></td></tr></table></figure>\n\n<p>這時候 Chrome 開發工具就會顯示下圖：</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/JS5-1.png?alt=media&token=f24b0d8d-0249-441b-b21d-3eecf623056c\" alt=\"區域變數\"></p>\n<p>告訴我們抓不到數值，原因是上述提到，區域變數執行結束後會自動銷毀，然後這邊我記錄的是，<strong>在執行 console.log 的時候，上面一定要是宣告變數了才能驗證，不然會沒有結果。*</strong>(目前學到的概念是這樣，若有誤還請指正或未來修正)*</p>\n<hr>\n<p>但開發中遇到的狀況絕不會這麼單純，如果仍然要設定一個變數值，在區域變數外抓取的話可以這樣寫：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> number</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fName</span>(<span class=\"params\">aName</span>) </span>&#123;</span><br><span class=\"line\">  number = <span class=\"number\">10</span>; <span class=\"comment\">//區域變數</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(number); <span class=\"comment\">//驗證變數</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">fName(); <span class=\"comment\">//執行函式</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(number);</span><br></pre></td></tr></table></figure>\n\n<p>在區域函數外新增一個 var 變數(全域變數)，當最後面的 console.log 執行變數驗證時，它會回去區域變數找到變數的設定值，在套進外面的 console.log 內。<br>得到的畫面如下圖：</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/JS5-2.png?alt=media&token=ccaee45f-ba98-44af-8b9f-b0a67451fb70\" alt=\"找外面的全域變數\"></p>\n<hr>\n<h2 id=\"全域變數\"><a href=\"#全域變數\" class=\"headerlink\" title=\"全域變數\"></a>全域變數</h2><p>簡單來說是在區域變數外的就是叫做全域變數，不過也有參考 <a href=\"http://https://ithelp.ithome.com.tw/articles/10191549\" target=\"_blank\" rel=\"noopener\">Kuro 老師的說法</a>：</p>\n<blockquote>\n<p>在 JavaScript 這門語言中，沒有所謂「全域變數」這種東西。更準確地說，我們所說的「全域變數」其實指的是「全域物件」(或者叫「頂層物件」) 的屬性。以瀏覽器來說，「全域物件」指的就是 <code>window</code>。</p>\n</blockquote>\n<p>這個說法更精準也更正確。</p>\n<p><strong>練習一個全域變數的函式：</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> number; <span class=\"comment\">//全域變數，沒有給予數值</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fName</span>(<span class=\"params\">aName</span>) </span>&#123;</span><br><span class=\"line\">  number = aName + <span class=\"number\">1</span>; <span class=\"comment\">//區域變數</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(number); <span class=\"comment\">//驗證變數</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">fName(<span class=\"number\">10</span>); <span class=\"comment\">//執行函式</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(number);</span><br></pre></td></tr></table></figure>\n\n<p>設定一個全域變數在<strong>最外面</strong>，前面提到在區域變數執行後會註銷該變數效果，但這次裡面的區域變數把 <code>var</code> 變數宣告拿掉，這時他會去抓取執行函式裡面的參數值，在讓全域變數去找到區域變數所套入的數值，在 Chrome 開發工具就會顯示如下圖：</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/JS5-3.png?alt=media&token=e0284e6d-6f47-4b05-989d-6f1d3ee815ab\" alt=\"全域變數\"></p>\n<p>引用 Kuro 老師的文章有彙整以下結論：</p>\n<blockquote>\n<h3 id=\"什麼叫做全域物件的「屬性」呢？\"><a href=\"#什麼叫做全域物件的「屬性」呢？\" class=\"headerlink\" title=\"什麼叫做全域物件的「屬性」呢？\"></a>什麼叫做全域物件的「屬性」呢？</h3></blockquote>\n<blockquote>\n<p>舉個例子，我們在最外層透過 var 建立一個變數 a，像這樣：</p>\n<p><code>var a = 10;</code><br>一直以來我們都稱它叫「全域變數」對吧？<br>這個時候，請你在後面加一行：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( <span class=\"built_in\">window</span>.a );    <span class=\"comment\">// ?</span></span><br></pre></td></tr></table></figure>\n<p>看到了什麼？<br>這時你應該會看到剛剛指定給 a 的 10 這個數字才對。</p>\n<p>那麼就可以來下個結論：</p>\n<p>變數有效範圍 (<code>scope</code>) 的最小切分單位是 <code>function</code> (ES6 的 <code>let</code> 與 <code>const</code> 例外)<br>即使是寫在函式內，沒有 var 的變數會變成「全域變數」<br>全域變數指的是全域物件 (頂層物件) 的「屬性」</p>\n</blockquote>\n<hr>\n<h2 id=\"心得\"><a href=\"#心得\" class=\"headerlink\" title=\"心得\"></a>心得</h2><ol>\n<li>區域變數與全域變數的觀念要弄清楚，不然後面真的會學得很痛苦。JavaScript 有太多名稱要去記，當然不是死背，但需要一一消化跟了解。</li>\n<li>Chrome 的開發工具真的很貼心，都會顯示程式碼哪裡有錯誤，就不用很辛苦的慢慢去看程式碼。</li>\n</ol>\n<p>參考文章 <a href=\"https://ithelp.ithome.com.tw/articles/10191549\" target=\"_blank\" rel=\"noopener\">https://ithelp.ithome.com.tw/articles/10191549</a></p>\n","categories":["JavaScript"],"tags":["JavaScript"]},{"title":"JS 筆記 - 在函式 function 加入參數","url":"/javascript/20200218/2420857626/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/JavaScript%20note-01.jpg?alt=media&token=7bee0261-72ac-4de4-9f5a-f39d58735b7d\" alt=\"JavaScript Note\"></p>\n<p>學習了變數 variable 跟函式 function 的基本認識，單元分開都很可以，最怕就是綜合應用，深怕我自己根基不夠穩，所以我拆了很細來學習，一次學一點，雖然慢，但觀念清楚比較重要。</p>\n<hr>\n<h2 id=\"函式帶入參數\"><a href=\"#函式帶入參數\" class=\"headerlink\" title=\"函式帶入參數\"></a>函式帶入參數</h2><p>函式基本寫法：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">number</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">\"Tim\"</span>); <span class=\"comment\">//字串要加引號</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"number\">323</span>); <span class=\"comment\">//數字不用加引號</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">number(); <span class=\"comment\">//執行函式</span></span><br></pre></td></tr></table></figure>\n\n<p>在小括弧中可以帶入參數名稱，一樣是<strong>自定義</strong>。</p>\n<h3 id=\"練習帶入一個參數會這樣寫：\"><a href=\"#練習帶入一個參數會這樣寫：\" class=\"headerlink\" title=\"練習帶入一個參數會這樣寫：\"></a>練習帶入一個參數會這樣寫：</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">math</span>(<span class=\"params\">number</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> total = number; <span class=\"comment\">//宣告變數的值等於參數</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(total); <span class=\"comment\">//驗證結果是變數的名稱，但這邊不是輸入字串，故不用加上引號</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">math(<span class=\"number\">10</span>); <span class=\"comment\">//執行函式，並帶入參數</span></span><br></pre></td></tr></table></figure>\n\n<hr>\n<h3 id=\"函式-參數-運算\"><a href=\"#函式-參數-運算\" class=\"headerlink\" title=\"函式 + 參數 + 運算\"></a>函式 + 參數 + 運算</h3><p>參數可以帶入兩個、三個甚至無限多，並可以利用變數做加減乘除的方式來做更多元的變化。(變數的加減乘除是：<code>+</code>、<code>-</code>、<code>*</code>、<code>/</code> )</p>\n<p><strong>EX. 加法</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">math</span>(<span class=\"params\">numOne, numTwo</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> total = numOne + numTwo; <span class=\"comment\">//結果為兩個變數相加</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(total); <span class=\"comment\">//驗證變數</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">math(<span class=\"number\">10</span>, <span class=\"number\">25</span>); <span class=\"comment\">//執行函式，並帶入參數</span></span><br></pre></td></tr></table></figure>\n\n<p>在 Chrome 的開發人員工具會顯示如下：</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/%E5%87%BD%E5%BC%8F%E5%B8%B6%E5%8F%83%E6%95%B8.png?alt=media&token=b77596ff-aa8e-453e-9d5e-3c1667933cf0\" alt=\"函式帶參數\"></p>\n<p>其他也可以在 <a href=\"https://codepen.io/hnzxewqw/pen/qBdrKKx\" target=\"_blank\" rel=\"noopener\">codepen</a> 調整不同的加減乘除方式玩玩看。</p>\n","categories":["JavaScript"],"tags":["JavaScript"]},{"title":"JS 筆記 - 認識函式 function 與使用","url":"/javascript/20200211/3165847303/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/JavaScript%20note-01.jpg?alt=media&token=7bee0261-72ac-4de4-9f5a-f39d58735b7d\" alt=\"JavaScript Note\"></p>\n<p>到目前為止，發現 JS 的寫法非常直觀，跟 HTML 與 CSS 的思維不太一樣，之前學過一陣子 jQuery，會覺得思維模式有點不同，直觀卻又要很仔細，而且感受到<strong>電腦很笨</strong>，要一個口令一個動作，這次就要來學習如何告訴電腦我要的指令。</p>\n<hr>\n<h1 id=\"什麼是函式-funciton\"><a href=\"#什麼是函式-funciton\" class=\"headerlink\" title=\"什麼是函式 funciton\"></a>什麼是函式 funciton</h1><p>簡單來說「函式」指的是將一或多段程式指令包裝起來，可以重複使用，也方便維護。<a href=\"http://https://ithelp.ithome.com.tw/articles/10191549\" target=\"_blank\" rel=\"noopener\">(參考來源)</a></p>\n<p>這邊我覺得有一個有趣的事情，英文 function 有<strong>功能</strong>的意思，也的確在撰寫的時候好像透過幾段程式指令告訴電腦我要做什麼，所以可能是因為這樣，被翻譯成函式吧!?<br><em>因為從小數學很爛，所以看到什麼 “式” 都會特別緊張</em></p>\n<hr>\n<h2 id=\"函式的寫法\"><a href=\"#函式的寫法\" class=\"headerlink\" title=\"函式的寫法\"></a>函式的寫法</h2><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">name</span>(<span class=\"params\">params</span>) </span>&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>用 function 做<strong>宣告</strong>，後面<strong>自定義</strong>一個名稱，加上<strong>小括弧</strong>(以後可以放參數用)，再把要寫入函式的程式碼用一個大括弧包起來</p>\n<hr>\n<h3 id=\"實際來寫一個練習：\"><a href=\"#實際來寫一個練習：\" class=\"headerlink\" title=\"實際來寫一個練習：\"></a>實際來寫一個練習：</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">number</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'Tim'</span>) <span class=\"comment\">//字串要加引號</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"number\">323</span>) <span class=\"comment\">//數字不用加引號</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>但這樣只是建立好一個函式而已，不會被執行，若要執行函式，要多寫一行程式碼，會如下呈現：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">number</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'Tim'</span>) <span class=\"comment\">//字串要加引號</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"number\">323</span>) <span class=\"comment\">//數字不用加引號  </span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">number(); <span class=\"comment\">//執行函式</span></span><br></pre></td></tr></table></figure>\n\n<hr>\n<p>函式可以重複執行，如果要重複執行一樣的函式，只要再打上一樣的指令就可了，如下程式碼：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">number</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'Tim'</span>) <span class=\"comment\">//字串要加引號</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"number\">323</span>) <span class=\"comment\">//數字不用加引號    </span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">number(); <span class=\"comment\">//執行函式</span></span><br><span class=\"line\">number(); <span class=\"comment\">//重複執行函式</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"心得\"><a href=\"#心得\" class=\"headerlink\" title=\"心得\"></a>心得</h3><p>function 函式可以當作設定好的功能，等需要執行的時候再找到做好的功能拿出來使用就可以囉！</p>\n","categories":["JavaScript"],"tags":["JavaScript"]},{"title":"JS 筆記 - 認識變數 variable 與使用方法","url":"/javascript/20200208/3675098643/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/JavaScript%20note-01.jpg?alt=media&token=7bee0261-72ac-4de4-9f5a-f39d58735b7d\" alt=\"JavaScript Note\"></p>\n<p>在學習 JavaScript 之前，都會聽到一堆專有名詞，結果專有名詞的白話文還是聽不懂，就覺得很可怕，心中產生排斥，但我發現如果心中產生排斥感，就會稍微拒絕學習該領域的東西，經過 HTML &amp; CSS、jQuery、RWD、Sass、Bootstrap4…等課程後，就比較沒這麼排斥這些「專有名詞」，這幾個月在前端領域中不斷的蒐集資料，也慢慢知道幾位大神級人物，這次的學習也有參考 Kuro 大大的在 <a href=\"http://https://ithelp.ithome.com.tw/users/20065504/ironman/1259\" target=\"_blank\" rel=\"noopener\">2018 鐵人賽</a>撰寫成<a href=\"http://https://www.tenlong.com.tw/products/9789864344130\" target=\"_blank\" rel=\"noopener\">書籍</a>的內容搭配<a href=\"http://https://www.hexschool.com/\" target=\"_blank\" rel=\"noopener\">六角學院</a>的<a href=\"http://https://www.hexschool.com/courses/javascript.html\" target=\"_blank\" rel=\"noopener\">課程</a>來看，廣度學習下，比較能知道課程跟書本內容在講什麼了。</p>\n<h2 id=\"認識變數-Variable\"><a href=\"#認識變數-Variable\" class=\"headerlink\" title=\"認識變數 Variable\"></a>認識變數 Variable</h2><p>簡單來說變數是用來儲存資料和進行運算的基本單位，可以將變數想像為一個盒子，用來存放資料。<br>更多詳盡的定義可以看<a href=\"http://https://ithelp.ithome.com.tw/articles/10190873\" target=\"_blank\" rel=\"noopener\">這篇</a></p>\n<h2 id=\"使用變數\"><a href=\"#使用變數\" class=\"headerlink\" title=\"使用變數\"></a>使用變數</h2><p>使用變數時，需要先使用 <code>var</code> 這個語法，告訴電腦說：我現在要宣告一個變數囉!!<br>再來打上想要的<strong>變數名稱</strong>，就會變成這樣 <code>var varName</code>。</p>\n<blockquote>\n<p>EX. </p>\n<ol>\n<li>命名一個變數是<strong>我的名字</strong>，就會這樣寫： <code>var myName =$;</code></li>\n<li>命名一個變數是<strong>號碼</strong>，就會這樣寫：<code>var number = $;</code></li>\n</ol>\n</blockquote>\n<p>變數的命名是<strong>自己定義的</strong>，但建議要有<strong>語意化</strong>，不然哪天回來修改程式碼，又沒有寫註解，就會忘記為什麼會這樣打，然後就會發生恐怖的事情。<br>另外維持一個習慣就是在每個程式碼<strong>結束後</strong>都打上一個<strong>分號</strong>。</p>\n<blockquote>\n<p><em>通常使用變數會在 HTML 中會建立一個 id 來使用。</em></p>\n</blockquote>\n<h2 id=\"變數的值\"><a href=\"#變數的值\" class=\"headerlink\" title=\"變數的值\"></a>變數的值</h2><p>宣告要使用變數，還有命名之後，要給變數一個值，電腦才會知道這個變數的內容是什麼，呈現的內容稱作為<strong>值</strong>：</p>\n<h3 id=\"Number-數字\"><a href=\"#Number-數字\" class=\"headerlink\" title=\"Number (數字)\"></a>Number (數字)</h3><p>也就是一般的數字 <strong>0 ~ 9</strong></p>\n<blockquote>\n<p>沿用上方例子，<code>var number = 8;</code>,文字解釋為，宣告一個變數，其名稱為 number，數字值為 8。</p>\n</blockquote>\n<p>可以使用這段語法將變數名稱呈現在網頁上</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> number = <span class=\"number\">8</span></span><br><span class=\"line\"><span class=\"comment\">//建立變數</span></span><br><span class=\"line\"><span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'number'</span>).textContent = number</span><br><span class=\"line\"><span class=\"comment\">//透過 textContent 控制 id 的內容，結果要等於變數名稱</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>可參考連結 <a href=\"https://codepen.io/hnzxewqw/pen/abbXXmX\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/abbXXmX</a></p>\n</blockquote>\n<p><em>對了，可以用變數來做加減乘除喔~</em></p>\n<h3 id=\"String-字串\"><a href=\"#String-字串\" class=\"headerlink\" title=\"String (字串)\"></a>String (字串)</h3><p>也就是文字，打中文也可以，但<strong>建議打英文</strong>，不然如果專案是國際專案，會變成亂碼。<br>打字串的時候要加上<strong>單引號</strong>或<strong>雙引號</strong>，不然電腦會不知道這個值是什麼。</p>\n<blockquote>\n<p>沿用上方例子，<code>var myName = &quot;Tim&quot;;</code>,文字解釋為，宣告一個變數，其名稱為 myName，字串值為 Tim。</p>\n</blockquote>\n<p>可以使用這段語法將變數名稱呈現在網頁上</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> myName = <span class=\"string\">\"Tim\"</span>;</span><br><span class=\"line\"><span class=\"comment\">//建立變數，字串值要加上引號</span></span><br><span class=\"line\"><span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'myName'</span>).textContent = myName</span><br><span class=\"line\"><span class=\"comment\">//透過 textContent 控制 id 的內容，結果要等於變數名稱</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>可參考連結 <a href=\"https://codepen.io/hnzxewqw/pen/qBBggaG\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/qBBggaG</a></p>\n</blockquote>\n<h3 id=\"Boolean-布林\"><a href=\"#Boolean-布林\" class=\"headerlink\" title=\"Boolean (布林)\"></a>Boolean (布林)</h3><p>只有兩種值，true 跟 false</p>\n<blockquote>\n<p>可參考連結 <a href=\"https://codepen.io/hnzxewqw/pen/OJJddpb\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/OJJddpb</a></p>\n</blockquote>\n<p><em>之後使用  if 判斷式會滿常被使用</em></p>\n<h2 id=\"什麼是-undefined\"><a href=\"#什麼是-undefined\" class=\"headerlink\" title=\"什麼是 undefined\"></a>什麼是 undefined</h2><p>還沒有給變數數值的時候會顯示的回傳資料，如果程式碼這樣寫：<code>var number;</code><br>因為沒有給任何定義的數值，所以會回傳 undefined。<br>舉例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> number;</span><br><span class=\"line\"><span class=\"comment\">//沒有給值，所以會是 undefined</span></span><br></pre></td></tr></table></figure>\n<p>或是這樣也是一樣的結果</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(number); <span class=\"comment\">//因為前面沒有變數的值，結果會是 undefined</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> number = <span class=\"number\">1</span>;</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"變數的命名規則\"><a href=\"#變數的命名規則\" class=\"headerlink\" title=\"變數的命名規則\"></a>變數的命名規則</h2><h3 id=\"開頭不能用數字\"><a href=\"#開頭不能用數字\" class=\"headerlink\" title=\"開頭不能用數字\"></a>開頭不能用數字</h3><p>宣告變數的名稱若開頭數字，會格式錯誤，如下圖：</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/2-1.png?alt=media&token=1446ae99-7b7e-498e-903a-2baa4636fa75\" alt=\"開頭不能用數字\"></p>\n<h3 id=\"不能包含-或是-等符號\"><a href=\"#不能包含-或是-等符號\" class=\"headerlink\" title=\"不能包含 - 或是 . 等符號\"></a>不能包含 - 或是 . 等符號</h3><p>宣告變數的名稱若使用 “-“ 或 “.”，會格式錯誤，如下圖：</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/2-2.png?alt=media&token=ead6b977-c4c7-4c55-a8e5-90059331a700\" alt=\"不能包含 - 或是 . 等符號\"></p>\n<h3 id=\"不能使用-JS-預設的-關鍵字-指令\"><a href=\"#不能使用-JS-預設的-關鍵字-指令\" class=\"headerlink\" title=\"不能使用 JS 預設的 ( 關鍵字 ) 指令\"></a>不能使用 JS 預設的 ( 關鍵字 ) 指令</h3><p>JS 在變數中有一些預設的關鍵字，初學者可以當作是預設指令，如果重複預設的關鍵字會格式錯誤，如下圖：<br><em>更多關鍵字可以看<a href=\"http://https://www.w3schools.com/js/js_reserved.asp\" target=\"_blank\" rel=\"noopener\">這裡</a></em></p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/2-3.png?alt=media&token=45dd0919-fe5e-4f2c-b724-be5d7d4a177a\" alt=\"不能使用 JS 預設的 ( 關鍵字 ) 指令\"></p>\n<h3 id=\"有大小寫之分\"><a href=\"#有大小寫之分\" class=\"headerlink\" title=\"有大小寫之分\"></a>有大小寫之分</h3><blockquote>\n<p>JavaScript 的語法是有區分大小寫的，也就是說，變數 app 與 App 在 JavaScript 會被認為是兩個不同的變數。<br>如果大小寫弄錯了，在執行變數時會變成找不到資料，如下圖：</p>\n</blockquote>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/2-4.png?alt=media&token=1a3b1b87-7226-4b1f-8b69-c43e5ce155b0\" alt=\"有大小寫之分\"></p>\n<h2 id=\"建議變數名稱要有語意化\"><a href=\"#建議變數名稱要有語意化\" class=\"headerlink\" title=\"建議變數名稱要有語意化\"></a>建議變數名稱要有語意化</h2><p>原因是在寫專案當下可能知道自己在幹嘛，但如果之後要維護或修改時，可能就會找不到相對應的程式碼了。</p>\n<p>參考文章 <a href=\"https://ithelp.ithome.com.tw/articles/10190873\" target=\"_blank\" rel=\"noopener\">https://ithelp.ithome.com.tw/articles/10190873</a></p>\n","categories":["JavaScript"],"tags":["JavaScript"]},{"title":"JS 筆記 - 建立 JS 環境、alert、textContent","url":"/javascript/20200206/2494141895/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/JavaScript%20note-01.jpg?alt=media&token=7bee0261-72ac-4de4-9f5a-f39d58735b7d\" alt=\"JavaScript Note\"></p>\n<h2 id=\"JavaScript-概述\"><a href=\"#JavaScript-概述\" class=\"headerlink\" title=\"JavaScript 概述\"></a>JavaScript 概述</h2><h3 id=\"一般來說，完整的-JavaScript-包括以下幾個部分：\"><a href=\"#一般來說，完整的-JavaScript-包括以下幾個部分：\" class=\"headerlink\" title=\"一般來說，完整的 JavaScript 包括以下幾個部分：\"></a>一般來說，完整的 JavaScript 包括以下幾個部分：</h3><ul>\n<li>ECMAScript，描述了該語言的語法和基本物件</li>\n<li>文件物件模型（DOM），描述處理網頁內容的方法和介面</li>\n<li>瀏覽器物件模型（BOM），描述與瀏覽器進行互動的方法和介面</li>\n</ul>\n<h3 id=\"JavaScript-的基本特點如下：\"><a href=\"#JavaScript-的基本特點如下：\" class=\"headerlink\" title=\"JavaScript 的基本特點如下：\"></a>JavaScript 的基本特點如下：</h3><ul>\n<li>是一種解釋性程式語言（代碼不進行預編譯）。</li>\n<li>主要用來向 HTML 頁面添加互動行為。</li>\n<li>可以直接嵌入 HTML 頁面，但寫成單獨的 JS 檔案有利於結構和行為的分離。</li>\n</ul>\n<h3 id=\"JavaScript-常用來完成以下任務：\"><a href=\"#JavaScript-常用來完成以下任務：\" class=\"headerlink\" title=\"JavaScript 常用來完成以下任務：\"></a>JavaScript 常用來完成以下任務：</h3><ul>\n<li>嵌入動態文字於 HTML 頁面</li>\n<li>對瀏覽器事件作出回應</li>\n<li>讀寫 HTML 元素</li>\n<li>在資料被提交到伺服器之前驗證資料</li>\n<li>檢測訪客的瀏覽器資訊</li>\n<li>控制 cookies，包括建立和修改等</li>\n</ul>\n<h2 id=\"正文開始\"><a href=\"#正文開始\" class=\"headerlink\" title=\"正文開始\"></a>正文開始</h2><p>首先先學習建立一個 <code>JavaScript</code> 的環境，環境建立如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width, initial-scale=1.0\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"X-UA-Compatible\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"ie=edge\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"js/all.js\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>通常我會把 SCSS 跟 JS 另外各自開立一個資料夾來管理，讓根目錄保持整潔。</p>\n<h2 id=\"alert-警示語法\"><a href=\"#alert-警示語法\" class=\"headerlink\" title=\"alert 警示語法\"></a>alert 警示語法</h2><p>JS 有個警示語法 (alert) 可以來測驗一下目前寫的 JS 有無效果，滿好用的，然後是這樣寫的：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">alert(<span class=\"string\">\"test\"</span>);</span><br></pre></td></tr></table></figure>\n\n<p>記得括弧內的「文字」要使用<strong>單引號</strong>或<strong>雙引號</strong>，才能顯示正確文字。<br>可以玩一下 <a href=\"https://codepen.io/hnzxewqw/pen/RwwEqWx\" target=\"_blank\" rel=\"noopener\">Alert</a><br>這個語法很常被使用，像是錯誤提示、或是購買商品成功或錯誤提示的彈跳視窗，但沒想到寫法這麼簡單。<br>另外如果不喜歡原本預設的 alert 視窗，可以看這一篇 <a href=\"https://w3c.hexschool.com/blog/13ef5369\" target=\"_blank\" rel=\"noopener\">SweetAlert 的作法</a>_</p>\n<p>原則上通常會把 JS 放在結尾的 <code>&lt;/body&gt;</code> 前面，確保都讀完「靜態的」程式碼後再執行 JS。</p>\n<blockquote>\n<p>&lt;有原則當然也有例外，如果特定要執行 JS 做特別的效果，也可以把 JS 的程式碼放在 <code>HTML</code> 中&gt;</p>\n</blockquote>\n<h2 id=\"textContent-的作法\"><a href=\"#textContent-的作法\" class=\"headerlink\" title=\"textContent 的作法\"></a>textContent 的作法</h2><p>要用 JS 控制網頁的文字，有一個 <code>textContent</code> 的語法，而這個語法編寫如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'title1'</span>).textContent = <span class=\"string\">'Hello World'</span>;</span><br></pre></td></tr></table></figure>\n\n<p>白話文解釋：<strong>網頁主體( document )</strong>，宣告用 <strong>使用 id 元件( getElementById )</strong> 加上設定的 <strong>id 名稱</strong> 將原本的文字，使用 <strong>文字內容( textContent )</strong> 的語法變成 <strong>指定文字(這裡是寫 Hello World )</strong></p>\n<p>不過這邊有一個地方要注意，如果把 <code>&lt;script&gt;</code> 標籤寫在 head 裡面的時候，會發現網頁不會有效果，反而一直停在原本的寫的畫面。然後打開 Chrome 檢查會看到 console 裡面會顯示下圖：</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/JS1-1.png?alt=media&token=95974db7-9979-4a3c-83d2-25fe0e218cc6\" alt=\"把 `&lt;script&gt;` 標籤寫在 `header` 時，`console` 會跳錯\"></p>\n<p>原因是網頁是從上往下閱讀，但如果發現在 head 就讀到 <code>&lt;script&gt;</code> 標籤時，因為找不到內容而無法順利顯示 JS ，所以常常會把 JS 寫在最後面就是這個原因。</p>\n<p><strong>原本 HTML 程式碼如下：</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width, initial-scale=1.0\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"X-UA-Compatible\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"ie=edge\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>JavaScript practice Day1<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">id</span>=<span class=\"string\">\"title1\"</span>&gt;</span>This is Title<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"js/all.js\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>正常來說畫面應該會是下圖所示：</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/JS%201-2.png?alt=media&token=72be0bdf-22b2-472f-b5df-0344b8ffea64\" alt=\"通常會讓程式碼讀取完後，再跑 `script` 指令\"></p>\n<p>可以點一下<a href=\"https://codepen.io/hnzxewqw/pen/OJJraKe\" target=\"_blank\" rel=\"noopener\">這裡</a>把 JS 的註解打開，然後重新整理就會看到透過 JS 就把原本的文字：<strong>This is Title</strong>，變成：<strong>Hello World</strong> 囉~!!</p>\n<p>文獻參考<br><a href=\"https://zh.wikipedia.org/wiki/JavaScript#%E8%82%87%E5%A7%8B%E6%96%BC%E7%B6%B2%E6%99%AF\" target=\"_blank\" rel=\"noopener\">https://zh.wikipedia.org/wiki/JavaScript#%E8%82%87%E5%A7%8B%E6%96%BC%E7%B6%B2%E6%99%AF</a></p>\n","categories":["JavaScript"],"tags":["JavaScript"]},{"title":"寫一個 search bar","url":"/input/20200106/1702288669/","content":"<h2 id=\"搜尋列-input-button\"><a href=\"#搜尋列-input-button\" class=\"headerlink\" title=\"搜尋列 ( input + button )\"></a>搜尋列 ( input + button )</h2><p>這次來練習寫一個 Search Bar，要寫的樣式如下</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/searchbar01.png?alt=media&token=b380ab04-a70c-469e-82c0-78462af98f22\" alt=\"參考樣式\"></p>\n<h3 id=\"起手式\"><a href=\"#起手式\" class=\"headerlink\" title=\"起手式\"></a>起手式</h3><p>我習慣在最外層寫一個 <code>.wrap</code>，在繼續將裡面要完成的 HTML 先寫完<br>所以程式碼會如下，</p>\n<p><strong>HTML</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"wrap\"</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"search\"</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">class</span>=<span class=\"string\">\"search-bar\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"search\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"search\"</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">\"輸入名稱\"</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"search-btn\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>這時候我才會加入 CSS 的樣式，因為要讓底色是我指定的顏色，還有這次 Search Bar 的裡面所有的連結按鈕我都取消底線的樣式，所以我的 CSS 先把 layout 寫好，</p>\n<p><strong>CSS</strong></p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\">*&#123;<span class=\"attribute\">box-sizing</span>: border-box;&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">body</span>&#123;</span><br><span class=\"line\"> <span class=\"attribute\">background-color</span>: <span class=\"number\">#efe9e7</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">a</span>&#123;</span><br><span class=\"line\"> <span class=\"attribute\">text-decoration</span>: none;</span><br><span class=\"line\"> <span class=\"attribute\">color</span>: <span class=\"number\">#3D1101</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.wrap</span>&#123;</span><br><span class=\"line\"> <span class=\"attribute\">max-width</span>: <span class=\"number\">960px</span>;</span><br><span class=\"line\"> <span class=\"attribute\">margin</span>:<span class=\"number\">20px</span> auto <span class=\"number\">0</span> auto;</span><br><span class=\"line\"> <span class=\"attribute\">height</span>: auto;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>使用 <code>box-sizing:border-box</code> 原因是要讓原本 CSS 預設的 padding 值不要影響我的設定值。<br>這時候畫面會顯示這樣</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/searchbar02.png?alt=media&token=cc40d3ad-325e-4be9-ae09-75f188b57245\" alt=\"大概是我要的感覺了\"></p>\n<hr>\n<h2 id=\"把按鈕的文字改成圖示\"><a href=\"#把按鈕的文字改成圖示\" class=\"headerlink\" title=\"把按鈕的文字改成圖示\"></a>把按鈕的文字改成圖示</h2><p>再來就是優化的內容了，為了要讓搜尋按鈕好看，所以這邊我要載入 fontawesome，方式如下，先到 fontawesome 官網，選擇 Start for free，畫面如下</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/searchbar03.png?alt=media&token=0ef052e3-683e-4925-8547-e3798366f0a6\" alt=\"fontawesome 首頁\"></p>\n<blockquote>\n<p>以前都免費，現在要付費才能升級成 PRO 的會員了…</p>\n</blockquote>\n<blockquote>\n<p>會出現需要輸入 email 的地方，輸入完後會收到官方寄來的認證信，打開信件認證之後，在登入網頁，會給一組專屬的 kit 程式碼跟代碼，記得先複製存檔到電腦裡喔！以後要用到 fontawesome 都要匯入這個 kit 程式！或是去找 CDN 放在 link 裡面也可以！</p>\n</blockquote>\n<p>然後在貼上到 head 裡面就可以讀取到 fontawesome 的圖案了，然後這次我要找的是 Search 的圖案，所以我就在裡面找 search，有很多放大鏡的圖案，就選一個喜歡的來用，於是我就找到了這個圖案</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/searchbar04.png?alt=media&token=d824e86d-b802-405f-a92e-158adf41b4e6\" alt=\"在 fontawesome 搜尋 search 在挑選喜歡的樣式\"></p>\n<p>因為我沒有付費升級成 PRO 會員，所以只能選第一個 solid 的選項把上面的網址複製下來貼到原本程式碼 <code>btn</code> 的地方，程式碼會是這樣</p>\n<p><strong>HTML</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"wrap\"</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"search\"</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">class</span>=<span class=\"string\">\"search-bar\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"search\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"search\"</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">\"輸入名稱\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"search-btn\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fas fa-search\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>這時候畫面就變成下方所示</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/searchbar05.png?alt=media&token=3db47084-2c4a-4b94-b98e-462071816fca\" alt=\"好像很接近要寫的樣子\"></p>\n<hr>\n<h2 id=\"細節優化\"><a href=\"#細節優化\" class=\"headerlink\" title=\"細節優化\"></a>細節優化</h2><p>這時候 CSS 要繼續往下寫，先設定 <code>.search</code> 的寬度為畫面的 80%，並且靠左，因為等等還要放上購物車，寫入 <code>position</code> 是將 <code>.search</code> 設定為父元素，讓等等放大鏡圖示可以對齊。</p>\n<p><strong>CSS</strong></p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.search</span>&#123;</span><br><span class=\"line\"> <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\"> <span class=\"attribute\">width</span>: <span class=\"number\">80%</span>;</span><br><span class=\"line\"> <span class=\"attribute\">float</span>: left; </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"優化-input\"><a href=\"#優化-input\" class=\"headerlink\" title=\"優化 input\"></a>優化 input</h3><p>再來優化 <code>.search-bar</code> 讓它填滿 <code>.search</code> 的範圍，並按照標記文件 <code>height:32px</code>，並且外框設定 <code>3px</code> 的棕色實心線，為了讓 search bar 與畫面一致，所以也將背景填滿色。</p>\n<p><strong>CSS</strong></p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.search-bar</span>&#123;</span><br><span class=\"line\"> <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\"> <span class=\"attribute\">height</span>: <span class=\"number\">32px</span>;</span><br><span class=\"line\"> <span class=\"attribute\">font-size</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\"> <span class=\"attribute\">border</span>: <span class=\"number\">3px</span> solid <span class=\"number\">#3D1101</span>;</span><br><span class=\"line\"> <span class=\"attribute\">background-color</span>: <span class=\"number\">#efe9e7</span>;</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h3 id=\"優化-button\"><a href=\"#優化-button\" class=\"headerlink\" title=\"優化 button\"></a>優化 button</h3><p>優化按鈕，按照標記文件設定寬高與背景色後，也將 fontawesome 的顏色與背景設定相同，加上 <code>cursor</code> 讓滑鼠移過去時可以變成手指的圖示，再透過 <code>position:absolute</code> 設定成絕對定為，讓按鈕可以靠上靠右對齊 Search bar</p>\n<p><strong>CSS</strong></p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.search-btn</span>&#123;</span><br><span class=\"line\"> <span class=\"attribute\">width</span>: <span class=\"number\">36px</span>;</span><br><span class=\"line\"> <span class=\"attribute\">height</span>: <span class=\"number\">32px</span>;</span><br><span class=\"line\"> <span class=\"attribute\">background-color</span>: <span class=\"number\">#3D1101</span>;</span><br><span class=\"line\"> <span class=\"attribute\">color</span>:<span class=\"number\">#efe9e7</span>;</span><br><span class=\"line\"> <span class=\"attribute\">outline</span>:none;</span><br><span class=\"line\"> <span class=\"attribute\">border</span>: <span class=\"number\">2px</span> solid <span class=\"number\">#3D1101</span>;</span><br><span class=\"line\"> <span class=\"attribute\">cursor</span>: pointer; </span><br><span class=\"line\"> <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\"> <span class=\"attribute\">top</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\"> <span class=\"attribute\">right</span>: <span class=\"number\">0</span>; </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"完成\"><a href=\"#完成\" class=\"headerlink\" title=\"完成\"></a>完成</h2><p>寫完上方程式碼就完成這次的好看的搜尋列囉~~!</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/searchbar06.png?alt=media&token=759ca863-8f17-45e6-9ccd-66feb154d43a\" alt=\"搜尋列完成\"></p>\n<p>完整程式碼在這裡<br><a href=\"https://codepen.io/hnzxewqw/pen/ZgWymm\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/ZgWymm</a></p>\n","categories":["input"],"tags":["CSS","HTML"]},{"title":"美化 Powershell","url":"/Powershell/20191225/611397980/","content":"<h2 id=\"Powershell-的美化原因\"><a href=\"#Powershell-的美化原因\" class=\"headerlink\" title=\"Powershell 的美化原因\"></a>Powershell 的美化原因</h2><p>為了開發更方便，Win10 有內建一個終端機叫做 Powershell，但原本的樣式很醜…</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/powershell%E9%A0%90%E8%A8%AD.png?alt=media&token=33be3a02-3289-4ee3-adb6-eff49f6d2b72\" alt=\"Windows 預設的樣式\"></p>\n<p>這種配色相當刺眼，所以為了以後開發保護眼睛，還是美化一下好了!</p>\n<hr>\n<h2 id=\"環境條件\"><a href=\"#環境條件\" class=\"headerlink\" title=\"環境條件\"></a>環境條件</h2><ul>\n<li>需要在 Windows 10 1903 版以上才能美化喔~不然會失敗。</li>\n</ul>\n<hr>\n<h2 id=\"查看-Windows-版本\"><a href=\"#查看-Windows-版本\" class=\"headerlink\" title=\"查看 Windows 版本\"></a>查看 Windows 版本</h2><p>在下方搜尋列中打 <code>winver</code>，就可以看到版本喔! 如果發現不是 1903 版本要記得更新系統。</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/winver.png?alt=media&token=e6862e07-d4ab-477e-aada-2db27d22da7e\" alt=\"winver\"></p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/winver1903.png?alt=media&token=7980ae9d-7a88-4047-b40a-48d1a82147b6\" alt=\"winver 1903\"></p>\n<p>確認好後就可以繼續進行美化了。</p>\n<hr>\n<h2 id=\"美化提示條\"><a href=\"#美化提示條\" class=\"headerlink\" title=\"美化提示條\"></a>美化提示條</h2><p>預計要美化提示條的樣式如下：</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/powershell%E6%8F%90%E7%A4%BA%E6%A2%9D.png?alt=media&token=fa27bd1b-6555-4aa9-9120-b835e639eed1\" alt=\"美化後的提示條\"></p>\n<p>安裝提示條套件 <code>oh-my-posh</code>，<a href=\"https://github.com/JanDeDobbeleer/oh-my-posh\" target=\"_blank\" rel=\"noopener\">oh-my-posh GitHub</a></p>\n<h3 id=\"安裝套件\"><a href=\"#安裝套件\" class=\"headerlink\" title=\"安裝套件\"></a>安裝套件</h3><p>在 powershell 輸入下方指令：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">Install-Module posh-git -Scope CurrentUser</span><br></pre></td></tr></table></figure>\n<p>安裝過程會有問題提問，一直輸入 <code>Y</code> 就可以了。</p>\n<p>再來安裝 oh-my-posh 模組，輸入下方指令：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">Install-Module oh-my-posh -Scope CurrentUser</span><br></pre></td></tr></table></figure>\n<p>安裝過程會有問題提問，一樣輸入 <code>Y</code> 就可以了。</p>\n<h3 id=\"設定自動套用\"><a href=\"#設定自動套用\" class=\"headerlink\" title=\"設定自動套用\"></a>設定自動套用</h3><p>在 PowerShell 上面輸入 <code>$profile</code> 來顯示 PowerShell 自定義路徑</p>\n<blockquote>\n<p>C:\\Users\\您的資料夾名稱\\Documents\\WindowsPowerShell\\</p>\n</blockquote>\n<p>複製路徑到文件視窗中貼上，打開資料夾後底下若沒有一個檔案叫 Microsoft.PowerShell_profile.ps1 那就新增一個記事本，如果有的話要在 vscode 打開，並內容填入以下資訊：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">Import-Module posh-git</span><br><span class=\"line\">Import-Module oh-my-posh</span><br><span class=\"line\"><span class=\"built_in\">Set</span>-Theme Agnoster //我是用這個樣式</span><br></pre></td></tr></table></figure>\n\n<p>設定完成後，往後每次打開 powershell 就會自動套用了~如果想換配色的話可以到官方 readme 底下有提供別的名稱。<a href=\"https://github.com/JanDeDobbeleer/oh-my-posh#themes\" target=\"_blank\" rel=\"noopener\">官方 GitHub</a></p>\n<hr>\n<h2 id=\"調整背景色\"><a href=\"#調整背景色\" class=\"headerlink\" title=\"調整背景色\"></a>調整背景色</h2><p>有鑑於藍色底真是太痛苦了，做平面設計出身的我喜歡深灰色背景，閱讀上比較不吃力，所以要來改下背景。</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/powershell%20%E7%BE%8E%E5%8C%96.png?alt=media&token=dd4b4099-8d09-4e57-ba60-ebc048210047\" alt=\"我的 powershell 背景\"></p>\n<ul>\n<li>美化之前要先完成環境條件才可以進行</li>\n</ul>\n<hr>\n<h3 id=\"安裝-Windows-Terminal\"><a href=\"#安裝-Windows-Terminal\" class=\"headerlink\" title=\"安裝 Windows Terminal\"></a>安裝 Windows Terminal</h3><p>新版的 Windows Terminal 是透過 Store 安裝的，<a href=\"ms-windows-store://pdp/?ProductId=9n0dx20hk701\">前往 Store 商店</a></p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/windows%20Terminal.png?alt=media&token=5602a109-7a90-4b4e-ad00-f6869f314af9\" alt=\"Windows Terminal\"></p>\n<p>安裝完畢後在搜尋列輸入 <code>Windows Terminal</code> 即可找到。</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/find%20windows%20Terminal.png?alt=media&token=4ef90689-4e6f-4326-9443-d4acf470550d\" alt=\"直接在搜尋列搜尋 Windows Terminal 即可\"></p>\n<p>打開後在工具列中找到<strong>倒三角形</strong>的圖示，會看到 <strong>setting</strong> 選項。</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/setting.png?alt=media&token=b2e21fef-5297-4366-bd0b-67a6674628c8\" alt=\"setting\"></p>\n<p>選擇後會打開一個記事本檔案，先另存新檔找到該路徑，在把檔案丟掉 VScode 裡面修改第一個物件，會看到如下圖：</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/powershell%20%E8%A8%AD%E5%AE%9A.png?alt=media&token=1d615b67-9a2c-4787-a993-2228534f9bed\" alt=\"修改內容\"></p>\n<p>註解處是我修改的地方，可以參考看看。</p>\n<h4 id=\"注意兩件事情\"><a href=\"#注意兩件事情\" class=\"headerlink\" title=\"注意兩件事情\"></a>注意兩件事情</h4><ul>\n<li>背景圖片的地方不可以有中文字，否則無法正常顯示背景圖片。</li>\n<li>字體建議修改，我個人是使用 Sarasa Term SC，否則滿怪的，原本設定 Arial 但如果出現中文字變亂碼。</li>\n</ul>\n<p>設定完之後就成功囉!!</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/powershell%20%E7%BE%8E%E5%8C%96.png?alt=media&token=dd4b4099-8d09-4e57-ba60-ebc048210047\" alt=\"完成後的 powershell \"></p>\n<hr>\n<blockquote>\n<p>參考文章：<a href=\"https://hsiangfeng.github.io/other/20190924/3446878284/\" target=\"_blank\" rel=\"noopener\">https://hsiangfeng.github.io/other/20190924/3446878284/</a></p>\n</blockquote>\n","categories":["Powershell"],"tags":["Powershell"]},{"title":"第一次建立 Hexo 與推上 GitHub","url":"/hexo/20191217/1291925723/","content":"<h2 id=\"為什麼要建立-Hexo-部落格\"><a href=\"#為什麼要建立-Hexo-部落格\" class=\"headerlink\" title=\"為什麼要建立 Hexo 部落格\"></a>為什麼要建立 Hexo 部落格</h2><p>從今年 2 月開始學習前端，在不同階段給我自己設立目標去挑戰，算一算也 10 個月了，看自己的能力還需要一個挑戰來幫助自己升級，讓我自己可以更快投入前端產業領域，經與 Ray 討論後，開始建立 Hexo 部落格，平台這麼多為什麼要使用 Hexo？</p>\n<p>因為 Hexo 是要使用指令來做開發，也要配合 GitHub 使用，一方面可以練習指令，另一方面可以練習 GitHub 版本控制，算是一石二鳥。</p>\n<p>使用 Hexo 是使用 Markdown 撰寫格式，也需要熟悉 Git 指令還有一點 npm 的知識，可以參考下方連結教學。</p>\n<p><a href=\"https://hsiangfeng.github.io/other/20191111/1875438261/\" target=\"_blank\" rel=\"noopener\">Markdown</a></p>\n<p><a href=\"https://w3c.hexschool.com/git/cfdbd310\" target=\"_blank\" rel=\"noopener\">Git</a></p>\n<p><a href=\"https://hsiangfeng.github.io/nodejs/20190626/1317979814/\" target=\"_blank\" rel=\"noopener\">npm</a></p>\n<hr>\n<h2 id=\"建立-Hexo-部落格\"><a href=\"#建立-Hexo-部落格\" class=\"headerlink\" title=\"建立 Hexo 部落格\"></a>建立 Hexo 部落格</h2><h3 id=\"版本與環境\"><a href=\"#版本與環境\" class=\"headerlink\" title=\"版本與環境\"></a>版本與環境</h3><p>作業系統： Windows10 X64</p>\n<p>Nodejs:：V12.13.1 LTS</p>\n<p>IDE：VS Code</p>\n<h3 id=\"本文環境\"><a href=\"#本文環境\" class=\"headerlink\" title=\"本文環境\"></a>本文環境</h3><p><strong>Hexo 版本</strong></p>\n<p>hexo: 4.1.1</p>\n<p>hexo-cli: 3.1.0</p>\n<p><strong>NexT 版本</strong></p>\n<p>Next: 7.6.0</p>\n<hr>\n<h2 id=\"從-GitHub-建立新的數據-Creat-a-new-Repository\"><a href=\"#從-GitHub-建立新的數據-Creat-a-new-Repository\" class=\"headerlink\" title=\"從 GitHub 建立新的數據 (Creat a new Repository)\"></a>從 GitHub 建立新的數據 (Creat a new Repository)</h2><p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/%E5%BB%BA%E7%AB%8B%E6%95%B8%E6%93%9A.png?alt=media&token=1f2b07d5-023a-48aa-a163-21b4095e955d\" alt=\"初始 GitHub 畫面\"></p>\n<ul>\n<li>名稱務必要謹慎設定，因為之後就無法更改，若想要修改只能重新建立數據庫，記得後面的 github.io 要打一樣的。</li>\n<li>下方的權限直接用 Public (公開) 即可，若一開始還不想公開就選擇 Private (私人的)。</li>\n<li>其他不用更動，直接選擇最下方的綠色按鈕 (Create repostory) 建立數據庫。</li>\n</ul>\n<p><strong>Warning</strong></p>\n<ul>\n<li>有提到 HEXO 是用指令建立的，所以不要在本地端建立數據庫，建立的格式內容會是錯誤的 (我已經失敗過一次，最後還是重新來過。)</li>\n</ul>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/GitHub%20%E4%B8%80%E9%96%8B%E5%A7%8B%E6%9C%83%E7%9C%8B%E5%88%B0%E7%9A%84%E6%A8%A3%E5%AD%90.png?alt=media&token=105bb415-3516-491f-af61-df87a4f22a43\" alt=\"這是一開始看到的樣子，如下圖：\"></p>\n<hr>\n<h2 id=\"安裝-Hexo\"><a href=\"#安裝-Hexo\" class=\"headerlink\" title=\"安裝 Hexo\"></a>安裝 Hexo</h2><p>使用指令安裝 Hexo，開啟終端機 (cmd)輸入以下指令：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm install hexo-cli -g</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/%E5%AE%89%E8%A3%9D%20HEXO.png?alt=media&token=f6e154ec-0f7f-4077-b918-10694c06454d\" alt=\"安裝 Hexo\"></p>\n<p>*指令說明：透過 npm 在 全域 (-g) 下安裝 Hexo-Cli</p>\n<p>輸入後會看到有進度條再跑，大概幾秒後就完成了。</p>\n<hr>\n<h2 id=\"建立-Hexo\"><a href=\"#建立-Hexo\" class=\"headerlink\" title=\"建立 Hexo\"></a>建立 Hexo</h2><p>在要存取的硬碟中開啟一個新資料夾，並自訂名稱 (建議用英文)，之後的資料就會在這個資料夾內，並輸入以下指令：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo init projectname</span><br></pre></td></tr></table></figure>\n<ul>\n<li>projectname 改成自己定義的名稱，建議用英文，安裝完成後如下圖：</li>\n</ul>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/%E5%BB%BA%E7%AB%8B%20HEXO.png?alt=media&token=48c35faf-b65e-42ee-9433-a89d265def7a\" alt=\"\"></p>\n<hr>\n<h2 id=\"進入-Hexo\"><a href=\"#進入-Hexo\" class=\"headerlink\" title=\"進入 Hexo\"></a>進入 Hexo</h2><p>在終端機輸入：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> projectname</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>projectname 改成自己定義的名稱，建議用英文</li>\n</ul>\n<h3 id=\"安裝相關套件\"><a href=\"#安裝相關套件\" class=\"headerlink\" title=\"安裝相關套件\"></a>安裝相關套件</h3><p>由於建立完畢的 Hexo 還必須安裝 npm 相關套件，所以必須在這個目錄下輸入：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>指令說明：將 package.json 相依套件下載下來</li>\n</ul>\n<hr>\n<h2 id=\"啟動-Hexo\"><a href=\"#啟動-Hexo\" class=\"headerlink\" title=\"啟動 Hexo\"></a>啟動 Hexo</h2><p>完成上方內容後再輸入下方指令：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo server</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/%E5%95%9F%E5%8B%95%20hexo.png?alt=media&token=b06502f3-b23c-4a8d-8b69-5e07cd31fdc0\" alt=\"啟動 hexo server\"></p>\n<hr>\n<h2 id=\"使用主題-themes\"><a href=\"#使用主題-themes\" class=\"headerlink\" title=\"使用主題 themes\"></a>使用主題 themes</h2><p>使用 Next 7.6.0 ，<a href=\"https://github.com/theme-next/hexo-theme-next\" target=\"_blank\" rel=\"noopener\">主題連結</a>，或是可以到<a href=\"https://theme-next.iissnan.com/\" target=\"_blank\" rel=\"noopener\">官方網站</a>取得想要的主題，但因為每個主題要修改的程式碼不同，如果要按照我這邊設定，建議選用一樣的樣式!! </p>\n<h3 id=\"替換主題\"><a href=\"#替換主題\" class=\"headerlink\" title=\"替換主題\"></a>替換主題</h3><p>下載 themes 並解壓縮到資料夾內的 themes 資料夾內，並使用 VSCODE 開啟跟目錄資料夾中的 <code>congig.yml</code></p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/themes%20%E8%B3%87%E6%96%99%E5%A4%BE.png?alt=media&token=23291574-3088-4580-8a67-be03a21fa206\" alt=\"資料夾 themes 選項\"></p>\n<p>找到第 96 行更改 themes 後面的名稱如下：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">theme: <span class=\"title\">hexo</span>-<span class=\"title\">theme</span>-<span class=\"title\">next</span>-<span class=\"title\">master</span></span></span><br></pre></td></tr></table></figure>\n\n<hr>\n<p>Hexo 基礎設定</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\">// Site</span><br><span class=\"line\">title: TimCodingBlog// 網站標題</span><br><span class=\"line\">subtitle: 提姆寫程式。 // 網站副標題</span><br><span class=\"line\">description: 提姆的前端筆記 // 網站敘述</span><br><span class=\"line\">keywords: // 關鍵字</span><br><span class=\"line\">author: Tim // 網站作者</span><br><span class=\"line\">language: zh-TW // 網站語系</span><br><span class=\"line\">timezone:</span><br><span class=\"line\"></span><br><span class=\"line\">// URL</span><br><span class=\"line\">url: http://yoursite.com  //輸入您的網站URL，舉例我的就是ray.github.io</span><br><span class=\"line\">root: /</span><br><span class=\"line\">permalink: :year/:month/:day/:title/</span><br><span class=\"line\">permalink_defaults:</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"部署-GitHub\"><a href=\"#部署-GitHub\" class=\"headerlink\" title=\"部署 GitHub\"></a>部署 GitHub</h2><p>需要安裝一個 Hexo 沒有安裝的插件</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n\n<p>修改 _config.yml 中的 Depolyment 如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">  type: git // 模式</span><br><span class=\"line\">  repo: https://github.com/yourGithub /yourGithubName.github.io.git // 自己 GitHub repos 連結</span><br><span class=\"line\">  branch: master // 分支</span><br></pre></td></tr></table></figure>\n\n<p>修改完後輸入下方指令：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo d g</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>指令說明：d →部屬、g →生成靜態頁面</li>\n</ul>\n<hr>\n<h2 id=\"其他指令\"><a href=\"#其他指令\" class=\"headerlink\" title=\"其他指令\"></a>其他指令</h2><figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo new \"<span class=\"built_in\">title</span>\"</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>說明：建立新文章</li>\n</ul>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo s -g</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>說明：s →啟動伺服器 -g →生成靜態頁面</li>\n</ul>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo d -g</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>說明： d →部屬模式 -g →生成靜態頁面</li>\n</ul>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo clean</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>說明：刪除已生成的靜態頁面及快取檔案</li>\n</ul>\n<h2 id=\"刪除指定文章\"><a href=\"#刪除指定文章\" class=\"headerlink\" title=\"刪除指定文章\"></a>刪除指定文章</h2><p>在本地端 source 資料夾，把指定的 md. 檔案刪除，在重新佈署即可，指令為：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo d -g</span><br></pre></td></tr></table></figure>\n\n<hr>\n<blockquote>\n<p>參考文章：<a href=\"https://hsiangfeng.github.io/hexo/20190411/932826160/\" target=\"_blank\" rel=\"noopener\">https://hsiangfeng.github.io/hexo/20190411/932826160/</a></p>\n</blockquote>\n","categories":["hexo"],"tags":["hexo"]}]