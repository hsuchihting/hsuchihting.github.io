[{"title":"JS 筆記 - innerHTML 與 for 迴圈的使用","url":"/javascript/20200709/3285756052/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/JavaScript%20note-01.jpg?alt=media&token=7bee0261-72ac-4de4-9f5a-f39d58735b7d\" alt=\"JavaScript Note\"></p>\n<p>這次記錄透過 for 迴圈篩選出資料後，渲染在網頁上，未來 for 迴圈也會很常篩選 JSON 的資料內容，這次的資料如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> data = [</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    team: <span class=\"string\">\"bulls\"</span>,</span><br><span class=\"line\">    name: <span class=\"string\">\"Jordan\"</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    team: <span class=\"string\">\"lakers\"</span>,</span><br><span class=\"line\">    name: <span class=\"string\">\"Bryant\"</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">];</span><br></pre></td></tr></table></figure>\n\n<p>這次要透過 for 迴圈要找出每一隊球員的名字，然後渲染在網頁上，這次 html 的內容有設定主題，如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>每個球隊的球員名字<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"list\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>先建立基本的元素內容與 for 迴圈：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//變數</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> el = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\".list\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> dataLen = data.length; <span class=\"comment\">//資料長度</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; dataLen; i++) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// for 迴圈</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>為了等等要將文字渲染在網頁上，這邊會多設定一個變數 <code>str</code>，裡面為空白，為了等等篩選資料要填入預設的空字串中，這個部份很重要，是渲染網頁的重要環節：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> el = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\".list\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> dataLen = data.length; <span class=\"comment\">//資料長度</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">\"\"</span>; <span class=\"comment\">//建立一個空字串，要將資料填入的</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; dataLen; i++) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// for 迴圈</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>為了避免等等組字串寫錯，先把空位寫好：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; dataLen; i++) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// for 迴圈</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> content = <span class=\"string\">\"&lt;li&gt;\"</span> + 球員名稱 + <span class=\"string\">\"&lt;/li&gt;\"</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>再將取資料的寫法 <code>data[i].name</code> 替換 球員名稱，透過加總把 變數 content 的內容回傳到 str 中，</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; dataLen; i++) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// for 迴圈</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> content = <span class=\"string\">\"&lt;li&gt;\"</span> + data[i].name + <span class=\"string\">\"&lt;/li&gt;\"</span>; <span class=\"comment\">//組字串</span></span><br><span class=\"line\">  str += content;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>最後再用寫好的 el 選取到的 list，透過 innerHTML 的方式，把 <code>str</code> 裡的資料渲染到網頁上，最後完成的程式碼就會如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//JSON 資料</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> data = [</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    team: <span class=\"string\">\"bulls\"</span>,</span><br><span class=\"line\">    name: <span class=\"string\">\"Jordan\"</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    team: <span class=\"string\">\"lakers\"</span>,</span><br><span class=\"line\">    name: <span class=\"string\">\"Bryant\"</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//變數</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> el = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\".list\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> dataLen = data.length; <span class=\"comment\">//資料長度</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">\"\"</span>; <span class=\"comment\">//建立一個空字串，要將資料填入的</span></span><br><span class=\"line\"><span class=\"comment\">// for 迴圈</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; dataLen; i++) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> content = <span class=\"string\">\"&lt;li&gt;\"</span> + data[i].name + <span class=\"string\">\"&lt;/li&gt;\"</span>; <span class=\"comment\">//組字串</span></span><br><span class=\"line\">  str += content; <span class=\"comment\">// 透過加總把 變數 content 的內容回傳到 str 中</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">el.innerHTML = str;</span><br><span class=\"line\"><span class=\"comment\">//透過 el 選取到的 list，透過 innerHTML 的方式，把 str 裡的資料渲染到網頁上</span></span><br></pre></td></tr></table></figure>\n\n<p>codepen: <a href=\"https://codepen.io/hnzxewqw/pen/ExjNRoL\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/ExjNRoL</a></p>\n<h2 id=\"心得\"><a href=\"#心得\" class=\"headerlink\" title=\"心得\"></a>心得</h2><p>中間寫一兩行就用 <code>console.log</code> 確認一下是否有正確寫對 JS，避免寫了十幾行，才來 debug 會比較辛苦。</p>\n","categories":["JavaScript"],"tags":["JavaScript"]},{"title":"jQuery 筆記 - $(this), parent(), siblings(), find() 用法","url":"/jQuery/20200630/3070987172/","content":"<p><img src=\"https://images.unsplash.com/photo-1511632765486-a01980e01a18?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1350&q=80\" alt=\"friends\"></p>\n<p>這一段筆記會用這個選單程式碼。</p>\n<h3 id=\"HTML\"><a href=\"#HTML\" class=\"headerlink\" title=\"HTML\"></a>HTML</h3><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"menu\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>選單1<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>選單2<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>選單3<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>選單4<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>選單5<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>選單6<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"SCSS\"><a href=\"#SCSS\" class=\"headerlink\" title=\"SCSS\"></a>SCSS</h3><figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.menu</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">500px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> auto;</span><br><span class=\"line\">  <span class=\"attribute\">margin-top</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">  li &#123;</span><br><span class=\"line\">    <span class=\"selector-tag\">border</span>: 1<span class=\"selector-tag\">px</span> <span class=\"selector-tag\">solid</span> <span class=\"selector-tag\">gray</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">padding</span>: 5<span class=\"selector-tag\">px</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">margin-bottom</span>: 10<span class=\"selector-tag\">px</span>;</span><br><span class=\"line\">    &amp;<span class=\"selector-pseudo\">:hover</span> &#123;</span><br><span class=\"line\">      <span class=\"attribute\">background-color</span>: yellow;</span><br><span class=\"line\">      <span class=\"attribute\">cursor</span>: pointer;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    &amp;<span class=\"selector-class\">.active</span> &#123;</span><br><span class=\"line\">      <span class=\"attribute\">background-color</span>: yellow;</span><br><span class=\"line\">      <span class=\"attribute\">cursor</span>: pointer;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"this-選到自身元素\"><a href=\"#this-選到自身元素\" class=\"headerlink\" title=\"this 選到自身元素\"></a>this 選到自身元素</h2><p>jQuery 中已經把 <code>this</code> 包裝好變成指向本身元素的寫法，變得相當方便，但在原生寫法就要看狀況而定了。</p>\n<p>首先可以看到 SCSS 有加上一段是預備讓 JS 動態新增 <code>.active</code> 的片段程式碼。<br>要記錄的是如何透過 <code>this</code> 選取到自身元素，並且產生效果。可以這樣寫，</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">\".menu li\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">  e.preventDefault();</span><br><span class=\"line\">  $(<span class=\"keyword\">this</span>).addClass(<span class=\"string\">\"active\"</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>當我點擊到 <code>.menu</code> 的 <code>li</code> 時，在選到的自身元素動態加上 <code>active</code>，就會產生效果囉！</p>\n<iframe height=\"350\" style=\"width: 100%;\"  src=\"https://codepen.io/tim_hsu/embed/LYGyKjj?height=265&theme-id=light&default-tab=result\" ></iframe>\n\n<h2 id=\"parent-選到父元素\"><a href=\"#parent-選到父元素\" class=\"headerlink\" title=\"parent() 選到父元素\"></a>parent() 選到父元素</h2><p>這個語法是 jQuery 包裝好的函式，也相當好用，當我點擊到元素本身後，會選到外層的父元素，並且控制它。</p>\n<p>這邊的情境是，現在有一個選單，裡面有一個按鈕，當我點選按鈕後，會把該格的清單改變背景顏色，</p>\n<h3 id=\"HTML-架構\"><a href=\"#HTML-架構\" class=\"headerlink\" title=\"HTML 架構\"></a>HTML 架構</h3><p>跟原本範本差不多，只是在 li 內加入了按鈕而已。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"menu\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn\"</span>&gt;</span>選單1<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn\"</span>&gt;</span>選單2<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn\"</span>&gt;</span>選單3<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn\"</span>&gt;</span>選單4<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn\"</span>&gt;</span>選單5<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn\"</span>&gt;</span>選單6<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"jQuery-寫法\"><a href=\"#jQuery-寫法\" class=\"headerlink\" title=\"jQuery 寫法\"></a>jQuery 寫法</h3><p>點擊按鈕後，自身元素的父元素會產生 <code>toggleClass</code> 效果，動態切換 <code>.active</code> 。<br><code>parent()</code> 語法要寫在 <code>$(this)</code> 的後面。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">\".btn\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">  e.preventDefault();</span><br><span class=\"line\">  $(<span class=\"keyword\">this</span>).parent().toggleClass(<span class=\"string\">\"active\"</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<iframe height=\"400\" style=\"width: 100%;\" src=\"https://codepen.io/tim_hsu/embed/KKVmjGp?height=265&theme-id=light&default-tab=result\" ></iframe>\n\n<h2 id=\"siblings-同層其他元素\"><a href=\"#siblings-同層其他元素\" class=\"headerlink\" title=\"siblings() 同層其他元素\"></a>siblings() 同層其他元素</h2><p>這個語法就是選到同層元素，並指定該效果給它，這邊練習是滑鼠選到該元素後會改變背景顏色，而其他同層元素背景取消背景色。</p>\n<p>一開始範例中的 <code>li</code> 就是同層元素。</p>\n<h3 id=\"jQuery-寫法-1\"><a href=\"#jQuery-寫法-1\" class=\"headerlink\" title=\"jQuery 寫法\"></a>jQuery 寫法</h3><p>當我點擊 <code>.menu</code> 中的 <code>li</code>，會在自身元素增加 <code>.active</code>，並選到同層的 <code>li</code> 元素(<code>siblings()</code>)同時取消賦予的 <code>.active</code> 效果。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">\".menu li\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">  e.preventDefault();</span><br><span class=\"line\">  $(<span class=\"keyword\">this</span>).addClass(<span class=\"string\">\"active\"</span>).siblings().removeClass(<span class=\"string\">\"active\"</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<iframe height=\"350\" style=\"width: 100%;\" src=\"https://codepen.io/tim_hsu/embed/vYLmqMV?height=265&theme-id=light&default-tab=result\"></iframe>\n\n<h2 id=\"find-找到子層元素\"><a href=\"#find-找到子層元素\" class=\"headerlink\" title=\"find() 找到子層元素\"></a>find() 找到子層元素</h2><p>前面提到父層元素，那當然也有子層元素，這次要選到 <code>li</code> 後，會改變當中的文字顏色，</p>\n<h3 id=\"HTML-架構-1\"><a href=\"#HTML-架構-1\" class=\"headerlink\" title=\"HTML 架構\"></a>HTML 架構</h3><p>可以看到 HTML 結構中，在 <code>li</code> 內有 <code>h3</code> 標題。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"menu\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>選單1<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>選單2<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>選單3<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>選單4<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>選單5<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>選單6<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"SCSS-樣式\"><a href=\"#SCSS-樣式\" class=\"headerlink\" title=\"SCSS 樣式\"></a>SCSS 樣式</h3><p>在 <code>h3</code> 加上預備要的樣式，並新增一個 <code>.active</code> 預備動態新增效果時讓 <code>h3</code> 的文字改變顏色。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.menu</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">500px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> auto;</span><br><span class=\"line\">  <span class=\"attribute\">margin-top</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">  li &#123;</span><br><span class=\"line\">    <span class=\"selector-tag\">border</span>: 1<span class=\"selector-tag\">px</span> <span class=\"selector-tag\">solid</span> <span class=\"selector-tag\">gray</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">padding</span>: 5<span class=\"selector-tag\">px</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">margin-bottom</span>: 10<span class=\"selector-tag\">px</span>;</span><br><span class=\"line\">    &amp;<span class=\"selector-pseudo\">:hover</span> &#123;</span><br><span class=\"line\">      <span class=\"attribute\">background-color</span>: <span class=\"number\">#eeeeee</span>;</span><br><span class=\"line\">      <span class=\"attribute\">cursor</span>: pointer;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-tag\">h3</span> &#123;</span><br><span class=\"line\">      <span class=\"attribute\">display</span>: inline-block;</span><br><span class=\"line\">      &amp;.active &#123;</span><br><span class=\"line\">        <span class=\"selector-tag\">color</span>: <span class=\"selector-tag\">red</span>;</span><br><span class=\"line\">        <span class=\"selector-tag\">cursor</span>: <span class=\"selector-tag\">pointer</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"jQuery-寫法-2\"><a href=\"#jQuery-寫法-2\" class=\"headerlink\" title=\"jQuery 寫法\"></a>jQuery 寫法</h3><p>當我點擊到 <code>li</code> 時，會選到 <code>li</code> 自身元素，再找到裡面的子層元素 <code>h3</code>，並且在 <code>.active</code> 做切換。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">\".menu li\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">  e.preventDefault();</span><br><span class=\"line\">  $(<span class=\"keyword\">this</span>).find(<span class=\"string\">\"h3\"</span>).toggleClass(<span class=\"string\">\"active\"</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<iframe height=\"350\" style=\"width: 100%;\" src=\"https://codepen.io/tim_hsu/embed/LYGywEr?height=265&theme-id=light&default-tab=result\" ></iframe>\n","categories":["jQuery"],"tags":["jQuery"]},{"title":"JS 筆記 - 使用 JavaScript 插入 innerHTML","url":"/javascript/20200630/2965249736/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/JavaScript%20note-01.jpg?alt=media&token=7bee0261-72ac-4de4-9f5a-f39d58735b7d\" alt=\"JavaScript Note\"></p>\n<h2 id=\"innerHTML\"><a href=\"#innerHTML\" class=\"headerlink\" title=\"innerHTML\"></a>innerHTML</h2><ul>\n<li>方法：組完字串後，傳進語法進行網頁渲染。</li>\n<li>優點：效能快。</li>\n<li>缺點：資安風險高，須確保資料來源沒問題。</li>\n</ul>\n<p>原本學習的方式是用 textContent 語法，在 HTML 上寫上一個 <code>&lt;div&gt;</code> 標籤，裡面的指定一個 <code>id</code>。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width, initial-scale=1.0\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"X-UA-Compatible\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"ie=edge\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"main\"</span>&gt;</span>1234<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>JS 使用 textContent 渲染網頁原本會是這樣寫：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> el = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"main\"</span>);</span><br><span class=\"line\">el.textContent = <span class=\"string\">\"Hello\"</span>;</span><br></pre></td></tr></table></figure>\n\n<p>這次用 innerHTML 的方式渲染網頁：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> el = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"main\"</span>);</span><br><span class=\"line\">el.innerHTML = <span class=\"string\">\"&lt;h1&gt;innerHTML HELLO&lt;/h1&gt;\"</span>;</span><br></pre></td></tr></table></figure>\n\n<p>結果就會得到 <code>h1</code> 標籤 <strong>innerHTML HELLO</strong>。</p>\n<blockquote>\n<p>innerHTML 有一個特性，就是會覆蓋原本寫的內容，原本在 <code>id=&quot;main&quot;</code>，裡面寫的內容 1234，被更改為 innerHTML HELLO 了。</p>\n</blockquote>\n<hr>\n<p>也可以加上 <code>class</code> 名稱，讓 CSS 吃到效果，就只要按照平常設定 <code>class</code> 的方式，寫在 innerHTML 的標籤裡就可以了。如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> el = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"main\"</span>);</span><br><span class=\"line\">el.innerHTML = <span class=\"string\">'&lt;h1 class=\"blue\"&gt;innerHTML HELLO&lt;/h1&gt;'</span>;</span><br></pre></td></tr></table></figure>\n\n<p>codepen： <a href=\"https://codepen.io/hnzxewqw/pen/VwLKxGG\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/VwLKxGG</a></p>\n<hr>\n<p><strong>小提示：</strong></p>\n<p>在 JS 中引號的用法很重要，不能混搭使用，以這行為例：<br><code>&#39;&lt;h1 class=&quot;blue&quot;&gt;innerHTML HELLO&lt;/h1&gt;&#39;</code>，<br>倘若改成都是單引號：<br><code>&#39;&lt;h1 class=&#39;blue&#39;&gt;innerHTML HELLO&lt;/h1&gt;&#39;</code>，<br>電腦會誤認為：<br><code>&#39;&lt;h1 class=&#39;</code> + blue + <code>&#39;&gt;innerHTML HELLO&lt;/h1&gt;&#39;</code></p>\n<p>所以使用 JS 的引號一定要一致!</p>\n<h2 id=\"透過-innerHTML-的方式在網頁上渲染一個-li-的-a-連結寫法\"><a href=\"#透過-innerHTML-的方式在網頁上渲染一個-li-的-a-連結寫法\" class=\"headerlink\" title=\"透過 innerHTML 的方式在網頁上渲染一個 li 的 a 連結寫法\"></a>透過 innerHTML 的方式在網頁上渲染一個 li 的 a 連結寫法</h2><p>先建立一個 <code>ul</code>，並且命名一個 <code>class</code> 為 list，如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"list\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>這時會看到 ul 裡面是沒有 li 的，透過 JS 的將 li 渲染在網頁上，先建立三個要使用的變數：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> el=<span class=\"built_in\">document</span>.querySelector(.list); <span class=\"comment\">//選取到 class=\"list\"</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> link=<span class=\"string\">\"https://www.google.com.tw/\"</span>; <span class=\"comment\">//a 連結網址</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> text=<span class=\"string\">\"用 JS 渲染 li 的內容在網頁上\"</span>; <span class=\"comment\">// a 連結文字</span></span><br></pre></td></tr></table></figure>\n\n<p>這邊在透過 <code>el.innerHTML</code> 的語法建立標籤內容，將其渲染到網頁上，</p>\n<p>因為我很怕我會打錯，所以會先在 html 標籤內打好，並且把變數預先要放的位置先用中文放進去，避免等等貼到 JS 搞混了：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\" 連結變數 \"</span>&gt;</span> 文字變數 <span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>下方的正確寫法會看到是 html 裡面的語法除了變數外，是用單引號圈起來的，並且變數兩邊用 + 號做連結，所以就會變下方這樣，要確認引號的位置有正確，如果不正確就會無法顯示：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">el.innerHTML = <span class=\"string\">'&lt;li&gt;&lt;a href=\"'</span> + 變數名稱 + <span class=\"string\">'\"&gt;'</span> + 變數名稱 + <span class=\"string\">\"&lt;/a&gt;&lt;/li&gt;\"</span>;</span><br></pre></td></tr></table></figure>\n\n<p>最後再把變數名稱更換成預先設定好的變數即可：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">el.innerHTML = <span class=\"string\">'&lt;li&gt;&lt;a href=\"'</span> + link + <span class=\"string\">'\"&gt;'</span> + text + <span class=\"string\">\"&lt;/a&gt;&lt;/li&gt;\"</span>;</span><br></pre></td></tr></table></figure>\n\n<p>codepen: <a href=\"https://codepen.io/hnzxewqw/pen/YzXpvwR?editors=1010\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/YzXpvwR?editors=1010</a></p>\n","categories":["JavaScript"],"tags":["JavaScript"]},{"title":"終於成為正式的前端工程師?","url":"/Learning-Experience/20200629/2632109835/","content":"<p><img src=\"https://images.unsplash.com/photo-1516259762381-22954d7d3ad2?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1366&q=80\" alt=\"image alt\"></p>\n<h2 id=\"到職前與入職後\"><a href=\"#到職前與入職後\" class=\"headerlink\" title=\"到職前與入職後\"></a>到職前與入職後</h2><p>從事平面設計近十年，轉換成前端工程師是一個不容易的事情，過去美學教育的思維是比較多重思考且主觀的，跟程式思維完全大不同。從感性到理性需要做許多的調整，在過去一年的學習與努力下，其實我也不知道自己跟業界的落差到底有多少，面試後也只是大概知道可能在業界需要哪方面的人才，但還是不確定是否能夠踏進來程式領域，看到網路上許多文章都說，除了會議之外，如果不需要討論或是開會，基本上純開發與維護真的可以遠端工作，只要一台電腦基本上很多程式上的事情都可以解決，但前提是要累積足夠的開發經驗與技術能力，才能往這個方向前進。</p>\n<p><del>原本天真的以為可以至少有一天可以遠端工作，真是太好笑了。</del></p>\n<p>另外前端一開始其實有預想一些狀況，比如說：可以做比較多的互動界面。但後來更廣泛的理解前端介面，其實只要是人為使用的都可以說是前端介面的範疇，而目前任職的領域是負責專案後台的開發，所以互動的內容是不高的，但所需要的技術含量是不少的，後台有些看似理所當然的功能，都需要使用很多 JavaScript 來實現。</p>\n<p>到職前後一定會跟預期有落差，這個落差可能來自於專案內容，公司文化，還有使用的工具，但我自己是用開闊的心態來看待前端，因為對我來說都是可以學習的。</p>\n<h2 id=\"預想與現實的落差\"><a href=\"#預想與現實的落差\" class=\"headerlink\" title=\"預想與現實的落差\"></a>預想與現實的落差</h2><p>可能在準備作品集的過程已經學習很多，加上線上老師教學很多闡述能力是很好的，進入職場才會發現有些人講中文，可能聽起來卻不知道在講什麼內容，不要預想每個工程師都會像老師有很好的闡述能力，另外專案的內容也會跟預想的的不同，現實的專案畢竟就是要符合客戶與公司內部使用，所以有趣程度一定大不相同，後台所需要的介面就是要清楚明瞭，乾淨簡單，要馬上得到資訊，互動性一定是較低的，而後台卻也是許多產業所需要的前端介面。</p>\n<p>還有部門文化不一定都會熱絡討論，可能都在同個空間工作，但會說上話的卻只有一兩天這種現象。</p>\n<h2 id=\"面對專案的技術力\"><a href=\"#面對專案的技術力\" class=\"headerlink\" title=\"面對專案的技術力\"></a>面對專案的技術力</h2><p>任職三個月以來，技術力的提升是快速的，因為要因應專案需求，會大量的 google 找資源，建立資源，努力寫需求的練習，技術力一次會學習很多，但卻比較沒有章法，我利用部落格寫成筆記，把重複會遇到的放在部落格，之後再從部落格找資料就好。有時候在專案上會卡關很久，也相對反映出自己的技術力還有許多要加強的地方，不足是一定的，要寬心面對這件事情，今天要比昨天的自己更強就是了。</p>\n<h2 id=\"感恩的心態\"><a href=\"#感恩的心態\" class=\"headerlink\" title=\"感恩的心態\"></a>感恩的心態</h2><p>老實說，感恩的心再踏入前端領域後，就一直是這樣，網頁很老實，給什麼就回饋什麼，非常現實，也無法讓自己一步登天，只能誠實面對自己的不足，並且提出問題有人回答都要感恩，因為都是非義務，也非必要的回答，但能在問題提出，有經驗的工程師願意做出回答並指點迷津，都要向他們感恩。</p>\n<p>並且一路上家人的陪伴與支持，更是要感恩，因為最辛苦的不是自己而已，而是他們陪伴的心與實質付出的行動。</p>\n<h2 id=\"不恥下問\"><a href=\"#不恥下問\" class=\"headerlink\" title=\"不恥下問\"></a>不恥下問</h2><p>在程式沒有蠢問題，因為程式語言也是一門語言，而語言是需要使用與養成的，唯有不斷的提問跟反覆練習，才能慢慢的熟練，許多答案是問出來的，不一定是想出來的。與經驗較豐富的工程師提問，而提問不一定是要拿到答案，而是跟著他們的思維走一遍，並且自己再多練習幾次，答案便會呼之欲出。</p>\n<h2 id=\"整理在專案上的學習\"><a href=\"#整理在專案上的學習\" class=\"headerlink\" title=\"整理在專案上的學習\"></a>整理在專案上的學習</h2><p>分類資料夾很重要，把資源有系統的整理，不僅在找線索快速，也讓自己整理過去學習的思緒，把遇到不熟悉或是新的知識轉換成為文字與部落格，最大的受益者一定是自己。慢慢的會發現，許多情境都很像，只是主題不同，專案很多都是換湯不換藥。</p>\n<h2 id=\"工作時間的調配\"><a href=\"#工作時間的調配\" class=\"headerlink\" title=\"工作時間的調配\"></a>工作時間的調配</h2><p>學習可以納入工作時間的一部分，我會利用早上兩個小時先做學習，因為精神較好，專注力較集中，效果也較好，而下午較長的時間，拿來解決專案問題，並善用 <code>codepen</code> 或是其他程式網站，把不懂的 code 先記錄下來，再反覆的研究，使用 todolist 規劃自己每天的進度，並搭配番茄鐘是很好的成效，透過番茄鐘可以知道自己在專案上花了多少時間，讓自己適當工作也適當休息。</p>\n<p>目前平均在工作上大概都花費 12~14 顆番茄鐘，並設定短休息 5 分鐘與長休息 10 分鐘，希望可以在提升效率能夠控制在 10 顆番茄鐘內。</p>\n<h2 id=\"工作前的第一件事\"><a href=\"#工作前的第一件事\" class=\"headerlink\" title=\"工作前的第一件事\"></a>工作前的第一件事</h2><h3 id=\"整理思緒\"><a href=\"#整理思緒\" class=\"headerlink\" title=\"整理思緒\"></a>整理思緒</h3><p>不要馬上工作，我會在座位上先禱告沉澱心情，讓自己安靜心，進入工作模式與思維，不要馬上開網頁跟專案，思維模式開始運作後，會比較進入狀況。</p>\n<h3 id=\"不要打開-email\"><a href=\"#不要打開-email\" class=\"headerlink\" title=\"不要打開 email\"></a>不要打開 email</h3><p>通常急事一定會打內線連絡，email 我都是接近中午才開，還有下午三點左右再開一次，看看是否有重要行政通知。</p>\n<h2 id=\"與同事的溝通\"><a href=\"#與同事的溝通\" class=\"headerlink\" title=\"與同事的溝通\"></a>與同事的溝通</h2><p>人際互動在職場是很重要的環節，關係打好了，工作上也會比較舒服，不會因為爭執影響情緒，導致工作效益降低，並且思考如何以團隊勝利主義出發，團隊變強，自己也是相對變強。</p>\n<h2 id=\"前端與後端\"><a href=\"#前端與後端\" class=\"headerlink\" title=\"前端與後端\"></a>前端與後端</h2><p>前後端完整分離的公司可遇不可求，大多中小企業人力不足，幾乎前後端都要有了解，只是了解層面多寡，建議都吸收，都了解。有利無弊!</p>\n<h2 id=\"撰寫程式碼的思維\"><a href=\"#撰寫程式碼的思維\" class=\"headerlink\" title=\"撰寫程式碼的思維\"></a>撰寫程式碼的思維</h2><p>對於有些工程師來說，寫 JavaScript 才是寫程式(笑)，這是個人觀點問題，個人就不評論，但主管告訴我，寫 JS 可以用兩個方向做思考，動作與程序，先有動作，再把程序連接起來，最後再來優化，這樣比較不會卡關，並且把問題切到最碎片化，就會發現其實每一個小問題都會回到最基本的程式架構。</p>\n<h2 id=\"放棄吧-不要鑽牛角尖\"><a href=\"#放棄吧-不要鑽牛角尖\" class=\"headerlink\" title=\"放棄吧!不要鑽牛角尖\"></a>放棄吧!不要鑽牛角尖</h2><p>對於有些程式碼的來源不一定當下馬上要弄懂，因為工作是解決問題，並非做學問，做中學是最快的方式，可能當下不懂，但寫多了，假以時日再回來看程式碼，會突然發現懂了，所以卡關超過 30 分鐘，先放下吧!繼續往下走。</p>\n<h2 id=\"不只找貴人，也要成為別人的貴人\"><a href=\"#不只找貴人，也要成為別人的貴人\" class=\"headerlink\" title=\"不只找貴人，也要成為別人的貴人\"></a>不只找貴人，也要成為別人的貴人</h2><p>對我來說，output 比 input 的學習成效更高，在尋求幫助之時，也把得到的答案與做法寫下來，並分享在部落格，或許這個方法也間接幫助到遇到相同問題的人，甚至還會招喚大神出來修正觀念，怎麼說都是賺到。</p>\n<h2 id=\"正確的問題才會得到正確的答案\"><a href=\"#正確的問題才會得到正確的答案\" class=\"headerlink\" title=\"正確的問題才會得到正確的答案\"></a>正確的問題才會得到正確的答案</h2><p>從設計師轉換成工程師最棒一個禮物就是學習如何提出正確的問題，很多時候會不知道怎麼提問，但透過提問不只是把問題重新整理，在整理的過程中，還有可能會找到答案，減少不必要的問題。</p>\n<h2 id=\"無法改變環境，那就先適應環境\"><a href=\"#無法改變環境，那就先適應環境\" class=\"headerlink\" title=\"無法改變環境，那就先適應環境\"></a>無法改變環境，那就先適應環境</h2><p>沒有相關資訊背景，轉換職涯跑道會遇到一個狀態就是技術力掌握度不如同部門的人，而我目前任職的公司每一個人在專案上都有一定的經驗程度，先排除程式碼寫得好不好，再怎麼樣程式邏輯都比我這個跨行的來得強，雖然在技術上有些沒有使用，也很想導入新技術，但因現在無法改變環境，就先透過試用期觀察以下幾點：</p>\n<ol>\n<li><strong>部門文化</strong>：我個人覺得這很重要，觀察就有同仁之間的互動與風氣，講話方式與音量，就可以知道這個公司的專案樂趣度到哪裡。<del>(好吧!可能我的公司滿無聊的 XD)</del></li>\n<li><strong>會議氛圍</strong>：在會議上也可以觀察出與會者與報告者，以及上位者的互動，來看一下這間公司的眼界到哪裡，部門主管與高層主管之間的想法是否一致，跨部門會議的共識是否相同，都是很值得觀察的地方。</li>\n<li><strong>行政運作</strong>：像我是待在中型企業，有些行政聯繫方式也可以看得出公司運作的狀況，使用的工具或是聯繫的管道，是較傳統還是新穎，至於是否先進，就見仁見智了，對於行政來說，可以順利運作就好。</li>\n<li><strong>閒聊話題</strong>：除了工作與專案外，同事們都在聊什麼? 我們部門是很少講話，真的滿悶的，不過隔壁部門到是滿常講幹話就是了。</li>\n</ol>\n<h2 id=\"如果一行程式碼無法解決，那就寫兩行\"><a href=\"#如果一行程式碼無法解決，那就寫兩行\" class=\"headerlink\" title=\"如果一行程式碼無法解決，那就寫兩行\"></a>如果一行程式碼無法解決，那就寫兩行</h2><p>身為剛入職的前端工程師，除了把握學習的機會外，也要規劃怎麼讓自己在專案中成長，若有機會多看前人的程式碼有個好處，去了解原本程式碼脈絡跟思維，但也不要太苛求自己要馬上寫出行雲流水般的程式碼，因為那是不可能的，但可以具備一個思維是把程式碼改成可讀性更高或著更值觀的程式碼是件很棒的事情，當哪天或其他工程師接手時，不用再看邏輯，而是看程式碼。但還是要追求簡短又可讀性高的程式碼，這個就要靠專案慢慢來成長了。</p>\n<p>先求可以讓專案動起來，哪天有空再回頭重構程式碼，也是檢視自己能力的好機會。</p>\n<h2 id=\"保護眼睛\"><a href=\"#保護眼睛\" class=\"headerlink\" title=\"保護眼睛\"></a>保護眼睛</h2><p>因為要長時間看螢幕，我入職後就去配了一副抗藍光眼鏡，真的長時間看電腦比較不疲勞喔!!<br>如果配合番茄鐘休息，起來伸展跟走走，會更好，讓眼睛適當休息，也讓身體休息。</p>\n<h2 id=\"結語\"><a href=\"#結語\" class=\"headerlink\" title=\"結語\"></a>結語</h2><p>前端工程師是一條不順遂的道路，要習慣跟挫折相處，因為光是一個 bug 就可以卡個幾個小時甚至幾天，但破解後真的會有滿滿的成就感，加上載具的蓬勃發展，許多技術如雨後春筍般出現，可能會無所適從，不過也不需要太緊張，掌握好基本觀念，其他都是這些基本觀念延伸出來的工具，並且多跟厲害的人交流，日積月累一定會成長的。</p>\n","categories":["Learning Experience"],"tags":["前端學習之路"]},{"title":"JS 筆記 - querySelector、setAttribute 用法","url":"/javascript/20200622/114236291/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/JavaScript%20note-01.jpg?alt=media&token=7bee0261-72ac-4de4-9f5a-f39d58735b7d\" alt=\"JavaScript Note\"></p>\n<p>前面學過 textContent 使用方法，如何用更簡短且易讀的程式碼來控制網頁元素？</p>\n<h2 id=\"透過變數管理相同的程式碼\"><a href=\"#透過變數管理相同的程式碼\" class=\"headerlink\" title=\"透過變數管理相同的程式碼\"></a>透過變數管理相同的程式碼</h2><p>原本要控制 id 的寫法都會是：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"nameId\"</span>).textContent = value;</span><br></pre></td></tr></table></figure>\n\n<p>但可以這樣寫會更易讀且未來維護也更便利：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> el = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"nameId\"</span>);</span><br><span class=\"line\"><span class=\"comment\">//建立一個變數，將原本要控制的條件用變數來管理</span></span><br><span class=\"line\">el.textContent = value;</span><br><span class=\"line\"><span class=\"comment\">//透過變數管理的程式碼，後面加上需要的屬性，就能更快得到所要的值</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>在網頁 id 是唯一性，不可以同時存在兩種相同的 id 名稱</p>\n</blockquote>\n<hr>\n<h2 id=\"querySelector-選擇單一元素\"><a href=\"#querySelector-選擇單一元素\" class=\"headerlink\" title=\"querySelector 選擇單一元素\"></a>querySelector 選擇單一元素</h2><p>跟上方的寫法很像，是這樣寫的：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> el = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\".titleClass\"</span>);</span><br><span class=\"line\"><span class=\"comment\">//不只可以選擇 id，也可以選擇 class</span></span><br><span class=\"line\">el.textContent = value;</span><br><span class=\"line\"><span class=\"comment\">//透過變數管理的程式碼，後面加上需要的屬性，就能更快得到所要的值</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>若只有選擇單一元素，可以使用此語法。<br>多個 class 若用此語法時，只會存取第一個 Class 內的資料。</p>\n</blockquote>\n<p>codepen: <a href=\"https://codepen.io/hnzxewqw/pen/JjdRojN\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/JjdRojN</a></p>\n<hr>\n<h2 id=\"querySelectorAll-重複選取多個元素\"><a href=\"#querySelectorAll-重複選取多個元素\" class=\"headerlink\" title=\"querySelectorAll 重複選取多個元素\"></a>querySelectorAll 重複選取多個元素</h2><p>與上方寫法一樣，只是選擇屬性不同：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> el = <span class=\"built_in\">document</span>.querySelectorAll(<span class=\"string\">\".titleClass em\"</span>);</span><br><span class=\"line\"><span class=\"comment\">//不只可以選擇 id，也可以選擇 class 裡面的多個選項。</span></span><br><span class=\"line\">el.textContent = value;</span><br><span class=\"line\"><span class=\"comment\">//透過變數管理的程式碼，後面加上需要的屬性，就能更快得到所要的值</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>若有多個重複的元素要選擇，可以使用此語法。</p>\n</blockquote>\n<blockquote>\n<p>通常會搭配<strong>陣列</strong>與<strong>迴圈</strong>使用：</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> el = <span class=\"built_in\">document</span>.querySelectorAll(<span class=\"string\">\".titleClass em\"</span>);</span><br><span class=\"line\"><span class=\"comment\">//不只可以選擇 id，也可以選擇 class。</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(el); <span class=\"comment\">//結果會得到陣列的值</span></span><br><span class=\"line\">el[<span class=\"number\">0</span>].textContent = <span class=\"string\">\"123\"</span>;</span><br><span class=\"line\">el[<span class=\"number\">1</span>].textContent = <span class=\"string\">\"456\"</span>;</span><br></pre></td></tr></table></figure>\n\n<p>倘若不知道抓取的資料有多少，就使用迴圈依序來抓取資料</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> el = <span class=\"built_in\">document</span>.querySelectorAll(<span class=\"string\">\".titleClass em\"</span>);</span><br><span class=\"line\"><span class=\"comment\">//不只可以選擇 id，也可以選擇 class。</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(el); <span class=\"comment\">//結果會得到陣列的值</span></span><br><span class=\"line\"></span><br><span class=\"line\">el[<span class=\"number\">0</span>].textContent = <span class=\"string\">\"123\"</span>;</span><br><span class=\"line\">el[<span class=\"number\">1</span>].textContent = <span class=\"string\">\"123\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> elTotal = el.length;</span><br><span class=\"line\"><span class=\"comment\">//抓取 elTotal 的數值總長度</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; elTotal; i++) &#123;</span><br><span class=\"line\">  el[i].textContent = i + <span class=\"string\">\"123\"</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//會得到結果是</span></span><br><span class=\"line\"><span class=\"comment\">//0123</span></span><br><span class=\"line\"><span class=\"comment\">//1123</span></span><br></pre></td></tr></table></figure>\n\n<p>codepen: <a href=\"https://codepen.io/hnzxewqw/pen/dyopPGd\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/dyopPGd</a></p>\n<hr>\n<h2 id=\"setAttribute-增加標籤屬性\"><a href=\"#setAttribute-增加標籤屬性\" class=\"headerlink\" title=\"setAttribute 增加標籤屬性\"></a>setAttribute 增加標籤屬性</h2><p>透過 JavaScript 增加 HTML 標籤屬性，例如要動態加上一個 <code>a</code> 連結，可以這樣寫：<br>先在 HTML 新增一個 class，</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"titleClass\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>Link<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"js/practice1.js\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>JS 動態新增標籤屬性</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> el = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\".titleClass\"</span>); <span class=\"comment\">//選擇單一元素為 HTML 裡的 class 名稱為 titleClass</span></span><br><span class=\"line\">el.setAttribute(<span class=\"string\">\"href\"</span>, <span class=\"string\">\"www.facebook.com\"</span>); <span class=\"comment\">//前面是屬性，後面是內容</span></span><br></pre></td></tr></table></figure>\n\n<p>這樣就可以透過 JS 新增一個連結到 HTML</p>\n<hr>\n<p><strong>動態新增 id 來操控 HTML</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"str\"</span>&gt;</span>title<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"js/practice1.js\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>在 CSS 動態新增 id</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-id\">#strId</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: blue;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">18px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>透過 JS 來操控</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> elStr = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\".str\"</span>); <span class=\"comment\">//選擇單一元素為 HTML 的 class 名稱為 str</span></span><br><span class=\"line\">elStrt.setAttribute(<span class=\"string\">\"id\"</span>, <span class=\"string\">\"strId\"</span>); <span class=\"comment\">//因為在 CSS 有動態新增一個 id，所以選擇新增的 id 屬性來控制他的值(會帶回 CSS 的設定內容)</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"結語\"><a href=\"#結語\" class=\"headerlink\" title=\"結語\"></a>結語</h2><p>querySelector 可以選擇 Class 變得相當方便與高彈性，是很好用的語法。</p>\n","categories":["JavaScript"],"tags":["JavaScript"]},{"title":"jQuery 筆記 - Swiper 套件起手式","url":"/jQuery/20200616/1889697036/","content":"<p><img src=\"https://swiperjs.com/i/share-banner.png\" alt=\"swiper\"></p>\n<p>Swiper.js 是一款非常好用的第三方插件，筆記一下起初設定。</p>\n<h2 id=\"載入-CSS-跟-JS\"><a href=\"#載入-CSS-跟-JS\" class=\"headerlink\" title=\"載入 CSS 跟 JS\"></a>載入 CSS 跟 JS</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;https:&#x2F;&#x2F;unpkg.com&#x2F;swiper&#x2F;css&#x2F;swiper.css&quot;&gt;</span><br><span class=\"line\">&lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;https:&#x2F;&#x2F;unpkg.com&#x2F;swiper&#x2F;css&#x2F;swiper.min.css&quot;&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;unpkg.com&#x2F;swiper&#x2F;js&#x2F;swiper.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class=\"line\">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;unpkg.com&#x2F;swiper&#x2F;js&#x2F;swiper.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"使用-npm-安裝\"><a href=\"#使用-npm-安裝\" class=\"headerlink\" title=\"使用 npm 安裝\"></a>使用 npm 安裝</h3><figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install swiper</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"使用-cdn-載入\"><a href=\"#使用-cdn-載入\" class=\"headerlink\" title=\"使用 cdn 載入\"></a>使用 cdn 載入</h3><h4 id=\"css\"><a href=\"#css\" class=\"headerlink\" title=\"css\"></a>css</h4><figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">https: //<span class=\"title\">cdnjs.cloudflare.com</span>/<span class=\"title\">ajax</span>/<span class=\"title\">libs</span>/<span class=\"title\">Swiper</span>/5.4.3/<span class=\"title\">css</span>/<span class=\"title\">swiper.css</span>;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"javascript\"><a href=\"#javascript\" class=\"headerlink\" title=\"javascript\"></a>javascript</h4><figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">https://<span class=\"title\">cdnjs.cloudflare.com</span>/<span class=\"title\">ajax</span>/<span class=\"title\">libs</span>/<span class=\"title\">Swiper</span>/5.4.3/<span class=\"title\">js</span>/<span class=\"title\">swiper.js</span></span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Layout\"><a href=\"#Layout\" class=\"headerlink\" title=\"Layout\"></a>Layout</h2><h2 id=\"HTML-程式碼\"><a href=\"#HTML-程式碼\" class=\"headerlink\" title=\"HTML 程式碼\"></a>HTML 程式碼</h2><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- Slider main container --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"swiper-container\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- Additional required wrapper --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"swiper-wrapper\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- Slides --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"swiper-slide\"</span>&gt;</span>Slide 1<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"swiper-slide\"</span>&gt;</span>Slide 2<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"swiper-slide\"</span>&gt;</span>Slide 3<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        ...</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- If we need pagination --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"swiper-pagination\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- If we need navigation buttons --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"swiper-button-prev\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"swiper-button-next\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- If we need scrollbar --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"swiper-scrollbar\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"CSS-設定\"><a href=\"#CSS-設定\" class=\"headerlink\" title=\"CSS 設定\"></a>CSS 設定</h2><figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.swiper-container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">600px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">300px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"JS-設定\"><a href=\"#JS-設定\" class=\"headerlink\" title=\"JS 設定\"></a>JS 設定</h2><h3 id=\"javascript-寫法\"><a href=\"#javascript-寫法\" class=\"headerlink\" title=\"javascript 寫法\"></a>javascript 寫法</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> mySwiper = <span class=\"keyword\">new</span> Swiper(<span class=\"string\">\".swiper-container\"</span>, &#123;</span><br><span class=\"line\">  <span class=\"comment\">// Optional parameters</span></span><br><span class=\"line\">  direction: <span class=\"string\">\"vertical\"</span>,</span><br><span class=\"line\">  loop: <span class=\"literal\">true</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// If we need pagination</span></span><br><span class=\"line\">  pagination: &#123;</span><br><span class=\"line\">    el: <span class=\"string\">\".swiper-pagination\"</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Navigation arrows</span></span><br><span class=\"line\">  navigation: &#123;</span><br><span class=\"line\">    nextEl: <span class=\"string\">\".swiper-button-next\"</span>,</span><br><span class=\"line\">    prevEl: <span class=\"string\">\".swiper-button-prev\"</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// And if we need scrollbar</span></span><br><span class=\"line\">  scrollbar: &#123;</span><br><span class=\"line\">    el: <span class=\"string\">\".swiper-scrollbar\"</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"jQuery-寫法\"><a href=\"#jQuery-寫法\" class=\"headerlink\" title=\"jQuery 寫法\"></a>jQuery 寫法</h3><p>直接寫在 jQuery 核心裡面即可</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">$(<span class=\"built_in\">document</span>).ready(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">//initialize swiper when document ready</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> mySwiper = <span class=\"keyword\">new</span> Swiper(<span class=\"string\">\".swiper-container\"</span>, &#123;</span><br><span class=\"line\">    <span class=\"comment\">// Optional parameters</span></span><br><span class=\"line\">    direction: <span class=\"string\">\"vertical\"</span>,</span><br><span class=\"line\">    loop: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"其他-DEMO-樣式\"><a href=\"#其他-DEMO-樣式\" class=\"headerlink\" title=\"其他 DEMO 樣式\"></a>其他 DEMO 樣式</h2><p>可以參考官網樣式，挑選喜歡的<a href=\"https://swiperjs.com/demos/\" target=\"_blank\" rel=\"noopener\">版型</a>，各版型都有提供 source code ，只要改成自己欲呈現的內容即可，相當方便。</p>\n<h2 id=\"Swiper-參數\"><a href=\"#Swiper-參數\" class=\"headerlink\" title=\"Swiper 參數\"></a>Swiper 參數</h2><p>挑幾個比較常用的介紹：</p>\n<ul>\n<li><strong>direction</strong>: 可選擇水平 (<code>horizontal</code>) 或是垂直 (<code>vertical</code>)，預設為水平。</li>\n<li><strong>initialSlide</strong>: 初始幻燈片的索引號，預設為 0。</li>\n<li><strong>speed</strong>: 幻燈片之間的過渡持續時間（以毫秒為單位），預設為 300 毫秒。</li>\n<li><strong>setWrapperSize</strong>: 啟用此選項，插件將在滑動包裝器上將寬度/高度設置為等於所有幻燈片的總大小。對於大多數不支持 Flexbox 佈局的瀏覽器，通常應將其用作兼容性後備選項，預設為 <code>false</code>。</li>\n<li><strong>spaceBetween</strong>: 幻燈片之間的距離（以 px 為單位），預設為 0。</li>\n<li><strong>loop</strong>: 是否啟用循環，預設值為 <code>false</code>。</li>\n<li><strong>slidesPerView</strong>: 每個視圖的幻燈片數量（同時在滑塊容器上可見的幻燈片）。<blockquote>\n<p>與 <code>loop：true</code> 一起使用，設定值為 auto，會自動輪播，需要指定 <code>loopedSlides</code> 參數以及要循環的幻燈片數量。</p>\n</blockquote>\n</li>\n<li><strong>autoplay</strong>: 自動輪播效果，要搭配 <code>delay</code>。如下方程式碼：</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">autoplay: &#123;</span><br><span class=\"line\">   delay: <span class=\"number\">5000</span>,</span><br><span class=\"line\"> &#125;,</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><strong>effect</strong>:可以選擇 <code>slide</code>(幻燈片)，<code>fade</code>(淡入淡出)，<code>cube</code>(立方體)，<code>coverflow</code>(覆蓋)，<code>flip</code>(翻轉) 等效果。</li>\n</ul>\n<p>參數文件 <a href=\"https://swiperjs.com/api/\" target=\"_blank\" rel=\"noopener\">https://swiperjs.com/api/</a></p>\n<h2 id=\"練習範例\"><a href=\"#練習範例\" class=\"headerlink\" title=\"練習範例\"></a>練習範例</h2><a href=\"https://hsuchihting.github.io/swiper_practice/swiper.html\">\n點我看範例</a>\n\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><ul>\n<li><a href=\"https://swiperjs.com/\" target=\"_blank\" rel=\"noopener\">Swiper 官方網站 </a></li>\n</ul>\n","categories":["jQuery"],"tags":["jQuery"]},{"title":"JS 筆記 - 認識 DOM 文件物件模型","url":"/javascript/20200615/1316819935/","content":"<p><img src=\"https://images.unsplash.com/photo-1519567770579-c2fc5436bcf9?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1350&q=80\" alt=\"tree\"></p>\n<p>常常聽到人家講說 DOM 元素，到底是什麼?</p>\n<p>DOM 的英文全名是 <strong>Document Object Model</strong>，中文是「<strong>文件物件模型</strong>」。</p>\n<blockquote>\n<p>是 HTML、XML 和 SVG 文件的程式介面。它提供了一個文件（樹）的結構化表示法，並定義讓程式可以存取並改變文件<strong>架構</strong>、<strong>風格</strong>和<strong>內容</strong>的方法。DOM 提供了文件以擁有屬性與函式的節點與物件組成的結構化表示。節點也可以附加事件處理程序，一旦觸發事件就會執行處理程序。 本質上，它將網頁與腳本或程式語言連結在一起。</p>\n</blockquote>\n<p>參考來源：<a href=\"https://developer.mozilla.org/zh-TW/docs/Web/API/Document_Object_Model\" target=\"_blank\" rel=\"noopener\">https://developer.mozilla.org/zh-TW/docs/Web/API/Document_Object_Model</a></p>\n<p>另外透過 KURO 老師所寫的<a href=\"https://ithelp.ithome.com.tw/articles/10191666\" target=\"_blank\" rel=\"noopener\">重新認識 JavaScript 的文章</a> 一書中解釋 DOM 是滿簡單明瞭的，文中提到：</p>\n<blockquote>\n<p>DOM 是一個將 HTML 文件以樹狀的結構來表示的模型，而組合起來的樹狀圖，我們稱之為「DOM Tree」。</p>\n</blockquote>\n<p>一開始學習 HTML 時，會學習到基本架構如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width, initial-scale=1.0\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>這是h1<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>這是內容<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>這是一個 a 連結<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>瀏覽器是從上到下一行一行的讀取，DOM tree 就是把所有的節點拆開後，彼此的關係會像一棵樹，故取名之，如下圖：</p>\n<p><img src=\"https://i.imgur.com/h0HoGRC.png\" alt=\"DOM tree\"></p>\n<p>以 document 為起點，可以延伸出許多的 HTML 標籤，一個節點就是一個標籤，往下又可以再延伸出「本文(text)節點」與「屬性 (Attribute)的節點」。JavaScript 就是透過 DOM 提供的 API 來對 HTML 做存取與操作。</p>\n<blockquote>\n<p>一些節點註記：</p>\n<ul>\n<li>Element: html, head, body, ul, li…</li>\n<li>Attribute: a, id, type…</li>\n<li>text: h1, p, span…<br>&lt;以上有誤還請不吝指正。&gt;</li>\n</ul>\n</blockquote>\n<hr>\n<h2 id=\"DOM-API\"><a href=\"#DOM-API\" class=\"headerlink\" title=\"DOM API\"></a>DOM API</h2><p>DOM: JavaScript 用來控制「網頁」的節點與內容的標準，「DOM」有著 W3C 所制定的標準來規範。上方提到的 DOM API 是什麼?</p>\n<p>先解釋一下 API，<strong>應用程式介面</strong>，英文全名是：<strong>Application Programming Interface</strong>。</p>\n<blockquote>\n<p>我個人比較喜歡知道縮寫英文的意思，不然會被英文名詞嚇唬了。超級多英文縮寫名詞啊!</p>\n</blockquote>\n<p>可以透過下方影片了解 API 的概念。</p>\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/zvKadd9Cflc\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n\n<hr>\n<p>想要透過 DOM API 取得節點，透過 JavaScript 可以這樣寫：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 根據傳入的值，找到 DOM 中 id 為 'xxx' 的元素。</span></span><br><span class=\"line\"><span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"xxx\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 針對給定的 tag 名稱，回傳所有符合條件的 NodeList 物件 [註1]</span></span><br><span class=\"line\"><span class=\"built_in\">document</span>.getElementsByTagName(<span class=\"string\">\"xxx\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 針對給定的 class 名稱，回傳所有符合條件的 NodeList 物件。</span></span><br><span class=\"line\"><span class=\"built_in\">document</span>.getElementsByClassName(<span class=\"string\">\"xxx\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 針對給定的 Selector 條件，回傳第一個 或 所有符合條件的 NodeList。</span></span><br><span class=\"line\"><span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\"xxx\"</span>);</span><br><span class=\"line\"><span class=\"built_in\">document</span>.querySelectorAll(<span class=\"string\">\"xxx\"</span>);</span><br></pre></td></tr></table></figure>\n\n<p>而透過 DOM API 選取出來的節點，我們可以透過操作 <code>textContent</code> 屬性來變更它的文字。</p>\n<p>設定一個 HTML 屬性節點為 <code>id</code>，名稱為 <code>greet</code>：</p>\n<p><code>&lt;h1 id=&quot;greet&quot;&gt;&lt;/h1&gt;</code></p>\n<p>可以先透過 <code>document.querySelector()</code> 選取方法來取得節點，然後修改 <code>textContent</code> 屬性：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;<span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'#greet'</span>).textContent = <span class=\"string\">'Hello World!'</span>&lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>可以看一下 <a href=\"https://codepen.io/hnzxewqw/pen/RwPRdjL?editors=1010\" target=\"_blank\" rel=\"noopener\">codepen</a></p>\n<p>這樣就可以透過 JavaScript 在網頁上輸出 <strong>“Hello World!”</strong> 囉！</p>\n<h2 id=\"心得\"><a href=\"#心得\" class=\"headerlink\" title=\"心得\"></a>心得</h2><p>一開始有學到 <code>getByElementById</code> 來賦予 <code>id</code> 的內容，後面會學習到透過 <code>querySelector</code> 能選擇的屬性更多元! jQuery 的 <code>$</code> 錢字號概念就是從 DOM API 取得方式來的。</p>\n<p>參考文章：<a href=\"https://ithelp.ithome.com.tw/articles/10191666\" target=\"_blank\" rel=\"noopener\">https://ithelp.ithome.com.tw/articles/10191666</a></p>\n","categories":["JavaScript"],"tags":["JavaScript"]},{"title":"jQuery 筆記 - 動態改變字體大小與背景顏色","url":"/jQuery/20200612/2695853287/","content":"<p><img src=\"https://images.unsplash.com/photo-1518621615557-ceb61d737b3c?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1950&q=80\" alt=\"different\"></p>\n<p>更換背景與字體顏色與大小，是在許多頁面中很常見的功能，記錄一下這個寫法。</p>\n<h2 id=\"HTML-結構\"><a href=\"#HTML-結構\" class=\"headerlink\" title=\"HTML 結構\"></a>HTML 結構</h2><p>HTML 的結構很簡單，就是把背景按鈕跟字體大小按鈕寫好，另外這邊使用 CSS 與 jQuery ClassName 分離管理，有需要 jQuery 的部分加「前綴詞 jq-xxx」，以便知道這邊要使用 jQuery 來控制。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"wrap\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"header\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btnGroup\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>背景色：<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn btnBlack jq-black\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn btnWhite jq-white\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn btnYellow jq-yellow\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fontSize\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"font jq-large\"</span>&gt;</span>大<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"font jq-medium\"</span>&gt;</span>中<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"font jq-small\"</span>&gt;</span>小<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"main\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>經過刷新，立即。<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">      滑鼠外掛提醒起來思想過了過去免費電影協助著名全部，下載手裡網遊不了穩定深刻回答此處感到下面姑娘都有，熱情本次工廠好了網站一級時期期間，日期基層幫助睡覺住了接到，屏東指南批准轉載使得聰明一部臺灣，資金自主春節全文只有人事專業開關朋友馬上什麼命運人才健康，效。</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">      滑鼠外掛提醒起來思想過了過去免費電影協助著名全部，下載手裡網遊不了穩定深刻回答此處感到下面姑娘都有，熱情本次工廠好了網站一級時期期間，日期基層幫助睡覺住了接到，屏東指南批准轉載使得聰明一部臺灣，資金自主春節全文只有人事專業開關朋友馬上什麼命運人才健康，效。</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">      滑鼠外掛提醒起來思想過了過去免費電影協助著名全部，下載手裡網遊不了穩定深刻回答此處感到下面姑娘都有，熱情本次工廠好了網站一級時期期間，日期基層幫助睡覺住了接到，屏東指南批准轉載使得聰明一部臺灣，資金自主春節全文只有人事專業開關朋友馬上什麼命運人才健康，效。</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"jQuery-寫法\"><a href=\"#jQuery-寫法\" class=\"headerlink\" title=\"jQuery 寫法\"></a>jQuery 寫法</h2><p>因為字體大小與背景顏色算是滿固定的功能，也不需要運算，所以這邊直接動態修改屬性與值。<br>因為網頁預設字體大小是 16px，故將中字體就固定為 16px，這樣在起始頁面時，不會在更換字體時覺得奇怪。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//背景更改</span></span><br><span class=\"line\">$(<span class=\"string\">\".jq-black\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">  event.preventDefault(); <span class=\"comment\">//取消預設行為</span></span><br><span class=\"line\">  $(<span class=\"string\">\".main\"</span>).css(&#123;</span><br><span class=\"line\">    <span class=\"string\">\"background-color\"</span>: <span class=\"string\">\"#333\"</span>,</span><br><span class=\"line\">    color: <span class=\"string\">\"#fff\"</span>,</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">$(<span class=\"string\">\".jq-white\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">  event.preventDefault(); <span class=\"comment\">//取消預設行為</span></span><br><span class=\"line\">  $(<span class=\"string\">\".main\"</span>).css(&#123;</span><br><span class=\"line\">    <span class=\"string\">\"background-color\"</span>: <span class=\"string\">\"#eeeeee\"</span>,</span><br><span class=\"line\">    color: <span class=\"string\">\"#333\"</span>,</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">$(<span class=\"string\">\".jq-yellow\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">  event.preventDefault(); <span class=\"comment\">//取消預設行為</span></span><br><span class=\"line\">  $(<span class=\"string\">\".main\"</span>).css(&#123;</span><br><span class=\"line\">    <span class=\"string\">\"background-color\"</span>: <span class=\"string\">\"#fff891\"</span>,</span><br><span class=\"line\">    color: <span class=\"string\">\"#333\"</span>,</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//文字大小更改</span></span><br><span class=\"line\">$(<span class=\"string\">\".jq-large\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">  event.preventDefault(); <span class=\"comment\">//取消預設行為</span></span><br><span class=\"line\">  $(<span class=\"string\">\"h2\"</span>).css(<span class=\"string\">\"font-size\"</span>, <span class=\"string\">\"28px\"</span>);</span><br><span class=\"line\">  $(<span class=\"string\">\"p\"</span>).css(<span class=\"string\">\"font-size\"</span>, <span class=\"string\">\"18px\"</span>);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">$(<span class=\"string\">\".jq-medium\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">  event.preventDefault(); <span class=\"comment\">//取消預設行為</span></span><br><span class=\"line\">  $(<span class=\"string\">\"h2\"</span>).css(<span class=\"string\">\"font-size\"</span>, <span class=\"string\">\"24px\"</span>);</span><br><span class=\"line\">  $(<span class=\"string\">\"p\"</span>).css(<span class=\"string\">\"font-size\"</span>, <span class=\"string\">\"16px\"</span>);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">$(<span class=\"string\">\".jq-small\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">  event.preventDefault(); <span class=\"comment\">//取消預設行為</span></span><br><span class=\"line\">  $(<span class=\"string\">\"h2\"</span>).css(<span class=\"string\">\"font-size\"</span>, <span class=\"string\">\"20px\"</span>);</span><br><span class=\"line\">  $(<span class=\"string\">\"p\"</span>).css(<span class=\"string\">\"font-size\"</span>, <span class=\"string\">\"12px\"</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<iframe height=\"800\" style=\"width: 100%;\" src=\"https://codepen.io/tim_hsu/embed/ExPKxba?height=265&theme-id=light&default-tab=result\"></iframe>\n","categories":["jQuery"],"tags":["jQuery"]},{"title":"jQuery 筆記 - 下拉收闔選單寫法","url":"/jQuery/20200612/2943313098/","content":"<p><img src=\"https://images.unsplash.com/photo-1586015988173-ee1a56ffe8fd?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1350&q=80\" alt=\"drawer\"><br>很多拍賣網站會看到 header 選單，點擊項目按鈕後，才會出現子選單，這次來筆記一下。</p>\n<h2 id=\"HTML-架構\"><a href=\"#HTML-架構\" class=\"headerlink\" title=\"HTML 架構\"></a>HTML 架構</h2><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"dropdownMenu\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>產品一<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>產品二<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn jq-clickBtn\"</span>&gt;</span>請點我<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"dropdownList jq-dropdown\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>商品一<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>商品二<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>商品三<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>在第三個 <code>li</code> 中放入子選單，把要控制的地方另外加入 <code>className</code>，讓 CSS 與 jQuery 分開管理，因為一開始 <code>dropdownList</code> 要隱藏，所以 CSS 要設定 <code>display:none;</code>，並增加一個 <code>.active</code> ，等等要透過 jQuery 來動態增加 class。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.dropdownList</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: none;</span><br><span class=\"line\">    li &#123;</span><br><span class=\"line\">      <span class=\"selector-tag\">display</span>: <span class=\"selector-tag\">flex</span>;</span><br><span class=\"line\">      <span class=\"selector-tag\">justify-content</span>: <span class=\"selector-tag\">center</span>;</span><br><span class=\"line\">      <span class=\"selector-tag\">align-items</span>: <span class=\"selector-tag\">center</span>;</span><br><span class=\"line\">      // flex-direction: column;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  &amp;<span class=\"selector-class\">.active</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: block;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"jQuery-行為\"><a href=\"#jQuery-行為\" class=\"headerlink\" title=\"jQuery 行為\"></a>jQuery 行為</h2><p>綁定按鈕，並且給予 <code>click</code> 事件，點擊按鈕時動態增加 <code>.active</code>，並且使 <code>dropdownList</code> 產生收合功能。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">$(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  $(<span class=\"string\">'.jq-clickBtn'</span>).click(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">    e.preventDefault();</span><br><span class=\"line\">    $(<span class=\"string\">'.jq-clickBtn'</span>).toggleClass(<span class=\"string\">'active'</span>);</span><br><span class=\"line\">    $(<span class=\"string\">'.jq-dropdown'</span>).slideToggle();</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<iframe height=\"350\" style=\"width: 100%;\" src=\"https://codepen.io/hnzxewqw/embed/QWyELzg?height=265&theme-id=light&default-tab=result\"></iframe>","categories":["jQuery"],"tags":["jQuery"]},{"title":"jQuery 筆記 - delay() 延遲動畫效果","url":"/jQuery/20200612/4108502825/","content":"<p><img src=\"https://images.unsplash.com/photo-1551129455-7d7ada16936c?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1161&q=80\" alt=\"delay\"></p>\n<p>筆記一個很簡單但也滿實用的方法，<code>delay();</code>，可以加在其他動畫效果語法之前，並輸入時間就可以達到效果。</p>\n<p>直接看程式碼，點擊按鈕可以得到三個方塊輪流出現。</p>\n<h2 id=\"HTML-架構\"><a href=\"#HTML-架構\" class=\"headerlink\" title=\"HTML 架構\"></a>HTML 架構</h2><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn jq-click\"</span>&gt;</span>click<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"box box1\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"box box2\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"box box3\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"jQuery-寫法\"><a href=\"#jQuery-寫法\" class=\"headerlink\" title=\"jQuery 寫法\"></a>jQuery 寫法</h2><p>把想要延遲的時間寫在 <code>delay();</code> 中就可以了，很簡單吧!</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">$(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  $(<span class=\"string\">\".jq-click\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">    e.preventDefault();</span><br><span class=\"line\">    $(<span class=\"string\">\".box1\"</span>).delay(<span class=\"number\">600</span>).fadeToggle(<span class=\"number\">300</span>);</span><br><span class=\"line\">    $(<span class=\"string\">\".box2\"</span>).delay(<span class=\"number\">1200</span>).fadeToggle(<span class=\"number\">500</span>);</span><br><span class=\"line\">    $(<span class=\"string\">\".box3\"</span>).delay(<span class=\"number\">1800</span>).fadeToggle(<span class=\"number\">1000</span>);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<iframe height=\"450\" style=\"width: 100%;\" src=\"https://codepen.io/tim_hsu/embed/xxZVKJB?height=265&theme-id=light&default-tab=result\"></iframe>\n","categories":["jQuery"],"tags":["jQuery"]},{"title":"jQuery 筆記 - 讓 checkbox 預設值為選取方法","url":"/jQuery/20200612/3811422616/","content":"<p><img src=\"https://images.unsplash.com/photo-1484480974693-6ca0a78fb36b?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1352&q=80\" alt=\"image alt\"></p>\n<p>這次專案上使用到 checkbox 的方法，若要預設讓 checkbox 為勾選可以這樣寫。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">label</span></span></span><br><span class=\"line\"><span class=\"tag\">  &gt;</span>checkbox</span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span> <span class=\"attr\">checked</span>=<span class=\"string\">\"checked\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"css\">  <span class=\"selector-tag\">input</span><span class=\"selector-pseudo\">:checked</span> &#123;</span></span><br><span class=\"line\">    width: 50px;</span><br><span class=\"line\">    height: 50px;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<iframe height=\"265\" style=\"width: 100%;\"  src=\"https://codepen.io/hnzxewqw/embed/pogbzxW?height=265&theme-id=light&default-tab=result\" ></iframe>\n\n<blockquote>\n<p>CSS 這樣設定可以在選取時讓 checkbox 變大 <del>(好，我知道滿無聊的。)</del></p>\n</blockquote>\n<p>這沒什麼問題，但因為客戶想要預設畫面已經讓 checkbox 勾選，並讓 <code>checkbox</code> 勾選時變色，但 <code>checkbox</code> 無法透過 CSS 改變這個設定，所以就要用到偽元素來做。</p>\n<h2 id=\"偽元素無法取消-checked\"><a href=\"#偽元素無法取消-checked\" class=\"headerlink\" title=\"偽元素無法取消 checked\"></a>偽元素無法取消 checked</h2><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"checkbox-group\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">\"checkbox3\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span> <span class=\"attr\">checked</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">\"checkbox3\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"icon-checkbox\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>Checked<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>如下方所見，如果這樣寫，偽元素變成沒辦法取消選取…</p>\n<iframe height=\"265\" style=\"width: 100%;\" src=\"https://codepen.io/hnzxewqw/embed/abdZoRR?height=265&theme-id=light&default-tab=result\" ></iframe>\n\n<p>然後如果不解決就慘了。</p>\n<h2 id=\"prop\"><a href=\"#prop\" class=\"headerlink\" title=\"prop()\"></a>prop()</h2><p>這時候就可以使用外部賦予值，在 <code>input</code> 刪掉原本的 <code>checked</code> 屬性，再新增一個 <code>class=&quot;jq-checked&quot;</code>，並加上這段 jQuery 程式碼，解決!!</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">\".jq-checked\"</span>).prop(<span class=\"string\">\"checked\"</span>, <span class=\"literal\">true</span>);</span><br></pre></td></tr></table></figure>\n\n<iframe height=\"265\" style=\"width: 100%;\"  src=\"https://codepen.io/hnzxewqw/embed/abdZoaR?height=265&theme-id=light&default-tab=result\"></iframe>\n\n<p>客戶的要求總是發現新玩意!</p>\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><ul>\n<li><a href=\"https://cythilya.github.io/2017/09/10/jquery-attr-vs-prop/\" target=\"_blank\" rel=\"noopener\">jQuery .attr() vs .prop()</a></li>\n</ul>\n","categories":["jQuery"],"tags":["jQuery"]},{"title":"CSS 筆記 - CSS Filter 濾鏡效果","url":"/css/20200610/3064004331/","content":"<p><img src=\"https://images.unsplash.com/photo-1588618943372-a99e4ac947fe?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1945&q=80\" alt=\"filter\"></p>\n<p>CSS 的 <code>filter</code> 濾鏡功能非常好用，除了不用一直設定 CSS 的屬性外，也是讓效果透過簡單的程式碼就可以解決！如果懶得再用 <code>Photoshop</code> 調整圖片，也是一個不錯的選擇！</p>\n<p>語法相當簡單，就是在想要做特效的標籤中加入 <code>filter:濾鏡效果(參數);</code> 就可以了，例如：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">img</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">400px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">filter</span>: <span class=\"built_in\">blur</span>(<span class=\"number\">3px</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>濾鏡效果如下：</p>\n<h2 id=\"drop-shadow-下拉陰影\"><a href=\"#drop-shadow-下拉陰影\" class=\"headerlink\" title=\"drop-shadow 下拉陰影\"></a>drop-shadow 下拉陰影</h2><p><code>drop-shadow</code> 會按照元素的原始內容去產生陰影，而 <code>box-shadow</code> 則是以區塊的方式來產生。<br>語法:<code>filter: drop-shadow(8px 8px 10px #000);</code> 其對應位置與 <code>box-shadow</code> 相同。</p>\n<ul>\n<li>格式：(水平 垂直 模糊度 擴散 顏色)</li>\n<li>水平/垂直(px)：設定陰影的位置</li>\n<li>模糊度(px)：設定陰影模糊程度，值越大就越模糊</li>\n<li>擴大(px)：設定陰影模糊放大的程度，一樣是值越大就越就越大</li>\n<li>顏色(色碼)：設定陰影的顏色</li>\n</ul>\n<h2 id=\"blur-高斯模糊\"><a href=\"#blur-高斯模糊\" class=\"headerlink\" title=\"blur 高斯模糊\"></a>blur 高斯模糊</h2><p>高斯模糊的參數單位使用 <code>px</code> 或是 <code>rem</code>，0 為最清晰，數值越高越模糊，不接受百分比 <code>%</code> 做為單位，可以輸入，但不會產生效果。</p>\n<h2 id=\"grayscale-灰階\"><a href=\"#grayscale-灰階\" class=\"headerlink\" title=\"grayscale 灰階\"></a>grayscale 灰階</h2><p>灰階程度，參數單位為小數點 (ex.0.7) 或是 70% 的灰階，皆為相同效果。</p>\n<h2 id=\"hue-rotate-色相旋轉\"><a href=\"#hue-rotate-色相旋轉\" class=\"headerlink\" title=\"hue-rotate 色相旋轉\"></a>hue-rotate 色相旋轉</h2><p>以<code>度(deg)</code>為單位，<code>0 度</code> 與 <code>180 度</code>效果相同，<code>90 度</code>與 <code>270 度</code>效果相同，另外可使用 <code>turn</code> 做為旋轉的幅度，</p>\n<blockquote>\n<p>ex. <code>1</code> 為一圈 <code>360 度</code>， <code>0.5turn</code> 為 <code>180 度</code>，但我懶得轉換運算，所以大多用度來設定。</p>\n</blockquote>\n<h2 id=\"invert-負片效果\"><a href=\"#invert-負片效果\" class=\"headerlink\" title=\"invert 負片效果\"></a>invert 負片效果</h2><p>以小數點或百分比為單位，0.3 跟 30% 的效果相同。50% 的效果會變成全灰。</p>\n<h2 id=\"opacity-透明度\"><a href=\"#opacity-透明度\" class=\"headerlink\" title=\"opacity 透明度\"></a>opacity 透明度</h2><p>以小數點或百分比為單位，0.3 跟 30% 的效果相同。</p>\n<h2 id=\"saturate-飽和度\"><a href=\"#saturate-飽和度\" class=\"headerlink\" title=\"saturate 飽和度\"></a>saturate 飽和度</h2><p>以百分比為單位，0% 為無效果，100% 正常飽和度，200%過飽和度。</p>\n<h2 id=\"sepia-懷舊\"><a href=\"#sepia-懷舊\" class=\"headerlink\" title=\"sepia 懷舊\"></a>sepia 懷舊</h2><p>以小數點或百分比為單位，0.3 跟 30% 的效果相同。</p>\n<h2 id=\"contrast-對比度\"><a href=\"#contrast-對比度\" class=\"headerlink\" title=\"contrast 對比度\"></a>contrast 對比度</h2><p>以小數點或百分比為單位，初始值 100%，大於對比變大，小於對比變小。</p>\n<h2 id=\"brightness-亮度\"><a href=\"#brightness-亮度\" class=\"headerlink\" title=\"brightness 亮度\"></a>brightness 亮度</h2><p>初始值 100%，大於就變亮，小於就變暗。</p>\n<iframe height=\"600\" style=\"width: 100%;\"  src=\"https://codepen.io/hnzxewqw/embed/MWKKVpR?height=265&theme-id=light&default-tab=result\" ></iframe>\n參考資料：\n\n<ul>\n<li><a href=\"https://wcc723.github.io/css/2013/10/06/css-fliter/\" target=\"_blank\" rel=\"noopener\">CSS 沒有極限 - CSS3 Fliter 效果</a></li>\n<li><a href=\"https://devdocs.io/css/filter\" target=\"_blank\" rel=\"noopener\">CSS Demo: filter</a></li>\n<li><a href=\"https://www.eztrust.com.tw/html/webdesign/show.aspx?num=13&category=B&kind=10\" target=\"_blank\" rel=\"noopener\">什麼?? CSS 也有濾鏡可以用! (CSS3 filter)</a></li>\n<li><a href=\"https://www.oxxostudio.tw/articles/201407/css-webkit-filter.html\" target=\"_blank\" rel=\"noopener\">CSS webkit filter</a></li>\n</ul>\n","categories":["CSS"],"tags":["CSS"]},{"title":"CSS 筆記 - 寫一個 iPhone 開關效果","url":"/css/20200610/4073219914/","content":"<p><img src=\"https://images.unsplash.com/photo-1591182136289-67ff16828fd4?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1267&q=80\" alt=\"image alt\"></p>\n<p>再研究 checkbox 屬性，看到<a href=\"https://www.youtube.com/watch?v=XCyrzYp3aCY&feature=youtu.be\" target=\"_blank\" rel=\"noopener\">此篇</a>覺得非常實用，就拿來當作筆記，未來有機會就可以不用再重新查找，透過純 CSS 來寫一個開關，很純，沒有 JavaScript。</p>\n<h2 id=\"HTML-架構\"><a href=\"#HTML-架構\" class=\"headerlink\" title=\"HTML 架構\"></a>HTML 架構</h2><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"switch\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"checkbox\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn_box\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"text\"</span>&gt;</span>OFF / ON<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><code>input</code> 是用 <code>checkbox</code> 的類別，因為通常開關會很多，且獨立可個別點擊。</p>\n<h2 id=\"CSS-樣式\"><a href=\"#CSS-樣式\" class=\"headerlink\" title=\"CSS 樣式\"></a>CSS 樣式</h2><p>再看一下 CSS layout，其中因為要做成膠囊式的 <code>input</code>，建議使用像素，不要用百分比，只要像素條得夠大，都會是膠囊式的呈現。</p>\n<p><code>.btn_box</code> 使用 <code>display:inline-block</code> 為了可以讓該元素與文字可以做對齊而使用。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.btn_box</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: inline-block;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">40px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">  border-radius: 100px; //膠囊式圓角不要用百分比</span><br><span class=\"line\">  <span class=\"selector-tag\">background-color</span>: <span class=\"selector-id\">#cccccc</span>;</span><br><span class=\"line\">  box-shadow: 0px 3px 2px rgba($color: #000000, $alpha: 0.2) inset; //按鈕框內部加上陰影</span><br><span class=\"line\">  vertical-align: middle; //因為 `display:inline-block` 的特性，可以使用此語法。</span><br><span class=\"line\">  <span class=\"selector-tag\">margin-right</span>: 10<span class=\"selector-tag\">px</span>;</span><br><span class=\"line\">  <span class=\"selector-class\">.btn</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: block;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">border-radius</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: <span class=\"number\">#ffffff</span>;</span><br><span class=\"line\">    <span class=\"attribute\">margin-left</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">    transition: all 0.5s; //為了讓按鈕有漸變移動的效果</span><br><span class=\"line\">    box-shadow: 1px 2px 5px rgba($color: #000000, $alpha: 0.3);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>完成後，之後會得到一個靜態無法使用的開關了，目前已經完成一半，接下來要給開關來點動畫效果。</p>\n<h3 id=\"動畫效果\"><a href=\"#動畫效果\" class=\"headerlink\" title=\"動畫效果\"></a>動畫效果</h3><p>善用 <code>transition</code> 可以完成好多動畫效果，這個語法真的超級好用，因為外層已經有包覆 <code>label</code>，所以點選文字也可以有觸動 <code>checkbox</code> 的效果，但視覺上是用讓開關能夠使用，要把 <code>checkbox</code> 隱藏。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.checkbox</span> &#123;</span><br><span class=\"line\">  position: absolute; //絕對定位沒有特別寫位置，元素不會亂跑，會留在原位。</span><br><span class=\"line\">  opacity: 0; //隱藏 checkbox</span><br><span class=\"line\">  // input[type='checkbox']</span><br><span class=\"line\">  &amp;<span class=\"selector-pseudo\">:checked</span> + <span class=\"selector-class\">.btn_box</span> &#123;</span><br><span class=\"line\">    //選取到下一個元素</span><br><span class=\"line\">    <span class=\"selector-tag\">background-color</span>: <span class=\"selector-id\">#5ee45e</span>;</span><br><span class=\"line\">    <span class=\"selector-class\">.btn</span> &#123;</span><br><span class=\"line\">      <span class=\"attribute\">margin-left</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"隱藏-checkbox\"><a href=\"#隱藏-checkbox\" class=\"headerlink\" title=\"隱藏 checkbox\"></a>隱藏 checkbox</h3><ul>\n<li><p>直接使用絕對定位來做，絕對定位沒有特別寫位置，元素不會亂跑，會留在原位。把 <code>opacity</code> 改成 1，就會看到了。</p>\n</li>\n<li><p>再寫上當使用 <code>:checked</code> 效果時 <code>.btn_box</code> 會改變顏色，並且 <code>.btn</code> 會往左推 20px。</p>\n</li>\n</ul>\n<iframe height=\"265\" style=\"width: 100%;\" src=\"https://codepen.io/hnzxewqw/embed/MWKKVjx?height=265&theme-id=light&default-tab=result\"></iframe>\n\n<p>這樣就完成了！真的很有意思!</p>\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><ul>\n<li><a href=\"https://ithelp.ithome.com.tw/articles/10222941\" target=\"_blank\" rel=\"noopener\">:checked 表單狀態選取器 - 讓你可以開開關關好開勳</a></li>\n<li></li>\n<li><a href=\"https://www.youtube.com/watch?v=XCyrzYp3aCY&feature=youtu.be\" target=\"_blank\" rel=\"noopener\">阿莫斯の網頁料理室 : CSS checked 選取器的應用 | CSS 教學 | CSS3 | 網頁教學 | 切版</a></li>\n</ul>\n","categories":["CSS"],"tags":["CSS"]},{"title":"jQuery 筆記 - 選擇器的選法與基本動畫效果語法","url":"/jQuery/20200609/184811241/","content":"<p><img src=\"https://images.unsplash.com/photo-1583365978529-042d9f46dccc?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1350&q=80\" alt=\"animation\"></p>\n<p>jQuery 是直接控制網頁元素的效果，直關且強大，筆記一些基本會使用到的語法。當然更多可以參考<a href=\"https://api.jquery.com/\" target=\"_blank\" rel=\"noopener\">官網</a>。</p>\n<h2 id=\"選擇器\"><a href=\"#選擇器\" class=\"headerlink\" title=\"選擇器\"></a>選擇器</h2><p>使用 <code>$</code> 字號當作選擇器，相當於原生語法的 <code>document.getElementById()</code> 以及 <code>querySelector</code>，一個錢字號就可以少打這麼多字母。</p>\n<p>並且用小括號與引號包住要選擇的 <code>class</code> 或 <code>id</code> 或<code>網頁元素</code>，結尾要用分號標示，才會是完整的語法，如 <code>$(&#39; &#39;);</code>。</p>\n<p>常見的選擇器使用方式有：</p>\n<h3 id=\"選擇-class\"><a href=\"#選擇-class\" class=\"headerlink\" title=\"選擇 class\"></a>選擇 class</h3><p>因為是選擇 Class ，所以前面要加 <code>.</code> ，如範例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">\".ClassName\"</span>).fadeIn();</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"選擇-id\"><a href=\"#選擇-id\" class=\"headerlink\" title=\"選擇 id\"></a>選擇 id</h3><p>選擇 id，前面要加 <code>#</code> 字號</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">\"#id\"</span>).hide();</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"選擇元素\"><a href=\"#選擇元素\" class=\"headerlink\" title=\"選擇元素\"></a>選擇元素</h3><p>選擇網頁元素，不用加符號。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">\"h1\"</span>).show();</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"hide\"><a href=\"#hide\" class=\"headerlink\" title=\"hide()\"></a>hide()</h2><p>使元素隱藏，在 HTML 會產生 CSS <code>display:none;</code>，參數可放入秒數，ex. 1000 毫秒。</p>\n<h2 id=\"show\"><a href=\"#show\" class=\"headerlink\" title=\"show()\"></a>show()</h2><p>可使原本預設 <code>display:none;</code> 的元素顯示，參數可放入秒數，ex. 1000 毫秒。</p>\n<h2 id=\"toggle\"><a href=\"#toggle\" class=\"headerlink\" title=\"toggle()\"></a>toggle()</h2><p>可切換設定的 <code>hide();</code> 與 <code>show();</code> 的效果，參數可放入秒數，ex. 1000 毫秒。</p>\n<h2 id=\"slide-滑動系列\"><a href=\"#slide-滑動系列\" class=\"headerlink\" title=\"slide() 滑動系列\"></a>slide() 滑動系列</h2><h3 id=\"slideUp\"><a href=\"#slideUp\" class=\"headerlink\" title=\"slideUp()\"></a>slideUp()</h3><p>使元素往上滑動，參數可放入秒數，ex. 1000 毫秒。</p>\n<h3 id=\"slideDown\"><a href=\"#slideDown\" class=\"headerlink\" title=\"slideDown()\"></a>slideDown()</h3><p>使元素往下滑動，參數可放入秒數，ex. 1000 毫秒。</p>\n<h3 id=\"slideToggle\"><a href=\"#slideToggle\" class=\"headerlink\" title=\"slideToggle()\"></a>slideToggle()</h3><p>使元素切換滑動效果，點擊會自動向下/上滑動，參數可放入秒數，ex. 1000 毫秒。</p>\n<h2 id=\"fade-淡化系列\"><a href=\"#fade-淡化系列\" class=\"headerlink\" title=\"fade() 淡化系列\"></a>fade() 淡化系列</h2><h3 id=\"fadeIn\"><a href=\"#fadeIn\" class=\"headerlink\" title=\"fadeIn()\"></a>fadeIn()</h3><p>使元素有淡入效果，參數可放入秒數，ex. 1000 毫秒。</p>\n<h3 id=\"fadeOut\"><a href=\"#fadeOut\" class=\"headerlink\" title=\"fadeOut()\"></a>fadeOut()</h3><p>使元素有淡出效果，參數可放入秒數，ex. 1000 毫秒。</p>\n<h3 id=\"fadeToggle\"><a href=\"#fadeToggle\" class=\"headerlink\" title=\"fadeToggle()\"></a>fadeToggle()</h3><p>使元素自動切換淡入與淡出效果，參數可放入秒數，ex. 1000 毫秒。</p>\n<h2 id=\"Class-常常搭配-active\"><a href=\"#Class-常常搭配-active\" class=\"headerlink\" title=\"Class 常常搭配 active\"></a>Class 常常搭配 active</h2><h3 id=\"addClass\"><a href=\"#addClass\" class=\"headerlink\" title=\"addClass()\"></a>addClass()</h3><p>動態增加 class，參數放入 class 名稱。</p>\n<h3 id=\"removeClass\"><a href=\"#removeClass\" class=\"headerlink\" title=\"removeClass()\"></a>removeClass()</h3><p>動態移除 class，參數放入 class 名稱。</p>\n<h3 id=\"toggleClass\"><a href=\"#toggleClass\" class=\"headerlink\" title=\"toggleClass()\"></a>toggleClass()</h3><p>動態增加與移除 class，參數放入 class 名稱。</p>\n<h2 id=\"範例\"><a href=\"#範例\" class=\"headerlink\" title=\"範例\"></a>範例</h2><iframe height=\"900\" style=\"width: 100%;\" src=\"https://codepen.io/tim_hsu/embed/oNbgXWB?height=265&theme-id=light&default-tab=result\"></iframe>\n","categories":["jQuery"],"tags":["jQuery"]},{"title":"JS 筆記 - 使用 select 選到該功能並執行其中內容","url":"/javascript/20200609/2466460421/","content":"<p><img src=\"https://images.unsplash.com/photo-1475010040281-9c4f94108f91?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1224&q=80\" alt=\"choose\"></p>\n<p>這次要寫一個 select 選單，並選擇該功能後會對應到該功能。</p>\n<h2 id=\"建立選單\"><a href=\"#建立選單\" class=\"headerlink\" title=\"建立選單\"></a>建立選單</h2><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">label</span></span></span><br><span class=\"line\"><span class=\"tag\">  &gt;</span>Select:</span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">\"selectMode\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"1\"</span>&gt;</span>option_01<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"2\"</span>&gt;</span>option_02<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"3\"</span>&gt;</span>option_03<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"4\"</span>&gt;</span>option_04<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"5\"</span>&gt;</span>option_05<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"6\"</span>&gt;</span>option_06<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"JavaScript-寫法\"><a href=\"#JavaScript-寫法\" class=\"headerlink\" title=\"JavaScript 寫法\"></a>JavaScript 寫法</h2><p>首先要綁定 <code>Select</code> 選單，並給一個 <code>change</code> 事件。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> select = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\"#selectMode\"</span>);</span><br><span class=\"line\">select.addEventListener(<span class=\"string\">\"change\"</span>, selectFun);</span><br></pre></td></tr></table></figure>\n\n<p>要執行的 function，將<strong>要取得的值</strong>這個動作<strong>寫在函式中</strong>，不然無法選到。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">selectFun</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> switchValue = select.options[select.selectedIndex].value;</span><br><span class=\"line\">  <span class=\"keyword\">switch</span> (switchValue) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">\"1\"</span>:</span><br><span class=\"line\">      option_01();</span><br><span class=\"line\">      <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">\"2\"</span>:</span><br><span class=\"line\">      option_02();</span><br><span class=\"line\">      <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">\"3\"</span>:</span><br><span class=\"line\">      option_03();</span><br><span class=\"line\">      <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">\"4\"</span>:</span><br><span class=\"line\">      option_04();</span><br><span class=\"line\">      <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">\"5\"</span>:</span><br><span class=\"line\">      option_05();</span><br><span class=\"line\">      <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">\"6\"</span>:</span><br><span class=\"line\">      option_06();</span><br><span class=\"line\">      <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">default</span>:</span><br><span class=\"line\">      <span class=\"keyword\">return</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>對應的函式功能。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">option_01</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  alert(<span class=\"string\">\"選到 option_01\"</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">option_02</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  alert(<span class=\"string\">\"選到 option_02\"</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">option_03</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  alert(<span class=\"string\">\"選到 option_03\"</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">option_04</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  alert(<span class=\"string\">\"選到 option_04\"</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">option_05</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  alert(<span class=\"string\">\"選到 option_05\"</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">option_06</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  alert(<span class=\"string\">\"選到 option_06\"</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>這樣就可以順利取到該功能的內容了，其中這一行程式碼可以有幾個寫法。</p>\n<h3 id=\"原生寫法\"><a href=\"#原生寫法\" class=\"headerlink\" title=\"原生寫法\"></a>原生寫法</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> switchValue = select.options[select.selectedIndex].value;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"使用-this\"><a href=\"#使用-this\" class=\"headerlink\" title=\"使用 this\"></a>使用 this</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> switchValue = <span class=\"keyword\">this</span>.value;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"使用-jQuery\"><a href=\"#使用-jQuery\" class=\"headerlink\" title=\"使用 jQuery\"></a>使用 jQuery</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">\"#selectMode\"</span>).change(selectFun);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">selectFun</span>(<span class=\"params\">value</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> switchValue = $(<span class=\"keyword\">this</span>).val();</span><br><span class=\"line\">  <span class=\"keyword\">switch</span> (switchValue) &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>這時候真心覺得 this 跟 jQuery 真棒!</p>\n<p>CodePen <a href=\"https://codepen.io/hnzxewqw/pen/jOWbjEe\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/jOWbjEe</a></p>\n","categories":["JavaScript"],"tags":["JavaScript","jQuery"]},{"title":"JS 筆記 - 透過 OPEN DATA 取得 JSON 資料","url":"/javascript/20200606/2734980592/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/JavaScript%20note-01.jpg?alt=media&token=7bee0261-72ac-4de4-9f5a-f39d58735b7d\" alt=\"JavaScript Note\"></p>\n<p>在取得 Open Data 前，要先認識 JSON 資料。</p>\n<h2 id=\"什麼是-JSON\"><a href=\"#什麼是-JSON\" class=\"headerlink\" title=\"什麼是 JSON\"></a>什麼是 JSON</h2><p>JSON（<strong>J</strong>ava<strong>S</strong>cript <strong>O</strong>bject <strong>N</strong>otation，<strong>JavaScript 物件表示法</strong>，讀法就有點像是英文名字的 JASON）是一種由道格拉斯·克羅克福特構想和設計、輕量級的資料交換語言，該語言以易於讓人閱讀的文字為基礎，用來傳輸由屬性值或者序列性的值組成的資料物件。儘管 JSON 是 JavaScript 的一個子集，但 JSON 是獨立於語言的文字格式，並且採用了類似於 C 語言家族的一些習慣。</p>\n<p>JSON 資料格式與語言無關。即便它源自 JavaScript，但目前很多程式語言都支援 JSON 格式資料的生成和解析。JSON 的官方 MIME 類型是 application/json，副檔名是 .json。</p>\n<p>參考來源：<a href=\"https://zh.wikipedia.org/wiki/JSON\" target=\"_blank\" rel=\"noopener\">維基百科 JSON</a></p>\n<p>簡單來說就是一個<strong>陣列</strong> + <strong>物件</strong>的文字檔案格式。</p>\n<hr>\n<h2 id=\"取得-OPEN-DATA-資料\"><a href=\"#取得-OPEN-DATA-資料\" class=\"headerlink\" title=\"取得 OPEN DATA 資料\"></a>取得 OPEN DATA 資料</h2><p>這次找了一個相關主題：找尋台北市信義區的哺乳室。</p>\n<blockquote>\n<p>身為一個孩子的爸，因為很常在百貨公司找哺乳室，有孩子的人一定了解找不到的窘境，尤其當新手爸媽好不容易有個在外的晚餐時刻，這時孩子解便的時候，就非常需要!</p>\n</blockquote>\n<hr>\n<p>這次我到台北市政府的首頁，找到路徑 &gt;&gt; _首頁&gt;市政資料館&gt;資訊公開_，再找到 _臺北市政府資料開放平台_，如下圖：</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/JS10-2.png?alt=media&token=ac87ff47-5a0d-457e-800f-e4faa5809920\" alt=\"臺北市政府資料開放平台\"></p>\n<p>點擊後會出現平台首頁：</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/JS10-3.png?alt=media&token=9e37d549-8b73-4d17-919c-faa30d25d05c\" alt=\"臺北市政府資料開放平台首頁\"></p>\n<p>搜尋哺乳室後，只會出現一個項目，點擊後會出現下方畫面，在選擇 API 選項(紅框處)，如下圖：</p>\n<blockquote>\n<p>目前網站改成直接下載 CVS</p>\n</blockquote>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/JS10-4.png?alt=media&token=afa6d63d-b7ff-4c58-89ce-63cdbb163912\" alt=\"臺北市哺集乳室\"></p>\n<p>會出現一些資訊告訴我們要怎麼取得資料，像是有 API 位址，資料異動的時間，使用 AJAX 方法要用 GET 取得資料。</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/JS10-5.png?alt=media&token=02bbaaee-8771-4756-a105-f8c922aaf9c3\" alt=\"API 頁面\"></p>\n<blockquote>\n<p>在練習的時候在 chrome 檢查工具有發現有三個格式有打錯，所以 <code>console</code> 無法顯示資料，等有空再去 PR 台北市政府。</p>\n</blockquote>\n<h2 id=\"使用-Chrome-的擴充套件看-JSON\"><a href=\"#使用-Chrome-的擴充套件看-JSON\" class=\"headerlink\" title=\"使用 Chrome 的擴充套件看 JSON\"></a>使用 Chrome 的擴充套件看 JSON</h2><p>複製 API 網址貼到新視窗的時候，會看到原始的 JSON 資料(嗯…)</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/JS10-6.png?alt=media&token=7dcdbeb5-e730-4ea9-85c8-c803aab04500\" alt=\"JSON 原始資料\"></p>\n<p>這時候可以下載 chrome 商店裡面的套件工具，<a href=\"https://chrome.google.com/webstore/detail/jsonview/chklaanhfefbnpoihckbnefhakgolnmc?hl=zh-TW\" target=\"_blank\" rel=\"noopener\">JSON View</a></p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/JS10-7.png?alt=media&token=a9e94084-a284-4eab-b2e2-846fb528c8c6\" alt=\"JSON 安裝套件\"></p>\n<p>安裝套件後就會看到 JSON 資料清楚很多!</p>\n<h2 id=\"從-JSON-找出需要的資料\"><a href=\"#從-JSON-找出需要的資料\" class=\"headerlink\" title=\"從 JSON 找出需要的資料\"></a>從 JSON 找出需要的資料</h2><p>先把 JSON 資料整個複製到編輯器中，並用一個變數框起來，如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> data=[&#123;</span><br><span class=\"line\">...JSON 資料 <span class=\"comment\">//因為 700 多筆，太長了，就這樣示意</span></span><br><span class=\"line\">&#125;]</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"HTML-環境\"><a href=\"#HTML-環境\" class=\"headerlink\" title=\"HTML 環境\"></a>HTML 環境</h3><p>要透過<strong>網頁</strong>掛載資料，還是需要先設定一下 <code>HTML</code> 環境。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width, initial-scale=1.0\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>台北市哺乳室<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"js/all.js\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"JavaScript\"><a href=\"#JavaScript\" class=\"headerlink\" title=\"JavaScript\"></a>JavaScript</h3><p>透過 JSON 找出台北市<strong>信義區</strong> <strong>百貨賣場</strong>的哺乳室。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> dataTotal = data.length; <span class=\"comment\">//資料長度</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; dataTotal; i++) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (data[i].category == <span class=\"string\">\"百貨賣場\"</span> &amp;&amp; data[i].DIS == <span class=\"string\">\"信義區\"</span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"區域:\"</span> + data[i].DIS + <span class=\"string\">\" 建築類型:\"</span> + data[i].category + <span class=\"string\">\" 地點名稱:\"</span> + data[i].BerName);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>說明：</p>\n<ol>\n<li>宣告一個變數名稱紀錄 data 長度。</li>\n<li>建立一個 for 迴圈。</li>\n<li>使用 if 判斷 data 資料中的<strong>建築類型 category</strong> 跟 <strong>區域 DIS</strong> 兩個條件要相符。</li>\n<li>在使用 console.log 驗證所找到的資料。<blockquote>\n<p>(名稱在<a href=\"https://data.taipei/#/dataset/detail?id=5d1d34d8-1b81-4162-87b6-05e0896af958\" target=\"_blank\" rel=\"noopener\">資料平台</a>上有說明，現已改為 CSV 檔案)</p>\n</blockquote>\n</li>\n</ol>\n<p>在網頁使用 console 檢查，就會出現以下結果：</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/JS10-1.png?alt=media&token=beff9760-cee4-4f9c-bd2d-0f7358ec1576\" alt=\"台北市信義區哺乳室結果\"></p>\n<h2 id=\"心得\"><a href=\"#心得\" class=\"headerlink\" title=\"心得\"></a>心得</h2><p>JSON 取得資料沒有太困難，但思維要清楚，不然很容易不知道自己怎麼取得資料，物件跟陣列取得資料的觀念也要清楚明白，不然在後續 AJAX 就會不知道怎麼做。</p>\n<blockquote>\n<p>信義區的百貨哺乳室竟然這麼少!</p>\n</blockquote>\n","categories":["JavaScript"],"tags":["JavaScript"]},{"title":"jQuery 筆記 - dropdown 選單中的箭頭同步旋轉","url":"/jQuery/20200529/1660679567/","content":"<p><img src=\"https://images.unsplash.com/photo-1468908627957-7783f0c42edb?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2089&q=80\" alt=\"Rotate\"></p>\n<p>這次專案要做一個 dropdown 的下拉式選單，並且要擁有下方條件：</p>\n<ol>\n<li>在選單右側要有一個箭頭圖示，在點擊箭頭圖示時會同步旋轉。</li>\n<li>收合時箭頭要朝下，展開時箭頭要朝上。</li>\n</ol>\n<h4 id=\"HTML\"><a href=\"#HTML\" class=\"headerlink\" title=\"HTML\"></a>HTML</h4><p>HTML 的架構會如下方，</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"dropdown\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"form\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"select\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"--- select ---\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"button\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fas fa-chevron-down fa-sm\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"dropdownList\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>option one<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>option two<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>按鈕的部分，我盡量使用 <code>Button</code> 的語法，讓按鈕單純點，不會受到其他標籤所附加的屬性影響。<br>我把<strong>選單</strong>跟<strong>下拉內容</strong>分開寫，因下拉內容要預設為<strong>隱藏</strong> <code>(display: none;)</code></p>\n<h4 id=\"CSS\"><a href=\"#CSS\" class=\"headerlink\" title=\"CSS\"></a>CSS</h4><p>CSS 比較要注意的是以下部分，</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.button</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">50px</span>;</span><br><span class=\"line\">  .fa-chevron-down &#123;</span><br><span class=\"line\">    <span class=\"selector-tag\">transform</span>: <span class=\"selector-tag\">rotate</span>(0<span class=\"selector-tag\">deg</span>);</span><br><span class=\"line\">    <span class=\"selector-tag\">transition</span>: <span class=\"selector-tag\">all</span> 0<span class=\"selector-class\">.6s</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    &amp;<span class=\"selector-class\">.active</span> &#123;</span><br><span class=\"line\">      <span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(<span class=\"number\">180deg</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>因為旋轉的是箭頭，不是按鈕，所以效果要寫在箭頭中，這邊使用到 <code>transform:rotate();</code> 的函式，原本使用的教是朝下的箭頭，所以預設參數為 0 度，<code>transform:rotate(0deg);</code>，展開選單要翻轉 180 度變成向上，所以參數會是 180 度，<code>transform:rotate(180deg);</code>。</p>\n<blockquote>\n<p>deg = degree (度)</p>\n</blockquote>\n<p>其他樣式內容可以自己設定。</p>\n<h4 id=\"JavaScript\"><a href=\"#JavaScript\" class=\"headerlink\" title=\"JavaScript\"></a>JavaScript</h4><p>互動效果使用 jQuery 來綁定與使用，透過 CSS 跟 jQuery 的各司其職，在網頁上的互動變得相當強大，大家只要專心做自己的事情就可以了。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">$(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  $(<span class=\"string\">\".button\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">    e.preventDefault();</span><br><span class=\"line\">    $(<span class=\"string\">\".dropdownList\"</span>).slideToggle(<span class=\"number\">500</span>);</span><br><span class=\"line\">    $(<span class=\"string\">\".fa-chevron-up\"</span>).toggleClass(<span class=\"string\">\"active\"</span>);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<ol>\n<li>綁定按鈕，並給予點擊事件，首先取消預設效果，因為 <code>.dropdownList</code> 有 <code>a</code> 連結，怕誤觸了 <code>href</code> 屬性，所以使用 <code>preventDefault();</code>，但其實好像不用。</li>\n<li>再來綁定 <code>.dropdownList</code> 使其點擊有下拉/收合效果 0.5 秒。</li>\n<li>最後綁定箭頭 icon，使其增加 <code>.active</code> 的 className，因為已經是使用 <code>toogleClass</code>，所以參數只要寫 <code>active</code> ，不是寫 <code>.active</code>。</li>\n</ol>\n<p>這就完成點擊箭頭按鈕實現下拉選單的收合效果！</p>\n<iframe height=\"300\" style=\"width: 100%;\"src=\"https://codepen.io/hnzxewqw/embed/NWGZVpP?height=265&theme-id=light&default-tab=css,result\"></iframe>\n\n<p>CodePen <a href=\"https://codepen.io/hnzxewqw/pen/NWGZVpP\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/NWGZVpP</a></p>\n<p>參考文章</p>\n<p><a href=\"https://wcc723.github.io/css/2013/10/08/css-transform/\" target=\"_blank\" rel=\"noopener\">CSS 沒有極限 - CSS transform 概觀</a></p>\n<p><a href=\"https://wcc723.github.io/css/2013/10/10/css-transform-origin/\" target=\"_blank\" rel=\"noopener\">CSS 沒有極限 - CSS transform-origin</a></p>\n<p><a href=\"https://ithelp.ithome.com.tw/articles/10135528\" target=\"_blank\" rel=\"noopener\">CSS 沒有極限 - CSS transform 軸線的謊言</a></p>\n","categories":["jQuery"],"tags":["CSS","jQuery"]},{"title":"jQuery 筆記 - 使用 JS 動態來啟用/停用元素？","url":"/jQuery/20200529/1818590975/","content":"<p><img src=\"https://images.unsplash.com/photo-1575538031230-3e9ebd2fd631?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1997&q=80\" alt=\"switch button\"></p>\n<h2 id=\"disabled\"><a href=\"#disabled\" class=\"headerlink\" title=\"disabled\"></a>disabled</h2><p>在 HTML 標籤中有一個 <code>disabled</code> 的屬性，只要在表單元素(<code>Button</code>、<code>Input</code>、<code>Optgroup</code>、<code>Option</code>、<code>Select</code> 及 <code>TextArea</code> )的屬性中加入 <code>disabled</code> 屬性的話，該元素就會被停用了。</p>\n<p>直接看範例：</p>\n<iframe height=\"300\" style=\"width: 100%;\" src=\"https://codepen.io/tim_hsu/embed/YzyMjVZ?height=265&theme-id=light&default-tab=html,result\"></iframe>\n</iframe>\n\n<p>CodePen <a href=\"https://codepen.io/hnzxewqw/pen/YzyoxGx\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/YzyoxGx</a></p>\n<h2 id=\"JS-動態設定\"><a href=\"#JS-動態設定\" class=\"headerlink\" title=\"JS 動態設定\"></a>JS 動態設定</h2><p>既然是 HTML 的一個屬性，可以使用 jQuery 的 <code>attr(key, value)</code> 來變更 <code>disabled</code> 屬性值即可。有以下幾個寫法可以完成這個設定，</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//寫法 1</span></span><br><span class=\"line\">$(<span class=\"string\">\"input\"</span>).attr(<span class=\"string\">\"disabled\"</span>, <span class=\"literal\">true</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 寫法 2：</span></span><br><span class=\"line\">$(<span class=\"string\">\"select\"</span>).attr(<span class=\"string\">\"disabled\"</span>, <span class=\"string\">\"disabled\"</span>);</span><br></pre></td></tr></table></figure>\n\n<p>這時用 F12 檢查 HTML 的程式碼，就會出現 <code>disabled=&quot;disabled&quot;;</code> 的屬性，反之，要啟動就僵值改成 <code>false</code>，或是用 <code>removeAttr(&#39;disabled&#39;);</code> 移除屬性。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">\"button\"</span>).removeAttr(<span class=\"string\">\"disabled\"</span>);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"點擊按鈕使表單元素可以使用\"><a href=\"#點擊按鈕使表單元素可以使用\" class=\"headerlink\" title=\"點擊按鈕使表單元素可以使用\"></a>點擊按鈕使表單元素可以使用</h2><p>給個情境，有天 PM 跑來說，有個介面一開始客戶要求表單元素都無法使用，點擊一個 NEW 按鈕就可以填入表單，送出按鈕在初始畫面為無法使用，在點擊送出按鈕後又回到初始畫面。</p>\n<p><del>所以畫面的東西都無法使用，那為什麼要做?</del></p>\n<p>獲得資訊有：</p>\n<ol>\n<li>畫面上有表單元素，有 input 跟 button。</li>\n<li>除了 NEW 按鈕外還有一個 submit 的按鈕。</li>\n<li>初始畫面除了 NEW，以外都沒有功能。</li>\n<li>按下 NEW 後，除了 NEW 以外都有功能。</li>\n</ol>\n<p>然後就產生下方樣式，</p>\n<iframe height=\"300\" style=\"width: 100%;\"src=\"https://codepen.io/hnzxewqw/embed/mdeZMOp?height=265&theme-id=light&default-tab=css,result\"></iframe>\n</iframe>\n\n<p>CodePen <a href=\"https://codepen.io/hnzxewqw/pen/mdeZMOp\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/mdeZMOp</a></p>\n<h2 id=\"結語\"><a href=\"#結語\" class=\"headerlink\" title=\"結語\"></a>結語</h2><p>要思考一開始的狀況，再思考判斷按下按鈕會發生的情況，畢竟 JS 是一次只能做一件事的語法，這次遇到的狀況滿有意思的，似乎也在許多頁面上常常看到。</p>\n<h2 id=\"參考文章\"><a href=\"#參考文章\" class=\"headerlink\" title=\"參考文章\"></a>參考文章</h2><p><a href=\"https://abgne.tw/jquery/jquery-tips/jquery-enabled-or-disabled-element.html\" target=\"_blank\" rel=\"noopener\">[jQ]如何使用 jQuery 來啟用/停用元素？</a></p>\n","categories":["jQuery"],"tags":["JavaScript","jQuery"]},{"title":"首次參加六角學院同學會","url":"/Learning-Experience/20200527/2006749370/","content":"<p>今年最令我期待的活動之一－六角學院三週年同學會！<br>在二月中註冊了六角學院網頁設計師的課程，中間經歷了孩子誕生、陪伴太太坐月子、新手奶爸的生活…<br>就這樣過了七個多月，在這七個月當中也看到自己的成長！</p>\n<p>今天的活動分成幾個部分，就挑幾個部分來記錄一下！</p>\n<h2 id=\"一、六角學院的發展與願景\"><a href=\"#一、六角學院的發展與願景\" class=\"headerlink\" title=\"一、六角學院的發展與願景\"></a>一、六角學院的發展與願景</h2><p>未來會規畫更完善的就職路徑還有課程規劃，還有要拓展 5000 間弱連結的公司做媒合，相當了不起呢!! (因為晚到了，這一段幾乎沒聽到)</p>\n<h2 id=\"二、再來是學長姊的問答與歷程分享\"><a href=\"#二、再來是學長姊的問答與歷程分享\" class=\"headerlink\" title=\"二、再來是學長姊的問答與歷程分享\"></a>二、再來是學長姊的問答與歷程分享</h2><p>一共請來了五位學長姊，分享這兩年中的從加入六角學院到就業後遇到的風風雨雨，這一段算是獲得最多的一環，因為聽到每一位的故事都是現在進行式，可以從他們的身上找尋共通點，並可以大概預期未來會遇到的光景，如何預防，或是如何面對！「順遂」一詞，幾乎不會出現在前端工程師身上，因為有不段出現的 BUG。</p>\n<p>每個人分享的重點可以回歸到兩個部分，一個是學習求知的態度，要永遠不滿足，保持一個開放的心、熱情的心、研究的心。有任何可以進步的資源都不要放過，更重要的是不要放棄！另一個是不要安逸現況，當在職場發現自己已經無法進步的時候，就是轉換領域的機會，讓自己不斷的變強跟吸收新知識，是非常重要的事情！並且要樂於分享所學所會的給想要踏進該領域的人，在教導的過程中也可以檢視自己學會多少東西！</p>\n<h2 id=\"三、老師學員交流\"><a href=\"#三、老師學員交流\" class=\"headerlink\" title=\"三、老師學員交流\"></a>三、老師學員交流</h2><p>話說收到這個消息受寵若驚，我覺得我還是一個超級菜鳥，還在努力爬上大聯盟，但就在同學會的前一天，我收到洧杰校長的邀請，說要在同學會的休息時間有一個問答的機會，分享我最近學習的歷程與心得。有幾個題目，我就順便紀錄一下:</p>\n<h3 id=\"您的背景-科系、前工作、現在的近況是-？\"><a href=\"#您的背景-科系、前工作、現在的近況是-？\" class=\"headerlink\" title=\"您的背景(科系、前工作、現在的近況是)？\"></a>您的背景(科系、前工作、現在的近況是)？</h3><p>大學畢業於造形藝術學系，主修木雕，遙想大一 (2005) 那時是 photoshop7.0 的時代 ，搬進宿舍時，就看見室友正在用 PS 做畫，我覺得真的很屌(因為那時候也不知道到 PS)，我就很想跟他學，後來他教我了一些小技巧，我就順著這個技巧也學會了一招半式，然後在三個月後接了第一個案子，也奠定我之後走平面設計的道路，因為我知道這是未來的趨勢。後來出社會就一路在平面設計領域工作，有做過出版業設計、電商美術、新創 App 行銷設計，目前是自己開設平面設計公司，服務需要平面設計與視覺規劃的客戶。但因為印刷製作物與設計預算的減少，案件幾乎都是用趕件的，工作時間長又比較無法預期(做廣告的都是這樣，來的又急又快)，目前邊工作邊學習前端技術。</p>\n<h3 id=\"2-為什麼想投入前端工程師？\"><a href=\"#2-為什麼想投入前端工程師？\" class=\"headerlink\" title=\"2.為什麼想投入前端工程師？\"></a>2.為什麼想投入前端工程師？</h3><p>如上題所說，因為目前工作型態讓我覺得發展被限制，也看不見未來，就經思考與禱告後，原本想從 UI 學習，經了解與更多的查詢資料，前端工程師更符合我的理想，以及是一塊有前瞻性的藍海產業！門檻高、發展廣、又有無限的可能，很多產業都在退步，唯有程式碼還在進化，且智慧裝置的盛行，這個領域還會再進化！會進化的領域值得投資與學習！</p>\n<h3 id=\"3-目前在投入哪個技能？\"><a href=\"#3-目前在投入哪個技能？\" class=\"headerlink\" title=\"3.目前在投入哪個技能？\"></a>3.目前在投入哪個技能？</h3><p>目前已投入 HTML &amp; CSS、jQuery、RWD、Bootstrap 4、SCSS (正在學習中)。</p>\n<h3 id=\"4-最喜歡六角學院哪些服務？\"><a href=\"#4-最喜歡六角學院哪些服務？\" class=\"headerlink\" title=\"4.最喜歡六角學院哪些服務？\"></a>4.最喜歡六角學院哪些服務？</h3><p>我喜歡 24HR FAQ 回答機制，回答速度很快且專業，尤其老師跟助教是很有耐心又很仔細地回答每一個問題，原本會讓我覺得問題很多，不好意思提問，但會越問越勇敢，畢竟老師與助教都這麼熱血，學不會真的是自己的問題。還有線上問答，我個人覺得這真的是開啟我新視野的服務，雖然是透過線上學習與問答，但透過六角學院累積的線上問答與影片，讓我看見前端真的有無限可能，竟然可以玩出這麼多的議題與討論，不可思議。也透過這樣的服務，讓我產出勇敢不放棄的心態！Nothing is Impossible!</p>\n<h3 id=\"5-跟想加入六角的學弟妹說些鼓勵的話\"><a href=\"#5-跟想加入六角的學弟妹說些鼓勵的話\" class=\"headerlink\" title=\"5.跟想加入六角的學弟妹說些鼓勵的話?\"></a>5.跟想加入六角的學弟妹說些鼓勵的話?</h3><p>不要害怕走進新領域，不在自己的經驗值內的技術與知識，不代表很困難。保持一顆開放的心，不要先入為主的排斥它，也不要人云亦云就對程式碼望之卻步，「程式碼」只是一個名稱，但如果多了解會覺得還是有路可以走的，撞牆沒關係，是正常的事情，撞久了牆會倒的，還有六角學院的影片都講解得非常清楚，問答區也不要放過提問的機會，還有去觀看別人的問題，都會發現新大陸！線上學習會覺得孤單，但你加入社團以及用盡各種方式學習跟努力在前端這條路上，你會發現並不孤單！</p>\n<p>最後用一句話勉勵大家：<strong>走出舒適圈，你的舒適圈就會變得更大！</strong></p>\n<p>期待明年的同學會，我也可以成為祝福別人的前端工程師!</p>\n<p>寫於 2019.09.29</p>\n<hr>\n<p>本文同時發表於 <a href=\"https://ithelp.ithome.com.tw/articles/10222668\" target=\"_blank\" rel=\"noopener\">iT 邦幫忙</a></p>\n","categories":["Learning Experience"],"tags":["前端學習之路"]},{"title":"平面設計踏上前端工程師的旅程","url":"/Learning-Experience/20200527/2108866219/","content":"<p>從事平面設計超過 10 年，在大環境的衝擊下，因自己已經抵達薪資與該領域的瓶頸，想再往更高的專案挑戰也心有餘而力不足，在評估與考量之後，選擇前端工程師的道路！</p>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*bYnk-x7sAtPOp-wuMTaKLw.jpeg\" alt=\"F2E\"></p>\n<h2 id=\"為什麼選擇前端工程師？\"><a href=\"#為什麼選擇前端工程師？\" class=\"headerlink\" title=\"為什麼選擇前端工程師？\"></a>為什麼選擇前端工程師？</h2><p>從大學就開始做平面設計直到出社會，一路就走了 10 年，而在大環境的變遷與趨勢下，平面設計與印刷品需求逐年下滑，每一年都會想著如果不做設計我可以做什麼? 原本壓根沒有想過會跟寫程式語言有關係，但近五年遠端工作與電子載具儼然成為資訊戰國時代下的產物，各產業也都轉換呈現方式，現在只要透過網路就可以完成許多事情，民生生活習慣也因為數位化而轉變，這時我就在想，如果我可以將我的設計能力延伸到網頁或是載具上，也是非常不錯的一件事情。</p>\n<h2 id=\"投入前端工程師之前\"><a href=\"#投入前端工程師之前\" class=\"headerlink\" title=\"投入前端工程師之前\"></a>投入前端工程師之前</h2><p>面臨著工作案件越來越少，就覺得應該要趕快轉變跑道，面臨著太太半年後即將臨盆的景況，讓我開始評估<strong>實體課程</strong>與<strong>線上課程</strong>什麼比較適合我？但因為需要考量現實能力與狀況，在只有設計背景的條件下，我想說先從 UI 設計師下手，所以先購買了<strong>UI 入門講座的實體課程</strong>，用了三週的時間花了 18 個小時聽課 (共 16,000 元)，但聽完後發現還是在<strong>設計的領域打轉</strong>，這與我想要的不同，因為我覺得應該要用有<strong>設計的能力</strong>當作背景，去做一個跳脫設計從業人員的工作內容。</p>\n<h3 id=\"所以我又開始思考什麼才是我想要的。\"><a href=\"#所以我又開始思考什麼才是我想要的。\" class=\"headerlink\" title=\"所以我又開始思考什麼才是我想要的。\"></a>所以我又開始思考什麼才是我想要的。</h3><p>接著我查詢了資策會的相關課程，也去聽了說明會，了解若去資策會我可以學習成什麼樣的技能，是否會更接近前端工程師。聽完資策會後心裡抱持著遺憾，還是沒辦法投入資策會的學習，因時間上要投入半年，且學費昂貴又無法工作，這樣會沒有收入，面對半年後的小孩出生的景況，家庭張力會非常緊繃，但透過資策會老師說明，讓我確定程式語言會是很好的發展，且可以應用上過去設計的能力，所以這條路可以通。<br>但，怎麼走?</p>\n<h2 id=\"學習的過程\"><a href=\"#學習的過程\" class=\"headerlink\" title=\"學習的過程\"></a>學習的過程</h2><p>在排除資策會與民間電腦補習班的實體課程之後(因曾經在某電腦補習班吃虧過，故不考慮)，在網路上開始找尋線上課程，時間上比較可以配合。就發現了<strong>六角學院</strong>，看到<a href=\"https://www.hexschool.com/qa/how-to.html\" target=\"_blank\" rel=\"noopener\">邁向前端工程師/設計師之路</a>的地圖，讓我覺得我好像可以從網頁設計師開始，畢竟我是非資訊相關科系畢業，要一頭栽入程式的世界好像離我太遠，所以我就先購買了<a href=\"https://shop.hexschool.com/order/create?order=z_bs4_html_jquery_rwd&coupon_code=COUPON_2018_HEXSCHOOL\" target=\"_blank\" rel=\"noopener\">網頁設計師</a>的課程，就在投入近半年的時間，發現好像可以往前端工程師的領域邁進，所以就把其他與前端工程師相關的課程都註冊了。</p>\n<h3 id=\"學習不會是一路順遂，但要定時定量\"><a href=\"#學習不會是一路順遂，但要定時定量\" class=\"headerlink\" title=\"學習不會是一路順遂，但要定時定量\"></a>學習不會是一路順遂，但要定時定量</h3><p>在沒有程式背景之下學習程式語言，我每一步都踩得戰競，深怕一鬆懈或分心，這段學習的時間就會拉得更長。因白天要工作的關係，我安排了一週六天晚上 9:00~12:00 的時間來學習，每個章節的小作業跟練習一定跟著登打一次，課程不懂的就反覆的多聽幾次，並且利用問答區詢問問題，並且把握一個原則：<strong>今天要比昨天的自己還要強</strong>。</p>\n<h3 id=\"對抗心魔的唯一辦法，就是丟掉羞恥心\"><a href=\"#對抗心魔的唯一辦法，就是丟掉羞恥心\" class=\"headerlink\" title=\"對抗心魔的唯一辦法，就是丟掉羞恥心\"></a>對抗心魔的唯一辦法，就是丟掉羞恥心</h3><p>一開始我不太問問題，因為覺得是自己資質不夠，怕問了蠢問題，但後來看到學員社團中大家卯起來問，還有跟老師與助教討論後，反正也沒人認識我，就算問了蠢問題其實也無妨，就這樣，只要有一點不懂，我就會寫在 CodePen 裡面並且提問，也透過提問來釐清自己的思緒，而不是一昧的求得解答。</p>\n<h3 id=\"師父引進門，修行在個人\"><a href=\"#師父引進門，修行在個人\" class=\"headerlink\" title=\"師父引進門，修行在個人\"></a>師父引進門，修行在個人</h3><p>如上面俗諺可知，老師、助教等教學資源都已經預備好，剩下就是要靠自己努力與前進，我是學習技術相關的人，我知道並不是學多少時間，或是學習多少技能就能進入該職場，而是對於這門技術的掌握度有多高，當面對專案時能不能貢獻己力在專案上，而不是拖垮整個團隊或共事的夥伴。<br>我從 2019.2.11 註冊六角學院，學習半年累積皮毛的程式概念與能力後，便積極參與許多學院舉辦的活動。</p>\n<h4 id=\"六角同學會\"><a href=\"#六角同學會\" class=\"headerlink\" title=\"六角同學會\"></a>六角同學會</h4><p>可與畢業且在業界的學長姐做交流，與正在學習路上的同學互相打氣，也看到學院為了這次實體同學會的精心策畫與努力！詳情可看<a href=\"https://hsuchihting.github.io/Learning-Experience/20200527/2006749370/\">這篇</a></p>\n<h4 id=\"THE-F2E-精神時光屋\"><a href=\"#THE-F2E-精神時光屋\" class=\"headerlink\" title=\"THE F2E 精神時光屋\"></a>THE F2E 精神時光屋</h4><p>有超過 18 個頁面可以練習，這些如果通通都能完整地完成，能力一定大幅提升，我就是在<a href=\"https://hsuchihting.github.io/Hotel_booking/hotel_index.html\">旅館訂房頁面</a>的作品中提升我自己的切版與 RWD 的能力，並且也學習到 JavaScript 一些基本的語法與 Git 的使用。</p>\n<h4 id=\"iT-邦幫忙鐵人賽\"><a href=\"#iT-邦幫忙鐵人賽\" class=\"headerlink\" title=\"iT 邦幫忙鐵人賽\"></a>iT 邦幫忙鐵人賽</h4><p>非常推薦參加的比賽，連續撰寫 30 天技術文或是學習筆記，一定會有大幅成長，並且這段過程中看到更多前端好手與神人在其中，跟著他們的思維脈絡學習，會加速成長!</p>\n<h4 id=\"線上直播研討會\"><a href=\"#線上直播研討會\" class=\"headerlink\" title=\"線上直播研討會\"></a>線上直播研討會</h4><p>非常推薦一定要參加，尤其是要累積更快速的技能與知識，投入一個半小時，勝過你自己學習好幾個小時。</p>\n<h2 id=\"不放手，直到前端工作到手\"><a href=\"#不放手，直到前端工作到手\" class=\"headerlink\" title=\"不放手，直到前端工作到手\"></a>不放手，直到前端工作到手</h2><p>經過了一年的學習與累積，我鼓起勇氣開始投遞履歷，並且也詢問校長作品強度，校長建議我可以直接寫履歷並給我相關資料參考，透過面試來了解自己跟產業的落差有多少，我感謝上帝，在經過一個月的投遞履歷，還有八場面試中，我拿到了第一份前端工程師的 offer，也正式踏入前端工程師的里程碑，但真正的挑戰是進入職場的開始。</p>\n<h2 id=\"結語\"><a href=\"#結語\" class=\"headerlink\" title=\"結語\"></a>結語</h2><p>我還有很多需要學習的，但積極的態度與對前端的熱情，一定要把握，要相信自己所做的是非常有前瞻性的工作內容，堅持不放棄，才是完成目標的唯一途徑。</p>\n<hr>\n<p>本文同步發布於 <a href=\"https://medium.com/@hsuchihting/%E5%B9%B3%E9%9D%A2%E8%A8%AD%E8%A8%88%E8%B8%8F%E4%B8%8A%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%B8%AB%E7%9A%84%E6%97%85%E7%A8%8B-d0f226b74868\" target=\"_blank\" rel=\"noopener\">Medium</a></p>\n","categories":["Learning Experience"],"tags":["前端學習之路"]},{"title":"CSS 筆記 - box-shadow & drop-shadow 的差異","url":"/css/20200525/2231842812/","content":"<p><img src=\"https://images.unsplash.com/photo-1464979209783-2e8c3e2a5538?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1950&q=80\" alt=\"shadow\"></p>\n<p>陰影在呈現元素層次非常好用，尤其是扁平化設計的稿件，恰當的使用陰影，更能凸顯質感與層次。</p>\n<h2 id=\"box-shadow\"><a href=\"#box-shadow\" class=\"headerlink\" title=\"box-shadow\"></a>box-shadow</h2><p>幾個比較常用的如下，</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\">//x 軸-位移 | y 軸-位移 | 顏色</span><br><span class=\"line\"><span class=\"selector-tag\">box-shadow</span>: 5<span class=\"selector-tag\">px</span> 5<span class=\"selector-tag\">px</span> <span class=\"selector-tag\">gray</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">//x 軸-位移 | y 軸-位移 | 模糊值 blur-radius｜ 顏色</span><br><span class=\"line\"><span class=\"selector-tag\">box-shadow</span>: 5<span class=\"selector-tag\">px</span> 5<span class=\"selector-tag\">px</span> 5<span class=\"selector-tag\">px</span> <span class=\"selector-tag\">gray</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">//x 軸-位移 | y 軸-位移 | 模糊值 blur-radius｜擴散值 spread-radius｜顏色</span><br><span class=\"line\"><span class=\"selector-tag\">box-shadow</span>: 5<span class=\"selector-tag\">px</span> 5<span class=\"selector-tag\">px</span> 5<span class=\"selector-tag\">px</span> <span class=\"selector-tag\">rgba</span>(0, 0, 0, 0<span class=\"selector-class\">.5</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">//內側 ｜ x 軸-位移 | y 軸-位移 | 模糊值 blur-radius ｜ 擴散值 spread-radius ｜ 顏色</span><br><span class=\"line\"><span class=\"selector-tag\">box-shadow</span>: <span class=\"selector-tag\">inset</span> 0 0 20<span class=\"selector-tag\">px</span> 5<span class=\"selector-tag\">px</span> <span class=\"selector-tag\">gray</span>;</span><br></pre></td></tr></table></figure>\n\n<iframe  src=\"https://codepen.io/tim_hsu/embed/jObRPML?height=265&theme-id=light&default-tab=result\" height=\"300\" style=\"width: 100%;\">  </iframe>\n\n<p>codepen <a href=\"https://codepen.io/tim_hsu/pen/jObRPML\" target=\"_blank\" rel=\"noopener\">https://codepen.io/tim_hsu/pen/jObRPML</a></p>\n<p><code>box-shadow</code> 簡單來說就是以本身的形狀，新增一個相同形狀的元素，並可設定該元素的位置、模糊、顏色等參數；如上範例，所產生的陰影，與原本的元素形狀是相同的。</p>\n<p>如果不想自己腦補空想效果，可以使用 <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Background_and_Borders/Box-shadow_generator\" target=\"_blank\" rel=\"noopener\">Box-shadow 產生器</a>。</p>\n<p>但如果是一張去背的圖案想加入陰影的話，可以用 <code>drop-shadow</code>。</p>\n<h2 id=\"drop-shadow\"><a href=\"#drop-shadow\" class=\"headerlink\" title=\"drop-shadow\"></a>drop-shadow</h2><p>跟 <code>box-shadow</code> 用法相似，可以處理不規則的圖片陰影，寫法稍微有點不同，如下:</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">filter</span>: <span class=\"selector-tag\">drop-shadow</span>(5<span class=\"selector-tag\">px</span> 5<span class=\"selector-tag\">px</span> 5<span class=\"selector-tag\">px</span> <span class=\"selector-tag\">rgba</span>(0, 0, 0, 0<span class=\"selector-class\">.8</span>));</span><br></pre></td></tr></table></figure>\n\n<p><code>box-shadow</code> 是以元素的形狀延伸的陰影，而 <code>drop-shadow</code> 可以按照元素的的條件形成對應的陰影，並不會直接填滿顏色。</p>\n<iframe  src=\"https://codepen.io/tim_hsu/embed/KKdYpyQ?height=265&theme-id=light&default-tab=result\" height=\"400\" style=\"width: 100%;\"> </iframe>\n\n<p>codepen: <a href=\"https://codepen.io/tim_hsu/pen/KKdYpyQ\" target=\"_blank\" rel=\"noopener\">https://codepen.io/tim_hsu/pen/KKdYpyQ</a></p>\n<p>參考資料：</p>\n<ul>\n<li><a href=\"https://developer.mozilla.org/zh-TW/docs/Web/CSS/box-shadow\" target=\"_blank\" rel=\"noopener\">MDN box-shadow</a></li>\n<li><a href=\"https://ithelp.ithome.com.tw/articles/10131544\" target=\"_blank\" rel=\"noopener\">CSS 沒有極限 - box-shadow</a></li>\n<li><a href=\"https://abgne.tw/css/css3-lab/css3-box-shadow.html\" target=\"_blank\" rel=\"noopener\">[CSS3]box-shadow 區塊陰影</a></li>\n<li><a href=\"http://blog.shihshih.com/drop-shadow-vs-box-shadow/\" target=\"_blank\" rel=\"noopener\">CSS 陰影效果的比較：Drop-Shadow 與 Box-Shadow</a></li>\n</ul>\n","categories":["CSS"],"tags":["CSS"]},{"title":"CSS 筆記 -右側欄選單收合","url":"/css/20200525/1233449136/","content":"<p><img src=\"https://images.unsplash.com/photo-1585452549211-935bd224ada0?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1952&q=80\" alt=\"image alt\"></p>\n<p>因為專案上遇到一個右側選單的寫法，原本天真的以為跟一般的側欄選單的寫法一樣，但還是會有一點不同，記錄一下遇到的狀況。</p>\n<p>側欄選單一般架構如下 HTML</p>\n<h4 id=\"HTML\"><a href=\"#HTML\" class=\"headerlink\" title=\"HTML\"></a>HTML</h4><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"asideMenu\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fas fa-chevron-right fa-2x\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"title\"</span>&gt;</span>Aside Menu<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"list\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"optionTitle\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>index<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>username<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>city<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>number<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>edit<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>delete<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"optionList\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>1<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>Tim<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>Taipei<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>0912345678<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fas fa-edit fa-lg\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fas fa-trash-alt fa-lg\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"CSS\"><a href=\"#CSS\" class=\"headerlink\" title=\"CSS\"></a>CSS</h4><p>因為是在右側，所以選單樣式設定有點不同</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.asideMenu</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">300px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#474747</span>;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">  <span class=\"attribute\">top</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">bottom</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">right</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-left</span>: <span class=\"number\">5px</span> solid <span class=\"number\">#ff9a15</span>;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">box-shadow</span>: <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">5px</span> <span class=\"built_in\">hsla</span>(<span class=\"number\">240</span>, <span class=\"number\">40%</span>, <span class=\"number\">15%</span>, <span class=\"number\">0.6</span>);</span><br><span class=\"line\">  <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateX</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: all <span class=\"number\">0.5s</span>;</span><br><span class=\"line\">  &amp;.active &#123;</span><br><span class=\"line\">    <span class=\"selector-tag\">transform</span>: <span class=\"selector-tag\">translateX</span>(295<span class=\"selector-tag\">px</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>可以看到這邊有使用以下語法，</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">position</span>: <span class=\"selector-tag\">absolute</span>;</span><br><span class=\"line\"><span class=\"selector-tag\">top</span>: 0;</span><br><span class=\"line\"><span class=\"selector-tag\">bottom</span>: 0;</span><br><span class=\"line\"><span class=\"selector-tag\">right</span>: 0;</span><br><span class=\"line\"><span class=\"selector-tag\">transform</span>: <span class=\"selector-tag\">translateX</span>(0);</span><br><span class=\"line\"><span class=\"selector-tag\">transition</span>: <span class=\"selector-tag\">all</span> 0<span class=\"selector-class\">.5s</span>;</span><br><span class=\"line\">&amp;<span class=\"selector-class\">.active</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateX</span>(<span class=\"number\">295px</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>直接設定在 <code>.asideMenu</code> 上，代表父元素 <code>position: relative;</code> 是在 body 上，這樣就會讓選單在右邊了。透過 <code>transform: translateX(0);</code>產生位移，因為預設為顯示，所以參數為 0，後面透過 CSS 動態產生 <code>.active</code> 時，會<strong>向右位移</strong> ，所以參數要是<strong>正數</strong>，<strong>向左移為負數。</strong></p>\n<h4 id=\"JavaScript\"><a href=\"#JavaScript\" class=\"headerlink\" title=\"JavaScript\"></a>JavaScript</h4><p>再透過 javaScript 加入動態，</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">$(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  $(<span class=\"string\">\".btn\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    $(<span class=\"string\">\".asideMenu\"</span>).toggleClass(<span class=\"string\">\"active\"</span>);</span><br><span class=\"line\">    $(<span class=\"string\">\".fa-chevron-right\"</span>).toggleClass(<span class=\"string\">\"rotate\"</span>);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<ol>\n<li>綁定按鈕，並給予 click 監聽事件(按鈕最常就是綁定 click)。</li>\n<li>綁定 <code>.asideMenu</code> 動態增加/刪除 acitve 的 className。</li>\n<li>綁定 <code>.fa-chevron-right</code> 動態增加/刪除 rotate 的 className。</li>\n</ol>\n<p>寫到這邊就會很開心的覺得完成了！</p>\n<h2 id=\"overflow\"><a href=\"#overflow\" class=\"headerlink\" title=\"overflow\"></a>overflow</h2><p>結果會發現怎麼右側選單會超過畫面，且下方出現 X 軸，為什麼!!<br>之前左側選單會自動隱藏於畫面，但右側要自己設定，只要在 CSS 加入，</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">body</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>就會隱藏超過右側的選單，完成右側選單的效果與功能囉!!</p>\n<iframe src=\"https://codepen.io/tim_hsu/embed/eYpQXWW?height=265&theme-id=light&default-tab=result\"  height=\"600\" style=\"width: 100%;\">  </iframe>\n\n<p>CodePen <a href=\"https://codepen.io/tim_hsu/pen/eYpQXWW\" target=\"_blank\" rel=\"noopener\">https://codepen.io/tim_hsu/pen/eYpQXWW</a></p>\n","categories":["CSS"],"tags":["CSS","jQuery"]},{"title":"JS 筆記 - for 迴圈，i++、加總、break 的使用","url":"/javascript/20200525/4038493766/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/JavaScript%20note-01.jpg?alt=media&token=7bee0261-72ac-4de4-9f5a-f39d58735b7d\" alt=\"JavaScript Note\"></p>\n<h2 id=\"i\"><a href=\"#i\" class=\"headerlink\" title=\"i++\"></a>i++</h2><p>for 迴圈內有一個所產生的值，會用 i++ 登打，</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> = <span class=\"number\">0</span>; i &lt; array.length; i++) &#123;</span><br><span class=\"line\"> ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>寫法有三種，但都是在做同一件事情</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> i = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(i); <span class=\"comment\">//結果會是 0</span></span><br><span class=\"line\"></span><br><span class=\"line\">i = i + <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(i); <span class=\"comment\">//結果會是 1</span></span><br><span class=\"line\"></span><br><span class=\"line\">i + <span class=\"number\">1</span> = <span class=\"number\">2</span>; <span class=\"comment\">// (1+1 =2)</span></span><br><span class=\"line\"></span><br><span class=\"line\">i++ = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"comment\">//不斷反覆輸入 i++ 就會一直累加前一次的結果，會變成 2, 3, 4...</span></span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"用-for-迴圈做加總\"><a href=\"#用-for-迴圈做加總\" class=\"headerlink\" title=\"用 for 迴圈做加總\"></a>用 for 迴圈做加總</h2><p>從陣列中取出資料，並使用 for 迴圈做加總的練習。</p>\n<h4 id=\"今天老闆需要知道不同分店可樂的總銷售狀況，可以這樣寫。\"><a href=\"#今天老闆需要知道不同分店可樂的總銷售狀況，可以這樣寫。\" class=\"headerlink\" title=\"今天老闆需要知道不同分店可樂的總銷售狀況，可以這樣寫。\"></a>今天老闆需要知道不同分店可樂的總銷售狀況，可以這樣寫。</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> shops = [</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    captain: <span class=\"string\">\"Tim\"</span>,</span><br><span class=\"line\">    chicken: <span class=\"number\">150</span>,</span><br><span class=\"line\">    coke: <span class=\"number\">200</span>,</span><br><span class=\"line\">    fries: <span class=\"number\">70</span>,</span><br><span class=\"line\">    <span class=\"keyword\">set</span>: 99,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    captain: <span class=\"string\">\"Min\"</span>,</span><br><span class=\"line\">    chicken: <span class=\"number\">99</span>,</span><br><span class=\"line\">    coke: <span class=\"number\">77</span>,</span><br><span class=\"line\">    fries: <span class=\"number\">55</span>,</span><br><span class=\"line\">    <span class=\"keyword\">set</span>: 101,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    captain: <span class=\"string\">\"Mike\"</span>,</span><br><span class=\"line\">    chicken: <span class=\"number\">105</span>,</span><br><span class=\"line\">    coke: <span class=\"number\">111</span>,</span><br><span class=\"line\">    fries: <span class=\"number\">75</span>,</span><br><span class=\"line\">    <span class=\"keyword\">set</span>: 130,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">];</span><br><span class=\"line\">//陣列資料</span><br></pre></td></tr></table></figure>\n\n<p>計算可樂的數量。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> shopsTotal = shops.length; <span class=\"comment\">//先抓取店面的資料</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(shopsTotal); <span class=\"comment\">//結果會得到 3</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> cokeTotal = <span class=\"number\">0</span>; <span class=\"comment\">//先預設數量為 0</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; shopsTotal; i++) &#123;</span><br><span class=\"line\">  <span class=\"comment\">//從第一個開始迴圈；在店家數以內條件以內；加總</span></span><br><span class=\"line\">  cokeTotal += shops[i].coke; <span class=\"comment\">//\"+=\" 要寫在一起，不能空白</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"今年的可樂銷售額為: \"</span> + cokeTotal); <span class=\"comment\">//結果會得到 今年的可樂銷售額為: 388</span></span><br></pre></td></tr></table></figure>\n\n<iframe src=\"https://codepen.io/hnzxewqw/embed/vYEOJMB?height=265&theme-id=light&default-tab=js,result\" width=\"100%\" height=\"300\" frameborder=\"0\" loading=\"lazy\" allowfullscreen></iframe>\n\n\n<p>codepen <a href=\"https://codepen.io/hnzxewqw/pen/vYEOJMB\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/vYEOJMB</a></p>\n<hr>\n<h2 id=\"for-迴圈與-break\"><a href=\"#for-迴圈與-break\" class=\"headerlink\" title=\"for 迴圈與 break\"></a>for 迴圈與 break</h2><p>break 在 for 迴圈中的基本寫法：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; shopsTotal; i++) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(i);</span><br><span class=\"line\">  <span class=\"keyword\">break</span>; <span class=\"comment\">//跑到這裡就停止</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>沿用上方資料，會用到 break 的情況：<br>要找可以買 <strong>100 份炸雞</strong>的老闆</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> shops = [</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    captain: <span class=\"string\">\"Tim\"</span>,</span><br><span class=\"line\">    chicken: <span class=\"number\">150</span>,</span><br><span class=\"line\">    coke: <span class=\"number\">200</span>,</span><br><span class=\"line\">    fries: <span class=\"number\">70</span>,</span><br><span class=\"line\">    <span class=\"keyword\">set</span>: 99,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    captain: <span class=\"string\">\"Min\"</span>,</span><br><span class=\"line\">    chicken: <span class=\"number\">99</span>,</span><br><span class=\"line\">    coke: <span class=\"number\">77</span>,</span><br><span class=\"line\">    fries: <span class=\"number\">55</span>,</span><br><span class=\"line\">    <span class=\"keyword\">set</span>: 101,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    captain: <span class=\"string\">\"Mike\"</span>,</span><br><span class=\"line\">    chicken: <span class=\"number\">105</span>,</span><br><span class=\"line\">    coke: <span class=\"number\">111</span>,</span><br><span class=\"line\">    fries: <span class=\"number\">75</span>,</span><br><span class=\"line\">    <span class=\"keyword\">set</span>: 130,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">];</span><br><span class=\"line\">//陣列資料</span><br></pre></td></tr></table></figure>\n\n<p>因為有條件出現，可以在 for 迴圈中用 if 來寫：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> shopsTotal = shops.length;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(shopsTotal);</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; shopsTotal; i++) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (shops[i].chicken &gt; <span class=\"number\">100</span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(shops[i].captain + <span class=\"string\">\"的店家有足夠 100 份炸雞\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 結果會得到:</span></span><br><span class=\"line\">    <span class=\"comment\">//Tim的店家有足夠 100 份炸雞</span></span><br><span class=\"line\">    <span class=\"comment\">// Mike的店家有足夠 100 份炸雞</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>畫面會顯示如下：</p>\n<p><img src=\"https://ithelp.ithome.com.tw/upload/images/20191205/20119300li6h5uabDP.png\" alt=\"https://ithelp.ithome.com.tw/upload/images/20191205/20119300li6h5uabDP.png\"></p>\n<p>可是只要找到一間店有賣超過 100 份炸雞就可以，所以可以加上 break， break 都是搭配 for 迴圈使用的。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> shops = [</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    captain: <span class=\"string\">\"Tim\"</span>,</span><br><span class=\"line\">    chicken: <span class=\"number\">150</span>,</span><br><span class=\"line\">    coke: <span class=\"number\">200</span>,</span><br><span class=\"line\">    fries: <span class=\"number\">70</span>,</span><br><span class=\"line\">    <span class=\"keyword\">set</span>: 99,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    captain: <span class=\"string\">\"Min\"</span>,</span><br><span class=\"line\">    chicken: <span class=\"number\">99</span>,</span><br><span class=\"line\">    coke: <span class=\"number\">77</span>,</span><br><span class=\"line\">    fries: <span class=\"number\">55</span>,</span><br><span class=\"line\">    <span class=\"keyword\">set</span>: 101,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    captain: <span class=\"string\">\"Mike\"</span>,</span><br><span class=\"line\">    chicken: <span class=\"number\">105</span>,</span><br><span class=\"line\">    coke: <span class=\"number\">111</span>,</span><br><span class=\"line\">    fries: <span class=\"number\">75</span>,</span><br><span class=\"line\">    <span class=\"keyword\">set</span>: 130,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">];</span><br><span class=\"line\">//陣列資料</span><br><span class=\"line\"></span><br><span class=\"line\">var shopsTotal = shops.length;</span><br><span class=\"line\">console.log(shopsTotal);</span><br><span class=\"line\">for (var i = 0; i &lt; shopsTotal; i++) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (shops[i].chicken &gt; <span class=\"number\">100</span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(shops[i].captain + <span class=\"string\">\"的店家有足夠 100 份炸雞\"</span>); <span class=\"comment\">//Tim的店家有足夠 100 份炸雞</span></span><br><span class=\"line\">    shops[i].chicken -= <span class=\"number\">100</span>;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(</span><br><span class=\"line\">      shops[i].captain + <span class=\"string\">\"的店家還剩下 \"</span> + shops[i].chicken + <span class=\"string\">\" 份炸雞\"</span></span><br><span class=\"line\">    ); <span class=\"comment\">//Tim的店家還剩下 50 份炸雞</span></span><br><span class=\"line\">    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>呈現結果如下：</p>\n<p><img src=\"https://ithelp.ithome.com.tw/upload/images/20191205/20119300Qw5A7l5RAA.png\" alt=\"https://ithelp.ithome.com.tw/upload/images/20191205/20119300Qw5A7l5RAA.png\"></p>\n<iframe src=\"https://codepen.io/hnzxewqw/embed/WNbvMOX?height=265&theme-id=light&default-tab=js,result\" width=\"100%\" height=\"500\" frameborder=\"0\" loading=\"lazy\" allowfullscreen></iframe>\n\n<p>codepen <a href=\"https://codepen.io/hnzxewqw/pen/WNbvMOX\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/WNbvMOX</a></p>\n","categories":["JavaScript"],"tags":["JavaScript"]},{"title":"超前部屬的前端工程師學習之路","url":"/Learning-Experience/20200524/3656390146/","content":"<p><img src=\"https://images.unsplash.com/photo-1522252234503-e356532cafd5?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2125&q=80\" alt=\"學習過程\"></p>\n<h2 id=\"開始學習時間\"><a href=\"#開始學習時間\" class=\"headerlink\" title=\"開始學習時間\"></a>開始學習時間</h2><p>2019/2/11 註冊六角學院，那時我對前端工程師領域完全沒有接觸，也覺得自己不會走進資訊領域的工作，一直以來都是專研在設計美術，而在行動載具的興起，消費者獲得資訊的行為改變，各產業呈現品牌與宣傳的方式當然也順應潮流，而在這波衝擊中，我一直思考，除了設計美術外，還可以做什麼工作? 所以開始了<a href=\"https://hsuchihting.github.io/Learning-Experience/20200527/2108866219/\">平面設計踏上前端工程師的旅程</a>。</p>\n<h2 id=\"初期規劃\"><a href=\"#初期規劃\" class=\"headerlink\" title=\"初期規劃\"></a>初期規劃</h2><p>我參考了六角學院前端工程師與網頁設計師的差別，承上所述，若不做設計還可以做什麼? 所以我只參考了這兩個部分，加上現實的考量與未來的發展，我選擇了<a href=\"https://www.hexschool.com/qa/how-to.html\" target=\"_blank\" rel=\"noopener\">前端工程師</a>。六角學院規劃了完整的學習地圖，非常適合非本科的朋友來學習，但問題來了：</p>\n<ul>\n<li>在現實與學習的路上該怎麼規劃呢?</li>\n<li>要全職還是兼職學習?</li>\n<li>學習時間與效益怎麼驗收?</li>\n</ul>\n<h2 id=\"學習路徑\"><a href=\"#學習路徑\" class=\"headerlink\" title=\"學習路徑\"></a>學習路徑</h2><p>首先一定是從最基本的 HTML &amp; CSS 開始學習，洧杰老師用 WORD 當開頭，深入淺出的說明，讓我對於 coding 這件事情減少了許多懼怕。一開始身邊的人知道我要開始學習程式，都說邏輯性很重要。他們說得沒錯，但只對一半，因為更重要的是像我正統文組出身，又是受到長期美術教育薰陶的背景，思維要從天馬行空要馬上進入思維邏輯的領域來說，恐懼才是最大的阻礙。</p>\n<h3 id=\"HTML-CSS-jQuery-RWD-失敗\"><a href=\"#HTML-CSS-jQuery-RWD-失敗\" class=\"headerlink\" title=\"HTML CSS jQuery RWD 失敗\"></a>HTML CSS jQuery RWD 失敗</h3><p>首先，我學習完 HTML &amp; CSS 後，大概能真正自己開始撰寫大概只有六成功力，因為知道的內容實在太少，也還是透過以前文組學習的方式，「課本」教我什麼，我只在這個領域練習，還沒有培養自己 google 的能力，就因為累積的不足，進入 jQuery 時，非常吃力，學習到懷疑人生，這時候已經過了兩個月!</p>\n<p>我覺得這樣不行，太撞牆了，而且很沒有成就感，後來停下一天，回想過去學習技能這條路，如今可以上手是什麼方式跟方法，好好思考學習的路徑，什麼才是對我最有幫助且可以有效的提高掌握度。</p>\n<h3 id=\"HTML-amp-CSS、SCSS、Bootstrap、RWD、JavaScript、jQuery、Vue-js-未完\"><a href=\"#HTML-amp-CSS、SCSS、Bootstrap、RWD、JavaScript、jQuery、Vue-js-未完\" class=\"headerlink\" title=\"HTML &amp; CSS、SCSS、Bootstrap、RWD、JavaScript、jQuery、Vue.js(未完)\"></a>HTML &amp; CSS、SCSS、Bootstrap、RWD、JavaScript、jQuery、Vue.js(未完)</h3><p>後來就按照上面的這個路徑，重新學習。沒錯!就是兩個月的東西砍掉重練，因為中間遇到太太生產，從生產到月子中心這一個月的時間，幾乎下班就是到月子中心陪伴與照顧她。只有大概滑滑手機，看看前端領域到底都要具備什麼能力，還有討論相關的主題跟內容，讓我自己不要跟這個領域脫節，等到太太出月子中心，回到家整頓好後，已經是五月底了，所以我可以說從六月重新學習。</p>\n<p>雖然說是重新學習，但走過的路沒有白費，前兩個月所學習的內容還是記得，且重新再看一次課程，也找出當時沒發現的問題還有未釐清的觀念。且透過 SCSS 管理 CSS 後覺得更是如虎天翼，少了重工的困擾，程式碼也更乾淨，再透過 Bootstrap 的架構，在 RWD 上寫起來更是得心應手。</p>\n<p>後來決定先把樣式這部分掌握好，至少在切版上可以在成效上有把握，後面再進行互動的學習。</p>\n<h4 id=\"JavaScript-的挫折\"><a href=\"#JavaScript-的挫折\" class=\"headerlink\" title=\"JavaScript 的挫折\"></a>JavaScript 的挫折</h4><p>後來陸續也參加 F2E 前端修練時光屋的挑戰，iT 鐵人賽 30 天挑戰賽，這段時間是讓我切版成長最快速的時候，經過鐵人賽的洗禮，我覺得在成效上非常好，且是強迫自己 30 天不斷的接觸程式，產生熟悉感，寫起來也比較得心應手，有些語法也因為這樣不需要思考就可以寫出來了。後來進入 JavaScript 學習時，我覺得這個方式可行，所以要用這個方式來學習，但是有一部分我偷懶了，我大概用了兩週的時間把課程「看」完了，天真的以為我應該可以看得懂程式碼就會寫了。結果根本就是不可能！後來痛定思痛花了近兩個月的時間把 JavaScript 分小節，並且每一章節都做筆記，成為我自己查找資料的字典，並且記錄在鐵人賽的部落格上。也因為有自己整理學習的內容與紀錄，讓自己有「印象」自己到底學了什麼。也建立個人的<a href=\"https://hsuchihting.github.io/\">前端技術部落格</a>，後也因為這樣讓我在工作上也很快速地找到我自己的筆記，解決了工作上的困難。</p>\n<h4 id=\"Vue-js-挫折\"><a href=\"#Vue-js-挫折\" class=\"headerlink\" title=\"Vue.js 挫折\"></a>Vue.js 挫折</h4><p>這時已經開始在寫作品了，我跟洧杰老師討論後，他建議我選<a href=\"https://hsuchihting.github.io/Hotel_booking/hotel_index.html\">旅館訂房頁面</a>當作作品來練習，在這個作品中更讓我釐清 JavaScript 如何讓網頁產生互動，也比較清楚網頁元素三劍客的分工與職責內容。我想說那來學習 Vue.js ，看看能不能加速我在開發上的速度與掌握一個框架，但因為 JavaScript 陣列與資料處理的觀念沒有非常清楚，在學習上相對吃力，後來先暫緩，想說先把 JavaScript 基礎弄好。</p>\n<h4 id=\"實體課程：五倍紅寶石-Vue-js-課程\"><a href=\"#實體課程：五倍紅寶石-Vue-js-課程\" class=\"headerlink\" title=\"實體課程：五倍紅寶石 Vue.js 課程\"></a>實體課程：五倍紅寶石 Vue.js 課程</h4><p>剛好看到五倍紅寶石有一個實體課程，授課老師是在前端界有名的老師 Kuro，也是 Vue Taiwan 社團的創辦人，想說透過實體課程的方式，看看自己能否在實體中提升自己的能力，孰不知依然是 JavaScript 的熟練度還不夠高，學起來還是有點吃力，但因為有看過六角學院的 Vue 課程，所以基礎的還更得上，還需要加強的地方是 component 的使用與觀念，可惜我還是沒有學得很好，但如同前面所說，走過的路沒有白費，因為我更知道我要往哪些方向努力!也因為有參加實體課程，也獲得 Kuro 老師的親筆簽書！(書是我自己買的，<a href=\"https://www.tenlong.com.tw/products/9789864344130\" target=\"_blank\" rel=\"noopener\">購書連結</a>)，也在這個月我拿到了 offer。</p>\n<h2 id=\"學習中的挫折\"><a href=\"#學習中的挫折\" class=\"headerlink\" title=\"學習中的挫折\"></a>學習中的挫折</h2><p>說實在，學習程式的過程孤單又挫折，幾乎每天都跟挫折相處，但也是好處，在程式的世界知道自己的微小，也知道自己該怎麼成長，也變得較務實，因為網頁不會說謊，寫了什麼給它，它就老實的回覆你。</p>\n<p>學習跟挫折與孤獨相處，是很重要的。但值得開心的是六角學院的老師跟同學都可以陪伴你，在程式的世界沒有蠢問題，只怕不問問題跟找問題的源頭，更需要一顆研究的心。</p>\n<h2 id=\"自我挑戰\"><a href=\"#自我挑戰\" class=\"headerlink\" title=\"自我挑戰\"></a>自我挑戰</h2><p>透過挑戰，就可以設立里程碑跟目標，也讓自己在失敗中學習，程式寫失敗沒有關係，把 bug 修好就好，不要想要一步登天，在初學就把程式碼的寫得又有條理跟精簡，因為就是知道哪裡寫得亂七八糟，才有機會修正自己的程式碼，還有撰寫思維。享受自我挑戰的樂趣非常重要，以下是我自己經歷的挑戰過程：</p>\n<h3 id=\"F2E-挑戰失敗\"><a href=\"#F2E-挑戰失敗\" class=\"headerlink\" title=\"F2E 挑戰失敗\"></a>F2E 挑戰失敗</h3><p>第一次挑戰 <a href=\"https://challenge.thef2e.com/\" target=\"_blank\" rel=\"noopener\">F2E 前端修練時光屋</a>，那時是寫番茄鐘，挑戰門檻是七天要完成稿件，原本我用平面設計的思維覺得應該是可以的，但我開始挑戰後，光是一個 aside 就讓我卡了七天，最終宣告放棄，也退出這次的挑戰賽，並且知道我超級不足，連一頁都寫不出來，說實在，挫折感比台北 101 還要高！</p>\n<p>一度很想放棄，但我覺得這樣不行，我目標就是要成為前端工程師，這樣的程度是無法踏進這個領域的，所以開始找方法。</p>\n<h3 id=\"IT-鐵人賽\"><a href=\"#IT-鐵人賽\" class=\"headerlink\" title=\"IT 鐵人賽\"></a>IT 鐵人賽</h3><p>透過 30 天的鐵人賽，我參加<a href=\"https://ithelp.ithome.com.tw/users/20119300/ironman/2600\" target=\"_blank\" rel=\"noopener\">自我挑戰組</a>，找了四個主題來寫，讓我自己透過三十天把四個網頁拆分得很細，並且每天記錄過程，讓自己未來可以回顧，現在看起來雖然很粗淺，但這就是當時我的實力，感謝當時堅持的我，讓我切版的能力提升了！後來因為挑戰成功，主辦單位還有寄獎狀跟獎牌到家裡，真是好棒的成長紀錄！</p>\n<h2 id=\"增廣見聞的地方\"><a href=\"#增廣見聞的地方\" class=\"headerlink\" title=\"增廣見聞的地方\"></a>增廣見聞的地方</h2><h3 id=\"IT-鐵人賽-1\"><a href=\"#IT-鐵人賽-1\" class=\"headerlink\" title=\"IT 鐵人賽\"></a>IT 鐵人賽</h3><p>透過鐵人賽，可以看到許多人不同的文章與撰寫的內容，也讓自己增廣見聞與成長！</p>\n<h3 id=\"研討會\"><a href=\"#研討會\" class=\"headerlink\" title=\"研討會\"></a>研討會</h3><p>音樂詩人方文山曾經在一場簽書會說過：「想成為什麼樣的人，先做那個人要做的事情。」，六角學院固定會舉行線上研討會，為了讓自己的思維更貼近前端工程師，我後來幾乎有時間都會參加研討會，真的是秀才不出門，能知前端事。</p>\n<h3 id=\"F2E-作品\"><a href=\"#F2E-作品\" class=\"headerlink\" title=\"F2E 作品\"></a>F2E 作品</h3><p>我選擇旅房訂房網頁後，好好地並專心打磨此作品且練習手刻能力，大概花了我兩個月的時間，終於作了一個算是有點自信可以拿來面試的作品，雖然功能很陽春，但也是透過這個作品讓我程式撰寫能力大幅成長。</p>\n<h3 id=\"Slack\"><a href=\"#Slack\" class=\"headerlink\" title=\"Slack\"></a>Slack</h3><p>非常推薦進入這個 Slack 群，裡面各種高手學長姐，目前有些專案跟觀念也因為這個群組，解決我不少困難與問題。</p>\n<h3 id=\"FB-社團\"><a href=\"#FB-社團\" class=\"headerlink\" title=\"FB 社團\"></a>FB 社團</h3><p>可以看到許多學院優質的活動與課程推廣，也可以看到同學的成長與互相幫助，許多程式碼上的問題，在過來人的建議與分享，自己也獲得很大的成長與進步，原來我的問題，也是別人遇到的問題！更可貴的，真的可以找到互相扶持的朋友！</p>\n<h3 id=\"身邊的工程師朋友\"><a href=\"#身邊的工程師朋友\" class=\"headerlink\" title=\"身邊的工程師朋友\"></a>身邊的工程師朋友</h3><p>感謝上帝的恩典，我因為有幾位讓我詢問的六角學長，在我作品集還有專案上願意讓我問，也剛好身邊有一位資深全端工程師願意在我有問題的時候即時的發問，他也樂意指引我方向解決問題!真是非常感謝你們這一路的陪伴與協助!</p>\n<h3 id=\"兩位老師\"><a href=\"#兩位老師\" class=\"headerlink\" title=\"兩位老師\"></a>兩位老師</h3><p>最重要的，當然就是授課的兩位老師，若沒有你們創立六角學院，我就沒辦法透過最適合我的線上學習，踏進前端工程師的工作，也謝謝你們願意花時間跟分析我學習的方向，還有通話解決我的疑問，也非常謝謝助教 Ray 願意額外在晚上的時間教我如何架設部落格，還有解決我一些前端的問題，真是非常感謝你們無私的奉獻！</p>\n<h2 id=\"結語\"><a href=\"#結語\" class=\"headerlink\" title=\"結語\"></a>結語</h2><p>用下面三段話作為這次學習之路的結尾。</p>\n<h3 id=\"沒有可以複製的方式，只有最適合自己的道路\"><a href=\"#沒有可以複製的方式，只有最適合自己的道路\" class=\"headerlink\" title=\"沒有可以複製的方式，只有最適合自己的道路\"></a>沒有可以複製的方式，只有最適合自己的道路</h3><p>可能會在社團看到誰誰誰在幾個月後找到工作，擔心自己是否太慢或是無法踏入該領域，千萬別這麼想，因為這是剛好他找到最適合他的方式來幫助他自己學習，但適合的他不一定適合自己，只要按照自己的步調學習，確定知道，今天的自己比昨天強，這樣就夠了。</p>\n<h3 id=\"掌握技術熟練度，比預定時間來得重要\"><a href=\"#掌握技術熟練度，比預定時間來得重要\" class=\"headerlink\" title=\"掌握技術熟練度，比預定時間來得重要\"></a>掌握技術熟練度，比預定時間來得重要</h3><p>技術的熟練度掌握度多少，其實是騙不了人的，當你面對編輯器的時候就已經有了答案，與其去在意時間，不如在意把握度到底有多少還比較實際一點，不然會兩頭空，挫折感也會超級大！</p>\n<h3 id=\"沒有最好的決定，是做了決定後做到最好\"><a href=\"#沒有最好的決定，是做了決定後做到最好\" class=\"headerlink\" title=\"沒有最好的決定，是做了決定後做到最好\"></a>沒有最好的決定，是做了決定後做到最好</h3><p>所有的決定都不會是完美的，但是既然決定了，就好好走下去，就算面對任何困難，都不能阻止所做的決定，只要這個決定在心裡是踏實的，而且很多理由讓自己無法前進，只是因為自己懼怕與懶惰的藉口，最後也祝福在轉職的路上的朋友，要好好感謝你身邊的家人，因為若沒有他們的支持，也很難走得長遠！</p>\n<p>還有很多要學習的，繼續加油! Be Strong and Courageous, impossible is nothing!</p>\n<p><strong>我喜歡的一段話，與大家分享與自勉：</strong> Think Big, Start Small, Being Now!</p>\n","categories":["Learning Experience"],"tags":["前端學習之路"]},{"title":"JS 筆記 - 取得與清除 input 的值","url":"/javascript/20200518/1372907171/","content":"<p><img src=\"https://images.unsplash.com/photo-1493953659556-556b14bdaca8?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2091&q=80\" alt=\"clean\"></p>\n<h2 id=\"Submit\"><a href=\"#Submit\" class=\"headerlink\" title=\"Submit\"></a>Submit</h2><p>許多網站都有表單要填寫，寫完後按下送出就會將資料送到後台資料庫，在 W3School 有介紹這個寫法，</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">\"name\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>Name:<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"name\"</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">\"your name\"</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"submit\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"submit\"</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">\"submit\"</span>&gt;</span>Submit<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>可以看到有 <code>input</code> 跟 <code>button</code> 兩種，並且都有 <code>type=&quot;submit&quot;</code> 的方法可以使用，至於 <code>input</code> 跟 <code>button</code> 差別在哪裡，可以看<a href=\"https://www.zhihu.com/question/20839977\" target=\"_blank\" rel=\"noopener\">這篇文章</a>。</p>\n<p>簡單來說，為了避免使用者不小心將資料直接就送到後台，可以使用 <code>button</code> 來設計，如果是沒有疑慮的表單內容，可以使用 <code>input</code> 方式來設計。</p>\n<blockquote>\n<p>我自己是常用 <code>button</code> 來做設計，因為可以按照需求與功能進行。</p>\n</blockquote>\n<h2 id=\"Reset\"><a href=\"#Reset\" class=\"headerlink\" title=\"Reset\"></a>Reset</h2><p>有送出表單內容，當然也有清空表單內容，而 W3School 也有提供範本寫法，</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;label <span class=\"keyword\">for</span>=<span class=\"string\">\"email\"</span>&gt;</span><br><span class=\"line\">    &lt;span&gt;Email&lt;<span class=\"regexp\">/span&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    &lt;input type=\"email\" name=\"email\" id=\"email\" placeholder=\"your email\"&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    &lt;input type=\"reset\" value=\"reset\"&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    &lt;button type=\"reset\"&gt;Reset&lt;/</span>button&gt;</span><br><span class=\"line\">  &lt;<span class=\"regexp\">/label&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>上方的兩個寫法，記得要用 form 標籤，因為 input 本身是 form 的元素，要包住才會有效果！</p>\n<h2 id=\"透過-JS-取得值與清空-input-內容\"><a href=\"#透過-JS-取得值與清空-input-內容\" class=\"headerlink\" title=\"透過 JS 取得值與清空 input 內容\"></a>透過 JS 取得值與清空 input 內容</h2><p>本文重點，透過 JS 取得 input 輸入的值跟清空該怎麼寫? 直接看程式碼，</p>\n<h4 id=\"HTML\"><a href=\"#HTML\" class=\"headerlink\" title=\"HTML\"></a>HTML</h4><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">\"testInput\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>TEXT: <span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">\"test\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"testInput\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"submitBtn\"</span>&gt;</span>SUBMIT<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">\"reset\"</span>&gt;</span>RESET<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Javascript\"><a href=\"#Javascript\" class=\"headerlink\" title=\"Javascript\"></a>Javascript</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> testInput = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"testInput\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> submitBtn = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\".submitBtn\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">FsubmitBtn</span>(<span class=\"params\">value</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> str = <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> submitValue = testInput.value;</span><br><span class=\"line\">  str = submitValue;</span><br><span class=\"line\">  alert(str);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">submitBtn.addEventListener(<span class=\"string\">\"click\"</span>, FsubmitBtn);</span><br></pre></td></tr></table></figure>\n\n<p>說明：</p>\n<ol>\n<li>綁定 <code>input</code> 表格與 <code>button</code> 按鈕。</li>\n<li>寫一個 function 給監聽事件用。</li>\n<li>先宣告一個字串變數為空值。</li>\n<li>在宣告變數是 <code>input</code> 所得到的值。</li>\n<li>字串變數為 <code>input</code> 的值。</li>\n<li>執行 function 會跳出 alert 視窗，並顯示輸入的值。</li>\n<li><code>button type=&quot;reset&quot;</code> 在 <code>form</code> 標籤內，會自動執行清空 <code>input</code> 的功能。</li>\n</ol>\n<iframe src=\"https://codepen.io/hnzxewqw/embed/YzyRxVy?height=265&theme-id=light&default-tab=result\" width=\"100%\" height=\"450\" frameborder=\"0\" loading=\"lazy\" allowfullscreen> </iframe>\n\n<p>CodePen <a href=\"https://codepen.io/hnzxewqw/pen/YzyRxVy\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/YzyRxVy</a></p>\n<hr>\n<p>參考資料</p>\n<p><a href=\"https://pjchender.blogspot.com/2015/11/javascript.html\" target=\"_blank\" rel=\"noopener\">[Guide] 用 JavaScript 來取得表單元素內容的值（取值）</a></p>\n<p><a href=\"https://www.w3schools.com/tags/att_button_type.asp\" target=\"_blank\" rel=\"noopener\">HTML <code>&lt;button&gt;</code> type Attribute</a></p>\n","categories":["JavaScript"],"tags":["JavaScript"]},{"title":"JS 筆記 - for 迴圈 + if 的使用練習","url":"/javascript/20200513/3002099079/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/JavaScript%20note-01.jpg?alt=media&token=7bee0261-72ac-4de4-9f5a-f39d58735b7d\" alt=\"JavaScript Note\"></p>\n<p>之前學過 if，是有條件下的篩選機制，如果是多樣本但只要取出條件下的數值，配上迴圈就會非常好用，下方帶入一個主題：</p>\n<h3 id=\"有三間賣炸雞的餐廳要被評鑑銷售量，套餐要超過-100-筆訂單的就可獲得獎品。\"><a href=\"#有三間賣炸雞的餐廳要被評鑑銷售量，套餐要超過-100-筆訂單的就可獲得獎品。\" class=\"headerlink\" title=\"有三間賣炸雞的餐廳要被評鑑銷售量，套餐要超過 100 筆訂單的就可獲得獎品。\"></a>有三間賣炸雞的餐廳要被評鑑銷售量，套餐要超過 100 筆訂單的就可獲得獎品。</h3><p>三家炸雞店的資料如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> shops = [</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    captain: <span class=\"string\">\"Tim\"</span>,</span><br><span class=\"line\">    chicken: <span class=\"number\">150</span>,</span><br><span class=\"line\">    coke: <span class=\"number\">200</span>,</span><br><span class=\"line\">    fries: <span class=\"number\">70</span>,</span><br><span class=\"line\">    <span class=\"keyword\">set</span>: 99,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    captain: <span class=\"string\">\"Min\"</span>,</span><br><span class=\"line\">    chicken: <span class=\"number\">99</span>,</span><br><span class=\"line\">    coke: <span class=\"number\">77</span>,</span><br><span class=\"line\">    fries: <span class=\"number\">55</span>,</span><br><span class=\"line\">    <span class=\"keyword\">set</span>: 101,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    captain: <span class=\"string\">\"Mike\"</span>,</span><br><span class=\"line\">    chicken: <span class=\"number\">105</span>,</span><br><span class=\"line\">    coke: <span class=\"number\">111</span>,</span><br><span class=\"line\">    fries: <span class=\"number\">75</span>,</span><br><span class=\"line\">    <span class=\"keyword\">set</span>: 130,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">];</span><br><span class=\"line\">//陣列資料</span><br></pre></td></tr></table></figure>\n\n<p>因為只有三筆資料，可以很輕易地用眼睛看出來誰的套餐超過 100 套，但如果資料一多，就要使用迴圈了。<br>先用 <code>length</code> 查一下資料長度：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> setTotal = shops.length;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(setTotal); <span class=\"comment\">//結果會得到 3</span></span><br></pre></td></tr></table></figure>\n\n<p>使用迴圈來找超過一百套的店家吧！</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; setTotal; i++) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (shops[i].set &gt; <span class=\"number\">100</span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(shops[i].captain + <span class=\"string\">\"的套餐在本月賣超過 100 套，以資鼓勵\"</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ol>\n<li>建立迴圈，從第一筆資料找起，條件為當變數小於 setTotal 資料數，更新的內容。關於迴圈可以看<a href=\"https://ithelp.ithome.com.tw/articles/10229230\" target=\"_blank\" rel=\"noopener\">這篇</a></li>\n<li>使用 if，在 shops 中，找到 set 套餐大於 100 套的店家。</li>\n<li>找到這些店長的名字。</li>\n</ol>\n<p>畫面結果如下：</p>\n<p><img src=\"https://ithelp.ithome.com.tw/upload/images/20191204/20119300EXa4P0aumU.png\" alt=\"https://ithelp.ithome.com.tw/upload/images/20191204/20119300EXa4P0aumU.png\"></p>\n<hr>\n<h2 id=\"結語\"><a href=\"#結語\" class=\"headerlink\" title=\"結語\"></a>結語</h2><ol>\n<li>練習 JS 至今，要建立一些情境才能更明確的來練習該內容，會比較有方向，也練習如果未來面對開發的需求，會遇到的條件，滿有意思的！</li>\n<li>陣列與物件很常被使用，要多多練習。</li>\n</ol>\n","categories":["JavaScript"],"tags":["JavaScript"]},{"title":"JS 筆記 - 透過 JavaScript 生成一個檔案並下載","url":"/javascript/20200513/3866185586/","content":"<p><img src=\"https://images.unsplash.com/photo-1563906267088-b029e7101114?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1950&q=80\" alt=\"download\"></p>\n<p>看到上方這張圖片，如果喜歡的話會怎麼儲存呢?</p>\n<p>沒錯~就是在圖片上點選右鍵並且選擇「另存圖片」下載它，那該怎麼做?</p>\n<h2 id=\"在-a-連結中即可實現\"><a href=\"#在-a-連結中即可實現\" class=\"headerlink\" title=\"在 a 連結中即可實現\"></a>在 a 連結中即可實現</h2><p>W3School 的範例程式碼：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"/images/myw3schoolsimage.jpg\"</span> <span class=\"attr\">download</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>只要在 <code>image</code> 資料中的檔案，透過 <code>a</code> 連結，最後加上 <code>download</code> 屬性就可以完成這個功能。</p>\n<p>但是今天 PM 跑來說：<br>「客戶那邊要求在表單下方要有一個按鈕，表單所產生的 data 的資料，按下按鈕可以下載，然後這個檔案要用 excel 打開。」</p>\n<p>所以獲得以下資訊：</p>\n<ol>\n<li>有一個按鈕。</li>\n<li>會有 data 資料產生。</li>\n<li>有下載功能。</li>\n<li>要用 excel 可以打開的格式。</li>\n</ol>\n<p>這時馬上請教 Google 大神，然後找到了 Blob，跟想起來好像 excel 匯出有一個叫做 CSV 格式檔案，會用來匯入的。</p>\n<h2 id=\"CSV-逗號分隔值\"><a href=\"#CSV-逗號分隔值\" class=\"headerlink\" title=\"CSV 逗號分隔值\"></a>CSV 逗號分隔值</h2><p>逗號分隔值（Comma-Separated Values，CSV，有時也稱為字元分隔值，因為分隔字元也可以不是逗號），其檔案以純文字形式儲存表格資料（數字和文字），<a href=\"https://zh.wikipedia.org/wiki/%E9%80%97%E5%8F%B7%E5%88%86%E9%9A%94%E5%80%BC\" target=\"_blank\" rel=\"noopener\">更多請看維基百科</a>。</p>\n<h2 id=\"Blob\"><a href=\"#Blob\" class=\"headerlink\" title=\"Blob\"></a>Blob</h2><blockquote>\n<p><a href=\"https://developer.mozilla.org/zh-TW/docs/Web/API/Blob\" target=\"_blank\" rel=\"noopener\">MDN</a> 這樣解釋：<br>Blob（Binary Large Object）物件代表了一個相當於檔案（原始資料）的不可變物件。Blob 中的資料並不一定是 JavaScript 原生的格式。File 介面基於 Blob，繼承 blob 並擴充其功能以支援操作使用者系統上的檔案。</p>\n</blockquote>\n<p>看一下程式碼：</p>\n<h4 id=\"HTML\"><a href=\"#HTML\" class=\"headerlink\" title=\"HTML\"></a>HTML</h4><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"downloadBtn\"</span>&gt;</span>Download File<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"JavaScript\"><a href=\"#JavaScript\" class=\"headerlink\" title=\"JavaScript\"></a>JavaScript</h4><p>綁定 <code>button</code> 與建立監聽事件 <code>click</code>,</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> downloadBtn = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\".downloadBtn\"</span>);</span><br><span class=\"line\">downloadBtn.addEventListener(<span class=\"string\">\"click\"</span>, downloadFile);</span><br></pre></td></tr></table></figure>\n\n<p>在函式 <code>downloadFile();</code> 寫入要下載的方法：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">downloadFile</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">//藉型別陣列建構的 blob 來建立 URL</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> fileName = <span class=\"string\">\"fileName.csv\"</span>;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> data = getRandomData();</span><br><span class=\"line\">  <span class=\"keyword\">let</span> blob = <span class=\"keyword\">new</span> Blob([data], &#123;</span><br><span class=\"line\">    type: <span class=\"string\">\"application/octet-stream\"</span>[註<span class=\"number\">1</span>],</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  <span class=\"keyword\">var</span> href = URL.createObjectURL(blob);</span><br><span class=\"line\">  <span class=\"comment\">// 從 Blob 取出資料</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> link = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">\"a\"</span>);</span><br><span class=\"line\">  <span class=\"built_in\">document</span>.body.appendChild(link);</span><br><span class=\"line\">  link.href = href;</span><br><span class=\"line\">  link.download = fileName;</span><br><span class=\"line\">  link.click();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ol>\n<li><p>先命名一個變數等於下載的檔案名稱。</p>\n</li>\n<li><p>data 用一個 function 取得。</p>\n</li>\n<li><p>new Blob 的方法參考 MDN 介紹的 <code>Blob。</code></p>\n<blockquote>\n<p>var blob = new Blob([typedArray], {type: ‘application/octet-binary’}); // pass a useful mime type here<br>var url = URL.createObjectURL(blob);</p>\n</blockquote>\n</li>\n<li><p>接下來命名一個變數，讓其在網頁建立一個 a 連結功能。</p>\n</li>\n<li><p>在網頁文件的 body 瀏覽器新增一個子節點，其參數為剛剛建立的 a 連結。</p>\n</li>\n<li><p>a 連結的屬性等於剛剛宣告的 href 變數。</p>\n</li>\n<li><p>再給 a 連結一個 download 點擊事件等於宣告的文件檔案名稱。</p>\n</li>\n<li><p>產生點擊事件。</p>\n</li>\n</ol>\n<blockquote>\n<p>補充：<br>外部建立 <code>click</code> 的監聽事件，是呼叫 function 用，而 function 內的 <code>click();</code>，是針對透過 JS 建立的 <code>a</code> 連結所產生的點擊事件，所以兩個是不同的！</p>\n</blockquote>\n<h4 id=\"假資料\"><a href=\"#假資料\" class=\"headerlink\" title=\"假資料\"></a>假資料</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getRandomData</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> header = <span class=\"string\">\"RandomHeader\"</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> data = <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> j = <span class=\"number\">0</span>; j &lt; <span class=\"number\">2</span>; j++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (j &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        data = data + <span class=\"string\">\",\"</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      data = data + <span class=\"string\">\"Item\"</span> + i + <span class=\"string\">\"_\"</span> + j;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> header + data;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>codepen: <a href=\"https://codepen.io/hnzxewqw/pen/WNQKMKG\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/WNQKMKG</a></p>\n<h2 id=\"用-JS-寫一個載入檔案-load-File-功能\"><a href=\"#用-JS-寫一個載入檔案-load-File-功能\" class=\"headerlink\" title=\"用 JS 寫一個載入檔案 load File 功能\"></a>用 JS 寫一個載入檔案 load File 功能</h2><p>有下載檔案，一定也有透過本地端載入檔案到網頁上的功能，在 HTML 5 有建立一個 load 的語法，但會有預設的樣式，</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"file\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"myfile\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"myfile\"</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>Codepen <a href=\"https://codepen.io/hnzxewqw/pen/dyYQzOy\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/dyYQzOy</a></p>\n<p>但這次專案中是使用 button 按鈕來取得檔案，要有美美的按鈕，所以改寫一下，</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"file\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"file\"</span> <span class=\"attr\">hidden</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn_loadFile\"</span>&gt;</span>Load File<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>因為在 input 使用 hidden 屬性，所以原本預設的 input 就會看不見。必須使用 JS 來控制該功能，這邊使用的是 jQuery，</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">\".btn_loadFile\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  $(<span class=\"string\">\":file\"</span>).trigger(<span class=\"string\">\"click\"</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>這樣就可以實現檔案下載的功能，又能具備好看的 button。</p>\n<p>CodePen <a href=\"https://codepen.io/hnzxewqw/pen/zYvMdoy\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/zYvMdoy</a></p>\n<blockquote>\n<p>註 1.<br>網際網路媒體類型（Internet media type，也稱為 MIME 類型（MIME type）或內容類型（content type））是給網際網路上傳輸的內容賦予的分類類型。這邊的情境是<br><a href=\"https://zh.wikipedia.org/wiki/%E4%BA%92%E8%81%94%E7%BD%91%E5%AA%92%E4%BD%93%E7%B1%BB%E5%9E%8B#Type_application\" target=\"_blank\" rel=\"noopener\">application/octet-stream:任意的二進制檔案（通常做為通知瀏覽器下載檔案）</a>，還有很多種類型的介紹，請見維基百科。</p>\n</blockquote>\n","categories":["JavaScript"],"tags":["JavaScript"]},{"title":"jQuery 筆記 - 使用 fadeToggle 產生按鈕互動","url":"/jQuery/20200508/3013406974/","content":"<p><img src=\"https://i.imgur.com/acDsVRc.png\" alt=\"sample pic\"></p>\n<p>這是專案上所提出的一個使用情境，不是很新穎的技術，但會是一個綜合使用體驗的安排，記錄一下該功能與語法的內容。使用到的技術與語法如下：</p>\n<ul>\n<li>jQuery function:<ul>\n<li>fadeIn();</li>\n<li>fadeOut();</li>\n<li>fadeToggle();</li>\n</ul>\n</li>\n<li>SCSS 預處理器。</li>\n<li>CSS3 function calc。</li>\n</ul>\n<h2 id=\"起源\"><a href=\"#起源\" class=\"headerlink\" title=\"起源\"></a>起源</h2><p>PM 某天跑來這樣說：<br>這個頁面一開始看不到資訊頁內容，會有一個視窗蓋在畫面前面，要加上一個關閉按鈕，希望關閉後可以透過點擊按鈕再次叫出與關閉，資訊頁需要一個按鈕獨立控制。</p>\n<blockquote>\n<p>整串聽完只聽到一直開開關關…</p>\n</blockquote>\n<p>歸類有下方條件：</p>\n<ol>\n<li>一開始有一個小視窗。</li>\n<li>一開始資訊頁是看不見的。</li>\n<li>會有一個按鈕可以開啟資訊頁。</li>\n<li>會有一個按鈕可以控制小視窗頁開跟關。</li>\n</ol>\n<h2 id=\"版面處理\"><a href=\"#版面處理\" class=\"headerlink\" title=\"版面處理\"></a>版面處理</h2><p>使用 CSS3 function calc 方式做規劃，分成兩邊，一邊為 <code>width: calc(100% * 4 / 12);</code>，資訊頁為 <code>width: calc(100% * 4 / 12);</code>，這個方法真的非常好用啊!</p>\n<p>看一下 HTML 的結構分成三塊，兩個 <code>button</code>，小視窗 <code>.box</code>，資訊頁 <code>.info</code>，</p>\n<h4 id=\"HTML\"><a href=\"#HTML\" class=\"headerlink\" title=\"HTML\"></a>HTML</h4><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"container\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btnGroup\"</span>&gt;</span></span><br><span class=\"line\">    //button</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>點擊按鈕產生互動<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"toggleBtn\"</span>&gt;</span>OPEN / CLOSE<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"openInfoBtn\"</span>&gt;</span>CLICK TO SHOW INFO<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"box\"</span>&gt;</span></span><br><span class=\"line\">    //小視窗</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"box_container\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>哪一個用詞正確<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"li_Info\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>這是一批賽馬<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>這是一匹賽馬<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>這只是普通馬<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"closeBtn\"</span>&gt;</span>CLOSE<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"info\"</span>&gt;</span></span><br><span class=\"line\">    //資訊頁</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">img</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">src</span>=<span class=\"string\">\"https://images.unsplash.com/photo-1588763475559-b854628a953c?ixlib=rb-1.2.1&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;auto=format&amp;fit=crop&amp;w=1947&amp;q=80\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    /&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">      必須防止科技有限公司翻譯，默認確認，師傅環保積分是指條款，這個人們程度防止網遊，求職理由其實健康我的心環境篇文章給你我真幾乎，分類又有定義整合檢測登記手術登陸郵件少年異常電影寶寶簡直造型，全家特徵導航地上沒想到語音辦公水晶記憶經營研究生氣奇蹟高效，說了大。</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>因為一開始只有小視窗 <code>.box</code>，並且隱藏資訊頁 <code>.info</code>，所以這邊會使用 <code>display:none / block</code> 來呈現。</p>\n<p>另外要讓小視窗「蓋在」資訊頁上面，變使用 <code>z-index</code> 的順序來制訂，這邊使用 99 (我預定範圍為 1~99，使用最高的階層，避免未來維護時不小心被蓋過)。並使用 <code>position: absolute;</code> 將其絕對定位在瀏覽器，因為沒有特別寫 <code>position:relative;</code> 在別的地方，所以就會預設瀏覽器為父元素。</p>\n<h4 id=\"box\"><a href=\"#box\" class=\"headerlink\" title=\".box\"></a>.box</h4><figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.box</span> &#123;</span><br><span class=\"line\">   display: block; //一開始顯示</span><br><span class=\"line\">   <span class=\"selector-tag\">position</span>: <span class=\"selector-tag\">absolute</span>;</span><br><span class=\"line\">   <span class=\"selector-tag\">z-index</span>: 99;</span><br><span class=\"line\">   <span class=\"selector-tag\">top</span>: 30%;</span><br><span class=\"line\">   <span class=\"selector-tag\">left</span>: 40%;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"info\"><a href=\"#info\" class=\"headerlink\" title=\".info\"></a>.info</h4><figure class=\"highlight\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.info</span> &#123;</span><br><span class=\"line\">  display: none; //一開始隱藏</span><br></pre></td></tr></table></figure>\n\n<p>完成基本畫面設置後，就要透過 jQuery 來做互動效果。這次是要透過按鈕來做互動，所以先來看一下按鈕，</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"toggleBtn\"</span>&gt;</span>OPEN / CLOSE<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"openInfoBtn\"</span>&gt;</span>CLICK TO SHOW INFO<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>先綁定到 <code>.toggleBtn</code> 並產生 <code>click</code> 事件，當點擊此按鈕時， <code>.box</code> 小視窗，會於 0.5 秒淡出，再次點擊會於 0.5 秒後淡入，透過 <code>fadeToggle(填入時間參數);</code> 便可以實現此功能。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">\".toggleBtn\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  $(<span class=\"string\">\".box\"</span>).fadeToggle(<span class=\"number\">500</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>接者綁定 <code>.openInfoBtn</code> 並產生 <code>click</code> 事件，當點擊此按鈕時，會產生兩種行為，淡入顯示， <code>.box</code> 便淡出消失，</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">\".openInfoBtn\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  $(<span class=\"string\">\".info\"</span>).fadeIn(<span class=\"number\">300</span>);</span><br><span class=\"line\">  $(<span class=\"string\">\".box\"</span>).fadeOut(<span class=\"number\">500</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>最後在 <code>.box</code> 小視窗中也有一個 close 按鈕，也綁定 <code>click</code> 事件，點擊按鈕後，視窗會於 0.5 秒後淡出消失。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">\".closeBtn\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  $(<span class=\"string\">\".box\"</span>).fadeOut(<span class=\"number\">500</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>Codepen: <a href=\"https://codepen.io/hnzxewqw/pen/rNOddaX\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/rNOddaX</a></p>\n<h2 id=\"參考文章：\"><a href=\"#參考文章：\" class=\"headerlink\" title=\"參考文章：\"></a>參考文章：</h2><ol>\n<li><a href=\"https://ithelp.ithome.com.tw/articles/10130065\" target=\"_blank\" rel=\"noopener\">CSS 沒有極限 - CSS 的神奇 Calc 運算</a></li>\n<li><a href=\"https://api.jquery.com/fadetoggle/\" target=\"_blank\" rel=\"noopener\">jQuery fadeToggle</a></li>\n</ol>\n","categories":["jQuery"],"tags":["JavaScript","jQuery"]},{"title":"JS 筆記 - for 迴圈 + array 陣列的使用方法","url":"/javascript/20200504/976232810/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/JavaScript%20note-01.jpg?alt=media&token=7bee0261-72ac-4de4-9f5a-f39d58735b7d\" alt=\"JavaScript Note\"></p>\n<h2 id=\"透過迴圈來取得陣列裡的資料\"><a href=\"#透過迴圈來取得陣列裡的資料\" class=\"headerlink\" title=\"透過迴圈來取得陣列裡的資料\"></a>透過迴圈來取得陣列裡的資料</h2><p>當得到龐大的陣列資料時，透過迴圈來存取資料會輕鬆又省事，所以陣列跟迴圈常常會搭配使用。</p>\n<h4 id=\"情境\"><a href=\"#情境\" class=\"headerlink\" title=\"情境\"></a>情境</h4><p>倘若今天要查詢兩間店家的老闆姓名，拿到兩個陣列資料，程式碼如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> shops = [</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    captain: <span class=\"string\">\"Tim\"</span>,</span><br><span class=\"line\">    coke: <span class=\"number\">10</span>,</span><br><span class=\"line\">    cookie: <span class=\"number\">25</span>,</span><br><span class=\"line\">    egg: <span class=\"number\">170</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    captain: <span class=\"string\">\"Min\"</span>,</span><br><span class=\"line\">    coke: <span class=\"number\">77</span>,</span><br><span class=\"line\">    cookie: <span class=\"number\">44</span>,</span><br><span class=\"line\">    egg: <span class=\"number\">58</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">];</span><br><span class=\"line\"><span class=\"comment\">//陣列資料</span></span><br></pre></td></tr></table></figure>\n\n<p>之前學過透過陣列存取資料的方法為：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(shops.length); <span class=\"comment\">//結果會得到 2</span></span><br></pre></td></tr></table></figure>\n\n<p>不過有時候在工作上得到資料無法預期有多少的資料，可以用下方寫法找出有多少筆資料：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> captainTotal = shops.length;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(captainTotal); <span class=\"comment\">//結果會得到 2</span></span><br></pre></td></tr></table></figure>\n\n<hr>\n<h3 id=\"使用迴圈存取陣列資料\"><a href=\"#使用迴圈存取陣列資料\" class=\"headerlink\" title=\"使用迴圈存取陣列資料\"></a>使用迴圈存取陣列資料</h3><p>透過迴圈存取陣列資料，程式碼如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> shops = [</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    captain: <span class=\"string\">\"Tim\"</span>,</span><br><span class=\"line\">    coke: <span class=\"number\">10</span>,</span><br><span class=\"line\">    cookie: <span class=\"number\">25</span>,</span><br><span class=\"line\">    egg: <span class=\"number\">170</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    captain: <span class=\"string\">\"Min\"</span>,</span><br><span class=\"line\">    coke: <span class=\"number\">77</span>,</span><br><span class=\"line\">    cookie: <span class=\"number\">44</span>,</span><br><span class=\"line\">    egg: <span class=\"number\">58</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">];</span><br><span class=\"line\"><span class=\"comment\">//陣列資料</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; captainTotal; i++) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(shops[<span class=\"number\">0</span>].captain);</span><br><span class=\"line\">  <span class=\"comment\">//帶入陣列長度的變數。</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>但迴圈這樣帶會有一個問題，上面得知 <code>captainsTotal</code> 的資料長度是 2，但是這樣迴圈會直接抓兩次第一個陣列的 <code>captain</code> 兩次，會變這樣：</p>\n<p><img src=\"https://ithelp.ithome.com.tw/upload/images/20191204/20119300jgqAQaQYFq.png\" alt=\"https://ithelp.ithome.com.tw/upload/images/20191204/20119300jgqAQaQYFq.png\"></p>\n<p>但今天的目標是要把兩個物件內的店長姓名找出來，所以會變成下方程式碼：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; captainTotal; i++) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(shops[i].captain);</span><br><span class=\"line\">  <span class=\"comment\">//帶入陣列長度的變數。</span></span><br><span class=\"line\">  <span class=\"comment\">//陣列裡改成 i</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>因為 <code>captainTotal</code> 資料有兩筆，所以迴圈會跑兩次，要記得在陣列中起始的數字為 0，不是 1，所以會跑兩次的原因是這樣。<br>這樣就會找到兩個物件中店長的名字，如下方畫面：</p>\n</blockquote>\n<p><img src=\"https://ithelp.ithome.com.tw/upload/images/20191204/20119300TnN8QLw9b2.png\" alt=\"https://ithelp.ithome.com.tw/upload/images/20191204/20119300TnN8QLw9b2.png\"></p>\n<hr>\n<h3 id=\"結語\"><a href=\"#結語\" class=\"headerlink\" title=\"結語\"></a>結語</h3><ol>\n<li>如果陣列中的物件資料非常多，使用迴圈存取資料真的準確又方便。</li>\n<li>存取陣列資料的寫法需要多熟悉。</li>\n<li>迴圈條件中的值，可以換成<strong>設定的變數名稱</strong>。</li>\n</ol>\n","categories":["JavaScript"],"tags":["JavaScript"]},{"title":"C# 筆記 - 類別","url":"/c/20200428/284475535/","content":"<p><img src=\"https://robertlan.com/wp-content/uploads/2018/09/C-1024x384.png\" alt=\"C# ASP.NET\"></p>\n<p>這篇沒有很深入的紀錄內容，主要是因為工作上看到這些詞覺得疑惑，不太知道該屬性，所以簡單做個紀錄，讓我下次看到相關的程式碼時，可以查找。</p>\n<h2 id=\"類別-class\"><a href=\"#類別-class\" class=\"headerlink\" title=\"類別 class\"></a>類別 class</h2><ul>\n<li><code>class</code> 是 C# 的最基本類型。</li>\n<li>類別是以單一單位結合狀態 (欄位) 和動作 (方法及其他函式成員) 的資料結構。</li>\n<li>類別可以為動態建立的類別「執行個體」(稱為「物件」) 提供定義。</li>\n<li>類別支援「繼承」和「多型」，這些是可供「衍生類別」 將「基底類別」延伸及特製化的機制。</li>\n</ul>\n<h3 id=\"建立新類別\"><a href=\"#建立新類別\" class=\"headerlink\" title=\"建立新類別\"></a>建立新類別</h3><p>建立 class 是使用類別宣告來建立。類別宣告的開頭是一個標頭，此標頭會指定類別的<strong>屬性</strong>和<strong>修飾詞</strong>、<strong>類別的名稱</strong>、<strong>基底類別</strong> (如果提供)，以及<strong>類別所實作的介面</strong>。 此標頭後面會接著類別主體，此主體是由在 <code>{</code> 與 <code>}</code> 分隔符號之間撰寫的成員宣告清單所組成。</p>\n<blockquote>\n<p>沒錯，官網講得通常都很文言 <del>(看不懂)</del>。</p>\n</blockquote>\n<p>直接看範例程式碼：</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Point</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>翻譯：<br>一開始要用一個修飾詞當作<strong>引介點</strong>，之前有提過 C# 進入點只有一個，<code>public</code> 的如字面解釋，就是公開，沒有限制條件就讀取的<strong>進入點</strong>(後面會有說明)。並使用 <code>class</code> 類別，與<strong>自訂義的名稱</strong> <code>point</code>，並且用一個<strong>大括號</strong>建立，期內放入要撰寫的程式碼。</p>\n<h2 id=\"屬性\"><a href=\"#屬性\" class=\"headerlink\" title=\"屬性\"></a>屬性</h2><ul>\n<li><code>public</code>：訪問不受限制。</li>\n<li><code>protected</code>：訪問僅限於此類或從此類派生的類。</li>\n<li><code>internal</code>：訪問僅限於當前程式集（<code>.exe</code>、<code>.dll</code> 等）。</li>\n<li><code>protected internal</code>：訪問僅限於包含類、派生自包含類的類或同一程式集中的類。</li>\n<li><code>private</code>：訪問僅限於此類。</li>\n<li><code>private protected</code>：訪問僅限於從同一程式集中的包含類型派生的包含類或類。</li>\n</ul>\n<h2 id=\"欄位\"><a href=\"#欄位\" class=\"headerlink\" title=\"欄位\"></a>欄位</h2><p>「欄位」是與類別或類別執行個體關聯的變數。使用 <code>static</code> 修飾詞來宣告的欄位會定義靜態欄位。 靜態欄位只會識別一個儲存位置。無論創建多少個類的實例，靜態欄位只有一個副本。<br>未使用 <code>static</code> 修飾詞來宣告的欄位會定義執行個體欄位。 每個類別執行個體都包含一個該類別所有執行個體欄位的個別複本。</p>\n<blockquote>\n<p>看完之後只知道 <code>static</code> 是靜態的修飾詞，英文本身意思也是靜態的意思。</p>\n</blockquote>\n<p>後來看到<a href=\"https://dotblogs.com.tw/im_sqz777/2017/11/14/235408\" target=\"_blank\" rel=\"noopener\">這篇文</a>就有比較了解 <code>static</code>。</p>\n<p>引用一下說明：</p>\n<blockquote>\n<p>用物件導向的方式來解釋用到 <code>static</code> 這個修飾詞時和不使用 <code>static</code> 這個修飾詞時意義上的差異：</p>\n<p>假設今天有一個<strong>公開類別</strong>名稱叫做「人類」有個方法叫做「賺錢」。<br>如果賺錢這個方法是靜態方法 則大家賺的錢就是大家的 <del>(超爽 der 可以開始耍廢了</del><br>如果是非靜態方法，則大家自己賺的錢就是自己的。</p>\n</blockquote>\n<p>所以說使用 <code>static</code> 會影響到其他的程式碼，沒有使用就是自身的影響的程式碼，這跟 JS 的全域與區域變數感覺有點像。 <del>(但前輩叫我不要用 JS 去想 C#)</del></p>\n","categories":["C#"],"tags":["C#"]},{"title":"Moment.js 套件筆記 - 使用 Moment.js 套件做一個電子時鐘","url":"/javascript/20200428/2819232808/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/momentClock.jpg?alt=media&token=7fb1360f-9e69-4d6c-83e3-b009ffb45fe8\" alt=\"moment.js\"></p>\n<p>這次因為專案關係，研究了這個套件，之前就有聽過很好用，但一直沒實際使用過，查考網路很多教學都只有按照官網說明有哪些功能可以使用，但卻找不到會呈現在 HTML 的文章，想說趁著還熟悉就紀錄一下這次的製作方式。</p>\n<h2 id=\"契機\"><a href=\"#契機\" class=\"headerlink\" title=\"契機\"></a>契機</h2><p>事情是這樣，專案上需要一個時間可以自動更新，不需要手動操作的資料，所以我就找了這個套件來用。這次做了一個電子時鐘當作筆記。</p>\n<h2 id=\"關於-Moment-js-與下載套件\"><a href=\"#關於-Moment-js-與下載套件\" class=\"headerlink\" title=\"關於 Moment.js 與下載套件\"></a>關於 Moment.js 與下載套件</h2><p>這是一個關於日期與時間的套件，網路上非常多說明，就不再贅述，可以參照下方文章有更完整的說明。</p>\n<p><a href=\"https://momentjs.com/\" target=\"_blank\" rel=\"noopener\">Moment.js 官方網站</a></p>\n<p><a href=\"https://ithelp.ithome.com.tw/articles/10208995\" target=\"_blank\" rel=\"noopener\">moment.js - 關於時間的一切</a></p>\n<p><a href=\"https://codertw.com/%E7%A8%8B%E5%BC%8F%E8%AA%9E%E8%A8%80/122725/\" target=\"_blank\" rel=\"noopener\">Moment.js 常見用法總結</a></p>\n<p>進入官網後有幾個安裝套件的方式：</p>\n<ol>\n<li><p>透過終端機安裝套件 <a href=\"https://momentjs.com/docs/\" target=\"_blank\" rel=\"noopener\">https://momentjs.com/docs/</a> 方法有很多，可以進入官網看。</p>\n</li>\n<li><p>透過 cdnjs</p>\n</li>\n</ol>\n<p>moment.min.js (普通的套件)</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">https://<span class=\"title\">cdnjs.cloudflare.com</span>/<span class=\"title\">ajax</span>/<span class=\"title\">libs</span>/<span class=\"title\">moment.js</span>/2.24.0/<span class=\"title\">moment.min.js</span></span></span><br></pre></td></tr></table></figure>\n\n<p>moment-with-locales.min.js (有含時區的套件)</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">https://<span class=\"title\">cdnjs.cloudflare.com</span>/<span class=\"title\">ajax</span>/<span class=\"title\">libs</span>/<span class=\"title\">moment.js</span>/2.24.0/<span class=\"title\">moment</span>-<span class=\"title\">with</span>-<span class=\"title\">locales.min.js</span></span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>直接下載套件，並安裝到 js 資料夾中。</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;script src=<span class=\"string\">\"js/moment.js\"</span>&gt;<span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n\n<p>然後加入這段其實就可以使用 moment.js 套件了，</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">moment();</span><br></pre></td></tr></table></figure>\n\n<p>對了!要跟 jQuery 一樣放在 <code>head</code> 裡面，不然會找不到核心， <code>console</code> 會跳錯！是可以在 <code>console</code> 裡面看到時間了…</p>\n<p>但是，最重要的是要讓它在 HTML 上呈現阿…</p>\n<h2 id=\"進入正題\"><a href=\"#進入正題\" class=\"headerlink\" title=\"進入正題\"></a>進入正題</h2><p>這次要做一個電子時鐘，有小時，有分鐘，有秒數，所以這邊會使用到 <code>setInterval()</code> 的用法，是固定延遲了某段時間之後，才去執行對應的程式碼，然後「不斷循環」。與 <code>setTimeout()</code> 不同之處是 <code>setTimeout()</code> 只會執行一次就結束，而 <code>setInterval()</code> 則是會在間隔固定的時間不斷重複。</p>\n<blockquote>\n<p>引用文章: <a href=\"https://kuro.tw/posts/2019/02/23/%E8%AB%87%E8%AB%87-JavaScript-%E7%9A%84-setTimeout-%E8%88%87-setInterval/\" target=\"_blank\" rel=\"noopener\">談談 JavaScript 的 setTimeout 與 setInterval</a></p>\n</blockquote>\n<p>首先在 HTML 綁定一個 <code>id=&quot;clock&quot;</code> 。</p>\n<p>JS 也同步綁定一個這個 <code>id</code>，</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> clock = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"clock\"</span>);</span><br></pre></td></tr></table></figure>\n\n<p>並利用 <code>setInterval()</code> 來製造一秒跳一次的效果，</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">setInterval(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> time = moment();</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">\"time is being updated\"</span>); <span class=\"comment\">//會看到文字旁邊會有數字一秒跳一下</span></span><br><span class=\"line\">&#125;, <span class=\"number\">1000</span>);</span><br></pre></td></tr></table></figure>\n\n<p>這時官方語法有一個是 <code>format();</code>，是讓我們可以閱讀的格式，會呈現完整的日期與時間，</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">moment().<span class=\"built_in\">format</span>();</span><br></pre></td></tr></table></figure>\n\n<p>所以把剛剛宣告的變數後面加上 <code>format();</code></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> readTime = time.format();</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(readTime); <span class=\"comment\">//就會看到時間格式了 2020-04-28T22:22:03+08:00</span></span><br></pre></td></tr></table></figure>\n\n<p>但陽春一點的電子鐘，只有時間還有制度 (12/24hr)，依照官網所說明的我們這邊在 <code>format();</code>裡面加上 <code>&quot;hh:mm:ss A&quot;</code></p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/moment.keyword.png?alt=media&token=d9854c12-5b0f-49d3-948c-050a5931b7ff\" alt=\"moment.js keyword\"></p>\n<blockquote>\n<p>補充：<br>A: 顯示大寫的 AM/PM<br>a: 顯示小寫的 am/pm</p>\n</blockquote>\n<p>完成後在 console 應該會得到我們想要的樣子，最後終於要印在網頁上啦!!只要加上最基本的語法，</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">clock.textContent = readTime;</span><br></pre></td></tr></table></figure>\n\n<p>目前打完的完整程式碼：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> clock = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"clock\"</span>);</span><br><span class=\"line\">setInterval(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> time = moment();</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">\"time is being updated\"</span>);</span><br><span class=\"line\">  <span class=\"keyword\">let</span> readTime = time.format();</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(readTime);</span><br><span class=\"line\">  clock.textContent = readTime;</span><br><span class=\"line\">&#125;, <span class=\"number\">1000</span>);</span><br></pre></td></tr></table></figure>\n\n<p>這樣就完成了!!</p>\n<p>但是，這樣的程式碼太凌亂，另外建立一個具名函式，在將這個具名函式放到 setInterval() 的函式內，並且最後在執行這個函式，這樣程式碼既簡潔也好閱讀。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> clock = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"clock\"</span>);</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">updateTime</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> time = moment();</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">\"time is being updated\"</span>);</span><br><span class=\"line\">  <span class=\"keyword\">let</span> readTime = time.format(<span class=\"string\">\"hh:mm:ss A\"</span>);</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(readTime);</span><br><span class=\"line\">  clock.textContent = readTime;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">setInterval(updateTime, <span class=\"number\">1000</span>);</span><br><span class=\"line\">updateTime();</span><br></pre></td></tr></table></figure>\n\n<p>CodePen <a href=\"https://codepen.io/hnzxewqw/pen/zYvzjNG\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/zYvzjNG</a></p>\n","categories":["JavaScript"],"tags":["JavaScript","Moment.js"]},{"title":"Vue 筆記 - 使用 v-on 處理互動式行為","url":"/vue-js/20200427/1872522243/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/vue%20cover.png?alt=media&token=5f8b5aa0-eb3e-4d21-a715-07c5442dafbc\" alt=\"vue.js\"></p>\n<p>傳統在寫 JS 或是 jQuery 的時候，要綁定 DOM 來控制，假設要綁定在按鈕上的事件，就要寫成：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">'.btn'</span>).click(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\"> ...</span><br><span class=\"line\"> &#125;);</span><br></pre></td></tr></table></figure>\n\n<p>或是</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">'.btn'</span>).on(click, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\"> ...</span><br><span class=\"line\"> &#125;)</span><br></pre></td></tr></table></figure>\n\n<p>在 vue 中會直接寫在 html 上，並且在 vue 的程式碼中新增一個 <code>methods</code> 方法來對應 <code>v-on</code> 事件，vue 的原始碼中都是用<strong>物件</strong>來呈現資料，所以 <code>methods</code> 也要是物件。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">     el: <span class=\"string\">'#app'</span>,</span><br><span class=\"line\">     data: &#123;</span><br><span class=\"line\">       text: <span class=\"string\">''</span>,</span><br><span class=\"line\">       newText: <span class=\"string\">''</span>,</span><br><span class=\"line\">     &#125;,</span><br><span class=\"line\">     methods: &#123;</span><br><span class=\"line\">       ...</span><br><span class=\"line\">     &#125;,</span><br><span class=\"line\">   &#125;);</span><br></pre></td></tr></table></figure>\n\n<p>在 <code>methods</code> 中新增的方法名稱要對應在 <code>v-on</code> 的事件名稱中，登打方式如下方程式碼，並透過 <code>console.log</code> 檢查是否有正確產生事件。</p>\n<p>html</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">\"button\"</span> <span class=\"attr\">v-on:click</span>=<span class=\"string\">\"theNewText\"</span>&gt;</span>click<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>javascript</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  el: <span class=\"string\">\"#app\"</span>,</span><br><span class=\"line\">  data: &#123;</span><br><span class=\"line\">    text: <span class=\"string\">\"\"</span>,</span><br><span class=\"line\">    newText: <span class=\"string\">\"\"</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\">    theNewText: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">\"you click me\"</span>); <span class=\"comment\">//有正確顯示於 console 中</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>倘若我今天要在 <code>input</code> 輸入文字，並且點擊按鈕產生事件，可以使用 <code>this.text</code> 指向 text 本身。</p>\n<blockquote>\n<p>在 vue 中已經將 <code>this</code> 定義為資料本身。</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">methods: &#123;</span><br><span class=\"line\">theNewText: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">'this.text'</span>); <span class=\"comment\">//點擊按鈕後會顯示 this.text</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n\n<p>如果要將 <code>input</code> 中輸入的文字輸出到 ，可以這樣寫：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">methods: &#123;</span><br><span class=\"line\">  theNewText: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.newText = <span class=\"keyword\">this</span>.text;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"縮寫\"><a href=\"#縮寫\" class=\"headerlink\" title=\"縮寫\"></a>縮寫</h3><p>v-on 的縮寫為 <code>@</code>，所以像是這裡的事件就可以寫成： <code>@click=&quot;theNewText&quot;</code></p>\n<h2 id=\"v-on-結合修飾詞-Modifiers-將可以使用更多事件操作\"><a href=\"#v-on-結合修飾詞-Modifiers-將可以使用更多事件操作\" class=\"headerlink\" title=\"v-on 結合修飾詞 (Modifiers) 將可以使用更多事件操作\"></a>v-on 結合修飾詞 (Modifiers) 將可以使用更多事件操作</h2><p>修飾詞是用來增強指令附加功能的語法糖， vue 的修飾詞分兩種:<strong>表單元素</strong>與<strong>事件</strong>的修飾詞。使用方式為 <code>v-XXX</code> 後面加上 <code>.xxx</code>。ex: <code>v-on:click.prevent</code></p>\n<ul>\n<li>stop-相當於 event.stopPropagation()。</li>\n<li>prevent-相當於 event.preventDefault()。</li>\n<li>capture - 添加事件偵聽器時使用 capture 模式。(很少用)</li>\n<li>self - 當事件是從偵聽器綁定的元素本身觸發時才觸發。</li>\n<li>keyCode- 當事件是從特定鍵觸發時才觸發。</li>\n<li>native - 監聽組件根元素的原生事件。</li>\n<li>once - 只觸發一次。</li>\n<li>left - (2.2.0) 當點擊鼠標左鍵時觸發。</li>\n<li>right - (2.2.0) 當點擊鼠標右鍵時觸發。</li>\n<li>middle - (2.2.0) 當點擊鼠標中鍵時觸發。</li>\n<li>passive- (2.3.0)以{ passive: true }模式添加偵聽器 (沒用過)</li>\n</ul>\n<blockquote>\n<p>從 2.4.0 開始，<code>v-on</code> 同樣支持不帶參數綁定一個事件/監聽器鍵值對的對象。注意當使用對象語法時，是不支持任何修飾器的。</p>\n</blockquote>\n<h3 id=\"按鍵修飾詞\"><a href=\"#按鍵修飾詞\" class=\"headerlink\" title=\"按鍵修飾詞\"></a>按鍵修飾詞</h3><p>常用的還有一個是<a href=\"https://cn.vuejs.org/v2/guide/events.html#%E6%8C%89%E9%94%AE%E4%BF%AE%E9%A5%B0%E7%AC%A6\" target=\"_blank\" rel=\"noopener\">按鍵修飾符</a>，其中一個很好用的就是 <code>enter</code>，顧名思義就是按下 <code>enter</code> 鍵時，就能把資料送出。</p>\n<p>程式碼可以這樣寫： <code>@keyup.enter=&quot;theNewText&quot;</code></p>\n<p>Codepen: <a href=\"https://codepen.io/hnzxewqw/pen/XWmRvrW\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/XWmRvrW</a></p>\n<hr>\n<h2 id=\"v-on-指令練習\"><a href=\"#v-on-指令練習\" class=\"headerlink\" title=\"v-on 指令練習\"></a>v-on 指令練習</h2><h3 id=\"在指令中輸入方法，點擊按鈕會-count-會自動往上加-1\"><a href=\"#在指令中輸入方法，點擊按鈕會-count-會自動往上加-1\" class=\"headerlink\" title=\"在指令中輸入方法，點擊按鈕會 count 會自動往上加 1\"></a>在指令中輸入方法，點擊按鈕會 count 會自動往上加 1</h3><p>在 <code>button</code> 綁定 v-on 指令，並寫入<strong>加總為 1 (+=1)</strong>，在 vue 實體中的 <code>data</code> 中加上同步綁定的 <code>counter</code> ，便會有此效果。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"counter += 1\"</span>&gt;</span>Add 1<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>The button above has been clicked &#123;&#123; counter &#125;&#125; times.<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"actionscript\">  <span class=\"keyword\">var</span> example1 = <span class=\"keyword\">new</span> Vue(&#123;</span></span><br><span class=\"line\"><span class=\"actionscript\">    el: <span class=\"string\">\"#app\"</span>,</span></span><br><span class=\"line\">    data: &#123;</span><br><span class=\"line\">      counter: 0,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"在-vue-實體中加入-methods-，點擊按鈕會自動往上加-1\"><a href=\"#在-vue-實體中加入-methods-，點擊按鈕會自動往上加-1\" class=\"headerlink\" title=\"在 vue 實體中加入 methods ，點擊按鈕會自動往上加 1\"></a>在 vue 實體中加入 methods ，點擊按鈕會自動往上加 1</h3><p>如上方所說，<code>v-on</code> 會加上對應的 <code>methods</code>，這邊範例是在 <code>button</code> 上加上 <code>v-on</code> 指令，並在 vue 實體中加上 <code>methods</code>，並把指令的名稱當作一個 <code>function</code> 放入 methods 之中，<code>大括弧內要寫入與function</code> 一樣的名稱，<code>this</code> 指的是 <code>counter</code> 本身，便會產生此效果。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"add\"</span>&gt;</span>Add 1<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>The button above has been clicked &#123;&#123; counter &#125;&#125; times.<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"actionscript\">  <span class=\"keyword\">var</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span></span><br><span class=\"line\"><span class=\"actionscript\">    el: <span class=\"string\">\"#app\"</span>,</span></span><br><span class=\"line\">    data: &#123;</span><br><span class=\"line\">      counter: 0,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    methods: &#123;</span><br><span class=\"line\"><span class=\"actionscript\">      add: <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">()</span> </span>&#123;</span></span><br><span class=\"line\"><span class=\"actionscript\">        <span class=\"keyword\">this</span>.counter++;</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>codepen: <a href=\"https://codepen.io/hnzxewqw/pen/MWamNyN\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/MWamNyN</a></p>\n<h3 id=\"在-vue-實體中加入-methods-，帶入參數點擊按鈕時會依照參數數字往上加總\"><a href=\"#在-vue-實體中加入-methods-，帶入參數點擊按鈕時會依照參數數字往上加總\" class=\"headerlink\" title=\"在 vue 實體中加入 methods ，帶入參數點擊按鈕時會依照參數數字往上加總\"></a>在 vue 實體中加入 methods ，帶入參數點擊按鈕時會依照參數數字往上加總</h3><p>除了上方兩種基本方法外，也可以在 v-on 指令中加上參數，並在函式中也帶入相關參數值，在點擊按鈕時，就會產生相關事件。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"add(1, $event)\"</span>&gt;</span>Add 1<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"add(2, $event)\"</span>&gt;</span>Add 2<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"add(3)\"</span>&gt;</span>Add 3<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"add(4)\"</span>&gt;</span>Add 4<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"add(5)\"</span>&gt;</span>Add 5<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>The button above has been clicked &#123;&#123; counter &#125;&#125; times.<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"actionscript\">  <span class=\"keyword\">var</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span></span><br><span class=\"line\"><span class=\"actionscript\">    el: <span class=\"string\">\"#app\"</span>,</span></span><br><span class=\"line\">    data: &#123;</span><br><span class=\"line\">      counter: 0,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    methods: &#123;</span><br><span class=\"line\"><span class=\"actionscript\">      add: <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">(val, ev)</span> </span>&#123;</span></span><br><span class=\"line\"><span class=\"actionscript\">        <span class=\"keyword\">this</span>.counter += val;</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>Codepen: <a href=\"https://codepen.io/hnzxewqw/pen/KKdmOmj\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/KKdmOmj</a></p>\n<h3 id=\"修飾詞練習\"><a href=\"#修飾詞練習\" class=\"headerlink\" title=\"修飾詞練習\"></a>修飾詞練習</h3><h4 id=\"prevent-使其原本屬性取消\"><a href=\"#prevent-使其原本屬性取消\" class=\"headerlink\" title=\"prevent: 使其原本屬性取消\"></a>prevent: 使其原本屬性取消</h4><p>上方有提到修飾詞，這邊使用 prevent 修飾詞，使 <code>a</code> 連結取消原本屬性。這方法跟在 jQuery 中使用的 <code>preventDefault</code> 功能相同，但 vue 直接加在指令中，變得相當直覺也清楚。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"https://www.facebook.com/\"</span> @<span class=\"attr\">click.prevent</span>=<span class=\"string\">\"link\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    &gt;</span>原本點擊後會跳轉到 Facebook<span class=\"tag\">&lt;/<span class=\"name\">a</span></span></span><br><span class=\"line\"><span class=\"tag\">  &gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"actionscript\">  <span class=\"keyword\">var</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span></span><br><span class=\"line\"><span class=\"actionscript\">    el: <span class=\"string\">\"#app\"</span>,</span></span><br><span class=\"line\">    methods: &#123;</span><br><span class=\"line\"><span class=\"actionscript\">      link: <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">(e)</span> </span>&#123;</span></span><br><span class=\"line\"><span class=\"actionscript\">        <span class=\"comment\">// e =&gt; event</span></span></span><br><span class=\"line\"><span class=\"actionscript\">        <span class=\"comment\">// e.preventDefault();</span></span></span><br><span class=\"line\"><span class=\"actionscript\">        alert(<span class=\"string\">\"我取消了連結功能\"</span>);</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>Codepen: <a href=\"https://codepen.io/hnzxewqw/pen/QWjveme\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/QWjveme</a></p>\n<h4 id=\"lazy-相較於-JS-原生的-blur-語法，離開-input-後才會顯示結果\"><a href=\"#lazy-相較於-JS-原生的-blur-語法，離開-input-後才會顯示結果\" class=\"headerlink\" title=\"lazy: 相較於 JS 原生的 blur 語法，離開 input 後才會顯示結果\"></a>lazy: 相較於 JS 原生的 blur 語法，離開 input 後才會顯示結果</h4><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>lazy 效果: 輸入資料後，離開 input 後才會顯示結果<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">v-model.lazy</span>=<span class=\"string\">\"msg\"</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>msg: &#123;&#123; msg &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"actionscript\">  <span class=\"keyword\">var</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span></span><br><span class=\"line\"><span class=\"actionscript\">    el: <span class=\"string\">\"#app\"</span>,</span></span><br><span class=\"line\">    data: &#123;</span><br><span class=\"line\"><span class=\"actionscript\">      msg: <span class=\"string\">\"hello\"</span>,</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"number-使輸入的數字自動轉為數字格式\"><a href=\"#number-使輸入的數字自動轉為數字格式\" class=\"headerlink\" title=\"number: 使輸入的數字自動轉為數字格式\"></a>number: 使輸入的數字自動轉為數字格式</h4><p>下方有兩個表格，透過 number 修飾詞，可以自動轉成數字，透過 vue 實體解析後，便會自動相加。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">v-model.number</span>=<span class=\"string\">\"num1\"</span> /&gt;</span> +</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">v-model.number</span>=<span class=\"string\">\"num2\"</span> /&gt;</span> = &#123;&#123; sum &#125;&#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"actionscript\">  <span class=\"keyword\">var</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span></span><br><span class=\"line\"><span class=\"actionscript\">    el: <span class=\"string\">\"#app\"</span>,</span></span><br><span class=\"line\">    data: &#123;</span><br><span class=\"line\">      num1: 0,</span><br><span class=\"line\">      num2: 0,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    computed: &#123;</span><br><span class=\"line\">      sum() &#123;</span><br><span class=\"line\"><span class=\"actionscript\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.num1 + <span class=\"keyword\">this</span>.num2;</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>Codepen: <a href=\"https://codepen.io/hnzxewqw/pen/ZEbKgVO\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/ZEbKgVO</a></p>\n<h4 id=\"trim-自動取消資料前後的空格\"><a href=\"#trim-自動取消資料前後的空格\" class=\"headerlink\" title=\"trim: 自動取消資料前後的空格\"></a>trim: 自動取消資料前後的空格</h4><p>透過 <code>trim</code> 修飾詞，會自動刪除<strong>資料中前後的空白</strong>，但字串中間有空白則無法執行此效果</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">v-model.trim</span>=<span class=\"string\">\"msg\"</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>msg: &#123;&#123; msg &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"actionscript\">  <span class=\"keyword\">var</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span></span><br><span class=\"line\"><span class=\"actionscript\">    el: <span class=\"string\">\"#app\"</span>,</span></span><br><span class=\"line\">    data: &#123;</span><br><span class=\"line\"><span class=\"actionscript\">      msg: <span class=\"string\">\"Hello\"</span>,</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>Codepen: <a href=\"https://codepen.io/hnzxewqw/pen/BaoRXEe\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/BaoRXEe</a></p>\n<p>參考資料</p>\n<p><a href=\"https://cn.vuejs.org/v2/api/#v-on\" target=\"_blank\" rel=\"noopener\">Vue 官網 - 指令 v-on</a></p>\n","categories":["vue.js"],"tags":["vue.js"]},{"title":"JS 筆記 - ES6：展開與其餘參數","url":"/javascript/20200427/496196438/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/js-ES6.png?alt=media&token=0bf94bee-c7cd-4cc0-b619-45e5bf71d07b\" alt=\"ES6\"></p>\n<h2 id=\"使用展開語法合併陣列\"><a href=\"#使用展開語法合併陣列\" class=\"headerlink\" title=\"使用展開語法合併陣列\"></a>使用展開語法合併陣列</h2><p>下方有兩個陣列資料：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> groupA = [<span class=\"string\">\"1\"</span>, <span class=\"string\">\"2\"</span>, <span class=\"string\">\"3\"</span>];</span><br><span class=\"line\"><span class=\"keyword\">let</span> groupB = [<span class=\"string\">\"4\"</span>, <span class=\"string\">\"5\"</span>];</span><br></pre></td></tr></table></figure>\n\n<p>將兩個陣列資料合併的傳統寫法如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> groupAll = groupA.concat(groupB);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(groupAll); <span class=\"comment\">//[\"1\", \"2\", \"3\", \"4\", \"5\"]</span></span><br></pre></td></tr></table></figure>\n\n<p>但比較不易閱讀且不夠直觀，ES6 後來發明了下方寫法：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> groupAll = [...groupA, ...groupB];</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(groupAll); <span class=\"comment\">//[\"1\", \"2\", \"3\", \"4\", \"5\"]</span></span><br></pre></td></tr></table></figure>\n\n<p><code>... ary</code> 就是展開陣列資料，且這樣的寫法就可以得知在陣列裡有兩筆陣列，且閱讀上也直觀。</p>\n<h2 id=\"淺複製觀念\"><a href=\"#淺複製觀念\" class=\"headerlink\" title=\"淺複製觀念\"></a>淺複製觀念</h2><p>下方有兩個陣列，因 <code>groupB = groupA</code>，所以兩個內容的值會相同，且陣列跟物件都是傳參考，不是傳值，所以如果在 <code>groupB</code> 新增一個值，<code>groupA</code> 裡面也會新增一個值，故在此特性下會新增相同的值在其中。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> groupA = [<span class=\"string\">\"1\"</span>, <span class=\"string\">\"2\"</span>, <span class=\"string\">\"3\"</span>];</span><br><span class=\"line\"><span class=\"keyword\">let</span> groupB = groupA;</span><br><span class=\"line\">groupB.push(<span class=\"string\">\"4\"</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(groupA); <span class=\"comment\">//[\"1\", \"2\", \"3\", \"4\"]</span></span><br></pre></td></tr></table></figure>\n\n<p>但如果要使 <code>groupA</code> 不受影響的話可以這樣寫。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> groupA = [<span class=\"string\">\"1\"</span>, <span class=\"string\">\"2\"</span>, <span class=\"string\">\"3\"</span>];</span><br><span class=\"line\"><span class=\"keyword\">let</span> groupB = [...groupA];</span><br><span class=\"line\">groupB.push(<span class=\"string\">\"4\"</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(groupA); <span class=\"comment\">//[\"1\", \"2\", \"3\"]</span></span><br></pre></td></tr></table></figure>\n\n<p>按照上方展開陣列資料的特性，展開陣列後是取出 <code>groupA</code> 資料再回傳到新陣列 […groupA] 內，所以就不會被 <code>groupB</code> 影響。</p>\n<h2 id=\"類陣列觀念\"><a href=\"#類陣列觀念\" class=\"headerlink\" title=\"類陣列觀念\"></a>類陣列觀念</h2><p>類陣列就是很像陣列格式，但其實不是陣列，其 proto 的方法也很少。一般在 function 中會傳入參數值做運算，得到預期的值。</p>\n<p>因第二個 update 資料較多，透過 <code>console.log</code> 檢查會顯示一個陣列資料。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> origin = <span class=\"number\">1000</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">update</span>(<span class=\"params\">money</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> arg = <span class=\"built_in\">arguments</span>;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"built_in\">arguments</span>); <span class=\"comment\">//會得到一個陣列資料</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">update(<span class=\"number\">0</span>);</span><br><span class=\"line\">update(<span class=\"number\">10</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">2</span>, <span class=\"number\">100</span>, <span class=\"number\">5</span>, <span class=\"number\">10</span>, <span class=\"number\">10</span>, <span class=\"number\">500</span>);</span><br></pre></td></tr></table></figure>\n\n<p>另一個觀念：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> origin = <span class=\"number\">1000</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">update</span>(<span class=\"params\">money</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> arg = [...arguments]; <span class=\"comment\">//轉成新的陣列</span></span><br><span class=\"line\">  <span class=\"comment\">// console.log(arguments);</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> sum = arg.reduce(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">accumulator, currentValue</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> accumulator + currentValue;</span><br><span class=\"line\">  &#125;, <span class=\"number\">0</span>);</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">\"我有\"</span> + sum + <span class=\"string\">\"元\"</span>); <span class=\"comment\">//sum 的值得到相加後顯示</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">update(<span class=\"number\">0</span>); <span class=\"comment\">//我有 0 元</span></span><br><span class=\"line\">update(<span class=\"number\">10</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">2</span>, <span class=\"number\">100</span>, <span class=\"number\">5</span>, <span class=\"number\">10</span>, <span class=\"number\">10</span>, <span class=\"number\">500</span>); <span class=\"comment\">// 我有 641 元</span></span><br></pre></td></tr></table></figure>\n\n<p>reduce 是陣列中的方法，在類陣列中是無法使用的，所以要透過<strong>展開</strong>將原本的 arguments 轉成一個新陣列，就會得到預期的結果。</p>\n<h2 id=\"其餘參數\"><a href=\"#其餘參數\" class=\"headerlink\" title=\"其餘參數\"></a>其餘參數</h2><p>一般時候，若在 function 內設定好參數，輸入參數會自動對應其位置，如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">more</span>(<span class=\"params\">a, b, c</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(a, b, c); <span class=\"comment\">//100, 200, 300</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">more(<span class=\"number\">100</span>, <span class=\"number\">200</span>, <span class=\"number\">300</span>);</span><br></pre></td></tr></table></figure>\n\n<p>但有時候傳入的參數不確定有多少數量時，可以<strong>展開</strong>用<strong>其餘參數</strong>的方式抓取，變成陣列資料。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">more</span>(<span class=\"params\">...more</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(more); <span class=\"comment\">// [100, 200, 300, 400, 500]</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">more(<span class=\"number\">100</span>, <span class=\"number\">200</span>, <span class=\"number\">300</span>, <span class=\"number\">400</span>, <span class=\"number\">500</span>);</span><br></pre></td></tr></table></figure>\n\n<p>倘若前面加入一個變數，會顯示變數內容，後面的參數會用其餘參數的方式顯示。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">more</span>(<span class=\"params\">name, ...more</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(name, more); <span class=\"comment\">//阿忠 (5) [100, 200, 300, 400, 500]</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">more(<span class=\"string\">\"阿忠\"</span>, <span class=\"number\">100</span>, <span class=\"number\">200</span>, <span class=\"number\">300</span>, <span class=\"number\">400</span>, <span class=\"number\">500</span>);</span><br></pre></td></tr></table></figure>\n","categories":["JavaScript"],"tags":["JavaScript","ES6"]},{"title":"JS 筆記 - 認識  for 迴圈","url":"/javascript/20200427/3020170567/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/JavaScript%20note-01.jpg?alt=media&token=7bee0261-72ac-4de4-9f5a-f39d58735b7d\" alt=\"JavaScript Note\"></p>\n<h2 id=\"為什麼要用-for-迴圈\"><a href=\"#為什麼要用-for-迴圈\" class=\"headerlink\" title=\"為什麼要用 for 迴圈\"></a>為什麼要用 for 迴圈</h2><p>前面學習了陣列與物件的組合用法，在資料存取相對方便，但如果是<strong>大筆資料</strong>去做存取時，使用迴圈就可以<strong>避免大量的程式碼</strong>，比如說今天的專案是<strong>小專案</strong>，是做兩間養雞場的母雞資料，那這時候只要使用<strong>陣列跟物件</strong>就可以快速地取得兩間的母雞資料，可是今天如果是要做全台灣的養雞場，假如說有 100 間以上，光是陣列跟資料要取得的寫法就會看到滿滿的 console.log…</p>\n<p>這時候 for 迴圈就可以幫助在同性質的條件中，存取母雞的資料。</p>\n<hr>\n<h2 id=\"for-迴圈的寫法\"><a href=\"#for-迴圈的寫法\" class=\"headerlink\" title=\"for 迴圈的寫法\"></a>for 迴圈的寫法</h2><p>基本寫法：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; array.length; i++) &#123;</span><br><span class=\"line\">  <span class=\"comment\">//使用 for 迴圈 (初始狀態；條件;更新內容)</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(i); <span class=\"comment\">//執行內容</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<ol>\n<li>初始狀態：可以自訂任何數字。</li>\n<li>條件：設定要跑的條件長度或範圍。</li>\n<li>更新內容：會依照給予的條件去跑該次數。</li>\n<li>for 後面的變數條件內容要用分號 <code>&quot;;&quot;</code> 隔開。</li>\n</ol>\n</blockquote>\n<p>迴圈會判斷條件相符時開始執行，若條件不符就不會執行，如果跑完了也會停止執行。</p>\n<hr>\n<h2 id=\"學-JavaScript-必寫「九九乘法表」\"><a href=\"#學-JavaScript-必寫「九九乘法表」\" class=\"headerlink\" title=\"學 JavaScript 必寫「九九乘法表」\"></a>學 JavaScript 必寫「九九乘法表」</h2><p>來做一個綜合練習，會使用以下方法：</p>\n<blockquote>\n<p>變數<br>innerHTML<br>for 迴圈<br>計算功能</p>\n</blockquote>\n<p>建立一個 HTML 環境，這邊的 <code>container</code> 目的是讓畫面居中，為了讓九九乘法表呈現在 <code>box</code> 內，所以有設定了九個 <code>box，</code></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"container\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>九九乘法表<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"container\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"box\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"box\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"box\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"box\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"box\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"box\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"box\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"box\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"box\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>設定兩個變數，a 為乘數， b 為被乘數，用陣列呈現資料，a 的乘數只有八個，原因是九九乘法表從 2 開始，</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = [<span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>]; <span class=\"comment\">//乘數</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> b = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>]; <span class=\"comment\">//被乘數</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> el = <span class=\"built_in\">document</span>.querySelectorAll(<span class=\"string\">\".box\"</span>); <span class=\"comment\">//選取全部的 box</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> aLen = a.length;</span><br><span class=\"line\"><span class=\"comment\">// console.log(aLen); 結果為 8</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> bLen = b.length;</span><br><span class=\"line\"><span class=\"comment\">// console.log(bLen); 結果為 9</span></span><br></pre></td></tr></table></figure>\n\n<p>在來使用 for 迴圈來計算<strong>乘數</strong>與<strong>被乘數</strong>，</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; aLen; i++) &#123;</span><br><span class=\"line\">  <span class=\"comment\">//乘數迴圈</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> str = <span class=\"string\">\"\"</span>; <span class=\"comment\">// 預計將結果填入 str</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> j = <span class=\"number\">0</span>; j &lt; bLen; j++) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//被乘數迴圈</span></span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"為什麼-b-的迴圈會包在-a-裡面呢\"><a href=\"#為什麼-b-的迴圈會包在-a-裡面呢\" class=\"headerlink\" title=\"為什麼 b 的迴圈會包在 a 裡面呢?\"></a>為什麼 b 的迴圈會包在 a 裡面呢?</h3><p>因為是要用 <code>a*b</code>，讓 <code>b</code> 在 <code>a</code> 裡面跑九次，創造出九九乘法表的效果，因為要兩者相乘後要有一個數值，所以設定 <code>var str = &quot;&quot;</code>，在計算結果後要丟進 <code>str</code>。</p>\n<blockquote>\n<p>這個觀念很重要，要記起來。</p>\n</blockquote>\n<p>再來就是要呈現九九乘法了，這時候來組標籤(變數加字串)，<code>a</code> 陣列乘上 <code>b</code> 陣列，等於 <code>a</code>、<code>b</code> 陣列相乘，當中<strong>相乘</strong>與<strong>等於</strong>的符號是為了在網頁上呈現的，所以標示為字串。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> count = a[i] + <span class=\"string\">\"*\"</span> + b[j] + <span class=\"string\">\"=\"</span> + a[i] * b[j]; <span class=\"comment\">//組字串</span></span><br><span class=\"line\"><span class=\"comment\">// console.log(count); 結果為九九乘法表</span></span><br></pre></td></tr></table></figure>\n\n<p>為了讓 <code>str</code> 完整呈現 從 <code>2*1=1</code> 計算到 <code>2*9=18</code> ，這時候就使用 <code>str</code> 加總的功能，把所有的組合完成後，變成 <code>&lt;p&gt;</code> 標籤，丟回 <code>str</code> 裡面</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">str += <span class=\"string\">\"&lt;div&gt;\"</span> + count + <span class=\"string\">\"&lt;/div&gt;\"</span>; <span class=\"comment\">//將結果套回 str</span></span><br></pre></td></tr></table></figure>\n\n<p>最後，就在 <code>b</code> 的迴圈裡呈現所有 <code>a</code> 變數中九九乘法表跑完的結果，並把這個結果透過剛剛<code>變數 str</code> 的設定，渲染到網頁上。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">el[i].innerHTML = str; <span class=\"comment\">// 將 box 裡的乘數，透過 innerHTML 渲染於網頁</span></span><br></pre></td></tr></table></figure>\n\n<p>這樣就透過 JavaScript 的語法，完成了九九乘法表了！</p>\n<p>codepen: <a href=\"https://codepen.io/hnzxewqw/pen/rNVWRdR\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/rNVWRdR</a></p>\n<h3 id=\"優化\"><a href=\"#優化\" class=\"headerlink\" title=\"優化\"></a>優化</h3><p>但是這樣會是一整排的數列，頁面會太長，為了讓畫面更好看，在 CSS 的 <code>.box</code> 中加入下方語法：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">display</span>: <span class=\"selector-tag\">flex</span>;</span><br><span class=\"line\"><span class=\"selector-tag\">flex-direction</span>: <span class=\"selector-tag\">column</span>;</span><br><span class=\"line\"><span class=\"selector-tag\">flex-wrap</span>: <span class=\"selector-tag\">wrap</span>;</span><br><span class=\"line\"><span class=\"selector-tag\">padding</span>: 70<span class=\"selector-tag\">px</span> 40<span class=\"selector-tag\">px</span>;</span><br></pre></td></tr></table></figure>\n\n<p>使數列橫向排列，並且垂直對齊，斷行的部分也按照寬度做斷行，在 <code>padding</code> 到喜歡的效果即可！</p>\n","categories":["JavaScript"],"tags":["JavaScript"]},{"title":"Vue 筆記 - 動態產生多筆資料於網頁上 v-for、v-if","url":"/vue-js/20200421/2762058618/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/vue%20cover.png?alt=media&token=5f8b5aa0-eb3e-4d21-a715-07c5442dafbc\" alt=\"vue.js\"></p>\n<p><code>data</code> 中除了之前所放入的屬性與資料內容外，也可以放入 JSON 的資料結構。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  el: <span class=\"string\">\"#app\"</span>,</span><br><span class=\"line\">  data: &#123;</span><br><span class=\"line\">    list: [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        name: <span class=\"string\">\"Min\"</span>,</span><br><span class=\"line\">        age: <span class=\"number\">56</span>,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        name: <span class=\"string\">\"Tim\"</span>,</span><br><span class=\"line\">        age: <span class=\"number\">55</span>,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        name: <span class=\"string\">\"Joshua\"</span>,</span><br><span class=\"line\">        age: <span class=\"number\">20</span>,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    ],</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"v-for\"><a href=\"#v-for\" class=\"headerlink\" title=\"v-for\"></a>v-for</h2><p>這次要透過列表的方式將 JSON 資料呈現在網頁上，傳統 jQuery 可能要寫很多的 <code>li</code> 才能實現此畫面，透過 Vue 只要寫這樣：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"item in list\"</span>&gt;</span>&#123;&#123;item.name&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>說明：<br>透過 <code>v-for</code> 指令 ( 同等於 JS 的 for 迴圈篩選資料 ) 來取得資料，item 為自訂義的資料名稱，也就是指的是 <code>data</code> 中每一筆的物件資料，list 指的就是 JSON 本身，白話文可以解釋成：透過 <code>v-for</code> 從 list 篩選出每一筆的 item 資料內容，大括號指的是資料中的屬性。</p>\n<h3 id=\"加入索引-index\"><a href=\"#加入索引-index\" class=\"headerlink\" title=\"加入索引 index\"></a>加入索引 index</h3><p>如果要加入索引，可以這樣寫：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"(item, index) in list\"</span> <span class=\"attr\">:key</span>=<span class=\"string\">\"index\"</span>&gt;</span></span><br><span class=\"line\">    &#123;&#123; index +1 &#125;&#125; - &#123;&#123; item.name &#125;&#125; 是 &#123;&#123;item.age&#125;&#125; 歲</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>要記得索引是從 0 開始，如果要讓使用者從 1 開始，要設定成 <code>index +1</code>。</p>\n<p><a href=\"https://codepen.io/hnzxewqw/pen/PoPzNma\" target=\"_blank\" rel=\"noopener\">CodePen:</a></p>\n<blockquote>\n<p>其實現在編輯器相當人性，只要在 <code>li</code> 輸入 <code>v-for</code>，按下 tab，就會跳出預設的格式，再修改成自己要的對應名稱即可。</p>\n</blockquote>\n<h2 id=\"v-if\"><a href=\"#v-if\" class=\"headerlink\" title=\"v-if\"></a>v-if</h2><p>簡單來說就是在 HTML 標籤中加入判斷式，以上方例子為例，倘若今天要判斷年紀超過 20 歲的人物顯示在網頁上。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"(item, index) in list\"</span> <span class=\"attr\">:key</span>=<span class=\"string\">\"index\"</span> <span class=\"attr\">v-if</span>=<span class=\"string\">\"item.age &gt; 20\"</span>&gt;</span></span><br><span class=\"line\">    &#123;&#123; index +1 &#125;&#125; - &#123;&#123; item.name &#125;&#125; 是 &#123;&#123;item.age&#125;&#125; 歲</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"補充觀念\"><a href=\"#補充觀念\" class=\"headerlink\" title=\"補充觀念\"></a>補充觀念</h3><p>官網不推薦同時使用 <code>v-if</code> 和 <code>v-for</code>，原因是 <code>v-for</code> 的權重比較高。可看官網的<a href=\"https://cn.vuejs.org/v2/style-guide/#%E9%81%BF%E5%85%8D-v-if-%E5%92%8C-v-for-%E7%94%A8%E5%9C%A8%E4%B8%80%E8%B5%B7%E5%BF%85%E8%A6%81\" target=\"_blank\" rel=\"noopener\">指令說明</a>與<a href=\"https://cn.vuejs.org/v2/guide/list.html#v-for-object\" target=\"_blank\" rel=\"noopener\">渲染列表說明</a>，通常 <code>v-if</code> 會與 <code>v-show</code> 一起使用，這後面會提到。</p>\n<h3 id=\"v-for-列表渲染\"><a href=\"#v-for-列表渲染\" class=\"headerlink\" title=\"v-for 列表渲染\"></a>v-for 列表渲染</h3><p>在 <code>li</code> 建立 <code>v-for</code> 指令，讓 <code>li</code> 產生多個清單，再透過雙向綁定的方法，使得 HTML 的程式碼很乾淨。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">id</span>=<span class=\"string\">\"ex1\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"item in List\"</span>&gt;</span></span><br><span class=\"line\">    &#123;&#123;item.msg&#125;&#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><code>item</code> 為 <code>List</code> 中的清單資料，並且透過 <code>data</code> 中的 <code>List</code> 資料內容，同步到頁面上，這個列表不管是 HTML 或是資料的程式碼都乾淨且不會搞混。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  el: <span class=\"string\">\"#ex1\"</span>,</span><br><span class=\"line\">  data: &#123;</span><br><span class=\"line\">    List: [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        msg: <span class=\"string\">\"Good\"</span>,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        msg: <span class=\"string\">\"Wonderful\"</span>,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    ],</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>Codepen <a href=\"https://codepen.io/hnzxewqw/pen/xxwRVaZ\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/xxwRVaZ</a></p>\n<p>實際範例：今日要查找公司的銷售員名單，並且有編號在前。</p>\n<p>HTML</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"(s, index) in sales\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>&#123;&#123; index &#125;&#125; &#123;&#123; s.name &#125;&#125;: <span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>age: &#123;&#123; s.age &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>company: &#123;&#123; s.company &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>email: &#123;&#123; s.email &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>JavaScript</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  el: <span class=\"string\">\"#app\"</span>,</span><br><span class=\"line\">  data: &#123;</span><br><span class=\"line\">    sales: [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        age: <span class=\"number\">26</span>,</span><br><span class=\"line\">        name: <span class=\"string\">\"Sarah Zamora\"</span>,</span><br><span class=\"line\">        company: <span class=\"string\">\"ZINCA\"</span>,</span><br><span class=\"line\">        email: <span class=\"string\">\"sarah_zamora@zinca.ca\"</span>,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        age: <span class=\"number\">37</span>,</span><br><span class=\"line\">        name: <span class=\"string\">\"Cameron Wilder\"</span>,</span><br><span class=\"line\">        company: <span class=\"string\">\"NIKUDA\"</span>,</span><br><span class=\"line\">        email: <span class=\"string\">\"cameron_wilder@nikuda.biz\"</span>,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        age: <span class=\"number\">40</span>,</span><br><span class=\"line\">        name: <span class=\"string\">\"Roach Hubbard\"</span>,</span><br><span class=\"line\">        company: <span class=\"string\">\"EMOLTRA\"</span>,</span><br><span class=\"line\">        email: <span class=\"string\">\"roach_hubbard@emoltra.me\"</span>,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        age: <span class=\"number\">38</span>,</span><br><span class=\"line\">        name: <span class=\"string\">\"Juliet Sykes\"</span>,</span><br><span class=\"line\">        company: <span class=\"string\">\"PROWASTE\"</span>,</span><br><span class=\"line\">        email: <span class=\"string\">\"juliet_sykes@prowaste.org\"</span>,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        age: <span class=\"number\">21</span>,</span><br><span class=\"line\">        name: <span class=\"string\">\"Jerri Jimenez\"</span>,</span><br><span class=\"line\">        company: <span class=\"string\">\"ACCUPHARM\"</span>,</span><br><span class=\"line\">        email: <span class=\"string\">\"jerri_jimenez@accupharm.tv\"</span>,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    ],</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>Codepen <a href=\"https://codepen.io/hnzxewqw/pen/VwvmjKy\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/VwvmjKy</a></p>\n<p>或是做有分頁的選單也很不錯，</p>\n<p>HTML</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"pager\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span> <span class=\"symbol\">&amp;lt;</span> <span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"pager\"</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"n in 10\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- n 從 1 開始計算 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>&#123;&#123; n  &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"pager\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span> <span class=\"symbol\">&amp;gt;</span> <span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>Codepen <a href=\"https://codepen.io/hnzxewqw/pen/yLYVJEO\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/yLYVJEO</a></p>\n<blockquote>\n<p>雖然 vue 裡面沒有寫東西，但因為要套用指令效果，所以在 <code>script</code> 中還是要寫入 vue。</p>\n</blockquote>\n<h3 id=\"v-for-key\"><a href=\"#v-for-key\" class=\"headerlink\" title=\"v-for + key\"></a>v-for + key</h3><p>加上 key 是考量到效能，在預設狀況下，Vue.js 會盡量重複使用已經渲染好的元素，若不設定 key，不會重新渲染，只會部分更新。故當元素更新時 ( 例如:改變順序 ) 有可識別唯一性的 key <strong>可以確保列表有重新渲染</strong>。</p>\n<p>HTML</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>filtered by age less then 40: <span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"(s, index) in filteredSales\"</span> <span class=\"attr\">:key</span>=<span class=\"string\">\"s.name\"</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>&#123;&#123; index &#125;&#125; &#123;&#123; s.name &#125;&#125;: <span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>age: &#123;&#123; s.age &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>company: &#123;&#123; s.company &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>email: &#123;&#123; s.email &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>JavaScript</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  el: <span class=\"string\">\"#app\"</span>,</span><br><span class=\"line\">  computed: &#123;</span><br><span class=\"line\">    filteredSales() &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.sales.filter(<span class=\"function\">(<span class=\"params\">d</span>) =&gt;</span> d.age &lt; <span class=\"number\">40</span>);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  data: &#123;</span><br><span class=\"line\">    search: <span class=\"string\">\"\"</span>,</span><br><span class=\"line\">    sales: [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        age: <span class=\"number\">26</span>,</span><br><span class=\"line\">        name: <span class=\"string\">\"Sarah Zamora\"</span>,</span><br><span class=\"line\">        company: <span class=\"string\">\"ZINCA\"</span>,</span><br><span class=\"line\">        email: <span class=\"string\">\"sarah_zamora@zinca.ca\"</span>,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        age: <span class=\"number\">37</span>,</span><br><span class=\"line\">        name: <span class=\"string\">\"Cameron Wilder\"</span>,</span><br><span class=\"line\">        company: <span class=\"string\">\"NIKUDA\"</span>,</span><br><span class=\"line\">        email: <span class=\"string\">\"cameron_wilder@nikuda.biz\"</span>,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        age: <span class=\"number\">40</span>,</span><br><span class=\"line\">        name: <span class=\"string\">\"Roach Hubbard\"</span>,</span><br><span class=\"line\">        company: <span class=\"string\">\"EMOLTRA\"</span>,</span><br><span class=\"line\">        email: <span class=\"string\">\"roach_hubbard@emoltra.me\"</span>,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        age: <span class=\"number\">38</span>,</span><br><span class=\"line\">        name: <span class=\"string\">\"Juliet Sykes\"</span>,</span><br><span class=\"line\">        company: <span class=\"string\">\"PROWASTE\"</span>,</span><br><span class=\"line\">        email: <span class=\"string\">\"juliet_sykes@prowaste.org\"</span>,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        age: <span class=\"number\">21</span>,</span><br><span class=\"line\">        name: <span class=\"string\">\"Jerri Jimenez\"</span>,</span><br><span class=\"line\">        company: <span class=\"string\">\"ACCUPHARM\"</span>,</span><br><span class=\"line\">        email: <span class=\"string\">\"jerri_jimenez@accupharm.tv\"</span>,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    ],</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"v-if-v-else-amp-v-show\"><a href=\"#v-if-v-else-amp-v-show\" class=\"headerlink\" title=\"v-if / v-else &amp; v-show\"></a>v-if / v-else &amp; v-show</h2><p>大部分 <code>v-if</code> 跟 <code>v-show</code> 會拿來一起使用或比較，兩者最大的差別是在對 DOM 元素的操作。</p>\n<h3 id=\"v-if-1\"><a href=\"#v-if-1\" class=\"headerlink\" title=\"v-if\"></a>v-if</h3><p>會依照條件決定<strong>是否將元件渲染在網頁上</strong>，並決定事件與資料的監聽是否要綁定至元件或直接銷毀元件。</p>\n<p>透過 <code>v-if</code> 加入判斷，倘若條件相符，就顯示於網頁上。</p>\n<p>HTML</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">v-if</span>=<span class=\"string\">\"option1\"</span>&gt;</span>Yes<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">hr</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">v-if</span>=<span class=\"string\">\"option2\"</span>&gt;</span>Yes<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">v-else</span>&gt;</span>No<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>JavaScript</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  el: <span class=\"string\">\"#app\"</span>,</span><br><span class=\"line\">  data: &#123;</span><br><span class=\"line\">    cond1: <span class=\"number\">1</span> &gt; <span class=\"number\">0</span>,</span><br><span class=\"line\">    cond2: <span class=\"literal\">false</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>Codepen <a href=\"https://codepen.io/hnzxewqw/pen/gOaLwpV\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/gOaLwpV</a></p>\n<h3 id=\"v-show\"><a href=\"#v-show\" class=\"headerlink\" title=\"v-show\"></a>v-show</h3><p>則是<strong>一定會產出元件</strong>，但以條件來切換 CSS <code>(display:block / none)</code> 的顯示與否。若條件更動頻繁，則適合用此方法。</p>\n<p>HTML</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">v-if</span>=<span class=\"string\">\"cond1\"</span>&gt;</span>Yes<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">v-else</span>&gt;</span>No<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">hr</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">v-show</span>=<span class=\"string\">\"cond2\"</span>&gt;</span>Yes<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">v-show</span>=<span class=\"string\">\"!cond2\"</span>&gt;</span>No<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>JavaScript</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  el: <span class=\"string\">\"#app\"</span>,</span><br><span class=\"line\">  data: &#123;</span><br><span class=\"line\">    cond1: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    cond2: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>Codepen <a href=\"https://codepen.io/hnzxewqw/pen/abvBmNG\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/abvBmNG</a></p>\n","categories":["vue.js"],"tags":["vue.js"]},{"title":"ASP.NET MVC 筆記 - 認識 MVC 與建立第一個 ASP.NET MVC","url":"/ASP-NET-MVC/20200421/3396145742/","content":"<p><img src=\"https://www.webpromedya.com/wp-content/uploads/2018/08/asp-net.jpg\" alt=\"image alt\"></p>\n<h2 id=\"什麼是-MVC\"><a href=\"#什麼是-MVC\" class=\"headerlink\" title=\"什麼是 MVC\"></a>什麼是 MVC</h2><p>MVC 模式（Model–view–controller）是軟體工程中的一種軟體架構模式，把軟體系統分為三個基本部分：模型（Model）、視圖（View）和控制器（Controller）。不是新技術，而是開發網頁的一種觀念，著重在關注點分離。</p>\n<p>目的是實現一種動態的程式設計，使後續對程式的修改和擴充簡化，並且使程式某一部分的重複利用成為可能。除此之外，此模式透過對複雜度的簡化，使程式結構更加直覺。軟體系統透過對自身基本部分分離的同時也賦予了各個基本部分應有的功能。專業人員可以依據自身的專長分組：</p>\n<ul>\n<li><strong>控制器（Controller）</strong>- 負責轉發請求，對請求進行處理。</li>\n<li><strong>視圖（View）</strong> - 介面設計人員進行圖形介面設計。</li>\n<li><strong>模型（Model）</strong>- 程式設計師編寫程式應有的功能（實現演算法等等）、資料庫專家進行資料管理和資料庫設計(可以實現具體的功能)。</li>\n</ul>\n<h2 id=\"建立-ASP-NET-MVC\"><a href=\"#建立-ASP-NET-MVC\" class=\"headerlink\" title=\"建立 ASP.NET MVC\"></a>建立 ASP.NET MVC</h2><p>ASP.NET 是微軟開發的網頁套件，並搭配 visual studio 2019 編輯器來使用，新手建議環境直接使用 windows，畢竟這整套都是微軟開發的。</p>\n<p>這邊就不介紹編輯器的使用，若有興趣可以看<a href=\"https://visualstudio.microsoft.com/zh-hant/vs/getting-started/\" target=\"_blank\" rel=\"noopener\">官網有教學</a>，下面直接進入 ASP.NET 來建立一個基本的網站。</p>\n<h3 id=\"建立新專案\"><a href=\"#建立新專案\" class=\"headerlink\" title=\"建立新專案\"></a>建立新專案</h3><p>首先開啟 visual studio 2019，選擇「建立新專案」:</p>\n<p><img src=\"https://ithelp.ithome.com.tw/upload/images/20190902/20120055S4ugLPlmyF.png\" alt=\"建立新專案\"></p>\n<h3 id=\"選擇專案類型\"><a href=\"#選擇專案類型\" class=\"headerlink\" title=\"選擇專案類型\"></a>選擇專案類型</h3><p>選擇後會看到很多專案類型可以選，因公司專案是使用 C#，故語言類選擇 C#，平台是 windows，專案類型選擇「ASP.NET Web 應用程式 (.NET Framework)」，</p>\n<p><img src=\"https://i.imgur.com/a2wREqp.png\" alt=\"選擇專案類型\"></p>\n<h3 id=\"設定專案名稱\"><a href=\"#設定專案名稱\" class=\"headerlink\" title=\"設定專案名稱\"></a>設定專案名稱</h3><p>檔案名稱就打容易記得的，沒有特別想法可以使用預設的名稱，儲存位置與架構若沒特別需要可以使用預設值。</p>\n<p><img src=\"https://i.imgur.com/n435d8x.png\" alt=\"設定專案名稱\"></p>\n<h3 id=\"挑選使用的框架\"><a href=\"#挑選使用的框架\" class=\"headerlink\" title=\"挑選使用的框架\"></a>挑選使用的框架</h3><p>選擇 MVC 專案，然後就會開始建立!</p>\n<p><img src=\"https://i.imgur.com/LijOuUm.png\" alt=\"MVC\"></p>\n<h3 id=\"建立完成\"><a href=\"#建立完成\" class=\"headerlink\" title=\"建立完成\"></a>建立完成</h3><p>跑完之後會看到右側有很多的資料夾，並當中會看到 Model、Controller、View 三個主要的資料夾，其餘資料夾都是放套件或是存放資料用。</p>\n<p><img src=\"https://i.imgur.com/nrLNkl5.png\" alt=\"資料夾\"></p>\n<h4 id=\"Controller-控制器在哪\"><a href=\"#Controller-控制器在哪\" class=\"headerlink\" title=\"Controller 控制器在哪?\"></a>Controller 控制器在哪?</h4><p>它位於在 Controller 資料夾內，專案建立時會預設建立 HomeController.cs，稱為 Home 控制器，其中定義了 <code>Index()</code>、<code>About()</code>、<code>Contact()</code> 三個 Action Methods (動作方法)。</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Linq;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Web;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Web.Mvc;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">chartTest.Controllers</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">HomeController</span> : <span class=\"title\">Controller</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> ActionResult <span class=\"title\">Index</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> View();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> ActionResult <span class=\"title\">About</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>        &#123;</span><br><span class=\"line\">            ViewBag.Message = <span class=\"string\">\"Your application description page.\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">return</span> View();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> ActionResult <span class=\"title\">Contact</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>        &#123;</span><br><span class=\"line\">            ViewBag.Message = <span class=\"string\">\"Your contact page.\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">return</span> View();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Model-在哪\"><a href=\"#Model-在哪\" class=\"headerlink\" title=\"Model 在哪?\"></a>Model 在哪?</h4><p>位於 Model 資料夾中，目前為空，因尚未建立任何資料，類別會定義 Properties 屬性，用來存放資料。</p>\n<h4 id=\"View-在哪\"><a href=\"#View-在哪\" class=\"headerlink\" title=\"View 在哪?\"></a>View 在哪?</h4><p>位於 View 資料夾中，內有 <code>Home</code> 跟 <code>Shared</code> 兩個子資料夾，此兩個資料夾是對應 <code>Home</code> 控制器，通常一個 Aciton 方法會對應一個 View 檔案。</p>\n<p><img src=\"https://i.imgur.com/YbMJYPA.png\" alt=\"\"></p>\n<blockquote>\n<p>例如: Index()會對應到一個 <code>Index.cshtml</code>，<code>.cshtml</code> 就是 C# 的 html 檔案。</p>\n</blockquote>\n<h2 id=\"手動建立-Model、Controller、View\"><a href=\"#手動建立-Model、Controller、View\" class=\"headerlink\" title=\"手動建立 Model、Controller、View\"></a>手動建立 Model、Controller、View</h2><p>雖然使用專案可以自動建立 MVC 樣版檔案，但學會自己手動建立，才能證明自己跨入了 MVC 大門。</p>\n<h3 id=\"建立-Controller\"><a href=\"#建立-Controller\" class=\"headerlink\" title=\"建立 Controller\"></a>建立 Controller</h3><p>在 Controller 資料夾上點選【右鍵】、選擇【加入】、選擇【控制器】。</p>\n<p>後會跳出控制器建立選項，選擇【MVC 5 控制器 - 空白】，並自訂控制器名稱，便完成建立了控制器。</p>\n<p><img src=\"https://i.imgur.com/rztlQtx.png\" alt=\"\"></p>\n<p>完成的控制器。</p>\n<p><img src=\"https://i.imgur.com/71udtkg.png\" alt=\"\"></p>\n<h3 id=\"建立-View\"><a href=\"#建立-View\" class=\"headerlink\" title=\"建立 View\"></a>建立 View</h3><p>點開剛剛建立的控制器，會看到有一個 <code>Index()</code> 的 Action。</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Linq;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Web;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Web.Mvc;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">chartTest.Controllers</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">productController</span> : <span class=\"title\">Controller</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"comment\">// GET: product</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> ActionResult <span class=\"title\">Index</span>(<span class=\"params\"></span>) <span class=\"comment\">// Index 上點右鍵</span></span></span><br><span class=\"line\"><span class=\"function\"></span>        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> View();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>在其上點選【右鍵】，選擇第一個【新增檢視】選項，檢視名稱維持 Index，範本也維持 Empty，按【加入】即建立完成。</p>\n<blockquote>\n<p>本來有試著修改名稱，但後面卻跳錯找不到 URL，所以建議先按照這裡的設定，熟悉流程。</p>\n</blockquote>\n<p>會看到在 View 資料夾下會產生一個 product 的資料夾，並產生 <code>index.cshtml</code> 檢視檔案，與 <code>index()</code> Action 相對應。</p>\n<p><img src=\"https://i.imgur.com/TL3VMg5.png\" alt=\"\"></p>\n<p>裡面程式碼長這樣。</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"code\"><pre><span class=\"line\">@&#123;</span><br><span class=\"line\">    ViewBag.Title = <span class=\"string\">\"Index\"</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;h2&gt;Index&lt;/h2&gt;</span><br></pre></td></tr></table></figure>\n\n<p>這時可以象徵性的修改 Index 中的 <code>&lt;h2&gt;</code> 的標題以及加入一張圖片，在按下 <code>F5</code> 會看到原本中間的區塊改變了。</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"code\"><pre><span class=\"line\">@&#123;</span><br><span class=\"line\">    ViewBag.Title = <span class=\"string\">\"Index\"</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;h2&gt;car&lt;/h2&gt;</span><br><span class=\"line\">&lt;img src=<span class=\"string\">\"https://images.unsplash.com/photo-1542362567-b07e54358753?ixlib=rb-1.2.1&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;auto=format&amp;fit=crop&amp;w=500&amp;q=60\"</span> alt=<span class=\"string\">\"\"</span> /&gt;</span><br></pre></td></tr></table></figure>\n\n<p>F5 預覽頁面。</p>\n<p><img src=\"https://i.imgur.com/0B9Cpim.png\" alt=\"預覽畫面\"></p>\n<h3 id=\"建立-Model\"><a href=\"#建立-Model\" class=\"headerlink\" title=\"建立 Model\"></a>建立 Model</h3><p>在 Model 資料夾點擊【右鍵】、【加入】、【類別】(在最下方)，選擇第一個「類別」並且最下方的命名處命名「Product.cs」、【新增】即建立完成。</p>\n<p><img src=\"https://i.imgur.com/kY8lxhT.png\" alt=\"類別選單\"></p>\n<blockquote>\n<p>Model 檔案可隨意命名，它和 Controller 或 View 名稱沒有約定上的連動關係與限制。</p>\n</blockquote>\n<h4 id=\"定義-Model-的-Property-屬性\"><a href=\"#定義-Model-的-Property-屬性\" class=\"headerlink\" title=\"定義 Model 的 Property 屬性\"></a>定義 Model 的 Property 屬性</h4><p>在 Product 模型中加入 <code>Id</code>、<code>ProductName</code> 和 <code>UnitPrice</code> 三個 Property 屬性，用來存放資料。</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Dynamic;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Linq;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Web;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">chartTest.Models</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">product</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">int</span> Id &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> ProductName &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">int</span> UnitPrice &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>參考資料</p>\n<p>網頁程式設計 ASP.NET MVC 5.x 範例完美演繹-第三版(適用 Visual C# 2019/2017)</p>\n","categories":["ASP.NET MVC"],"tags":["ASP.NET MVC"]},{"title":"Vue 筆記 - 使用 v-bind 動態新增屬性","url":"/vue-js/20200421/4264825025/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/vue%20cover.png?alt=media&token=5f8b5aa0-eb3e-4d21-a715-07c5442dafbc\" alt=\"vue.js\"></p>\n<p>v-bind 縮寫為 <code>:</code></p>\n<h2 id=\"用法：\"><a href=\"#用法：\" class=\"headerlink\" title=\"用法：\"></a>用法：</h2><p>動態地綁定一個或多個特性，或一個組件 <code>prop</code> 到表達式。<br>在綁定 <code>class</code> 或 <code>style</code> 特性時，支持其它類型的值，如數組或對象。可以通過下面的教程鏈接查看詳情。</p>\n<blockquote>\n<p><code>Mustache</code> 不可作為屬性使用，如果要在 HTML 標記內的屬性帶入 data 或運算後的內容，要用 <code>v-bind</code> 來進行綁定。</p>\n</blockquote>\n<p>一般 html 程式碼是下方這樣</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"https://cn.vuejs.org/\"</span>&gt;</span>請點選連結<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">img</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">src</span>=<span class=\"string\">\"https://images.unsplash.com/photo-1523049673857-eb18f1d7b578?ixlib=rb-1.2.1&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;auto=format&amp;fit=crop&amp;w=1268&amp;q=80\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">alt</span>=<span class=\"string\">\"fruit\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>加入 vue 後的程式碼：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">:href</span>=<span class=\"string\">\"link\"</span>&gt;</span>請點選連結<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">:src</span>=<span class=\"string\">\"imgUrl\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"fruit\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"actionscript\">  <span class=\"keyword\">var</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span></span><br><span class=\"line\"><span class=\"actionscript\">    el: <span class=\"string\">\"#app\"</span>,</span></span><br><span class=\"line\">    data: &#123;</span><br><span class=\"line\"><span class=\"actionscript\">      link: <span class=\"string\">\"https://cn.vuejs.org/\"</span>,</span></span><br><span class=\"line\">      imgUrl:</span><br><span class=\"line\"><span class=\"actionscript\">        <span class=\"string\">\"https://images.unsplash.com/photo-1523049673857-eb18f1d7b578?ixlib=rb-1.2.1&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;auto=format&amp;fit=crop&amp;w=1268&amp;q=80\"</span>,</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>Codepen: <a href=\"https://codepen.io/tim_hsu/pen/ExVYbNg\" target=\"_blank\" rel=\"noopener\">https://codepen.io/tim_hsu/pen/ExVYbNg</a></p>\n<h2 id=\"動態加上-className\"><a href=\"#動態加上-className\" class=\"headerlink\" title=\"動態加上 className\"></a>動態加上 className</h2><p>來個綜合練習，有一個 box，透過 v-bind 動態加上 class，點擊 button 後旋轉 box，並且會變成粉紅色。</p>\n<p>HTML</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"container\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"box rotate\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    //這時正方形是 45 度</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">hr</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn\"</span>&gt;</span>button<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>SCSS</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">500px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> auto;</span><br><span class=\"line\">  .box &#123;</span><br><span class=\"line\">    <span class=\"selector-tag\">width</span>: 100<span class=\"selector-tag\">px</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">height</span>: 100<span class=\"selector-tag\">px</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">margin-top</span>: 50<span class=\"selector-tag\">px</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">transition</span>: <span class=\"selector-tag\">transform</span> 0<span class=\"selector-class\">.5s</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">border</span>: 1<span class=\"selector-tag\">px</span> <span class=\"selector-tag\">solid</span> <span class=\"selector-id\">#000</span>;</span><br><span class=\"line\">    transition: all 0.5s ease; //旋轉顏色漸變效果</span><br><span class=\"line\">    &amp;<span class=\"selector-class\">.rotate</span> &#123;</span><br><span class=\"line\">      transform: rotate(45deg); //旋轉45 度</span><br><span class=\"line\">      background-color: pink; //旋轉後變粉紅色</span><br><span class=\"line\">      border: 5px solid red; //旋轉後外框變粗變色</span><br><span class=\"line\">      border-radius: 20px; //旋轉有圓角效果</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"selector-tag\">hr</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">margin</span>: <span class=\"number\">50px</span> <span class=\"number\">0</span> <span class=\"number\">10px</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>vue</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  el: <span class=\"string\">\"#app\"</span>,</span><br><span class=\"line\">  data: &#123;</span><br><span class=\"line\">    isTransform: <span class=\"literal\">false</span>, <span class=\"comment\">//預設不旋轉</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>這時透過 v-bind 動態加上 class，語法是 <code>&lt;div class=&quot;box&quot; :class=&quot;{&#39;要加入的 className&#39;:判斷式}&quot;&gt;&lt;/div&gt;</code></p>\n<p>所以完成後的程式碼變為:</p>\n<p>HTML</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"container\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"box\"</span> <span class=\"attr\">:class</span>=<span class=\"string\">\"&#123;'rotate':isTransform&#125;\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">hr</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn\"</span>&gt;</span>button<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>透過 vue 開發工具會看到 <code>isTransform: false;</code>，改成 true 就會看到 box 會旋轉，代表效果有吃到。</p>\n<p>有 button 就會有 <code>click</code> 事件，所以在 button 中加上 <code>@click=&quot;rotatebox&quot;</code>，程式碼如下:<br><code>&lt;button class=&quot;btn&quot; @click=&quot;rotatebox&quot;&gt;button&lt;/button&gt;</code></p>\n<p>並且在 data 裡面加入 methods，</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">methods: &#123;</span><br><span class=\"line\">  rotatebox()&#123;</span><br><span class=\"line\">   <span class=\"keyword\">this</span>.isTransform = !<span class=\"keyword\">this</span>.isTransform</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"> &#125;,</span><br></pre></td></tr></table></figure>\n\n<p>CodePen: <a href=\"https://codepen.io/hnzxewqw/pen/dyYXexX\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/dyYXexX</a></p>\n","categories":["vue.js"],"tags":["vue.js"]},{"title":"C# 筆記 - 運算式與陳述式基本認識","url":"/c/20200420/2434136122/","content":"<p><img src=\"https://robertlan.com/wp-content/uploads/2018/09/C-1024x384.png\" alt=\"C# ASP.NET\"></p>\n<h2 id=\"運算式\"><a href=\"#運算式\" class=\"headerlink\" title=\"運算式\"></a>運算式</h2><ul>\n<li>「運算式」是由「運算元」和「運算子」建構而成。運算式的運算子會指出要將哪些運算套用到運算元。</li>\n<li>運算子範例包括 <code>+</code>、<code>-</code>、<code>*</code>、<code>/</code> 及 <code>new</code>。</li>\n<li>運算元範例包括<strong>常值</strong>、<strong>欄位</strong>、<strong>區域變數</strong>及<strong>運算式</strong>。</li>\n</ul>\n<p><img src=\"https://ithelp.ithome.com.tw/upload/images/20190908/20120055CTeRE2CKnA.png\" alt=\"運算式示意圖\n\"></p>\n<p>當運算式包含多個運算子時，運算子的「優先順序」會控制評估個別運算子的順序。 例如，運算式 <code>x + y * z</code> 會評估為<code>x + (y * z)</code>，因為 <code>*</code> 運算子的優先順序高於 <code>+</code> 運算子。</p>\n<blockquote>\n<p>白話文：先乘除，後加減。</p>\n</blockquote>\n<p>更多運算子可參考下面兩篇</p>\n<p><a href=\"https://docs.microsoft.com/zh-tw/dotnet/csharp/language-reference/operators/\" target=\"_blank\" rel=\"noopener\">C# 運算子 (C# 參考)</a></p>\n<p><a href=\"https://ithelp.ithome.com.tw/articles/10213220\" target=\"_blank\" rel=\"noopener\">Day08-C#運算式與運算子(+、-、*、/、&gt;、&lt;….等)-來用 C#算數學吧!(上)</a></p>\n<h2 id=\"陳述式\"><a href=\"#陳述式\" class=\"headerlink\" title=\"陳述式\"></a>陳述式</h2><p>程式的動作是藉由陳述式來表達。 C# 支援數種不同類型的陳述式，其中一些是以內嵌陳述式來定義。</p>\n<h3 id=\"區塊宣告陳述式：\"><a href=\"#區塊宣告陳述式：\" class=\"headerlink\" title=\"區塊宣告陳述式：\"></a>區塊宣告陳述式：</h3><p>可允許在許可單一陳述式的內容中撰寫多個陳述式。 區塊是由在 <code>{</code> 與 <code>}</code> 分隔符號之間撰寫的陳述式清單所組成，可用來宣告區域變數和常數。</p>\n<h4 id=\"區域變數宣告\"><a href=\"#區域變數宣告\" class=\"headerlink\" title=\"區域變數宣告\"></a>區域變數宣告</h4><figure class=\"highlight csharp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Declarations</span>(<span class=\"params\"><span class=\"keyword\">string</span>[] args</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> a;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> b = <span class=\"number\">2</span>, c = <span class=\"number\">3</span>;</span><br><span class=\"line\">    a = <span class=\"number\">1</span>;</span><br><span class=\"line\">    Console.WriteLine(a + b + c);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"區域常數宣告\"><a href=\"#區域常數宣告\" class=\"headerlink\" title=\"區域常數宣告\"></a>區域常數宣告</h4><figure class=\"highlight csharp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">ConstantDeclarations</span>(<span class=\"params\"><span class=\"keyword\">string</span>[] args</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keyword\">float</span> pi = <span class=\"number\">3.1415927f</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keyword\">int</span> r = <span class=\"number\">25</span>;</span><br><span class=\"line\">    Console.WriteLine(pi * r * r);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"運算式陳述式\"><a href=\"#運算式陳述式\" class=\"headerlink\" title=\"運算式陳述式\"></a>運算式陳述式</h3><figure class=\"highlight csharp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Expressions</span>(<span class=\"params\"><span class=\"keyword\">string</span>[] args</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> i;</span><br><span class=\"line\">    i = <span class=\"number\">123</span>;                <span class=\"comment\">// Expression statement</span></span><br><span class=\"line\">    Console.WriteLine(i);   <span class=\"comment\">// Expression statement</span></span><br><span class=\"line\">    i++;                    <span class=\"comment\">// Expression statement</span></span><br><span class=\"line\">    Console.WriteLine(i);   <span class=\"comment\">// Expression statement</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"「選取範圍陳述式」\"><a href=\"#「選取範圍陳述式」\" class=\"headerlink\" title=\"「選取範圍陳述式」\"></a>「選取範圍陳述式」</h3><p>可用來選取一些可能陳述式的其中之一，以根據某個運算式的值來執行。</p>\n<h4 id=\"if-陳述式\"><a href=\"#if-陳述式\" class=\"headerlink\" title=\"if 陳述式\"></a>if 陳述式</h4><p>加入判斷條件。</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">IfStatement</span>(<span class=\"params\"><span class=\"keyword\">string</span>[] args</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (args.Length == <span class=\"number\">0</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        Console.WriteLine(<span class=\"string\">\"No arguments\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        Console.WriteLine(<span class=\"string\">\"One or more arguments\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"switch-陳述式\"><a href=\"#switch-陳述式\" class=\"headerlink\" title=\"switch 陳述式\"></a>switch 陳述式</h4><figure class=\"highlight csharp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">SwitchStatement</span>(<span class=\"params\"><span class=\"keyword\">string</span>[] args</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n = args.Length;</span><br><span class=\"line\">    <span class=\"keyword\">switch</span> (n)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">0</span>:</span><br><span class=\"line\">            Console.WriteLine(<span class=\"string\">\"No arguments\"</span>);</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">            Console.WriteLine(<span class=\"string\">\"One argument\"</span>);</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">default</span>:</span><br><span class=\"line\">            Console.WriteLine(<span class=\"string\">$\"<span class=\"subst\">&#123;n&#125;</span> arguments\"</span>);</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"反覆運算陳述式\"><a href=\"#反覆運算陳述式\" class=\"headerlink\" title=\"反覆運算陳述式\"></a>反覆運算陳述式</h3><p>可用來重複執行內嵌的陳述式。</p>\n<h4 id=\"while-陳述式\"><a href=\"#while-陳述式\" class=\"headerlink\" title=\"while 陳述式\"></a>while 陳述式</h4><p>while 迴圈寫法</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">WhileStatement</span>(<span class=\"params\"><span class=\"keyword\">string</span>[] args</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (i &lt; args.Length)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        Console.WriteLine(args[i]);</span><br><span class=\"line\">        i++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"do-陳述式\"><a href=\"#do-陳述式\" class=\"headerlink\" title=\"do 陳述式\"></a>do 陳述式</h4><figure class=\"highlight csharp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">DoStatement</span>(<span class=\"params\"><span class=\"keyword\">string</span>[] args</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">string</span> s;</span><br><span class=\"line\">    <span class=\"keyword\">do</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        s = Console.ReadLine();</span><br><span class=\"line\">        Console.WriteLine(s);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">while</span> (!<span class=\"keyword\">string</span>.IsNullOrEmpty(s));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"for-陳述式\"><a href=\"#for-陳述式\" class=\"headerlink\" title=\"for 陳述式\"></a>for 陳述式</h4><figure class=\"highlight csharp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">ForStatement</span>(<span class=\"params\"><span class=\"keyword\">string</span>[] args</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; args.Length; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        Console.WriteLine(args[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"foreach-陳述式\"><a href=\"#foreach-陳述式\" class=\"headerlink\" title=\"foreach 陳述式\"></a>foreach 陳述式</h4><figure class=\"highlight csharp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">ForEachStatement</span>(<span class=\"params\"><span class=\"keyword\">string</span>[] args</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">foreach</span> (<span class=\"keyword\">string</span> s <span class=\"keyword\">in</span> args)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        Console.WriteLine(s);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"跳躍陳述式\"><a href=\"#跳躍陳述式\" class=\"headerlink\" title=\"跳躍陳述式\"></a>跳躍陳述式</h3><p>可用來轉移控制項。</p>\n<h4 id=\"break-陳述式\"><a href=\"#break-陳述式\" class=\"headerlink\" title=\"break 陳述式\"></a>break 陳述式</h4><figure class=\"highlight csharp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">BreakStatement</span>(<span class=\"params\"><span class=\"keyword\">string</span>[] args</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">string</span> s = Console.ReadLine();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">string</span>.IsNullOrEmpty(s))</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        Console.WriteLine(s);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"continue-陳述式\"><a href=\"#continue-陳述式\" class=\"headerlink\" title=\"continue 陳述式\"></a>continue 陳述式</h4><figure class=\"highlight csharp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">ContinueStatement</span>(<span class=\"params\"><span class=\"keyword\">string</span>[] args</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; args.Length; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (args[i].StartsWith(<span class=\"string\">\"/\"</span>))</span><br><span class=\"line\">            <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">        Console.WriteLine(args[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"goto-陳述式\"><a href=\"#goto-陳述式\" class=\"headerlink\" title=\"goto 陳述式\"></a>goto 陳述式</h4><figure class=\"highlight csharp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">GoToStatement</span>(<span class=\"params\"><span class=\"keyword\">string</span>[] args</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">goto</span> check;</span><br><span class=\"line\">    loop:</span><br><span class=\"line\">    Console.WriteLine(args[i++]);</span><br><span class=\"line\">    check:</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (i &lt; args.Length)</span><br><span class=\"line\">        <span class=\"keyword\">goto</span> loop;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"return-陳述式\"><a href=\"#return-陳述式\" class=\"headerlink\" title=\"return 陳述式\"></a>return 陳述式</h4><figure class=\"highlight csharp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">int</span> <span class=\"title\">Add</span>(<span class=\"params\"><span class=\"keyword\">int</span> a, <span class=\"keyword\">int</span> b</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a + b;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">ReturnStatement</span>(<span class=\"params\"><span class=\"keyword\">string</span>[] args</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">   Console.WriteLine(Add(<span class=\"number\">1</span>, <span class=\"number\">2</span>));</span><br><span class=\"line\">   <span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"yield-陳述式\"><a href=\"#yield-陳述式\" class=\"headerlink\" title=\"yield 陳述式\"></a>yield 陳述式</h4><figure class=\"highlight csharp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">static</span> System.Collections.Generic.<span class=\"function\">IEnumerable&lt;<span class=\"keyword\">int</span>&gt; <span class=\"title\">Range</span>(<span class=\"params\"><span class=\"keyword\">int</span> start, <span class=\"keyword\">int</span> end</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = start; i &lt; end; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">yield</span> <span class=\"keyword\">return</span> i;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">yield</span> <span class=\"keyword\">break</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">YieldStatement</span>(<span class=\"params\"><span class=\"keyword\">string</span>[] args</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">foreach</span> (<span class=\"function\"><span class=\"keyword\">int</span> i <span class=\"keyword\">in</span> <span class=\"title\">Range</span>(<span class=\"params\"><span class=\"number\">-10</span>,<span class=\"number\">10</span></span>))</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">        Console.WriteLine(i);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"throw-陳述式和-try-陳述式\"><a href=\"#throw-陳述式和-try-陳述式\" class=\"headerlink\" title=\"throw 陳述式和 try 陳述式\"></a>throw 陳述式和 try 陳述式</h3><p>可用來攔截在執行區塊時發生的例外狀況，而 <code>try</code> … <code>finally</code> 陳述式則可用來指定不論是否發生例外狀況都一律會執行的最終處理程式碼。</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">double</span> <span class=\"title\">Divide</span>(<span class=\"params\"><span class=\"keyword\">double</span> x, <span class=\"keyword\">double</span> y</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (y == <span class=\"number\">0</span>)</span><br><span class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> DivideByZeroException();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> x / y;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">TryCatch</span>(<span class=\"params\"><span class=\"keyword\">string</span>[] args</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">try</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (args.Length != <span class=\"number\">2</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> InvalidOperationException(<span class=\"string\">\"Two numbers required\"</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">double</span> x = <span class=\"keyword\">double</span>.Parse(args[<span class=\"number\">0</span>]);</span><br><span class=\"line\">        <span class=\"keyword\">double</span> y = <span class=\"keyword\">double</span>.Parse(args[<span class=\"number\">1</span>]);</span><br><span class=\"line\">        Console.WriteLine(Divide(x, y));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">catch</span> (InvalidOperationException e)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        Console.WriteLine(e.Message);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">finally</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        Console.WriteLine(<span class=\"string\">\"Good bye!\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"checked-和-unchecked-陳述式\"><a href=\"#checked-和-unchecked-陳述式\" class=\"headerlink\" title=\"checked 和 unchecked 陳述式\"></a>checked 和 unchecked 陳述式</h4><p>可用來控制整數型別算術運算和轉換的溢位檢查內容。</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">CheckedUnchecked</span>(<span class=\"params\"><span class=\"keyword\">string</span>[] args</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> x = <span class=\"keyword\">int</span>.MaxValue;</span><br><span class=\"line\">    <span class=\"keyword\">unchecked</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        Console.WriteLine(x + <span class=\"number\">1</span>);  <span class=\"comment\">// Overflow</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">checked</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        Console.WriteLine(x + <span class=\"number\">1</span>);  <span class=\"comment\">// Exception</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"lock-陳述式\"><a href=\"#lock-陳述式\" class=\"headerlink\" title=\"lock 陳述式\"></a>lock 陳述式</h3><p>可用來取得所指定物件的互斥鎖定、執行陳述式，然後釋放鎖定。</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title\">Account</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">decimal</span> balance;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">readonly</span> <span class=\"keyword\">object</span> sync = <span class=\"keyword\">new</span> <span class=\"keyword\">object</span>();</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">Withdraw</span>(<span class=\"params\"><span class=\"keyword\">decimal</span> amount</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">lock</span> (sync)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (amount &gt; balance)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(</span><br><span class=\"line\">                    <span class=\"string\">\"Insufficient funds\"</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            balance -= amount;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"using-陳述式\"><a href=\"#using-陳述式\" class=\"headerlink\" title=\"using 陳述式\"></a>using 陳述式</h3><p>可用來取得資源、執行陳述式，然後處置該資源。</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">UsingStatement</span>(<span class=\"params\"><span class=\"keyword\">string</span>[] args</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">using</span> (TextWriter w = File.CreateText(<span class=\"string\">\"test.txt\"</span>))</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        w.WriteLine(<span class=\"string\">\"Line one\"</span>);</span><br><span class=\"line\">        w.WriteLine(<span class=\"string\">\"Line two\"</span>);</span><br><span class=\"line\">        w.WriteLine(<span class=\"string\">\"Line three\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>參考資料</p>\n<p><a href=\"https://docs.microsoft.com/zh-tw/dotnet/csharp/tour-of-csharp/statements\" target=\"_blank\" rel=\"noopener\">陳述式</a></p>\n","categories":["C#"],"tags":["C#"]},{"title":"C# 筆記 - 型別與變數","url":"/c/20200420/951951981/","content":"<p><img src=\"https://robertlan.com/wp-content/uploads/2018/09/C-1024x384.png\" alt=\"C# ASP.NET\"></p>\n<h2 id=\"資料型別\"><a href=\"#資料型別\" class=\"headerlink\" title=\"資料型別\"></a>資料型別</h2><p>C# 中有兩種型別：<strong>實值型別</strong>和<strong>參考型別</strong>。</p>\n<h3 id=\"實值型別\"><a href=\"#實值型別\" class=\"headerlink\" title=\"實值型別\"></a>實值型別</h3><p>變數的記憶體空間存放的是實際的值。如 <code>int x = 5</code>，x 的內容就是 5。</p>\n<p>實值型別可進一步細分為<strong>簡單型別</strong>、<strong>列舉型別</strong>、<strong>結構型別</strong>和<strong>可為 Null 的實值型別</strong>。</p>\n<ul>\n<li><p><strong>簡單型別</strong></p>\n<ul>\n<li>帶正負號的整數︰<code>sbyte</code>、<code>short</code>、<code>int</code>、<code>long</code>。</li>\n<li>不帶正負號的整數︰<code>byte</code>、<code>ushort</code>、<code>uint</code>、<code>ulong</code>。</li>\n<li>Unicode 字元：<code>char</code>。</li>\n<li>IEEE 二進位浮點：<code>float</code>、<code>double</code>。</li>\n<li>高精確度十進位浮點：<code>decimal</code>。</li>\n<li>布林值：<code>bool</code>。</li>\n</ul>\n<blockquote>\n<p>C# 的 <code>bool</code> 型別用來代表布林值 — 不是 <code>true</code> 或 <code>false</code> 的值。</p>\n</blockquote>\n</li>\n<li><p><strong>枚舉類型</strong><br>使用者定義型別，格式為 <code>enum E {...}</code>。</p>\n</li>\n<li><p><strong>結構型別</strong><br>使用者定義型別，格式為 <code>struct S {...}</code>。</p>\n</li>\n<li><p><strong>可為 Null 的實值類型</strong><br>含有 <code>null</code> 值的所有其他數值型別的擴充。</p>\n</li>\n</ul>\n<h3 id=\"參考型別\"><a href=\"#參考型別\" class=\"headerlink\" title=\"參考型別\"></a>參考型別</h3><p>變數的記憶體空間存放的是值的記憶體位置，也就是放值的記憶體第一個開頭的地方。如 <code>int[] A = new int[] {1,4,2}</code>。<code>A</code> 存的就是 <code>[1,4,2]</code> 的記憶體位置。當要讀取 <code>4</code> 的時候，就是讀取 <code>A[1]</code>，指的是 <code>A</code> 記憶體位置的第二個值 (因陣列第一個序列為 0)。</p>\n<p>參考型別可進一步細分為<strong>類別型別 (物件、字串、自訂類別)</strong>、<strong>介面型別</strong>、<strong>陣列型別</strong>和<strong>委派型別</strong>。</p>\n<ul>\n<li><strong>類別類型</strong><ul>\n<li>所有其他型別的基底類別︰<code>object</code>。</li>\n<li>Unicode 字串：<code>string</code>。</li>\n<li>使用者定義型別，格式為 <code>class C {...}</code>。</li>\n</ul>\n</li>\n<li><strong>介面型別</strong><br>使用者定義型別，格式為 <code>interface I {...}</code>。</li>\n<li><strong>陣列類型</strong><br>單一維度和多維度，例如 <code>int[]</code> 和 <code>int[,]</code>。</li>\n<li><strong>委派型別</strong><br>使用者定義型別，格式為 <code>delegate int D(...)</code>。</li>\n</ul>\n<h3 id=\"C-常用到的基本資料型別\"><a href=\"#C-常用到的基本資料型別\" class=\"headerlink\" title=\"C# 常用到的基本資料型別\"></a>C# 常用到的基本資料型別</h3><p><img src=\"https://i.imgur.com/h3q18Kf.png\" alt=\"C# 常用的資料型別\"></p>\n<blockquote>\n<p>橘色標示的是比較常使用到的型別。了解<a href=\"https://docs.microsoft.com/zh-tw/dotnet/csharp/tour-of-csharp/types-and-variables\" target=\"_blank\" rel=\"noopener\">更多</a></p>\n</blockquote>\n<ul>\n<li>考量到記憶體的使用效能，整數分類較多。</li>\n<li>物件導向設計裡，萬物都是物件，物件在宣告時都需要使用 new 的方式給他一個新的記憶體空間。但值類型的基本型別 (object 除外)，宣告都不需要使用 new。</li>\n</ul>\n<h2 id=\"變數與變數宣告\"><a href=\"#變數與變數宣告\" class=\"headerlink\" title=\"變數與變數宣告\"></a>變數與變數宣告</h2><p>跟 JavaScript 有點像，都需要變數宣告、定義變數名稱還有給予其值。</p>\n<ol>\n<li><strong>變數定義</strong>: 用來表示值的名稱。顧名思義，存在變數裡的值是可以被改變的。</li>\n<li><strong>宣告方式</strong>: <code>資料型別 變數名稱 = 內容</code>。</li>\n<li>類別、結構、靜態變數、陳列元素中的變數宣告時若無指派初值，會自動給予初始值。</li>\n<li>數字型別初始值為 <code>0</code>。</li>\n<li>參考型別初始值為 <code>null</code>。</li>\n<li>布林預設值為 <code>false</code>。</li>\n</ol>\n<p>常用的方式如下 <del>(跟 JS 有 87% 像)</del></p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> a;<span class=\"comment\">// 宣告 a 是一個可以存整數的變數</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> a = <span class=\"number\">1</span>;<span class=\"comment\">// 宣告 a 是一個整數，且賦值1給a</span></span><br><span class=\"line\"><span class=\"keyword\">char</span> sex = <span class=\"string\">'F'</span>;<span class=\"comment\">// 字元宣告用單引號</span></span><br><span class=\"line\"><span class=\"keyword\">string</span> apple = <span class=\"string\">\"好吃\"</span>;<span class=\"comment\">// 字串宣告用雙引號</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> a,b,c;<span class=\"comment\">// 可以一次宣告多個同型別的變數</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> a,b = <span class=\"number\">0</span>,c = <span class=\"number\">1</span>;<span class=\"comment\">// 也可以同時賦值</span></span><br></pre></td></tr></table></figure>\n\n<p>參考資料</p>\n<p><a href=\"https://docs.microsoft.com/zh-tw/dotnet/csharp/tour-of-csharp/types-and-variables\" target=\"_blank\" rel=\"noopener\">型別與變數</a></p>\n<p><a href=\"https://ithelp.ithome.com.tw/articles/10213219\" target=\"_blank\" rel=\"noopener\">Day06-C#變數與變數宣告、常數與常數宣告、var、型別轉換</a></p>\n","categories":["C#"],"tags":["C#"]},{"title":"C# 筆記 - C# 語言的基本認識","url":"/c/20200420/1210559046/","content":"<p><img src=\"https://robertlan.com/wp-content/uploads/2018/09/C-1024x384.png\" alt=\"C# ASP.NET\"></p>\n<p>C# 是微軟推出的一種基於 <strong>.NET 框架</strong>的、<strong>物件導向</strong>的進階程式語言。C# 以 .NET 框架類別館作為基礎，擁有類似 Visual Basic 的快速開發能力。C# 由安德斯·海爾斯伯格主持開發，微軟在 2000 年發布了這種語言，希望藉助這種語言來取代 Java。 C# 已經成為 ECMA 國際和國際標準組織的標準規範。</p>\n<p><a href=\"https://zh.wikipedia.org/wiki/C%E2%99%AF\" target=\"_blank\" rel=\"noopener\">若要看更多關於 C# 的資訊，可見維基百科</a></p>\n<h2 id=\"何謂-C\"><a href=\"#何謂-C\" class=\"headerlink\" title=\"何謂 C#\"></a>何謂 C#</h2><ol>\n<li><p>C# ( 念法為 C Sharp )。源自於 C 語言。</p>\n</li>\n<li><p>C# 為<strong>強型別的語言</strong>，指的是每一個物件都<strong>必須</strong>指定型別。使用前你要先幫它規定好，該是整數就是整數 ( int )，該是字串就是字串 ( string )，要把整數當成字串用，就需要使用<strong>轉型</strong>。在各型別的<strong>繼承關係</strong>中，最上層的型別是 Object，意即，所有的東西都是物件。</p>\n</li>\n<li><p>C# 副檔名為 .cs，應用範圍廣，如網頁、大型作業系統、小型嵌入式系統…等皆可以用其來開發。</p>\n</li>\n<li><p>為了確保 C# 程式和庫能夠隨著時間的推移以相容的方式發展，在 C# 設計中，已非常強調版本控制。 許多程式設計語言很少注意這個問題。 因此，引入依賴庫的較新版本時，用這些其他語言編寫的程式中斷的頻率超過必要。 C# 設計中受版本控制注意事項直接影響的方面包括單獨 <code>virtual</code> 和 <code>override</code> 修改器、方法重載解析規則以及對顯式介面成員聲明的支援。</p>\n</li>\n</ol>\n<h2 id=\"Hello-World\"><a href=\"#Hello-World\" class=\"headerlink\" title=\"Hello World\"></a>Hello World</h2><p>以下為 C# 官方起手式的寫法，並附上說明：</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title\">Hello</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">        Console.WriteLine(<span class=\"string\">\"Hello, World\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"using\"><a href=\"#using\" class=\"headerlink\" title=\"using\"></a>using</h2><p>寫在最上方用來匯入函式庫(其他命名空間)使用，這也是 <code>using</code> 最常用的用法。</p>\n<ul>\n<li>為什麼要匯入其他函式?</li>\n</ul>\n<p>用法類似寫 SCSS 使用的 <code>import</code> ，匯入外部程式碼，就可以直接在程式中使用命名空間裡的型別，而不用指定型別的詳細空間，以縮短程式碼。</p>\n<h2 id=\"namespace-命名空間\"><a href=\"#namespace-命名空間\" class=\"headerlink\" title=\"namespace 命名空間\"></a>namespace 命名空間</h2><p>通常會在 <code>using System</code> 之後，在 <code>class</code> 之前，打包程式碼的空間，把相同功能者聚集在一起，用 <code>namespace</code> 名稱 <code>{ }</code> 一組大括號包起來，可以自訂義名稱，預設建立時會設定的跟專案( project )名稱一樣，當其他地方要用到的時候可以呼叫這個名字，如上方 using 後方也都是命名空間。<strong>用來指名程式所屬範圍，避免相同名稱類別產生衝突，可以控制類別的範圍。</strong> 一個檔案只有一個命名空間。</p>\n<h2 id=\"class\"><a href=\"#class\" class=\"headerlink\" title=\"class\"></a>class</h2><ul>\n<li>開頭要使用 <code>using</code>, <code>System</code> 代表使用這個命名空間，命名空間包含數個型別 (如程式中參考的 <code>Console</code> 類別)，和數個其他命名空間 (如 <code>IO</code> 和 <code>Collections</code>)。並且每一段程式碼要用 <code>;</code> 分號結尾。</li>\n<li>如上方簡介提到 C# 為強型別語言，也就是都要先定義類別 <code>(class)</code> 並給予一個變數名稱，這裡使用變數名稱為 <code>Hello</code>。</li>\n<li>C# 是階層式的語法，從宣告 <code>class</code> 開始，都要使用大括號包住下一層的程式碼。</li>\n</ul>\n<h3 id=\"static-void-Main-進入點寫法\"><a href=\"#static-void-Main-進入點寫法\" class=\"headerlink\" title=\"static void Main(){ }: 進入點寫法\"></a>static void Main(){ }: 進入點寫法</h3><p>整份程式碼非常多，C# 的世界裡，要告訴電腦從哪一行開始往下讀。這是 <code>Console</code> 模式裡進入點的寫法。C# 只能有一個進入點。</p>\n<ol>\n<li><strong>static</strong>: 一般類別中的方法必須先建立該類別的實體物件 (new) 後才能使用。若宣告為 <code>static</code>，<strong>代表一開始就存在在記憶體中</strong>，不用先建立 <code>Main()</code> 的物件實體就能叫用。</li>\n<li><strong>void</strong>: 表示不會傳回任何值。</li>\n<li><strong>Main()</strong>: 為程式開始執行的進入點。</li>\n<li><strong>string[] args</strong>:代表執行 <code>Main()</code> 方法時會將接在專案執行檔後面的參數置入 <code>args</code> 陣列。<code>args</code> 是一個字串陣列。</li>\n</ol>\n<blockquote>\n<p>在函式參數中看到這串參數 <code>string[] args</code> ，表示命令列引數是字串陣列，就是說，你在命令列 <code>[]</code> 裡輸入的引數可以使多個字串(在某種意義上意味著什麼都可以是命令列引數)。</p>\n<ul>\n<li>執行時會彈出命令視窗,你可以在那裡輸入一些引數，<code>string[] args</code> 指的就是你在命令視窗輸入的引數。<code>args</code> 是用來處理命令列引數的。命令列引數，就是你執行這個程式的時候給它傳的引數。它是可選項，不是必須。</li>\n</ul>\n</blockquote>\n<h3 id=\"Console\"><a href=\"#Console\" class=\"headerlink\" title=\"Console\"></a>Console</h3><p><code>Console.WritLine(&quot;Hello World!&quot;);</code></p>\n<ul>\n<li><strong>console</strong>: 是在 <code>console</code> 執行，所以目標就是 <code>console</code>。</li>\n<li><strong>WriteLine()</strong>: 這是一種方法，代表 <strong>輸出 + 換行</strong> 這個動作。<code>()</code> 內要放參數，或是我們要輸出的內容。由於我們要輸出的 <code>Hello World</code> 是字串，要用雙引號包起來。更多輸出內容可以參考 <a href=\"https://docs.microsoft.com/zh-tw/dotnet/api/system.console.writeline?view=netframework-4.8\" target=\"_blank\" rel=\"noopener\">MSDN</a></li>\n<li>C#每行程式需要用分號 <code>;</code> 結尾。</li>\n</ul>\n<p><code>Console.Read();</code></p>\n<p>架構跟上方相同，<code>Read()</code> 這個方法是讀入主控台輸入的字串。這一行是因為，程式預設一執行完就會關閉視窗，會看不到輸出結果。加了這一行它就會等著我們輸入字串暫時不關閉視窗。也可以寫<code>Console.ReadKey();</code>，讀入一個鍵的意思。</p>\n<p>接著按下上方執行輸出結果，恭喜你完成 <code>Hello World!</code> 了!</p>\n<h2 id=\"C-讀入與輸出\"><a href=\"#C-讀入與輸出\" class=\"headerlink\" title=\"C# 讀入與輸出\"></a>C# 讀入與輸出</h2><h3 id=\"讀入\"><a href=\"#讀入\" class=\"headerlink\" title=\"讀入\"></a>讀入</h3><p><code>Console.Read()</code>: 讀入一個字元。<br><code>Console.ReadLine()</code>: 讀入一行字串。<br><code>Console.ReadKey()</code>: 讀入一個鍵。</p>\n<h3 id=\"輸出\"><a href=\"#輸出\" class=\"headerlink\" title=\"輸出\"></a>輸出</h3><p><code>Console.Write()</code>: 輸出一段字但不換行。<br><code>Console.WriteLine()</code>: 輸出一段字並換行。</p>\n<p>所呈現的程式碼內容會如下圖:</p>\n<p><img src=\"https://ithelp.ithome.com.tw/upload/images/20190903/20120055SKBEyvMP6B.png\" alt=\"the first C#\"></p>\n<blockquote>\n<p>以上為自學筆記，若有誤還請各位前輩提點指正。</p>\n</blockquote>\n<p>參考資料:</p>\n<p><a href=\"https://ithelp.ithome.com.tw/articles/10213373\" target=\"_blank\" rel=\"noopener\">Day04-用 C#寫出第一個 Hello World 吧!(Console 模式/Visual Studio)</a></p>\n<p><a href=\"https://docs.microsoft.com/zh-tw/dotnet/csharp/tour-of-csharp/\" target=\"_blank\" rel=\"noopener\">C# 語言之旅</a></p>\n","categories":["C#"],"tags":["C#"]},{"title":"JS 筆記 - 控制判斷(if、else if、switch)","url":"/javascript/20200420/4050508230/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/JavaScript%20note-01.jpg?alt=media&token=7bee0261-72ac-4de4-9f5a-f39d58735b7d\" alt=\"JavaScript Note\"></p>\n<h2 id=\"if\"><a href=\"#if\" class=\"headerlink\" title=\"if\"></a>if</h2><p>光看英文單字，if 有如果的意思，在這邊程式碼也是直接使用字面上的感覺。<br>if 的程式碼如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> name = value;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (name == value) &#123; <span class=\"comment\">//判斷式</span></span><br><span class=\"line\">  ...<span class=\"comment\">//陳述式</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>判斷式<strong>先判斷</strong>小括號內的條件是否<strong>符合</strong>變數給的值，若相同就會執行陳述式，若不同則不會執行，所以 if 的感覺很直覺，想什麼講什麼就是了。</p>\n<p>if 後面的小括號要放<code>比較運算子</code>，也就是 <code>name == value</code>，不能放 <code>name = value</code>，這樣會變成<strong>變數值</strong>。</p>\n<hr>\n<h2 id=\"else-if、else\"><a href=\"#else-if、else\" class=\"headerlink\" title=\"else if、else\"></a>else if、else</h2><p>是延續 <code>if</code> 的屬性，倘若 <code>if</code> 內陳述式的程式碼與判斷式<strong>不相符</strong>，就會直接執行 <code>else if</code> 的陳述式，結尾要用 <code>else</code>。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> name = value;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (condition) &#123; <span class=\"comment\">//判斷式</span></span><br><span class=\"line\">  ... <span class=\"comment\">//陳述式</span></span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>&#123;</span><br><span class=\"line\">  ... <span class=\"comment\">//倘若第一個陳述式沒有滿足條件，就會執行 else 裡面的程式碼</span></span><br><span class=\"line\">  ...</span><br><span class=\"line\">  ...</span><br><span class=\"line\">  ... <span class=\"comment\">// else if 可以很多程式碼</span></span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">  ...<span class=\"comment\">//最後結尾會執行 else 的程式碼</span></span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>else 不用滿足條件，可以直接顯示結果，是滿好用的語法</p>\n</blockquote>\n<hr>\n<h2 id=\"Switch\"><a href=\"#Switch\" class=\"headerlink\" title=\"Switch\"></a>Switch</h2><p><code>Switch</code> 的用法跟 <code>if</code>、 <code>else if</code> 有點像，差別是 <code>if</code> 會把所有的程式碼都讀取過，相對渲染會比較慢，效能相對較低，而 <code>Switch</code> 會全部都讀過，但會只先看條件，看到有相符的型別才會再進去讀取相關內容，讀取後執行其他程式碼就不會再存取了，相對效能較高。</p>\n<p>switch 的程式碼如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">switch</span> (key) &#123; <span class=\"comment\">//設定一個表達式，且包含條件</span></span><br><span class=\"line\">  <span class=\"keyword\">case</span> value: <span class=\"comment\">//要先寫一個 case 然後加上**變數名稱**(字串要加引號，不用小括弧)，給一個冒號：寫裡面的內容，結尾用分號 ; ，結束有點像 CSS</span></span><br><span class=\"line\">    ...</span><br><span class=\"line\">    <span class=\"keyword\">break</span>; <span class=\"comment\">//每個 case 都要用一個 break 做結束。</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">default</span>: <span class=\"comment\">//defalt 用法有點像 else，就如果沒有滿足的條件就會執行這個內容，但其位置可以任意放置，但我會習慣放在最後面，這樣寫程式碼比較有邏輯一點</span></span><br><span class=\"line\">    ...</span><br><span class=\"line\">    <span class=\"keyword\">break</span>; <span class=\"comment\">// 結束也要用一個 break 當作結束。</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>建立 switch：設立一個表達式，且包含條件，用小括號包起來。<br>case: 後方會開始比對，如果符合就會執行相關連的程式碼。<br>break: 每個 case 後方都會補上一個 break，如果讀取到條件相符，就會停止讀取後方的程式碼。</p>\n</blockquote>\n<hr>\n<h3 id=\"加入-function-到-Switch\"><a href=\"#加入-function-到-Switch\" class=\"headerlink\" title=\"加入 function 到 Switch\"></a>加入 function 到 Switch</h3><blockquote>\n<ol>\n<li>建立變數。</li>\n<li>建立 function。</li>\n<li>帶入 switch，switch 裡面可以帶入多個相同條件的 case。</li>\n</ol>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> name = value;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">name</span>(<span class=\"params\">params</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(params);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">switch</span> (key) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">case</span> value: <span class=\"comment\">//case1</span></span><br><span class=\"line\">    ...</span><br><span class=\"line\">    <span class=\"keyword\">break</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">case</span> value: <span class=\"comment\">//case2</span></span><br><span class=\"line\">    name(params); <span class=\"comment\">//帶入 function</span></span><br><span class=\"line\">    <span class=\"keyword\">break</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">default</span>:</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>實際遇到的<a href=\"https://hsuchihting.github.io/JavaScript-Note/20200325/2975558676/\">jQuery 筆記 - 使用 select 選取 option 的資料，並同步渲染於網頁</a></p>\n","categories":["JavaScript"],"tags":["JavaScript"]},{"title":"Vue 筆記 - 資料綁定與模板 v-model、v-text、v-html","url":"/vue-js/20200419/2954354756/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/vue04.png?alt=media&token=b2202a44-956f-4b67-81a9-401df1d363cf\" alt=\"pic\"></p>\n<p>先前已經提過 Vue 的概念是受到 M-V-VM 的概念為啟發，並非完全的 M-V-VM，至於概念可看<a href=\"https://zh.wikipedia.org/wiki/MVVM\" target=\"_blank\" rel=\"noopener\">維基百科</a>。</p>\n<p>下方有一個 vue 的程式碼，data 中有一個預設字串，想把 data 中的資料顯示於網頁上，可以使用雙大括號 ( Mustache 語法 ) 做同步的顯示，如果想透過網頁操作資料，可以使用指令 <code>v-model</code> 在 <code>input</code> 的表單中控制其資料內容。</p>\n<blockquote>\n<p><code>Mustache</code> 不可作為屬性使用，如果要在 HTML 標記內的屬性帶入 data 或運算後的內容，要用 <code>v-bind</code> 來進行綁定。</p>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"actionscript\">  <span class=\"keyword\">var</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span></span><br><span class=\"line\"><span class=\"actionscript\">    el: <span class=\"string\">'#app'</span>,</span></span><br><span class=\"line\">    data: &#123;</span><br><span class=\"line\"><span class=\"actionscript\">      text: <span class=\"string\">'the sample'</span>,</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"v-model\"><a href=\"#v-model\" class=\"headerlink\" title=\"v-model\"></a>v-model</h2><ul>\n<li>表單的元件可透過 <code>v-model</code> 來進行資料的「雙向」綁定，並會根據不同的表單類別來更新元素的內容。表面上看似神奇，只要輸入綁定的區域就可以同步顯示資料，但實際上 Vue 在背後負責監聽網頁的事件與更新實體的內容。 (M-V-VM)。</li>\n<li><code>v-model</code> 不會處理表單元件的預設值，如：<code>checked</code>/<code>selected</code> 等，表單內的值一律由綁定的資料來決定。</li>\n<li><code>v-model</code> 指令中的屬性就是 <code>data</code> 中 <code>text</code> 的屬性，所以可以透過指令的設定，控制所指定的資料內容。</li>\n</ul>\n<h3 id=\"v-model-使用的範圍\"><a href=\"#v-model-使用的範圍\" class=\"headerlink\" title=\"v-model 使用的範圍\"></a>v-model 使用的範圍</h3><p>你可以用 <code>v-model</code> 指令在表單 <code>&lt;input&gt;</code>、<code>&lt;textarea&gt;</code> 及 <code>&lt;select&gt;</code> 元素上創建雙向數據綁定。</p>\n<h4 id=\"example\"><a href=\"#example\" class=\"headerlink\" title=\"example\"></a>example</h4><ul>\n<li>input</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"form\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>message is :&#123;&#123; msg &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">\"edit me\"</span> <span class=\"attr\">v-model</span>=<span class=\"string\">\"msg\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>checkbox</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"checkbox\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app2\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">\"checkbox\"</span>&gt;</span>&#123;&#123; checkbox&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"checkbox\"</span> <span class=\"attr\">v-model</span>=<span class=\"string\">\"checked\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>checkboxes</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"checkboxes\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app3\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">\"checkbox\"</span>&gt;</span>Jack <span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"jack\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"jack\"</span> <span class=\"attr\">v-model</span>=<span class=\"string\">\"checkedNames\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">\"checkbox\"</span>&gt;</span>Mary <span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"mary\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"mary\"</span> <span class=\"attr\">v-model</span>=<span class=\"string\">\"checkedNames\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">\"checkbox\"</span>&gt;</span>Tom <span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"tom\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"tom\"</span> <span class=\"attr\">v-model</span>=<span class=\"string\">\"checkedNames\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>Checked Name: &#123;&#123; checkedNames &#125;&#125; 狀態<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>radio</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"radio\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app4\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">\"one\"</span>&gt;</span> One <span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"radio\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"one\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"One\"</span> <span class=\"attr\">v-model</span>=<span class=\"string\">\"picked\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">\"two\"</span>&gt;</span> Two <span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"radio\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"two\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"Two\"</span> <span class=\"attr\">v-model</span>=<span class=\"string\">\"picked\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>Picked: &#123;&#123;picked&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>select</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"select\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app5\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">v-model</span>=<span class=\"string\">\"selected\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">option</span>&gt;</span>A<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">option</span>&gt;</span>B<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">option</span>&gt;</span>C<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>Selected: &#123;&#123;selected&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><a href=\"https://codepen.io/hnzxewqw/pen/ZEbOoGx\" target=\"_blank\" rel=\"noopener\">範例 CodePen</a></p>\n<blockquote>\n<p>v-model 會忽略所有表單元素的 <code>value</code>、<code>checked</code>、<code>selected</code> 的屬性初始值。</p>\n</blockquote>\n<p><a href=\"https://cn.vuejs.org/v2/guide/forms.html#%E5%9C%A8%E7%BB%84%E4%BB%B6%E4%B8%8A%E4%BD%BF%E7%94%A8-v-model\" target=\"_blank\" rel=\"noopener\">官網</a>註明 v-model 對應的類別與使用的屬性與事件：</p>\n<ul>\n<li><code>text</code> 和 <code>textarea</code> 元素使用 value 屬性和 <code>input</code> 事件。</li>\n<li><code>checkbox</code> 和 <code>radio</code> 使用 checked 屬性和 <code>change</code> 事件。</li>\n<li><code>select</code> 字段將 value 作為 prop 並將 <code>change</code> 作為事件。</li>\n</ul>\n<blockquote>\n<p>個人目前在 <code>input</code> 跟 <code>select</code> 最常使用 v-model，並且只要綁定 v-model 後，在 data 中就要同步加入該屬性。</p>\n</blockquote>\n<h2 id=\"其他資料綁定的指令\"><a href=\"#其他資料綁定的指令\" class=\"headerlink\" title=\"其他資料綁定的指令\"></a>其他資料綁定的指令</h2><p>除了這兩個以外還有另外的指令可以把資料內容顯示於網頁。</p>\n<h2 id=\"v-text\"><a href=\"#v-text\" class=\"headerlink\" title=\"v-text\"></a>v-text</h2><p>用來渲染純文字</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-text</span>=<span class=\"string\">\"text\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"v-html\"><a href=\"#v-html\" class=\"headerlink\" title=\"v-html\"></a>v-html</h2><p>用來渲染 HTML 解析後的內容，並新增 html 標籤到網頁上。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-html</span>=<span class=\"string\">\"text\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>兩個透過 console 檢查，都會顯示：<code>&lt;div&gt;the sample&lt;/div&gt;</code></p>\n</blockquote>\n<p><a href=\"https://codepen.io/hnzxewqw/pen/OJyXNbE\" target=\"_blank\" rel=\"noopener\">CodePen</a></p>\n<p>參考文章</p>\n<p><a href=\"https://cythilya.github.io/2017/04/14/vue-data-v-model/\" target=\"_blank\" rel=\"noopener\">Vue.js: data、v-model 與雙向綁定</a></p>\n<p><a href=\"https://cn.vuejs.org/v2/guide/forms.html#%E5%9C%A8%E7%BB%84%E4%BB%B6%E4%B8%8A%E4%BD%BF%E7%94%A8-v-model\" target=\"_blank\" rel=\"noopener\">Vue 官網</a></p>\n","categories":["vue.js"],"tags":["vue.js"]},{"title":"jQuery 筆記 - datepicker 與 timepicker 套件練習","url":"/jQuery/20200414/1101598249/","content":"<p><img src=\"https://images.unsplash.com/photo-1506784365847-bbad939e9335?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1348&q=80\" alt=\"calender\"></p>\n<p>還記得之前挑戰<a href=\"https://w3c.hexschool.com/blog/bde2f503\" target=\"_blank\" rel=\"noopener\">旅館訂房網站</a>頁面，手刻月曆真是花了很長的時間，不過也首次見識到 flex 排版的威力。</p>\n<p>後來才知道有月曆跟時間的套件…就來記錄一下使用的方式。</p>\n<h2 id=\"匯入套件\"><a href=\"#匯入套件\" class=\"headerlink\" title=\"匯入套件\"></a>匯入套件</h2><p>如果想要修改月曆配色，可以使用 cdn 或<a href=\"https://jqueryui.com/resources/download/jquery-ui-1.12.1.zip\" target=\"_blank\" rel=\"noopener\">官網</a>下載套件或是 <strong>jQuery UI CSS cdn</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"./jquery-ui-1.12.1/jquery-ui.css\"</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>我是下載整包檔案</p>\n</blockquote>\n<h2 id=\"datepicker\"><a href=\"#datepicker\" class=\"headerlink\" title=\"datepicker\"></a>datepicker</h2><p>datepicker cdnjs <a href=\"https://cdnjs.com/libraries/datepicker\" target=\"_blank\" rel=\"noopener\">https://cdnjs.com/libraries/datepicker</a></p>\n<p>我這次是選擇用 jQuery UI 的 <a href=\"https://jqueryui.com/datepicker/\" target=\"_blank\" rel=\"noopener\">datepicker 套件</a>，進入頁面後可以在右側欄選擇喜歡的月曆的出現形式，使用的前提是要搭配 <code>input</code>，<code>type=&quot;text&quot;</code>，雖然原本 input 就有預設 <code>date</code> 類型，但樣式太醜，所以才用此套件。</p>\n<p><strong>官網範例程式碼</strong></p>\n<p>HTML</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Date: <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"datepicker\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>javascript</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  $( <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    $( <span class=\"string\">\"#datepicker\"</span> ).datepicker();</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>預設顯示為 日/月/年，但我比較喜歡年/月/日，官網也提供修改的方式：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">$(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  $(<span class=\"string\">\"#datepicker\"</span>).datepicker(&#123;</span><br><span class=\"line\">    dateFormat: <span class=\"string\">\"yy-mm-dd\"</span>, <span class=\"comment\">//修改顯示順序</span></span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"timepicker\"><a href=\"#timepicker\" class=\"headerlink\" title=\"timepicker\"></a>timepicker</h2><p>我是找這個<a href=\"https://timepicker.co/\" target=\"_blank\" rel=\"noopener\">套件</a>，</p>\n<p>timepicker cdnjs <a href=\"https://cdnjs.com/libraries/timepicker\" target=\"_blank\" rel=\"noopener\">https://cdnjs.com/libraries/timepicker</a></p>\n<p>跟 datepicker 很類似，一樣先參考官網程式碼，再修正成喜歡的樣式跟內容：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">\".timepicker\"</span>).timepicker(&#123;</span><br><span class=\"line\">  timeFormat: <span class=\"string\">\"h:mm p\"</span>, <span class=\"comment\">// 時間隔式</span></span><br><span class=\"line\">  interval: <span class=\"number\">60</span>, <span class=\"comment\">//時間間隔</span></span><br><span class=\"line\">  minTime: <span class=\"string\">\"10\"</span>, <span class=\"comment\">//最小時間</span></span><br><span class=\"line\">  maxTime: <span class=\"string\">\"6:00pm\"</span>, <span class=\"comment\">//最大時間</span></span><br><span class=\"line\">  defaultTime: <span class=\"string\">\"11\"</span>, <span class=\"comment\">//預設起始時間</span></span><br><span class=\"line\">  startTime: <span class=\"string\">\"10:00\"</span>, <span class=\"comment\">// 開始時間</span></span><br><span class=\"line\">  dynamic: <span class=\"literal\">true</span>, <span class=\"comment\">//是否顯示項目，使第一個項目按時間順序緊接在所選時間之後</span></span><br><span class=\"line\">  dropdown: <span class=\"literal\">true</span>, <span class=\"comment\">//是否顯示時間條目的下拉列表</span></span><br><span class=\"line\">  scrollbar: <span class=\"literal\">true</span>, <span class=\"comment\">//是否顯示捲軸</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>一樣要同步寫入 CSS，才會在點擊 <code>input</code> 後出現在下方。</p>\n<blockquote>\n<p>datepicker 跟 timepicker 的樣式都是直接從預設樣式修改成要的，不是自己另外寫。</p>\n</blockquote>\n<p>Codepen <a href=\"https://codepen.io/hnzxewqw/pen/LYppObK\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/LYppObK</a></p>\n","categories":["jQuery"],"tags":["JavaScript","jQuery"]},{"title":"JS 筆記 - Object & Array 物件與陣列的綜合應用","url":"/javascript/20200413/690135993/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/JavaScript%20note-01.jpg?alt=media&token=7bee0261-72ac-4de4-9f5a-f39d58735b7d\" alt=\"JavaScript Note\"></p>\n<p>本篇記錄物件與陣列的綜合應用，會使用到以下內容，順便複習一下寫法：</p>\n<p><strong>變數 var</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">1</span>;</span><br></pre></td></tr></table></figure>\n\n<p><strong>函式 function</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">name</span>(<span class=\"params\">params</span>) </span>&#123;&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>陣列 array</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> array = [<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>],</span><br></pre></td></tr></table></figure>\n\n<p><strong>物件 object</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> object = &#123;</span><br><span class=\"line\">  text: <span class=\"string\">\"string\"</span>,</span><br><span class=\"line\">  number: <span class=\"number\">10</span>,</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"物件-函式\"><a href=\"#物件-函式\" class=\"headerlink\" title=\"物件 + 函式\"></a>物件 + 函式</h2><p>物件內建立函式，可以透過函式的功能來做運算，讓物件成為一系列的內容，會相當好用。<br>以一個家庭為例，程式碼如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> home = &#123;</span><br><span class=\"line\">  dad: <span class=\"string\">\"Tim\"</span>,</span><br><span class=\"line\">  mom: <span class=\"string\">\"Min\"</span>,</span><br><span class=\"line\">  son: [<span class=\"string\">\"Joshua\"</span>, <span class=\"string\">\"John\"</span>],</span><br><span class=\"line\">  chair: <span class=\"number\">4</span>,</span><br><span class=\"line\">  table: <span class=\"number\">3</span>,</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p>如果要在物件內加入函式，若要顯示：「Tim，該吃晚餐囉！」可以這樣寫：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> home = &#123;</span><br><span class=\"line\">  dad: <span class=\"string\">\"Tim\"</span>,</span><br><span class=\"line\">  mom: <span class=\"string\">\"Min\"</span>,</span><br><span class=\"line\">  son: [<span class=\"string\">\"Joshua\"</span>, <span class=\"string\">\"John\"</span>],</span><br><span class=\"line\">  chair: <span class=\"number\">4</span>,</span><br><span class=\"line\">  table: <span class=\"number\">3</span>,</span><br><span class=\"line\">  dinner: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//建立函式</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(home.dad + <span class=\"string\">\"，該吃晚餐囉!\"</span>); <span class=\"comment\">//函式執行內容</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">home.dinner(); <span class=\"comment\">//執行物件 home 裡面的函式 dinner 的內容</span></span><br></pre></td></tr></table></figure>\n\n<p>就會得到 Tim，該吃晚餐囉！的結果</p>\n<hr>\n<h3 id=\"存取物件中函式資料\"><a href=\"#存取物件中函式資料\" class=\"headerlink\" title=\"存取物件中函式資料\"></a>存取物件中函式資料</h3><p>倘若今天要計算物件裡面桌子椅子的總數量，可以在物件中建立另一個函式，做為計算的功能，可以這樣寫：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> home = &#123;</span><br><span class=\"line\">  dad: <span class=\"string\">\"Tim\"</span>,</span><br><span class=\"line\">  mom: <span class=\"string\">\"Min\"</span>,</span><br><span class=\"line\">  son: [<span class=\"string\">\"Joshua\"</span>, <span class=\"string\">\"John\"</span>],</span><br><span class=\"line\">  chair: <span class=\"number\">4</span>,</span><br><span class=\"line\">  table: <span class=\"number\">3</span>,</span><br><span class=\"line\">  dinner: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//建立函式</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(home.dad + <span class=\"string\">\"，該吃晚餐囉!\"</span>); <span class=\"comment\">//函式執行內容</span></span><br><span class=\"line\">  &#125;, <span class=\"comment\">//新增新物件要用逗點隔開</span></span><br><span class=\"line\">  furniture: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> furnitureNum = home.chair + home.table; <span class=\"comment\">//增加一個區域變數，把物件中的要抓取的屬性放進來</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(furnitureNum); <span class=\"comment\">//執行函式中的區域變數內容</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">home.dinner(); <span class=\"comment\">//執行物件 home 裡面的函式 dinner 的內容 ()</span></span><br><span class=\"line\">home.furnitureNum(); <span class=\"comment\">//執行物件 home 裡面的函式中的區域變數，結果會得到 7</span></span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"陣列-物件\"><a href=\"#陣列-物件\" class=\"headerlink\" title=\"陣列 + 物件\"></a>陣列 + 物件</h2><p>可以利用陣列整合資料的觀念，把物件變成陣列資料，如果今天有兩個家庭為例，程式碼會如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> homes = [</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    dad: <span class=\"string\">\"Tim\"</span>,</span><br><span class=\"line\">    mom: <span class=\"string\">\"Min\"</span>,</span><br><span class=\"line\">    son: [<span class=\"string\">\"Joshua\"</span>, <span class=\"string\">\"John\"</span>],</span><br><span class=\"line\">    chair: <span class=\"number\">4</span>,</span><br><span class=\"line\">    table: <span class=\"number\">3</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    dad: <span class=\"string\">\"Jerry\"</span>,</span><br><span class=\"line\">    mom: <span class=\"string\">\"Nancy\"</span>,</span><br><span class=\"line\">    son: [<span class=\"string\">\"Ethan\"</span>, <span class=\"string\">\"Elijah\"</span>, <span class=\"string\">\"Emma\"</span>],</span><br><span class=\"line\">    chair: <span class=\"number\">5</span>,</span><br><span class=\"line\">    table: <span class=\"number\">4</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">];</span><br></pre></td></tr></table></figure>\n\n<p><em>因為是物件，所以在大括號中間還是要用逗號隔開</em><br><em>陣列中加入物件，物件前面就不用再寫一個變數名稱，因為直接在陣列裡面變成資料了</em></p>\n<hr>\n<h3 id=\"存取陣列中的物件資料\"><a href=\"#存取陣列中的物件資料\" class=\"headerlink\" title=\"存取陣列中的物件資料\"></a>存取陣列中的物件資料</h3><p>延續上方程式碼，今天要存取物件資料的寫法如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> homes = [</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    dad: <span class=\"string\">\"Tim\"</span>,</span><br><span class=\"line\">    mom: <span class=\"string\">\"Min\"</span>,</span><br><span class=\"line\">    son: [<span class=\"string\">\"Joshua\"</span>, <span class=\"string\">\"John\"</span>],</span><br><span class=\"line\">    chair: <span class=\"number\">4</span>,</span><br><span class=\"line\">    table: <span class=\"number\">3</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    dad: <span class=\"string\">\"Jerry\"</span>,</span><br><span class=\"line\">    mom: <span class=\"string\">\"Nancy\"</span>,</span><br><span class=\"line\">    son: [<span class=\"string\">\"Ethan\"</span>, <span class=\"string\">\"Elijah\"</span>, <span class=\"string\">\"Emma\"</span>],</span><br><span class=\"line\">    chair: <span class=\"number\">5</span>,</span><br><span class=\"line\">    table: <span class=\"number\">4</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(homes[<span class=\"number\">0</span>].dad);</span><br><span class=\"line\"><span class=\"comment\">//會找到陣列中第一筆物件的資料，再找到裡面的 dad 的值，結果會是 Tim</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(homes[<span class=\"number\">1</span>].son[<span class=\"number\">2</span>]);</span><br><span class=\"line\"><span class=\"comment\">//會找到陣列中第二筆物件的資料，再找到裡面的 son 的第三個值，結果會是 Elijah</span></span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"心得\"><a href=\"#心得\" class=\"headerlink\" title=\"心得\"></a>心得</h2><ol>\n<li>要把變數、函式、陣列、物件四個寫法搞清楚。</li>\n<li>因為四個東西有相關聯，要把不同的存取方法搞清楚，也要把彼此程式綜合應用時讀取的方式也要搞清楚，</li>\n<li>存取資料的方法要想得直覺一點，不要想得太複雜，不然會卡關。</li>\n<li>這一篇要連同前面的單元重複複習幾次，要熟悉。</li>\n</ol>\n","categories":["JavaScript"],"tags":["JavaScript"]},{"title":"JS 筆記 - 控制判斷 (比較運算子、邏輯運算子)","url":"/javascript/20200413/2524097541/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/JavaScript%20note-01.jpg?alt=media&token=7bee0261-72ac-4de4-9f5a-f39d58735b7d\" alt=\"JavaScript Note\"></p>\n<p>此次內容是 JavaScript 的控制判斷，<strong>比較運算子</strong>跟<strong>邏輯運算子</strong>的筆記。<br>用途會是在驗證資料是否有與原本設定的條件相同，例如：今天填寫一個表單，如果勾選「是」，就可以繼續往下填寫之類的控制判斷。</p>\n<hr>\n<h2 id=\"運算子\"><a href=\"#運算子\" class=\"headerlink\" title=\"運算子\"></a>運算子</h2><h3 id=\"比較運算子\"><a href=\"#比較運算子\" class=\"headerlink\" title=\"比較運算子 ==\"></a>比較運算子 <code>==</code></h3><p>用來比較 a 與 b 是否為正確或不正確，例如：設定兩個變數比較他們的關係。<br>會發現有兩個地方不同， <code>=</code> 跟 <code>==</code>， <code>=</code> 的用法是給予變數一個值； <code>==</code> 他是用比較兩個數值之間的關係是否為 true 還是 false。</p>\n<p>然後有兩種寫法：</p>\n<blockquote>\n<p><code>==</code> 等於</p>\n<p><code>!==</code> 不等於</p>\n</blockquote>\n<p>簡單的範例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> b = <span class=\"number\">1</span>;</span><br><span class=\"line\">a == b; <span class=\"comment\">//結果會得到 true</span></span><br></pre></td></tr></table></figure>\n\n<p>反之 <code>!==</code></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> b = <span class=\"number\">1</span>;</span><br><span class=\"line\">a !== b; <span class=\"comment\">//結果會得到 false</span></span><br></pre></td></tr></table></figure>\n\n<hr>\n<p>加上情境，倘若今天一間餐廳有當月壽星禮，可以這樣做控制判斷</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> myBirthdayMonth = <span class=\"number\">3</span>; <span class=\"comment\">//我的生日月份</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> nowMonth = <span class=\"number\">12</span>; <span class=\"comment\">//本月壽星</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> birthdayMonthCheck = myBirthdayMonth == nowMonth; <span class=\"comment\">//判斷我是否為本月壽星</span></span><br><span class=\"line\"><span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"birthdayId\"</span>).textContent = birthdayMonthCheck; <span class=\"comment\">//本月為 12 月，我是 3 月壽星，故結果會得到 false</span></span><br></pre></td></tr></table></figure>\n\n<hr>\n<h3 id=\"嚴謹模式\"><a href=\"#嚴謹模式\" class=\"headerlink\" title=\"嚴謹模式 ===\"></a>嚴謹模式 <code>===</code></h3><p>因為 <code>==</code> 比較不嚴謹，如果有些資料要確認型別，就會用到 <code>===</code>，假如下方程式碼：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span> == <span class=\"string\">\"1\"</span>;</span><br><span class=\"line\"><span class=\"comment\">//會得到結果是 true，可是一邊是數字，另一邊是字串，資料型別不同啊?</span></span><br></pre></td></tr></table></figure>\n\n<p>因為 <code>==</code> 會在比較時發現值如果數字跟字串長一樣的時候，會自動轉型，被比較成一樣，所以如果剛好遇到類似的數值跟字串內容會一樣時，為了讓資料更明確的比較，就會用到嚴謹模式 <code>===</code>，例如：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span> === <span class=\"string\">\"1\"</span>;</span><br><span class=\"line\"><span class=\"comment\">//得到的結果就會是 false</span></span><br></pre></td></tr></table></figure>\n\n<hr>\n<h3 id=\"大於-gt-、小於-lt-、大於等於-gt-、小於等於-gt\"><a href=\"#大於-gt-、小於-lt-、大於等於-gt-、小於等於-gt\" class=\"headerlink\" title=\"大於 &gt;、小於 &lt;、大於等於 &gt;=、小於等於 =&gt;\"></a>大於 <code>&gt;</code>、小於 <code>&lt;</code>、大於等於 <code>&gt;=</code>、小於等於 <code>=&gt;</code></h3><p>用法就跟字面一樣，可以自己玩一下，例如：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">3</span> &gt; <span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"number\">7</span> &lt; <span class=\"number\">8</span>;</span><br><span class=\"line\"><span class=\"number\">13</span> &gt;= <span class=\"number\">13</span>;</span><br><span class=\"line\"><span class=\"number\">15</span> &lt;= <span class=\"number\">21</span>;</span><br></pre></td></tr></table></figure>\n\n<p>以上結果都會得到 true <del>(廢話)</del></p>\n<hr>\n<h2 id=\"邏輯運算式-amp-amp-and-、-or-、-not\"><a href=\"#邏輯運算式-amp-amp-and-、-or-、-not\" class=\"headerlink\" title=\"邏輯運算式 &amp;&amp; (and)、|| (or)、! (not)\"></a>邏輯運算式 &amp;&amp; (and)、|| (or)、! (not)</h2><p>要滿足預設的兩個條件要用 and，這樣寫： <code>&amp;&amp;</code>，只要滿足其中一個條件用 or ，這樣寫： <code>||</code>，如果要表示「不是」則是用 <code>!</code>。</p>\n<hr>\n<h3 id=\"amp-amp-所有條件皆符合\"><a href=\"#amp-amp-所有條件皆符合\" class=\"headerlink\" title=\"&amp;&amp; 所有條件皆符合\"></a>&amp;&amp; 所有條件皆符合</h3><p>以搭飛機為例，出入境都需要<strong>機票</strong>跟<strong>護照</strong>的話，程式碼如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> passport = <span class=\"literal\">true</span>; <span class=\"comment\">//有帶護照</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> ticket = <span class=\"literal\">true</span>; <span class=\"comment\">//有帶機票</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> pass = passport == <span class=\"literal\">true</span> &amp;&amp; ticket == <span class=\"literal\">true</span>; <span class=\"comment\">// 出入境條件</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(pass); <span class=\"comment\">// 結果會是 true</span></span><br></pre></td></tr></table></figure>\n\n<p>如果沒有機票的話，程式碼如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> passport = <span class=\"literal\">true</span>; <span class=\"comment\">//有帶護照</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> ticket = <span class=\"literal\">false</span>; <span class=\"comment\">//沒帶機票</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> pass = passport == <span class=\"literal\">true</span> &amp;&amp; ticket == <span class=\"literal\">true</span>; <span class=\"comment\">// 出入境條件</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(pass); <span class=\"comment\">// 結果會是 false</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>在條件上可以自行定義多寡，但建議一到兩個就好，最多三個，不然程式碼會太長。</p>\n</blockquote>\n<hr>\n<h3 id=\"符合一項條件\"><a href=\"#符合一項條件\" class=\"headerlink\" title=\"|| 符合一項條件\"></a>|| 符合一項條件</h3><p>以餐廳優惠為例，餐廳很多都有當月壽星禮，程式碼如下：</p>\n<p>剛好是當月壽星：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//餐廳折扣優惠</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> myBirthdMonth = <span class=\"literal\">true</span>; <span class=\"comment\">//當月壽星禮</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> fbTag = <span class=\"literal\">true</span>; <span class=\"comment\">//臉書打卡</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> discount = myBirthdMonth == <span class=\"literal\">true</span> || fbTag == <span class=\"literal\">true</span>; <span class=\"comment\">// 符合折扣條件</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(discount); <span class=\"comment\">// 結果會是 true</span></span><br></pre></td></tr></table></figure>\n\n<hr>\n<h3 id=\"不是\"><a href=\"#不是\" class=\"headerlink\" title=\"! 不是\"></a>! 不是</h3><p>Not 會把原本的意思改成不是的意思，例如：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">2</span> &lt; <span class=\"number\">3</span>; <span class=\"comment\">//true</span></span><br><span class=\"line\"></span><br><span class=\"line\">!(<span class=\"number\">2</span> &lt; <span class=\"number\">3</span>); <span class=\"comment\">// false</span></span><br></pre></td></tr></table></figure>\n","categories":["JavaScript"],"tags":["JavaScript"]},{"title":"CSS 筆記 - 使用 overflow 顯示一個捲軸與自訂顏色","url":"/css/20200410/3203726250/","content":"<p><img src=\"https://images.unsplash.com/photo-1580501170888-80668882ca0c?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1350&q=80\" alt=\"scroll\"></p>\n<blockquote>\n<p>Scroll 英文叫做滾動，在網頁中是捲軸。</p>\n</blockquote>\n<p>這次一樣是紀錄工作遇到的問題，目前的專案是一個後臺開發，遇到一個 table 版面，資料會從 API 回傳數據後填入，所以會有很多筆，但因為版面的關係，PM 希望 table 表格可以自己使用捲軸，這次用到 CSS 的 overflow 的語法。</p>\n<h2 id=\"overflow\"><a href=\"#overflow\" class=\"headerlink\" title=\"overflow\"></a>overflow</h2><p>之前過用 <code>overflow:hidden;</code> 是用<a href=\"https://medium.com/@smallmoney1224/%E5%BE%9E0%E9%96%8B%E5%A7%8B%E8%A4%87%E7%BF%92-html-css-javascript-%E5%9C%96%E7%89%87%E5%8F%96%E4%BB%A3%E6%96%87%E5%AD%97-with-h1-logo-be56c85159a4\" target=\"_blank\" rel=\"noopener\">圖片取代文字</a>而已…</p>\n<p>透過這次專案稍微研究一下 overflow 相關資料，才知道有以下屬性：</p>\n<p>overflow 屬性用來定義元素超過某個範圍的時候該如何呈現，例如圖片超過預設區域的大小、文字長度超出原本的範圍等，這時候可以透過 CSS overflow 屬性來制定該區塊是否顯示 scrollbar（卷軸）或者是否要隱藏該元素。</p>\n<ul>\n<li><p><code>overflow: auto;</code> 預設會自動使用 x, y 捲軸</p>\n<ul>\n<li>overflow-x 產生 X 軸。</li>\n<li>overflew-y 產生 Y 軸。</li>\n</ul>\n</li>\n<li><p><code>overflow:visible;</code> 顯示的文字或圖片會直接超出範圍，不使用捲軸。</p>\n</li>\n<li><p><code>overflow:hidden;</code> 自動隱藏超出的文字或圖片。</p>\n</li>\n<li><p><code>overflow:scroll;</code> 自動產生捲軸。</p>\n</li>\n<li><p><code>overflow:inherit;</code> 繼承自父元素的可見性</p>\n</li>\n</ul>\n<p>這次要做的專案就是在特定範圍高度內要產生一個 scroll 捲軸，但在嘗試的時候發現以下幾件事情：</p>\n<ol>\n<li>一定要寫在<code>&lt;div&gt;</code> 上，不是寫在 <code>&lt;table&gt;</code> 上。</li>\n<li>要限制高度，資料超過就會自動產生 scroll，但有些版面不會。</li>\n</ol>\n<p>例如畫面類似這樣的樣式：</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/overflow-01.png?alt=media&token=7ed8d6b1-24f8-4cb9-8670-c3f3e911c1ad\" alt=\"sample\"></p>\n<p><strong>HTML</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"wrap\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"topbox\"</span>&gt;</span></span><br><span class=\"line\">    this is header</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"boxBottom\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"boxLeft\"</span>&gt;</span></span><br><span class=\"line\">      // overflow 要下在這一層</span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>...lorem...<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"boxRight\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">img</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">src</span>=<span class=\"string\">\"https://images.unsplash.com/photo-1558981806-ec527fa84c39?ixlib=rb-1.2.1&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;auto=format&amp;fit=crop&amp;w=1350&amp;q=80\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">alt</span>=<span class=\"string\">\"\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>overflow 下在這個地方 (因 CSS 有點長，只擷取片段程式碼)。</p>\n<p><strong>CSS</strong></p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.boxLeft</span> &#123;</span><br><span class=\"line\">  height: 400px; //限定高度</span><br><span class=\"line\">  overflow-y: auto; //自動產生 y 軸捲軸</span><br><span class=\"line\">  <span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">line-height</span>: <span class=\"number\">1.5</span>;</span><br><span class=\"line\">    <span class=\"attribute\">padding</span>: <span class=\"number\">1em</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>這樣就可以達到想要的效果了。</p>\n<p>可以把其他屬性複製起來，套用在 overflow 的地方，看一下效果!</p>\n<p>codepen <a href=\"https://codepen.io/hnzxewqw/pen/LYpYQRK\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/LYpYQRK</a></p>\n<h2 id=\"同場加映-修改-ScrollBar-樣式\"><a href=\"#同場加映-修改-ScrollBar-樣式\" class=\"headerlink\" title=\"同場加映 - 修改 ScrollBar 樣式\"></a>同場加映 - 修改 ScrollBar 樣式</h2><p><code>table</code> 表格若遇到很多資料，但版面有限時如何增加捲軸?</p>\n<p>目前有一個捲軸程式碼如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"wrap\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Our Family<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"tableGroup\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"style-3\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">thead</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>INDEX<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>NAME<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>JOB<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>OTHER<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">thead</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>01<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>Tim<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>F2E<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>null<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>02<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>Mary<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>HR<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>null<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>03<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>Mike<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>Sales<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>like eating<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>04<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>Joshua<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>Baby<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>Sleeping<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>05<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>Min<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>Teacher<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>Like drinking<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>06<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>Brandon<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>PM<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>Sport<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>可以看到共有六個項目，然後今天 PM 說：<strong>UI 設計稿上最多顯示四筆資料，目前資料超過四筆，請使用捲軸呈現。</strong></p>\n<p>這時用 CSS 就可以辦到此效果，上面有提到如何使用捲軸的方法，這邊就在 <code>table</code> 外面的 <code>div</code> 寫上找到的捲軸設定，一定要在 <code>div</code>，沒辦法放在 <code>table</code> 上。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"tableGroup\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"style-3\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\">    ---以下省略---</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>再把設定帶入 CSS 中，這邊我只修改顏色跟調整 scroll bar 的寬度，可以自行玩玩看。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\">//捲軸底色</span><br><span class=\"line\"><span class=\"selector-id\">#style-3</span><span class=\"selector-pseudo\">::-webkit-scrollbar-track</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">-webkit-box-shadow</span>: inset <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">6px</span> <span class=\"built_in\">rgba</span>(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0.3</span>);</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#ffc0cb</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">//捲軸寬度</span><br><span class=\"line\"><span class=\"selector-id\">#style-3</span><span class=\"selector-pseudo\">::-webkit-scrollbar</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">6px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: black;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">//捲軸本體顏色</span><br><span class=\"line\"><span class=\"selector-id\">#style-3</span><span class=\"selector-pseudo\">::-webkit-scrollbar-thumb</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#bb6573</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>Webkit 可以利用 CSS 修改 Scoll bar 的外觀，有試過其他瀏覽器是不行的，而有時候在使用局部範圍的 <code>overflow: auto</code>，會需要較為纖細的 scroll bar，如果不在意 webkit 以外的瀏覽器，可以試試看這個方法。</p>\n</blockquote>\n<p><strong>注意</strong><br>本範例只有 <code>Webkit</code> 瀏覽器有效，Chrome or Safari，如果要跨瀏覽器的 scrollbar，就建議使用 javascript 或是 jquery 了。</p>\n<p>Codepen: <a href=\"https://codepen.io/hnzxewqw/pen/XWmXpMB\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/XWmXpMB</a></p>\n<hr>\n<p>參考文章：</p>\n<p><a href=\"https://pjchender.github.io/2018/08/30/css-%E6%BB%91%E9%BC%A0%E9%81%B8%E8%BB%B8%E6%BB%BE%E5%8B%95-scroll/\" target=\"_blank\" rel=\"noopener\">[CSS] 滑鼠選軸滾動 scroll</a></p>\n<p><a href=\"https://www.wibibi.com/info.php?tid=157\" target=\"_blank\" rel=\"noopener\">CSS overflow 屬性用法</a></p>\n<p><a href=\"https://codepen.io/devstreak/pen/dMYgeO\" target=\"_blank\" rel=\"noopener\">捲軸改色</a></p>\n<p><a href=\"https://wcc723.github.io/css/2014/12/03/css-scrollbar/\" target=\"_blank\" rel=\"noopener\">Webkit 自定義 Scroll Bar 外觀</a></p>\n","categories":["CSS"],"tags":["CSS"]},{"title":"Vue 筆記 - 使用 vue CLI 建立 SPA 專案","url":"/vue-js/20200404/497821688/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/vueCli-00.png?alt=media&token=fbc73968-437f-40fb-9b00-34d8b2dd69fb\" alt=\"Vue CLI\"></p>\n<p>面對現在正流行的 SPA 專案，若要用原生碼或傳統作法也不是不行，就會變整個專案很大一包，而且程式碼冗長，開發與維護都相當不容易。透過 Vue CLI 建立一個專案，不僅方便快速，且因為 MVVM 的特性，在開發不僅可以專注於資料上，且維護也較為容易。</p>\n<h2 id=\"使用-Vue-CLI-建立專案\"><a href=\"#使用-Vue-CLI-建立專案\" class=\"headerlink\" title=\"使用 Vue CLI 建立專案\"></a>使用 Vue CLI 建立專案</h2><p>VueCLI: A simple CLI (command-line interface) for scaffolding Vue.js projects.<br>整合了 webpack、vue-loader 與其他周邊開發套件 如 Vuex / sass-loader 等的建構工具。</p>\n<h3 id=\"安裝\"><a href=\"#安裝\" class=\"headerlink\" title=\"安裝\"></a>安裝</h3><p>VueCLI 需要先安裝 npm 或 yarn，然後透過指令來進行安裝。</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm install -g @vue/cli</span><br></pre></td></tr></table></figure>\n\n<p>或</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">yarn global add @vue/cli</span><br></pre></td></tr></table></figure>\n\n<p>我個人是使用 npm 比較習慣，所以我就輸入 npm 指令進行安裝，安裝完畢後再輸入下方指令確認版本號。</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">vue -V</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>注意：-V 的 V 要大寫，不然會跳錯，目前版本號為 <code>@vue/cli 4.2.3</code></p>\n</blockquote>\n<h3 id=\"開啟專案\"><a href=\"#開啟專案\" class=\"headerlink\" title=\"開啟專案\"></a>開啟專案</h3><p>首先開啟命令列或終端機，輸入</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">vue create [專案名稱]</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>也就是 vue create newProject，括弧不用打</p>\n</blockquote>\n<p>或者已經在專案目錄中了，那就輸入</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">vue create .</span><br></pre></td></tr></table></figure>\n<p>cli 就會提示你是否直接在這個目錄中建立專案，選擇 y，並選擇手動建立專案 (Manually select features)，如下圖。</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/vueCli-01.png?alt=media&token=f6b99f3b-4dc2-474f-bdcd-eecb95900e6f\" alt=\"建立專案\"></p>\n<h3 id=\"選擇套件\"><a href=\"#選擇套件\" class=\"headerlink\" title=\"選擇套件\"></a>選擇套件</h3><h4 id=\"常用套件選擇\"><a href=\"#常用套件選擇\" class=\"headerlink\" title=\"常用套件選擇\"></a>常用套件選擇</h4><p>選 Babel、Vuex、CSS Pre-processors 以及 Linter / Formatter。</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/vueCli-02.png?alt=media&token=1a6f8eb0-9472-4c59-880a-8bcac07ec9e7\" alt=\"選擇套件\"></p>\n<h4 id=\"CSS-預處理器\"><a href=\"#CSS-預處理器\" class=\"headerlink\" title=\"CSS 預處理器\"></a>CSS 預處理器</h4><p>Sass / SCSS (with node-sass)</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/vueCli-03.png?alt=media&token=aad50ffc-e0ae-4d64-b3a0-d617c38dbb5c\" alt=\"CSS 預處理器\"></p>\n<h4 id=\"選擇規範\"><a href=\"#選擇規範\" class=\"headerlink\" title=\"選擇規範\"></a>選擇規範</h4><p>此範例我們選 SASS 與 ESLint + Airbnb config，當然也可以按照自己習慣調整。</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/vueCli-04.png?alt=media&token=250a1ec3-c6e0-4d67-9e3a-9a02be4c5de7\" alt=\"選擇規範\"></p>\n<blockquote>\n<p>開發若使用此功能，就會很容易陰部符合規範時一直跳錯，是滿煩的，但為了工作上的 coding style 其實還是有必要的。</p>\n</blockquote>\n<h4 id=\"Lint-存檔\"><a href=\"#Lint-存檔\" class=\"headerlink\" title=\"Lint 存檔\"></a>Lint 存檔</h4><p>只以這次為主。</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/vueCli-05.png?alt=media&token=dc9e47e0-f121-4bde-9e7a-7487cdcddc58\" alt=\"Lint\"></p>\n<h4 id=\"存檔在-package-json\"><a href=\"#存檔在-package-json\" class=\"headerlink\" title=\"存檔在 package.json\"></a>存檔在 package.json</h4><p>本次專案相關設定就會從這邊取出，如果要設定相關內容也從 package.json 修改，就可以讓整個專案吃到了，相當方便。</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/vueCli-06.png?alt=media&token=b65c1bb9-0ba2-4546-9656-842ad026b77a\" alt=\"package.json\"></p>\n<h4 id=\"不要儲存相關設定\"><a href=\"#不要儲存相關設定\" class=\"headerlink\" title=\"不要儲存相關設定\"></a>不要儲存相關設定</h4><p>最後會詢問，是否要儲存相關設定，在未來的專案使用，建議選擇 no，相關設定要看未來專案選擇。</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/vueCli-07.png?alt=media&token=0a20cd4f-972a-417f-b7ea-abe05544a006\" alt=\"請選擇不要\"></p>\n<p>選擇完畢後就會安裝所選擇的套件，這時就可以去倒杯水，回到座位看到下方畫面，代表完成了。</p>\n<h4 id=\"安裝完成\"><a href=\"#安裝完成\" class=\"headerlink\" title=\"安裝完成\"></a>安裝完成</h4><p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/vueCli-08.png?alt=media&token=7660ab32-fdbc-4251-a9f0-68613a6e6333\" alt=\"Vue CLI 安裝完成\"></p>\n<p>這時候按照上方條件輸入後就會跳出下方畫面</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/vueCli-09.png?alt=media&token=5d4e95e0-cc41-447d-814f-cf35444bb366\" alt=\"done\"></p>\n<p>打開瀏覽器輸入所得到的 localhost 的位址，若出現下方畫面，就是代表建立完成一個新的 SPA 專案囉!</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/vueCli-10.png?alt=media&token=75d77f86-2238-4812-8b57-3c542a8a9412\" alt=\"Vue SPA 專案建立完成\"></p>\n<h2 id=\"專案架構\"><a href=\"#專案架構\" class=\"headerlink\" title=\"專案架構\"></a>專案架構</h2><p>生成的專案架構大概會向下方這樣：</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/vueCli-11.png?alt=media&token=59c88031-8e83-489d-b540-37d43d0fca64\" alt=\"專案架構\"></p>\n<p>開發主要會動到的檔案，大多集中在 src 目錄，以及 public 裡的 index.html 。</p>\n<h2 id=\"Vue-的單一元件檔\"><a href=\"#Vue-的單一元件檔\" class=\"headerlink\" title=\"Vue 的單一元件檔\"></a>Vue 的單一元件檔</h2><p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/vueCli-12_%E5%B7%A5%E4%BD%9C%E5%8D%80%E5%9F%9F%201.png?alt=media&token=4238ffea-3f4a-47be-bb6a-2187c9466e8a\" alt=\"Vue 的單一元件檔\"></p>\n<p>一個獨立的 vue 檔案，也就是一個 component，通常會包含</p>\n<ul>\n<li>HTML</li>\n<li>JavaScript</li>\n<li>CSS</li>\n</ul>\n<p>這三個部分，分別由 <code>&lt;template&gt;</code>  、  <code>&lt;script&gt;</code>  與 <code>&lt;style&gt;</code> 這三個標籤來表示。</p>\n<p>而 <code>.vue</code> 檔案也可以透過 <code>import</code> 其他 <code>.vue</code>  檔案，來將其他 component 引入作為自己的子元件。</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/vueCli-13.png?alt=media&token=4a7a4db1-7697-41fa-b7b4-f30f0119eba2\" alt=\"components\"></p>\n","categories":["vue.js"],"tags":["vue.js","vue CLI"]},{"title":"JS 筆記 - ES6：使用 let 與 const 宣告變數","url":"/javascript/20200404/784099098/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/js-ES6.png?alt=media&token=0bf94bee-c7cd-4cc0-b619-45e5bf71d07b\" alt=\"ES6\"></p>\n<p><code>var</code>、<code>let</code>、<code>const</code> 都是宣告變數的方法，倘若沒有使用變數宣告，就會變成<strong>全域變數</strong>，那這些宣告的方法中，在作用域中的範圍是哪些，來記錄一下釐清觀念。</p>\n<h2 id=\"var-let-的作用域差異\"><a href=\"#var-let-的作用域差異\" class=\"headerlink\" title=\"var let 的作用域差異\"></a>var let 的作用域差異</h2><p>下方有一個範例，宣告後並透過一個<a href=\"https://developer.mozilla.org/zh-TW/docs/Glossary/IIFE\" target=\"_blank\" rel=\"noopener\">立即函式</a>來執行其內容，</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> mom = <span class=\"string\">'mary'</span>;</span><br><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">console</span>.log(<span class=\"string\">'mom'</span>) <span class=\"comment\">// mary</span></span><br><span class=\"line\">&#125;)();</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><strong>立即函式</strong>：IIFE (Immediately Invoked Function Expression) 是一個定義完馬上就執行的 JavaScript function。</p>\n</blockquote>\n<p>可知會得到 <code>mary</code> 這個值，把 <code>var</code> 換成 <code>let</code> 也會有一樣的結果。<br>但若把 <code>console.log</code> 複製一個並移到最上面，結果會如何呢?</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">'mom'</span>) <span class=\"comment\">//mom is not defined</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> mom = <span class=\"string\">'mary'</span>;</span><br><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">console</span>.log(<span class=\"string\">'mom'</span>) </span><br><span class=\"line\">&#125;)();</span><br></pre></td></tr></table></figure>\n\n<p>會直接跳錯，並顯示：<code>mom is not defined</code>，因為變數尚未定義，所以會找不到，但如果又把 <code>let</code> 換成 <code>var</code> 就會得到下方結果：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">'mom'</span>) <span class=\"comment\">//undefined</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> mom = <span class=\"string\">'mary'</span>;</span><br><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">console</span>.log(<span class=\"string\">'mom'</span>) <span class=\"comment\">// mary</span></span><br><span class=\"line\">&#125;)();</span><br></pre></td></tr></table></figure>\n<p>兩個都會被執行，不會跳錯，究竟 <code>not defined</code> 跟 <code>undefined</code> 的差別在哪裡呢? 這在開發時檢查會很常遇到，這邊紀錄一下。</p>\n<h3 id=\"undefined\"><a href=\"#undefined\" class=\"headerlink\" title=\"undefined\"></a>undefined</h3><p>記憶體已經準備好空間，但讀不到相關資料，之所以 <code>var</code> 可以抓到 <code>undefined</code>，是 <strong>Hoisting</strong> 向上提升的特性。</p>\n<blockquote>\n<p>Hoisting 向上提升：在變數與函數宣告時，會在編譯階段就被放入記憶體。</p>\n</blockquote>\n<h3 id=\"not-defined\"><a href=\"#not-defined\" class=\"headerlink\" title=\"not defined\"></a>not defined</h3><p>記憶體還沒有準備空間，所以沒辦法抓取資料到記憶體。</p>\n<p>為了<strong>避免汙染全域</strong>，現在都會建議使用 <code>let</code>。</p>\n<h2 id=\"var-與-let-的作用域\"><a href=\"#var-與-let-的作用域\" class=\"headerlink\" title=\"var 與 let 的作用域\"></a>var 與 let 的作用域</h2><p>透過下方 function 的範例，來了解，<code>var</code> 與 <code>let</code> 的作用域範圍。</p>\n<h3 id=\"var-的作用域範圍是-function-scope\"><a href=\"#var-的作用域範圍是-function-scope\" class=\"headerlink\" title=\"var 的作用域範圍是 function scope\"></a>var 的作用域範圍是 function scope</h3><p>若是在 function 內所宣告的 <code>var</code>，皆會被影響，若重複宣告變數的值，後宣告的變數內容會去<strong>覆蓋</strong>這個 function 內先前所宣告的變數內容。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">funA</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> name = <span class=\"string\">'小明'</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(<span class=\"literal\">true</span>)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> name = <span class=\"string\">'大明'</span>;\t</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log (name); <span class=\"comment\">// '大明'</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"let-的作用域範圍是-block\"><a href=\"#let-的作用域範圍是-block\" class=\"headerlink\" title=\"let 的作用域範圍是 block\"></a>let 的作用域範圍是 block</h3><p>若是在 function 內使用 <code>let</code> ，只會讀取該<strong>「大括號」</strong>的內變數內容。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">funA</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> name = <span class=\"string\">'小明'</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(<span class=\"literal\">true</span>)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> name = <span class=\"string\">'大明'</span>;\t</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log (name); <span class=\"comment\">// '小明'</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>由此可知，<code>var</code> 因為比較容易汙染到全域，所以使用 <code>let</code> 會比較容易管理 function 的內容。</p>\n<h2 id=\"var-與-let-經典的-for-迴圈範例\"><a href=\"#var-與-let-經典的-for-迴圈範例\" class=\"headerlink\" title=\"var 與 let 經典的 for 迴圈範例\"></a>var 與 let 經典的 for 迴圈範例</h2><p>此範例希望出現的是在 console 內顯示 「這是第幾次執行」的文字，並且 <code>i</code> 的內容會是 0~9，所以預期的結果應該如下：</p>\n<blockquote>\n<p>這是第0次執行<br>這是第1次執行<br>這是第2次執行<br>這是第3次執行<br>這是第4次執行<br>這是第5次執行<br>這是第6次執行<br>這是第7次執行<br>這是第8次執行<br>這是第9次執行</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++)&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(i);</span><br><span class=\"line\">  setTimeout (<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'這是第'</span>+i+<span class=\"string\">'次執行'</span>)</span><br><span class=\"line\">  &#125;,<span class=\"number\">10</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>可看到一個 for 迴圈裏面有一個非同步事件，並且這個 for 迴圈並沒有被 function 包住，是直接執行的，邏輯上 setTimeout 的位置應該在 for 迴圈之外，如下程式碼：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++)&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(i);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">setTimeout (<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123; <span class=\"comment\">//應該在 i 加總完之後，才在這裡執行</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'這是第'</span>+i+<span class=\"string\">'次執行'</span>)</span><br><span class=\"line\">\t&#125;,<span class=\"number\">10</span>);</span><br></pre></td></tr></table></figure>\n<p>透過第一範例知道這裡使用 <code>var</code> 宣告 <code>i</code> 的時候，此時 <code>i</code> 是全域變數，在 <code>console.log</code> 中輸入 window.i 時，會出現 10 的結果。所以 setTimeout 會執行的是全域變數底下的 <code>i</code>，並不會依序的執行，所以這並非預期出現的結果。</p>\n<p>但如果將 <code>var</code> 改成 <code>let</code>，作用域就會變成 block，就只會執行該大括號內的內容。所以就會得到預期的結果，並且在 console 中輸入 window.i 結果會出現 <code>undefined</code>。</p>\n<h2 id=\"const-的特性\"><a href=\"#const-的特性\" class=\"headerlink\" title=\"const 的特性\"></a>const 的特性</h2><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> a = <span class=\"number\">1</span>;</span><br><span class=\"line\">a = <span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a); <span class=\"comment\">//2</span></span><br></pre></td></tr></table></figure>\n<p>在開發人員工具，就會出現跳錯的訊息，</p>\n<p><code>Uncaught SyntaxError: Identifier &#39;a&#39; has already been declared</code></p>\n<p>所以只要是不能變更的資訊，就可以使用 <code>const</code> 來宣告。(例如 AJAX 中的 API 網址。)</p>\n<h3 id=\"但是-const-宣告的物件是可以修改內容的\"><a href=\"#但是-const-宣告的物件是可以修改內容的\" class=\"headerlink\" title=\"但是 const 宣告的物件是可以修改內容的\"></a>但是 const 宣告的物件是可以修改內容的</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> family = &#123;</span><br><span class=\"line\">  mom: <span class=\"string\">'媽媽'</span>,</span><br><span class=\"line\">\tson: <span class=\"string\">'兒子'</span>,</span><br><span class=\"line\">\tsister: <span class=\"string\">'妹妹'</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">family.dad = <span class=\"string\">'爸爸'</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(family); </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//就會得到 </span></span><br><span class=\"line\"><span class=\"comment\">//mom: \"媽媽\"</span></span><br><span class=\"line\"><span class=\"comment\">//son: \"兒子\"</span></span><br><span class=\"line\"><span class=\"comment\">//sister: \"妹妹\"</span></span><br><span class=\"line\"><span class=\"comment\">//dad: \"爸爸\"</span></span><br></pre></td></tr></table></figure>\n<p>因為 <code>const</code> 物件是傳參考，不是傳值，所以並非改變物件中的值，所以是可以的。<br>但如果把上方物件修改成： <code>family = {};</code><br>因為修改了值，就會跳錯。</p>\n<h2 id=\"心得\"><a href=\"#心得\" class=\"headerlink\" title=\"心得\"></a>心得</h2><p>了解 <code>var</code> 跟 <code>let</code> 作用域的概念以及 <code>const</code> 的特行，在使用 function 上，比較不會因為程式碼一多，就會搞亂。</p>\n","categories":["JavaScript"],"tags":["JavaScript","ES6"]},{"title":"JS 筆記 - Object 物件的基本認識","url":"/javascript/20200331/3067475316/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/JavaScript%20note-01.jpg?alt=media&token=7bee0261-72ac-4de4-9f5a-f39d58735b7d\" alt=\"JavaScript Note\"></p>\n<blockquote>\n<p>一個物件可以是個零至多種屬性的集合，而屬性是鍵 (key) 與值 (value) 之間的關聯。 一個屬性的「值」可以是某個基本型別，也可以是另一個物件，甚至可以是一個函數。<br>*引用 KURO 老師<a href=\"http://https://ithelp.ithome.com.tw/articles/10190962\" target=\"_blank\" rel=\"noopener\">這篇文章</a>對於物件的陳述</p>\n</blockquote>\n<hr>\n<h2 id=\"物件的寫法\"><a href=\"#物件的寫法\" class=\"headerlink\" title=\"物件的寫法\"></a>物件的寫法</h2><p>宣告一個變數 var ，<strong>自定義</strong>一個名稱，直接用一個<strong>大括號</strong> <code>{}</code> 的方式來建立物件，資料結尾要用逗號 <code>,</code> ，也是 JSON 格式的核心語法，寫法如下：</p>\n<p><code>var object ={};</code></p>\n<p>有點像寫 CSS 格式的感覺，用這個聯想就滿好記的。</p>\n<p><code>.header{};</code></p>\n<h3 id=\"在物件中加上屬性\"><a href=\"#在物件中加上屬性\" class=\"headerlink\" title=\"在物件中加上屬性\"></a>在物件中加上屬性</h3><p>在大括號裡面，會給物件一些內容，稱之為<strong>屬性</strong>跟<strong>值</strong>。<br>如果以一個家為例，家裡面有爸爸，名字叫做 Tim，那物件內容就會這樣寫：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> home =&#123;</span><br><span class=\"line\">  dad: <span class=\"string\">\"Tim\"</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>增加屬性內容要注意的地方是：給屬性一個<strong>自定義</strong>的名稱，加上<strong>冒號</strong> <code>：</code>，後面一樣要按照變數的資料型態來寫，字串要加上引號，數字則不用，多個物件內容要用<strong>逗點</strong> <code>,</code> ，但最後一個物件項目，無須逗點。如下方程式碼：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> home =&#123;</span><br><span class=\"line\">  dad: <span class=\"string\">\"Tim\"</span>,</span><br><span class=\"line\">  mom: <span class=\"string\">\"Min\"</span>,</span><br><span class=\"line\">  son: <span class=\"string\">\"Joshua\"</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h3 id=\"存取物件的屬性\"><a href=\"#存取物件的屬性\" class=\"headerlink\" title=\"存取物件的屬性\"></a>存取物件的屬性</h3><p>物件本身不會被執行，要把物件中的屬性做<strong>存取的動作</strong>，才會被執行，假如要存取下方物件中的內容，要在物件名稱後加上點 <code>.</code>，才能取得屬性的值，程式碼可以這樣寫：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> home =&#123;</span><br><span class=\"line\">  dad: <span class=\"string\">\"Tim\"</span>,</span><br><span class=\"line\">  mom: <span class=\"string\">\"Min\"</span>,</span><br><span class=\"line\">  son: [<span class=\"string\">\"Joshua\"</span>,<span class=\"string\">\"John\"</span>],</span><br><span class=\"line\">  chair:<span class=\"number\">4</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">home.dad; <span class=\"comment\">//會得到 Tim 這個結果</span></span><br><span class=\"line\">home.son[<span class=\"number\">0</span>] <span class=\"comment\">//會得到 Joshua 這個結果</span></span><br></pre></td></tr></table></figure>\n\n<p>白話文：</p>\n<ol>\n<li>在 home 的物件中，找到 dad 屬性中裡面的值，所以結果會得到 Tim。</li>\n<li>在 home 的物件中，找到 son 陣列裡的第一個值，所以結果會得到 Joshua。</li>\n</ol>\n<hr>\n<h3 id=\"新增物件屬性\"><a href=\"#新增物件屬性\" class=\"headerlink\" title=\"新增物件屬性\"></a>新增物件屬性</h3><p>如果要在物件外，直接新增屬性到物件內的話，可以這樣寫：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> home =&#123;</span><br><span class=\"line\">  dad: <span class=\"string\">\"Tim\"</span>,</span><br><span class=\"line\">  mom: <span class=\"string\">\"Min\"</span>,</span><br><span class=\"line\">  son: [<span class=\"string\">\"Joshua\"</span>,<span class=\"string\">\"John\"</span>],</span><br><span class=\"line\">  chair:<span class=\"number\">4</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">home.dog = <span class=\"number\">1</span>; <span class=\"comment\">//增加屬性 dog，值為 1 的內容到物件內</span></span><br><span class=\"line\">home.dog; <span class=\"comment\">//存取值就會得到 1</span></span><br></pre></td></tr></table></figure>\n\n<hr>\n<h3 id=\"刪除物件屬性\"><a href=\"#刪除物件屬性\" class=\"headerlink\" title=\"刪除物件屬性\"></a>刪除物件屬性</h3><p>如果要在物件外，直接刪除物件內屬性，可以這樣寫：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> home =&#123;</span><br><span class=\"line\">  dad: <span class=\"string\">\"Tim\"</span>,</span><br><span class=\"line\">  mom: <span class=\"string\">\"Min\"</span>,</span><br><span class=\"line\">  son: [<span class=\"string\">\"Joshua\"</span>,<span class=\"string\">\"John\"</span>],</span><br><span class=\"line\">  chair:<span class=\"number\">4</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">home.dog = <span class=\"number\">1</span>; <span class=\"comment\">//增加屬性 dog，值為 1 的內容到物件內</span></span><br><span class=\"line\">home.dog; <span class=\"comment\">//存取值就會得到 1</span></span><br><span class=\"line\"><span class=\"keyword\">delete</span> home.dog; <span class=\"comment\">//刪除物件 home 裡面的屬性 dog</span></span><br><span class=\"line\">home.dog; <span class=\"comment\">//存取值會得到 undefined</span></span><br></pre></td></tr></table></figure>\n\n<p><em>其實滿直覺的</em></p>\n<p>參考文章 <a href=\"https://ithelp.ithome.com.tw/articles/10190962\" target=\"_blank\" rel=\"noopener\">https://ithelp.ithome.com.tw/articles/10190962</a></p>\n","categories":["JavaScript"],"tags":["JavaScript"]},{"title":"jQuery 筆記 - Chart.js 基本使用","url":"/jQuery/20200327/3238077972/","content":"<p><img src=\"https://images.unsplash.com/photo-1460925895917-afdab827c52f?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2004&q=80\" alt=\"chart.js\"></p>\n<h2 id=\"Chart-js-簡介\"><a href=\"#Chart-js-簡介\" class=\"headerlink\" title=\"Chart.js 簡介\"></a>Chart.js 簡介</h2><p>Chart.js 是一款彈性很高的圖表 JavaScript library，支援八種常見的統計圖表類型，夠將圖表混合在一起使用，也支援動畫的效果，讓我們製作出來的圖表更加精美！Chart.js 可以與 ES6 模塊，純 JavaScript 和模塊加載器一起使用。</p>\n<h2 id=\"載入-chart-js\"><a href=\"#載入-chart-js\" class=\"headerlink\" title=\"載入 chart.js\"></a>載入 chart.js</h2><p>您可以從 <a href=\"https://github.com/chartjs/Chart.js/releases/tag/v2.9.3\" target=\"_blank\" rel=\"noopener\">GitHub</a> 版本下載最新版本的 Chart.js  或使用 <a href=\"https://cdnjs.com/libraries/Chart.js/\" target=\"_blank\" rel=\"noopener\">Chart.js CDN</a>。</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;script src=\"https://cdnjs.cloudflare.com/ajax/libs/Chart.js/<span class=\"number\">2</span>.<span class=\"number\">9</span>.<span class=\"number\">3</span>/Chart.min.js\"&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<p>要把這一段加在 <code>&lt;head&gt;</code> 標籤中，不然會讀取不到資料，記得也要加入 js 的 <code>&lt;script&gt;</code> 標籤。</p>\n<blockquote>\n<p>因會不定期更新，最新版本請見官網。</p>\n</blockquote>\n<h2 id=\"用法\"><a href=\"#用法\" class=\"headerlink\" title=\"用法\"></a>用法</h2><p>把圖表放在 html 中的位置中，並且要用 <code>&lt;canvas&gt;</code> 標籤包住。如下方程式碼。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">canvas</span> <span class=\"attr\">id</span>=<span class=\"string\">\"chart-area\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">canvas</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>可用 CSS 或是直接在 <code>&lt;canvas&gt;</code> 中加入寬度與高度的設定，但我個人習慣用 CSS 獨立管理，這裡便不贅述。</p>\n<h3 id=\"綁定-id\"><a href=\"#綁定-id\" class=\"headerlink\" title=\"綁定 id\"></a>綁定 id</h3><p>提供四種綁定方式，任擇一即可。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> ctx = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'myChart'</span>);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> ctx = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'myChart'</span>).getContext(<span class=\"string\">'2d'</span>);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> ctx = $(<span class=\"string\">'#myChart'</span>);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> ctx = <span class=\"string\">'myChart'</span>;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"設定自己的圖表\"><a href=\"#設定自己的圖表\" class=\"headerlink\" title=\"設定自己的圖表\"></a>設定自己的圖表</h3><p>放入了位置與綁定了元素，就可以開始定義或創建自己的圖表類型了！以下為官網範例的條形圖，該條形圖顯示了不同顏色的數值表，y 軸從 0 開始。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> ctx = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'myChart'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> myChart = <span class=\"keyword\">new</span> Chart(ctx, &#123;</span><br><span class=\"line\">  type: <span class=\"string\">'bar'</span>, <span class=\"comment\">//圖表類型</span></span><br><span class=\"line\">  data: &#123;</span><br><span class=\"line\">    <span class=\"comment\">//標題</span></span><br><span class=\"line\">    labels: [<span class=\"string\">'Red'</span>, <span class=\"string\">'Blue'</span>, <span class=\"string\">'Yellow'</span>, <span class=\"string\">'Green'</span>, <span class=\"string\">'Purple'</span>, <span class=\"string\">'Orange'</span>],</span><br><span class=\"line\">    datasets: [&#123;</span><br><span class=\"line\">      label: <span class=\"string\">'# test'</span>, <span class=\"comment\">//標籤</span></span><br><span class=\"line\">      data: [<span class=\"number\">12</span>, <span class=\"number\">19</span>, <span class=\"number\">3</span>, <span class=\"number\">5</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>], <span class=\"comment\">//資料</span></span><br><span class=\"line\">      <span class=\"comment\">//圖表背景色</span></span><br><span class=\"line\">      backgroundColor: [</span><br><span class=\"line\">        <span class=\"string\">'rgba(255, 99, 132, 0.2)'</span>,</span><br><span class=\"line\">        <span class=\"string\">'rgba(54, 162, 235, 0.2)'</span>,</span><br><span class=\"line\">        <span class=\"string\">'rgba(255, 206, 86, 0.2)'</span>,</span><br><span class=\"line\">        <span class=\"string\">'rgba(75, 192, 192, 0.2)'</span>,</span><br><span class=\"line\">        <span class=\"string\">'rgba(153, 102, 255, 0.2)'</span>,</span><br><span class=\"line\">        <span class=\"string\">'rgba(255, 159, 64, 0.2)'</span></span><br><span class=\"line\">      ],</span><br><span class=\"line\">      <span class=\"comment\">//圖表外框線色</span></span><br><span class=\"line\">      borderColor: [</span><br><span class=\"line\">        <span class=\"string\">'rgba(255, 99, 132, 1)'</span>,</span><br><span class=\"line\">        <span class=\"string\">'rgba(54, 162, 235, 1)'</span>,</span><br><span class=\"line\">        <span class=\"string\">'rgba(255, 206, 86, 1)'</span>,</span><br><span class=\"line\">        <span class=\"string\">'rgba(75, 192, 192, 1)'</span>,</span><br><span class=\"line\">        <span class=\"string\">'rgba(153, 102, 255, 1)'</span>,</span><br><span class=\"line\">        <span class=\"string\">'rgba(255, 159, 64, 1)'</span></span><br><span class=\"line\">      ],</span><br><span class=\"line\">      <span class=\"comment\">//外框線寬度</span></span><br><span class=\"line\">      borderWidth: <span class=\"number\">1</span></span><br><span class=\"line\">    &#125;]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  options: &#123;</span><br><span class=\"line\">    scales: &#123;</span><br><span class=\"line\">      yAxes: [&#123;</span><br><span class=\"line\">        ticks: &#123;</span><br><span class=\"line\">          beginAtZero: <span class=\"literal\">true</span>,</span><br><span class=\"line\">          responsive: <span class=\"literal\">true</span> <span class=\"comment\">//符合響應式</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>codepen <a href=\"https://codepen.io/hnzxewqw/pen/LYVMNPX\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/LYVMNPX</a></p>\n<h2 id=\"結合兩個圖表使用\"><a href=\"#結合兩個圖表使用\" class=\"headerlink\" title=\"結合兩個圖表使用\"></a>結合兩個圖表使用</h2><p>Chart.js 也支援<a href=\"https://www.chartjs.org/docs/latest/charts/mixed.html\" target=\"_blank\" rel=\"noopener\">混合類型的圖表</a>，能夠將多個 bar chart 跟多個 line chart 放在一起比較；最外層的圖表類型必須設定為 bar，接著在 dataset 的第一個物件後，加上第二個物件，即可插入第二個圖表，例如以下程式碼：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">datasets: [&#123;</span><br><span class=\"line\">     label: <span class=\"string\">'test01'</span>, <span class=\"comment\">//標籤</span></span><br><span class=\"line\">     data: [<span class=\"number\">12</span>, <span class=\"number\">19</span>, <span class=\"number\">3</span>, <span class=\"number\">5</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>], <span class=\"comment\">//資料</span></span><br><span class=\"line\">     <span class=\"comment\">//圖表背景色</span></span><br><span class=\"line\">     backgroundColor: [</span><br><span class=\"line\">       <span class=\"string\">'rgba(255, 99, 132, 0.5)'</span>,</span><br><span class=\"line\">       <span class=\"string\">'rgba(54, 162, 235, 0.5)'</span>,</span><br><span class=\"line\">       <span class=\"string\">'rgba(255, 206, 86, 0.5)'</span>,</span><br><span class=\"line\">       <span class=\"string\">'rgba(75, 192, 192, 0.5)'</span>,</span><br><span class=\"line\">       <span class=\"string\">'rgba(153, 102, 255, 0.5)'</span>,</span><br><span class=\"line\">       <span class=\"string\">'rgba(255, 159, 64, 0.5)'</span></span><br><span class=\"line\">     ],</span><br><span class=\"line\">     <span class=\"comment\">//圖表外框線色</span></span><br><span class=\"line\">     borderColor: [</span><br><span class=\"line\">       <span class=\"string\">'rgba(255, 99, 132, 1)'</span>,</span><br><span class=\"line\">       <span class=\"string\">'rgba(54, 162, 235, 1)'</span>,</span><br><span class=\"line\">       <span class=\"string\">'rgba(255, 206, 86, 1)'</span>,</span><br><span class=\"line\">       <span class=\"string\">'rgba(75, 192, 192, 1)'</span>,</span><br><span class=\"line\">       <span class=\"string\">'rgba(153, 102, 255, 1)'</span>,</span><br><span class=\"line\">       <span class=\"string\">'rgba(255, 159, 64, 1)'</span></span><br><span class=\"line\">     ],</span><br><span class=\"line\">     <span class=\"comment\">//外框線寬度</span></span><br><span class=\"line\">     borderWidth: <span class=\"number\">1</span>, <span class=\"comment\">//從這裡開始加第二筆物件資料</span></span><br><span class=\"line\">   &#125;, &#123;</span><br><span class=\"line\">     type: <span class=\"string\">'line'</span>,</span><br><span class=\"line\">     label: <span class=\"string\">'test02'</span>,</span><br><span class=\"line\">     data: [<span class=\"number\">12</span>, <span class=\"number\">19</span>, <span class=\"number\">3</span>, <span class=\"number\">5</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>],</span><br><span class=\"line\">     borderColor: <span class=\"string\">'rgba(255, 99, 132, 1)'</span>,</span><br><span class=\"line\">     backgroundColor:<span class=\"string\">'rgba(255, 255, 255, 1)'</span></span><br><span class=\"line\">   &#125;]</span><br><span class=\"line\"> &#125;,</span><br></pre></td></tr></table></figure>\n\n<p>codepen <a href=\"https://codepen.io/hnzxewqw/pen/PoqXNYw\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/PoqXNYw</a></p>\n<h2 id=\"相關選項註記\"><a href=\"#相關選項註記\" class=\"headerlink\" title=\"相關選項註記\"></a>相關選項註記</h2><p><a href=\"https://www.chartjs.org/docs/latest/general/\" target=\"_blank\" rel=\"noopener\">常規配置</a></p>\n<p>這些部分描述了可在文檔中其他位置應用的常規配置選項。</p>\n<ul>\n<li><strong>響應式</strong>定義適用於所有圖表的響應式圖表選項。</li>\n<li><strong>設備像素比率</strong>定義顯示像素與渲染像素之間的比率。</li>\n<li><strong>交互</strong>定義了反映懸停圖表元素如何工作的選項。</li>\n<li><strong>選項</strong>可腳本化和可索引的選項語法。</li>\n<li><strong>顏色</strong>定義可接受的顏色值。</li>\n<li><strong>字體</strong>定義各種字體選項。</li>\n<li><strong>性能</strong>為需要效能的應用程式給予提示。</li>\n</ul>\n<blockquote>\n<p>若有翻譯不好的地方還請指教。</p>\n</blockquote>\n<h2 id=\"心得\"><a href=\"#心得\" class=\"headerlink\" title=\"心得\"></a>心得</h2><p><code>datasets</code> 呈現的是 JSON 格式資料，所以對於陣列與物件的用法也要熟悉，在插入資料時比較不會搞混。</p>\n<p>參考資料</p>\n<p><a href=\"https://www.chartjs.org/docs/latest/\" target=\"_blank\" rel=\"noopener\">chart.js 官網</a></p>\n<p><a href=\"https://ithelp.ithome.com.tw/articles/10194425\" target=\"_blank\" rel=\"noopener\">十分鐘學習 Chart.js - 圖表繪製</a></p>\n<p><a href=\"https://dotblogs.com.tw/wellwind/2016/12/30/front-end-chart-js\" target=\"_blank\" rel=\"noopener\">Chart.js - 輕鬆完成資料視覺化</a></p>\n","categories":["jQuery"],"tags":["JavaScript","jQuery"]},{"title":"jQuery 筆記 - jQuery 基本認識","url":"/jQuery/20200326/177388252/","content":"<p><img src=\"https://images.unsplash.com/photo-1525651561332-f1382d2bb6c4?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1350&q=80\" alt=\"jquery\"></p>\n<h2 id=\"簡介\"><a href=\"#簡介\" class=\"headerlink\" title=\"簡介\"></a>簡介</h2><p>jQuery 是一套跨瀏覽器的 JavaScript 函式庫，簡化 HTML 與 JavaScript 之間的操作。由約翰·雷西格（John Resig）在 2006 年 1 月的 BarCamp NYC 上釋出第一個版本。目前是由 Dave Methvin 領導的開發團隊進行開發。全球前 10,000 個存取最高的網站中，有 65% 使用了 jQuery，是目前最受歡迎的 JavaScript 函式庫。</p>\n<h2 id=\"特色\"><a href=\"#特色\" class=\"headerlink\" title=\"特色\"></a>特色</h2><p>jQuery有下列特色：</p>\n<ul>\n<li>使用多瀏覽器開源選擇器引擎 Sizzle（jQuery 專案的衍生產品）進行 DOM 元素選擇。</li>\n<li>基於 CSS 選擇器的 DOM 操作，使用元素的名稱和屬性（如 id 和 class）作為選擇 DOM 中節點的條件。</li>\n<li>事件。</li>\n<li>特效和動畫。</li>\n<li>Ajax。</li>\n<li>Deferred 和 Promise 物件來控制非同步處理。</li>\n<li>JSON 解析。</li>\n<li>通過外掛程式擴充。</li>\n<li>工具函式，如特徵檢測。</li>\n<li>現代瀏覽器中原生的相容性方法，但對於舊版瀏覽器需要後備（fallback）方法，比如 <code>inArray()</code> 和 <code>each()</code>。</li>\n<li>多瀏覽器（不要與跨瀏覽器混淆）支援。</li>\n</ul>\n<h2 id=\"載入-jQuery\"><a href=\"#載入-jQuery\" class=\"headerlink\" title=\"載入 jQuery\"></a>載入 jQuery</h2><p><a href=\"https://jquery.com/download/\" target=\"_blank\" rel=\"noopener\">官網</a><br><a href=\"https://cdnjs.com/libraries/jquery\" target=\"_blank\" rel=\"noopener\">cdn</a>，或複製下方網址匯入 script 標籤。(目前最新版本)。</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">https://<span class=\"title\">cdnjs.cloudflare.com</span>/<span class=\"title\">ajax</span>/<span class=\"title\">libs</span>/<span class=\"title\">jquery</span>/3.4.1/<span class=\"title\">jquery.min.js</span></span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"使用-jQuery-函式\"><a href=\"#使用-jQuery-函式\" class=\"headerlink\" title=\"使用 jQuery 函式\"></a>使用 jQuery 函式</h2><p>有別於原生 JavaScript 要寫落落長的程式碼。起手式很容易，可以這樣寫：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">$(<span class=\"built_in\">document</span>).ready(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">//要執行的內容</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>或是，</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">$(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">//要執行的內容</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>目前比較推薦這個寫法。</p>\n</blockquote>\n<h2 id=\"子專案\"><a href=\"#子專案\" class=\"headerlink\" title=\"子專案\"></a>子專案</h2><blockquote>\n<p>以下專案均是源自於Interface外掛程式</p>\n</blockquote>\n<h3 id=\"jQuery-UI\"><a href=\"#jQuery-UI\" class=\"headerlink\" title=\"jQuery UI\"></a>jQuery UI</h3><p>更多資訊：<a href=\"https://jqueryui.com/\" target=\"_blank\" rel=\"noopener\">jQuery UI</a><br>基於jQuery的使用者介面庫，包括拖放、縮放、對話方塊、標籤頁等多個組件。</p>\n<h3 id=\"jQuery-Tools\"><a href=\"#jQuery-Tools\" class=\"headerlink\" title=\"jQuery Tools\"></a>jQuery Tools</h3><p>jQuery Tools 是一個第三方的套件，基於 jQuery。包括了標籤頁、表單驗證、滑鼠滾輪事件等多個組件。</p>\n<h3 id=\"jQuery-Mobile\"><a href=\"#jQuery-Mobile\" class=\"headerlink\" title=\"jQuery Mobile\"></a>jQuery Mobile</h3><p>基於 jQuery 的手機網頁製作工具，jQuery Mobile 的網站上包含了網頁的設計工具、主題設計工具。另外 jQuery Mobile 的 js 外掛程式包含了換頁、事件等的多項功能。</p>\n<p>文章參考 <a href=\"https://zh.wikipedia.org/wiki/JQuery_UI\" target=\"_blank\" rel=\"noopener\">https://zh.wikipedia.org/wiki/JQuery_UI</a></p>\n","categories":["jQuery"],"tags":["JavaScript","jQuery"]},{"title":"jQuery 筆記 - 使用 select 選取 option 的資料，並同步渲染於網頁","url":"/javascript/20200325/2975558676/","content":"<p><img src=\"https://images.unsplash.com/photo-1583361426589-e04f4a812dd5?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1489&q=80\" alt=\"select\"></p>\n<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>主要紀錄這次工作上遇到的狀況，一開始想得太複雜了，但還好今天有解決，但在網路上找不到合適的筆記與範例，就把這個狀況記錄下來當作筆記。</p>\n<h2 id=\"狀況\"><a href=\"#狀況\" class=\"headerlink\" title=\"狀況\"></a>狀況</h2><p>要使用 <code>select</code> 當中有數個 <code>option</code>，當選擇到該 <code>option</code> 時，對應的資料要做呈現於網頁上，所以會有以下資訊：</p>\n<ul>\n<li><code>select</code>，<code>option</code> 標籤。</li>\n<li>要呈現的資料。</li>\n<li>使用 jQuery 控制，所以會使用 <code>change</code> 事件。</li>\n</ul>\n<h2 id=\"解法-1\"><a href=\"#解法-1\" class=\"headerlink\" title=\"解法 1\"></a>解法 1</h2><p>我第一個想法是使用 <code>select</code> + <code>option</code> 來製作下拉選單，另外資料我是使用在選單下方呈現，所以程式碼會長這樣。</p>\n<h3 id=\"HTML\"><a href=\"#HTML\" class=\"headerlink\" title=\"HTML\"></a>HTML</h3><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"wrap\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">name</span>=<span class=\"string\">\"s01\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"s01\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"0\"</span>&gt;</span>--請選擇--<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"1\"</span>&gt;</span>1<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"2\"</span>&gt;</span>2<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"show\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"show01\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">img</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">src</span>=<span class=\"string\">\"https://images.unsplash.com/photo-1552728089-57bdde30beb3?ixlib=rb-1.2.1&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;auto=format&amp;fit=crop&amp;w=667&amp;q=80\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">alt</span>=<span class=\"string\">\"\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"show02\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">        一定會天氣，書記出來天空並不據說破解一對只是，註冊時間三星檢驗事故正確實用是個激情之後我家植物一半一下子，整理大聲過去通過回事一句危機調查理想股份有限公司，中港路實驗審核暴力網頁課程，圖文之下先進教育否則，注意蔬菜信用，日月潭提供打擊奇蹟其他衣服能夠，請。</span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>這邊都算簡單，重點來了，我該怎麼讓資料在還沒選取到的時候先不要顯示呢?<br>我第一時間想到的是用 <code>display:none;</code>，結果後來就寫不下去了，後來受不了，趕緊請教資深工程師，很快速的點醒我的思路，原來是我想得太複雜，卻忘記了 <strong>JS 只能一次做一件事情的特性</strong>。</p>\n<p>很重要所以說三次：</p>\n<blockquote>\n<ul>\n<li>JS 只能一次做一件事情！</li>\n<li>JS 只能一次做一件事情！</li>\n<li>JS 只能一次做一件事情！</li>\n</ul>\n</blockquote>\n<h3 id=\"JavaScript\"><a href=\"#JavaScript\" class=\"headerlink\" title=\"JavaScript\"></a>JavaScript</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">$(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">//一開始所有資料都隱藏</span></span><br><span class=\"line\">  $(<span class=\"string\">\".show01\"</span>).hide(); <span class=\"comment\">//第一個資料隱藏</span></span><br><span class=\"line\">  $(<span class=\"string\">\".show02\"</span>).hide(); <span class=\"comment\">//第二個資料隱藏</span></span><br><span class=\"line\">  $(<span class=\"string\">\"#s01\"</span>).change(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">val</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//因為是 select 所以綁定 change 事件</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> ($(<span class=\"string\">\"#s01\"</span>).val() === <span class=\"string\">\"1\"</span>) &#123;</span><br><span class=\"line\">      <span class=\"comment\">//當 select 中 option 的值等於 1 時</span></span><br><span class=\"line\">      $(<span class=\"string\">\".show01\"</span>).show(); <span class=\"comment\">//第一個資料顯示</span></span><br><span class=\"line\">      $(<span class=\"string\">\".show02\"</span>).hide(); <span class=\"comment\">//第二個資料隱藏</span></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> ($(<span class=\"string\">\"#s01\"</span>).val() === <span class=\"string\">\"2\"</span>) &#123;</span><br><span class=\"line\">      <span class=\"comment\">//當 select 中 option 的值等於 2 時</span></span><br><span class=\"line\">      $(<span class=\"string\">\".show02\"</span>).show(); <span class=\"comment\">//第二個資料顯示</span></span><br><span class=\"line\">      $(<span class=\"string\">\".show01\"</span>).hide(); <span class=\"comment\">//第一個資料隱藏</span></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">//否則兩筆都隱藏</span></span><br><span class=\"line\">      $(<span class=\"string\">\".show01\"</span>).hide();</span><br><span class=\"line\">      $(<span class=\"string\">\".show02\"</span>).hide();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>附上 codepen: <a href=\"https://codepen.io/hnzxewqw/pen/ZEGmEVW\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/ZEGmEVW</a></p>\n<h2 id=\"解法-2\"><a href=\"#解法-2\" class=\"headerlink\" title=\"解法 2\"></a>解法 2</h2><p>透過 CSS 新增 <code>.active</code>，再透過 jQuery 來動態控制 CSS，並且把 <code>if</code> 判斷是改成 <code>switch</code>，因為這樣在效能上可以提高！</p>\n<p>HTML 不變， CSS 更動成下方所示：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.show01</span>,</span><br><span class=\"line\"><span class=\"selector-class\">.show02</span> &#123;</span><br><span class=\"line\">  display: none; //預設不顯示。</span><br><span class=\"line\">  &amp;<span class=\"selector-class\">.active</span> &#123;</span><br><span class=\"line\">    display: block; //動態新增 .active 用 jQuery 控制顯示出來。</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>因為透過 <code>if</code>、<code>else if</code> 判斷式很吃效能，目前範例只有兩個，倘若有 20 筆，可能會寫到崩潰，所以這邊也學到，資料少可以用 <code>if</code>，但資料多要使用 <code>switch</code>，這要具備的思維跟觀念！</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">$(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  $(<span class=\"string\">\"#s01\"</span>).change(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">switch</span> (</span><br><span class=\"line\">      $(<span class=\"keyword\">this</span>).val() <span class=\"comment\">//指到 select 自己的選項。</span></span><br><span class=\"line\">    ) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">case</span> <span class=\"string\">\"0\"</span>: <span class=\"comment\">// 當選到 value 是 0 的時候，移除兩個 class。</span></span><br><span class=\"line\">        $(<span class=\"string\">\".show01\"</span>).removeClass(<span class=\"string\">\"active\"</span>);</span><br><span class=\"line\">        $(<span class=\"string\">\".show02\"</span>).removeClass(<span class=\"string\">\"active\"</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      <span class=\"keyword\">case</span> <span class=\"string\">\"1\"</span>: <span class=\"comment\">// 當選到 value 是 1 的時候，新增 .show01，移除 .show02。</span></span><br><span class=\"line\">        $(<span class=\"string\">\".show01\"</span>).addClass(<span class=\"string\">\"active\"</span>);</span><br><span class=\"line\">        $(<span class=\"string\">\".show02\"</span>).removeClass(<span class=\"string\">\"active\"</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      <span class=\"keyword\">case</span> <span class=\"string\">\"2\"</span>: <span class=\"comment\">// 當選到 value 是 2 的時候，新增 .show02，移除 .show01。</span></span><br><span class=\"line\">        $(<span class=\"string\">\".show02\"</span>).addClass(<span class=\"string\">\"active\"</span>);</span><br><span class=\"line\">        $(<span class=\"string\">\".show01\"</span>).removeClass(<span class=\"string\">\"active\"</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      <span class=\"keyword\">default</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>當資料讀取完，就把所有的結果都跑完了，很棒的方法呢!!</p>\n<h4 id=\"學長補充說明：\"><a href=\"#學長補充說明：\" class=\"headerlink\" title=\"學長補充說明：\"></a>學長補充說明：</h4><ul>\n<li><p>第一個是這種 <code>show</code> &amp; <code>hide</code> 可以用 CSS 處理就不要用 JS，例如在 <code>.show01</code> &amp; <code>.show02</code> CSS 可以先 <code>display: none;</code> 再設定一個 <code>active</code><br>class 處理 <code>display: block;</code> JS 的部分只要根據條件 <code>addClass</code> or <code>removeClass</code> 即可。這樣的好處是 browser 渲染會比較有效率，而且 jQuery 的 <code>show</code> &amp; <code>hide</code> 是直接寫 inline style 在 HTML tag 上面，權重有點過高。</p>\n</li>\n<li><p>第二是 JS 的 <code>if else</code> 可以嘗試用 <code>switch</code> 判斷會比較易讀一點。現在因為 <code>option</code> 只有兩個，到時候如果 <code>option</code> <strong>一多例如有 20 個，用 <code>if else</code> 會寫到脫窗，而且難以維護</strong>，最後是善用 <code>$(this)</code>。因為 change event 已經綁定 <code>$(&quot;#s01&quot;)</code> 了，所以 function 內要 target <code>$(&quot;#s01&quot;)</code>的話用<code>$(this)</code> 即可，這樣寫比較不容易出現不可預期的錯誤。</p>\n</li>\n</ul>\n<p>codepen: <a href=\"https://codepen.io/hnzxewqw/pen/YzXRerX\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/YzXRerX</a></p>\n","categories":["JavaScript"],"tags":["JavaScript","jQuery"]},{"title":"JS 筆記 - Array 陣列 的基本認識","url":"/javascript/20200323/233651811/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/JavaScript%20note-01.jpg?alt=media&token=7bee0261-72ac-4de4-9f5a-f39d58735b7d\" alt=\"JavaScript Note\"></p>\n<p>進入一個新的名稱，陣列 (Array) 與物件 (Object)，看到新名稱就心慌慌，但搞清楚後就有點豁然開朗，來記錄目前所學的這兩個新語法。</p>\n<h2 id=\"Array-陣列\"><a href=\"#Array-陣列\" class=\"headerlink\" title=\"Array 陣列\"></a>Array 陣列</h2><blockquote>\n<p>Array 原本的英文意思是數列，有興趣的可以去查字典或是 Google 看看。透過英文原本的意思，再回到程式來看，會比較知道為什麼要取這樣的名字，其實沿用原本英文的意義，這樣就會好懂些！</p>\n</blockquote>\n<blockquote>\n<p>陣列內可以是<strong>原始的資料類型</strong>、<strong>其他陣列</strong>、<strong>函式</strong>等等。 要注意的是，陣列是個<strong>有順序性的集合</strong>，且只能透過 <code>[]</code> 來存取。</p>\n</blockquote>\n<h3 id=\"一切從變數開始\"><a href=\"#一切從變數開始\" class=\"headerlink\" title=\"一切從變數開始\"></a>一切從變數開始</h3><p>JavaScript 的世界，是從<strong>變數</strong>開始，然後用 <code>console.log</code> 做驗證。所以在陣列的觀念中也是從變數延伸，但如果變數很多的時候，不可能把所有的變數都一股腦丟給對方，這樣收到一堆變數會很崩潰。所以陣列的出現就是將<strong>相同的變數</strong>集合成一個數列，於是陣列就這樣出現了，透過英文的意思來聯想會比較好記!。</p>\n<hr>\n<p>複習一下變數的寫法是，用 「var」 宣告變數，自定義「變數名稱」，給予變數的「值」，如下所示：</p>\n<p><code>var man = &quot;menName&quot;;</code></p>\n<p>但工作上不可能只有一排變數，如果以家庭為例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> father = <span class=\"string\">\"Tom\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> mother = <span class=\"string\">\"Mary\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> son = <span class=\"string\">\"John\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> daughter = <span class=\"string\">\"Linda\"</span>;</span><br></pre></td></tr></table></figure>\n\n<p>如上就有四個變數，但如果<strong>變數項目增加，但內容不同</strong>該怎麼辦? 像是有 4 張椅子，有紅色，有藍色，就會變下方這樣：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> father = <span class=\"string\">\"Tom\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> mother = <span class=\"string\">\"Mary\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> son = <span class=\"string\">\"John\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> daughter = <span class=\"string\">\"Linda\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> chair = <span class=\"number\">4</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> chair1 = <span class=\"string\">\"red\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> chair2 = <span class=\"string\">\"blue\"</span>;</span><br></pre></td></tr></table></figure>\n\n<p>這樣程式碼就變多了，如果要套很多資料，也不好撰寫，可能要寫好幾次，這時候就需要陣列。</p>\n<hr>\n<h3 id=\"陣列的寫法\"><a href=\"#陣列的寫法\" class=\"headerlink\" title=\"陣列的寫法\"></a>陣列的寫法</h3><p>一樣是用變數宣告，<strong>自定義</strong>陣列名稱，但陣列要用<strong>中括號</strong> <code>[]</code> 呈現，結束要用<strong>分號</strong> <code>;</code> 收尾，寫法如下：</p>\n<p><code>var array = [&quot;a&quot;];</code></p>\n<p>所以椅子有四張，有紅色，有藍色可以這樣寫成陣列，有<strong>相同的名稱</strong>，有<strong>不同的參數</strong>，要用<strong>逗號</strong> <code>,</code> 分開，呈現如下：</p>\n<p><code>var chair =[&quot;red&quot; , &quot;blue&quot;];</code></p>\n<hr>\n<h3 id=\"陣列的排序\"><a href=\"#陣列的排序\" class=\"headerlink\" title=\"陣列的排序\"></a>陣列的排序</h3><p>一般排序的邏輯會從 1 開始，但陣列的世界是從 0 開始，所以今天如果家裡有四個地方要增加桌子，就要增加四個變數，但這樣太多行了，如果使用陣列，並且知道哪個房間有幾張桌子，可以這樣寫，目前實務上也比較常見這樣的寫法，要抓取陣列資料會這樣寫：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> desk = [<span class=\"number\">4</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>];</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(desk[<span class=\"number\">0</span>]); <span class=\"comment\">// 因為排序第一是 4，所以結果會出現 4</span></span><br></pre></td></tr></table></figure>\n\n<p>以此類推，如果在 console 裡面的中括號，寫其他順序，會出現相對應的結果。</p>\n<p>也可以這樣寫：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> desk = [<span class=\"number\">4</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> desk1 = desk[<span class=\"number\">0</span>];</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(desk[<span class=\"number\">0</span>]); <span class=\"comment\">// 結果會出現 4</span></span><br></pre></td></tr></table></figure>\n\n<hr>\n<h3 id=\"length-長度\"><a href=\"#length-長度\" class=\"headerlink\" title=\"length 長度\"></a>length 長度</h3><p>要查陣列的資料長度可以使用 length 這個語法，英文原意也是長度的意思。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> desk = [<span class=\"number\">4</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> desk1 = desk[<span class=\"number\">0</span>];</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(desk[<span class=\"number\">0</span>]); <span class=\"comment\">// 結果會出現 4</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(desk.length); <span class=\"comment\">//結果會出現 4，代表有陣列的長度有四個</span></span><br></pre></td></tr></table></figure>\n\n<hr>\n<h3 id=\"push-增加陣列的語法\"><a href=\"#push-增加陣列的語法\" class=\"headerlink\" title=\".push 增加陣列的語法\"></a>.push 增加陣列的語法</h3><p>若想要在陣列外新增元素時，可以透過 <code>number.push()</code> 這個語法增加，_透過 <code>.</code> 代表要增加後面的屬性_：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> number = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>];</span><br><span class=\"line\">number.length; <span class=\"comment\">// 會顯示 3，指有三個陣列資料</span></span><br><span class=\"line\"></span><br><span class=\"line\">number.push(<span class=\"number\">4</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(number); <span class=\"comment\">// [1, 2, 3, 4] 新增第四個陣列資料</span></span><br></pre></td></tr></table></figure>\n\n<hr>\n<h3 id=\"splice-刪除陣列語法\"><a href=\"#splice-刪除陣列語法\" class=\"headerlink\" title=\".splice 刪除陣列語法\"></a>.splice 刪除陣列語法</h3><p>有增加就有刪除，可以透過 number.splice(起始位置,資料數量) 這個語法刪除:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> number = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>];</span><br><span class=\"line\">number.length; <span class=\"comment\">// 會顯示 3，指有三個陣列資料</span></span><br><span class=\"line\"></span><br><span class=\"line\">number.splice(<span class=\"number\">0</span>, <span class=\"number\">2</span>); <span class=\"comment\">//從第一筆資料刪除，刪除兩筆資料</span></span><br><span class=\"line\">number; <span class=\"comment\">// [3]</span></span><br></pre></td></tr></table></figure>\n\n<p>參考資料 <a href=\"https://ithelp.ithome.com.tw/articles/10190962\" target=\"_blank\" rel=\"noopener\">https://ithelp.ithome.com.tw/articles/10190962</a></p>\n","categories":["JavaScript"],"tags":["JavaScript"]},{"title":"Vue 筆記 - vue 的生命週期","url":"/vue-js/20200318/1480837360/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/vue_lifecycle_hooks.png?alt=media&token=9cde8325-aa24-4714-994a-f088b67d102c\" alt=\"vue lifecycle hooks\"></p>\n<h2 id=\"何謂生命週期\"><a href=\"#何謂生命週期\" class=\"headerlink\" title=\"何謂生命週期?\"></a>何謂生命週期?</h2><blockquote>\n<p><strong>官方文件說明：</strong></p>\n<p>每個 Vue 實例在被創建時都要經過一系列的初始化過程——例如，需要設置數據監聽、編譯模板、將實例掛載到 DOM 並在數據變化時更新 DOM 等。同時在這個過程中也會運行一些叫做生命週期鉤子(hook)的<strong>函數</strong>，這給了用戶在不同階段添加自己的代碼的機會。</p>\n</blockquote>\n<p>當宣告一個 vue 實體後，會開始進入生命週期，下方說明圖可以得知分成幾個部分：</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/lifecycle.png?alt=media&token=868328e3-92d1-4323-a80f-929beb4e2a9f\" alt=\"vue 官方生命週期圖片\"></p>\n<ul>\n<li><p><strong>beforecreate</strong><br>元件實體剛被建立，屬性計算之前。</p>\n</li>\n<li><p><strong>created</strong><br>元件實體已經建立，屬性也綁定了，但 DOM 還沒有生成。</p>\n</li>\n<li><p><strong>beforeMount</strong><br>模板編譯 (template)或掛載至 HTML 之前。</p>\n</li>\n<li><p><strong>mounted</strong><br>模板編譯 (template)或掛載至 HTML 之後。</p>\n</li>\n<li><p><strong>beforeUpdate</strong><br>元件 (element) 被更新前。</p>\n</li>\n<li><p><strong>updated</strong><br>元件 (element) 被更新後。</p>\n</li>\n<li><p><strong>activated</strong></p>\n</li>\n<li><p><em>keep-alived*</em> 用，元件被<strong>啟動</strong>時呼叫。</p>\n</li>\n<li><p><strong>deactivated</strong></p>\n</li>\n<li><p><em>keep-alived*</em> 用，元件被<strong>移除</strong>時呼叫。</p>\n</li>\n<li><p><strong>beforeDistroy</strong><br>元件被銷毀前呼叫。</p>\n</li>\n<li><p><strong>destroyed</strong><br>元件被銷毀後呼叫。</p>\n</li>\n</ul>\n<blockquote>\n<p>beforeDistroy，destroyed 較少使用。</p>\n</blockquote>\n<p>以上它們的資料型態全都是 function。</p>\n<h2 id=\"常用的生命週期狀態\"><a href=\"#常用的生命週期狀態\" class=\"headerlink\" title=\"常用的生命週期狀態\"></a>常用的生命週期狀態</h2><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">\tel: <span class=\"string\">'#app'</span>,</span><br><span class=\"line\">\tdata: &#123;</span><br><span class=\"line\">  <span class=\"comment\">//資料選項</span></span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\tbeforeCreate() &#123;</span><br><span class=\"line\">\t<span class=\"comment\">//實體初始化。</span></span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\tcreated() &#123;</span><br><span class=\"line\">\t<span class=\"comment\">//實體建立完成。資料 $data 已可取得，但 $el 屬性還未被建立。</span></span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\tbeforeMount() &#123;</span><br><span class=\"line\">\t<span class=\"comment\">//執行元素掛載之前。</span></span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\tmounted() &#123;</span><br><span class=\"line\">\t<span class=\"comment\">//元素已掛載， $el 被建立。</span></span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\tbeforeUpdate() &#123;</span><br><span class=\"line\">\t<span class=\"comment\">//當資料變化時被呼叫，還不會描繪 View。</span></span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\tupdated() &#123;</span><br><span class=\"line\">\t<span class=\"comment\">//DOM 的更新已經完成，View 被顯示在畫面上。</span></span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<p>參考資料:</p>\n<p><a href=\"https://cn.vuejs.org/v2/guide/instance.html#%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA-Vue-%E5%AE%9E%E4%BE%8B\" target=\"_blank\" rel=\"noopener\">vue 官網</a></p>\n<p><a href=\"http://blog.tonycube.com/2017/04/vuejs-8-lifecycle.html\" target=\"_blank\" rel=\"noopener\">Vue.js (8) - Vue 實體與生命週期</a></p>\n<p><a href=\"https://medium.com/pierceshih/vue-js-%E5%AD%B8%E7%BF%92%E7%AD%86%E8%A8%98-day14-vue%E7%94%9F%E5%91%BD%E9%80%B1%E6%9C%9F-65bc934dfd47\" target=\"_blank\" rel=\"noopener\">「Vue.js 學習筆記 Day14」- Vue生命週期</a></p>\n","categories":["vue.js"],"tags":["vue.js"]},{"title":"Vue 筆記 - Vue 的實體與特性","url":"/vue-js/20200318/2845412352/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/vue%20cover.png?alt=media&token=5f8b5aa0-eb3e-4d21-a715-07c5442dafbc\" alt=\"vue.js\"></p>\n<h2 id=\"Vue-的實體\"><a href=\"#Vue-的實體\" class=\"headerlink\" title=\"Vue 的實體\"></a>Vue 的實體</h2><p>Vue 的實體是透過 new 這個關鍵字來建立的。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> app = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  <span class=\"comment\">//實體屬性</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Vue-的起手式\"><a href=\"#Vue-的起手式\" class=\"headerlink\" title=\"Vue 的起手式\"></a>Vue 的起手式</h2><p>在 body 中的第一個 <code>&lt;div&gt;</code> 標籤中給一個 <code>id</code>，並且在實體中，先寫入一個 el (element 的意思)，會與 HTML 中 <code>id</code> 標籤名稱相同，下方給一個 <code>data</code> 的物件。</p>\n<blockquote>\n<p>注意：在實體屬性中，是物件的表示方式。</p>\n</blockquote>\n<p>所以起手式如下：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;div id=\"app\"&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  var vm = new Vue(&#123;</span><br><span class=\"line\"><span class=\"function\">    el:'#<span class=\"title\">app</span>',</span></span><br><span class=\"line\"><span class=\"function\">    <span class=\"title\">data</span>: &#123;</span></span><br><span class=\"line\"><span class=\"function\">      //資料內容</span></span><br><span class=\"line\"><span class=\"function\">    &#125;,</span></span><br><span class=\"line\"><span class=\"function\">  &#125;)</span></span><br><span class=\"line\"><span class=\"function\">&lt;/<span class=\"title\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Vue-的實體基本屬性\"><a href=\"#Vue-的實體基本屬性\" class=\"headerlink\" title=\"Vue 的實體基本屬性\"></a>Vue 的實體基本屬性</h2><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  el: <span class=\"string\">\"#app\"</span>, <span class=\"comment\">//用來掛載 Vue 實體元素</span></span><br><span class=\"line\">  data: &#123; &#125;, <span class=\"comment\">//要綁定的資料</span></span><br><span class=\"line\">  props: &#123; &#125;, <span class=\"comment\">//接收外部資料的屬性</span></span><br><span class=\"line\">  methods: &#123; &#125;, <span class=\"comment\">//定義 vue 實體內使用的函式</span></span><br><span class=\"line\">  watch: &#123; &#125;, <span class=\"comment\">//觀察實體內資料變動</span></span><br><span class=\"line\">  computed: &#123; &#125;, <span class=\"comment\">//自動計算的屬性</span></span><br><span class=\"line\">  template: <span class=\"string\">\"...\"</span>, <span class=\"comment\">//提供 Vue 變更後的樣板</span></span><br><span class=\"line\">  component: &#123; &#125; <span class=\"comment\">//定義子元素</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"el-與-data-的詳述\"><a href=\"#el-與-data-的詳述\" class=\"headerlink\" title=\"el 與 data 的詳述\"></a>el 與 data 的詳述</h2><h3 id=\"el\"><a href=\"#el\" class=\"headerlink\" title=\"el\"></a>el</h3><p>用來把 vue 實體與網頁 DOM 元素做綁定的關鍵實體，當 vue 實體<strong>沒有 <code>el</code> 屬性</strong>時，就只能透過 <strong>vm.$mount()</strong>手動編譯。</p>\n<h3 id=\"data\"><a href=\"#data\" class=\"headerlink\" title=\"data\"></a>data</h3><p>用來存放與實體綁定的資料，當實體建立後，可能過 <code>vm.\\$</code>data`` 取得 <code>data</code> 內的資料，實體內則是用 <code>this.xxx</code> 取得。在子元件時，需要用 <code>function()</code> 的形式回傳。</p>\n<blockquote>\n<p>data 內的屬性開頭名稱不可以為 <code>$</code> 或 <code>_</code>。</p>\n</blockquote>\n<h2 id=\"實際操作\"><a href=\"#實際操作\" class=\"headerlink\" title=\"實際操作\"></a>實際操作</h2><p>今天透過 Vue 建立一個 hello Vue!</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">v-model</span>=<span class=\"string\">\"message\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">      el: <span class=\"string\">'#app'</span>,</span><br><span class=\"line\">      data: &#123;</span><br><span class=\"line\">        message: <span class=\"string\">'hello! Vue!'</span>,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code></code> 概念有點像 ES6，變數中給予什麼內容，透過大括號會呈現在網頁上。</li>\n<li>使用 <code>v-model</code> 建立資料，對應到 <code>data</code> 的 <code>message</code> 的內容，就會渲染在網頁上。</li>\n</ul>\n<p>因為 <code>input</code> 跟 <code>p</code> 段落都是使用相同的資料，所以在 <code>input</code> 輸入新的資料， <code>p</code> 段落會跟著更新。</p>\n<p><a href=\"https://codepen.io/hnzxewqw/pen/gOpKRwV\" target=\"_blank\" rel=\"noopener\">CodePen</a></p>\n","categories":["vue.js"],"tags":["vue.js"]},{"title":"JS 筆記 - ES6 功能：在 JavaScript 中快速組字串","url":"/javascript/20200317/144503038/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/js-ES6.png?alt=media&token=0bf94bee-c7cd-4cc0-b619-45e5bf71d07b\" alt=\"ES6\"></p>\n<h2 id=\"條件\"><a href=\"#條件\" class=\"headerlink\" title=\"條件\"></a>條件</h2><blockquote>\n<ul>\n<li>日期：2020.3.17 (官網不定期更新)</li>\n<li>編輯器：Visual Studio Code</li>\n<li>語法：ES6</li>\n</ul>\n</blockquote>\n<p>會註記上日期原因是 Visual Studio Code 很多功能會一直更新。</p>\n<blockquote>\n<p>官網說明：<a href=\"https://code.visualstudio.com/docs/editor/emmet。\" target=\"_blank\" rel=\"noopener\">https://code.visualstudio.com/docs/editor/emmet。</a></p>\n</blockquote>\n<h2 id=\"修改編輯器內的設定\"><a href=\"#修改編輯器內的設定\" class=\"headerlink\" title=\"修改編輯器內的設定\"></a>修改編輯器內的設定</h2><p>選擇到「設定」，並找到「延伸模組」中的 Emmet，並複製這一段程式碼，並且將其選項「打勾」。</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">\"emmet.triggerExpansionOnTab\": true</span><br></pre></td></tr></table></figure>\n\n<p>如下圖：</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/vscodeSetting.png?alt=media&token=c8e2164a-9aff-4da0-8c95-57b9edb6b821\" alt=\"Emmet 設定\"></p>\n<p>找到 <strong>Include Languages</strong> 選項，再選擇 <strong>在 <em>setting.json</em> 內編輯</strong>。<br>就會看到剛剛打勾的選項也在其中，並把這個片段的程式碼貼到原本程式碼中的最下方。</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">\"emmet.includeLanguages\": &#123;</span><br><span class=\"line\">    \"javascript\": \"javascriptreact\",</span><br><span class=\"line\">    \"vue-html\": \"html\",</span><br><span class=\"line\">    \"razor\": \"html\",</span><br><span class=\"line\">    \"plaintext\": \"pug\"</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>這樣就完成可以在 js 中組 HTML 字串囉!!如下圖: </p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/vscodeSetting03.png?alt=media&token=9e188f2a-7311-4dd5-b3d7-689d4d3e3173\" alt=\"完成設定\"></p>\n<h2 id=\"用-JS-來組字串吧\"><a href=\"#用-JS-來組字串吧\" class=\"headerlink\" title=\"用 JS 來組字串吧!\"></a>用 JS 來組字串吧!</h2><p>會用 JS 組字串的情境，大概像是<strong>口罩地圖</strong>之類的網頁，因為有後端資料庫需要呈現一些內容，要透過 AJAX 取得資料後，渲染在網頁上，那如果透過手動打字串，會非常的繁雜且容易出錯。</p>\n<p>下方有一個清單，裡面沒有任何資料：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"list\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"js/all.js\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>如果要透過 JS 渲染在網頁上，可以這樣寫：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> list = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'.list'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> imgUrl = <span class=\"string\">'https://images.unsplash.com/photo-1558980664-3a031cf67ea8?ixlib=rb-1.2.1&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;auto=format&amp;fit=crop&amp;w=1950&amp;q=80'</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> title = <span class=\"string\">'this is Title'</span>;</span><br></pre></td></tr></table></figure>\n<p>先宣告所要使用的變數，那 imgUrl 可能會是 AJAX 資料。</p>\n<h3 id=\"如何組字串\"><a href=\"#如何組字串\" class=\"headerlink\" title=\"如何組字串\"></a>如何組字串</h3><p>既然我們已經使用了插件，在渲染前就可以依照 HTML 的方式輸入的<strong>結構</strong>，</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">li&gt;h2+img</span><br></pre></td></tr></table></figure>\n<p>在按下 <code>tab</code> 鍵，就會自動展開，</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">list.innerHTML=<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">  <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span></span><br><span class=\"line\">  &lt;img src=\"\" alt=\"\"/&gt;</span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>真是太神奇了</p>\n</blockquote>\n<p>再來加上 ES6 的語法 <code>${變數名稱}</code>，套入上方變數資料，就會變成這樣:</p>\n<ul>\n<li>${imgUrl} //帶入圖片資料</li>\n<li>${title} //帶入 title 資料</li>\n</ul>\n<blockquote>\n<p>用法就是在前面加一個 <code>$</code> 字號，再加上一個<strong>大括弧</strong>，裡面放<strong>變數名稱</strong>。<br>最後兩邊再加上<a href=\"https://zh.wikipedia.org/zh-tw/%E9%87%8D%E9%9F%B3%E7%AC%A6\" target=\"_blank\" rel=\"noopener\">重音符</a>(與鍵盤 「~」 同一顆按鍵)，就完成資料的輸入了。</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">list.innerHTML=<span class=\"string\">`&lt;li&gt;</span></span><br><span class=\"line\"><span class=\"string\">  &lt;h2&gt;<span class=\"subst\">$&#123;title&#125;</span>&lt;/h2&gt;</span></span><br><span class=\"line\"><span class=\"string\">  &lt;img src=\"<span class=\"subst\">$&#123;imgUrl&#125;</span>\" alt=\"\"/&gt;</span></span><br><span class=\"line\"><span class=\"string\">&lt;/li&gt;`</span></span><br></pre></td></tr></table></figure>\n\n<p>Codepen <a href=\"https://codepen.io/hnzxewqw/pen/BaNxeJE\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/BaNxeJE</a></p>\n<h2 id=\"心得\"><a href=\"#心得\" class=\"headerlink\" title=\"心得\"></a>心得</h2><p>學習到這個組字串的語法真的太棒了，先前因為手動組字串，中間的加號，弄得會很混亂，而且速度好慢，重點還容易打錯!!</p>\n","categories":["JavaScript"],"tags":["JavaScript","ES6"]},{"title":"Vue 筆記 - Vue 的基本認識與介紹","url":"/vue-js/20200316/3744633474/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/vue%20cover.png?alt=media&token=5f8b5aa0-eb3e-4d21-a715-07c5442dafbc\" alt=\"vue.js\"></p>\n<h2 id=\"Vue-的介紹\"><a href=\"#Vue-的介紹\" class=\"headerlink\" title=\"Vue 的介紹\"></a>Vue 的介紹</h2><p>vue 音同 「view」，是一個簡單輕量的 JS 漸進式框架，也可以與其他前端框架的函式庫並存共用，有趣的是原本 vue 不是以框架為前提的建構，原本是 library 出發，但後面就慢慢變成了 framework 了。Vue 不支持 IE8 及以下版本，因為 Vue 使用了 IE8 無法模擬的 ECMAScript 5 特性。但它支持所有兼容 ECMAScript 5 的瀏覽器。</p>\n<h3 id=\"vue-DevTools\"><a href=\"#vue-DevTools\" class=\"headerlink\" title=\"vue DevTools\"></a>vue DevTools</h3><p>推薦一個 Chrome 插件，在你的瀏覽器上安裝 <a href=\"https://chrome.google.com/webstore/detail/vuejs-devtools/nhdogjmejiglipccpnnnanhbledajbpd?hl=zh-tw\" target=\"_blank\" rel=\"noopener\">Vue Devtools</a>。可以透過這個工具來檢查 vue 開發時遇到的錯誤。</p>\n<h2 id=\"關注點分離\"><a href=\"#關注點分離\" class=\"headerlink\" title=\"關注點分離\"></a>關注點分離</h2><p>開發者只要專注在<strong>畫面元素</strong>，以及對應的<strong>資料變化</strong>即可， vue 是用資料來控制的畫面的，與原本學習 JavaScript 的概念有點不同。是以操作物件模型為基礎的開發模式，直接描述<strong>狀態</strong>與 <strong>DOM 元素</strong>的對應關係，改變的是<strong>資料</strong>，並不是直接操作 DOM 元素。</p>\n<h2 id=\"漸進式框架\"><a href=\"#漸進式框架\" class=\"headerlink\" title=\"漸進式框架\"></a>漸進式框架</h2><p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/vueAll.png?alt=media&token=e8437854-f74d-46b2-b759-5de585a4855a\" alt=\"vue 漸進式框架\"></p>\n<p>後續還有 vue-router、vuex、Vue-Cli…等等。</p>\n<h2 id=\"採用-MVVM-模式\"><a href=\"#採用-MVVM-模式\" class=\"headerlink\" title=\"採用 MVVM 模式\"></a>採用 MVVM 模式</h2><p>什麼是 MVVM?</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/vue-MVVM.png?alt=media&token=3bbf1341-6a9d-4bf5-bc3a-39be4c310883\" alt=\"MVVM\"></p>\n<p>也就是前面提到的關注點分離的概念，Model, View-Model, View，透過修改資料的內容，便立即反映到畫面上，只要透過 vue 的實體與 HTML 的實體連結，就可以輕易地控制網頁元素。</p>\n<h2 id=\"系統元件簡介\"><a href=\"#系統元件簡介\" class=\"headerlink\" title=\"系統元件簡介\"></a>系統元件簡介</h2><p>系統元件是 Vue 的另一個重要概念，因為它是一種抽象，允許我們使用小型、獨立和通常可複用的組件構建大型應用，幾乎任意類型的應用界面都可以抽象為一個組件樹：</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/vue-%E7%B3%BB%E7%B5%B1%E5%85%83%E4%BB%B6.png?alt=media&token=16a76656-6caa-4fc1-ab53-8170037e615d\" alt=\"系統元件\"></p>\n<p>在一個大型應用中，有必要將整個應用程序劃分為組件，以使開發時更容易管理。</p>\n<h2 id=\"版本間的差異\"><a href=\"#版本間的差異\" class=\"headerlink\" title=\"版本間的差異\"></a>版本間的差異</h2><p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/vue%20soft.png?alt=media&token=b1a3a480-e1cf-4bd7-8a64-2bdad58cc0c7\" alt=\"版本差異\"></p>\n<p>在 <a href=\"https://cn.vuejs.org/v2/guide/installation.html\" target=\"_blank\" rel=\"noopener\">vue 官方網站</a>會看到兩種版本可以下載，一個是<strong>開發版本</strong>，一個是<strong>產品版本</strong>，通常會兩個都下載，但在開發時會使用開發的版本，等開發完畢變成產品要上線前，會更換成產品版本，原因是產品版本是經過壓縮後的大小。</p>\n<h2 id=\"透過-CDN-加入專案\"><a href=\"#透過-CDN-加入專案\" class=\"headerlink\" title=\"透過 CDN 加入專案\"></a>透過 CDN 加入專案</h2><p>對於<strong>製作原型</strong>或<strong>學習</strong>，你可以這樣使用最新版本：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;script src=\"https://cdn.jsdelivr.<span class=\"built_in\">net</span>/npm/vue/dist/vue.js\"&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<p>對於生產環境，我們推薦鏈接到一個明確的版本號和構建文件，以避免新版本造成的不可預期的破壞：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;script src=\"https://cdn.jsdelivr.<span class=\"built_in\">net</span>/npm/vue@<span class=\"number\">2</span>.<span class=\"number\">6</span>.<span class=\"number\">11</span>\"&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<p>參考文章 <a href=\"https://cn.vuejs.org/v2/guide/installation.html\" target=\"_blank\" rel=\"noopener\">https://cn.vuejs.org/v2/guide/installation.html</a></p>\n","categories":["vue.js"],"tags":["vue.js"]},{"title":"JS 筆記 - 利用函式 function 寫一個計算題","url":"/javascript/20200316/526717564/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/JavaScript%20note-01.jpg?alt=media&token=7bee0261-72ac-4de4-9f5a-f39d58735b7d\" alt=\"JavaScript Note\"></p>\n<p>紀錄用函式 function 寫一個計算題，透過練習題與自己寫幾次程式碼，就比較了解 <strong>var</strong>、<strong>function</strong>、<strong>return</strong> 彼此的關係。</p>\n<h3 id=\"目前簡易歸類下面三個概念：\"><a href=\"#目前簡易歸類下面三個概念：\" class=\"headerlink\" title=\"目前簡易歸類下面三個概念：\"></a>目前簡易歸類下面三個概念：</h3><ul>\n<li>JavaScript 裡的變數是基本的元素。</li>\n<li>function 是建立許多要使用的功能，但無法直接執行，需要時再取出來用。</li>\n<li>return 是為了有比較複雜的功能時，可以節省時間，不需要一直反覆打重複的程式碼。<blockquote>\n<p>EX. 買衣服的購物後台如果要買很多品項，甚至還要點選不同尺寸的數量，還有不同的加工，項目一多，如果還要逐步撰寫程式碼，那程式碼就會很長一串，使用 function + return 就可以達到只要功能俱足，利用 return 帶回關鍵數值，就可以快速得到結果。</p>\n</blockquote>\n</li>\n</ul>\n<hr>\n<h2 id=\"用-function-寫個計算題\"><a href=\"#用-function-寫個計算題\" class=\"headerlink\" title=\"用 function 寫個計算題\"></a>用 function 寫個計算題</h2><p>主要練習內容：會使用到 JS 的 <code>textContent</code> 屬性，<code>input</code> 表格裡面的數值是用 <code>id</code> 來控制，並對應到 JS 的內容，到時候就可以因為輸入數字後，點擊 <code>Button</code> 後，就能計算出結果！這次要寫的畫面如下：</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/JS8-calculate.png?alt=media&token=93f803f6-5918-48c1-a5d1-c1857b26dac8\" alt=\"JS 計算題\"></p>\n<h3 id=\"HTML\"><a href=\"#HTML\" class=\"headerlink\" title=\"HTML\"></a>HTML</h3><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>JavaScript 透過表單獲取數值練習<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>漢堡 120 元<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>可樂 60 元<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>我要 <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"hamNumId\"</span>&gt;</span> 個漢堡 + <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"cokeNumId\"</span>&gt;</span> 杯可樂<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">\"button\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"countId\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"計算\"</span>&gt;</span>計算<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>總共是 <span class=\"tag\">&lt;<span class=\"name\">strong</span> <span class=\"attr\">class</span>=<span class=\"string\">\"total\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"totalId\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">strong</span>&gt;</span> 元<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"js/all.js\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"JS-起手式\"><a href=\"#JS-起手式\" class=\"headerlink\" title=\"JS 起手式\"></a>JS 起手式</h2><p>因為今天最終的目的，是要透過 <code>button</code> 按鈕來取得計算數值，所以一開始的程式碼式這一段：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'countId'</span>).onclick = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>說明：透過 <code>getElementById</code> 取得 <code>button</code> 的 <code>id</code>，並且給他一個 <code>onclick</code> 點擊事件，這個事件的功能會包含以下內容 (將其功能的內容寫於其中)。</p>\n<h3 id=\"JavaScript\"><a href=\"#JavaScript\" class=\"headerlink\" title=\"JavaScript\"></a>JavaScript</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'countId'</span>).onclick = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">//button 使用getElementById (後面不用加點，直接套 id 名稱) 加上一個 onclick 事件，並執行 function 內容</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> hamNum = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'hamNumId'</span>).value;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> cokeNum = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'cokeNumId'</span>).value;</span><br><span class=\"line\">  <span class=\"comment\">//命名變數為抓取 input 裡面的數值，所以要用 value</span></span><br><span class=\"line\">  alert(hamNum);</span><br><span class=\"line\">  alert(cokeNum);</span><br><span class=\"line\">  <span class=\"comment\">//使用 alert 做驗證</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ol>\n<li>透過在 <code>input</code> 輸入數值後，再利用 <code>id</code> 抓取其數值，按下 <code>button</code> 時會產生 <code>onclick</code> 事件，這邊先使用 alert。 </li>\n<li>命名變數是透過抓取 <code>id</code> 中的在 <code>input</code> 所得到的值(value)。</li>\n<li>alert 視窗功能做驗證，會彈跳出在 <code>input</code> 輸入的數值。<br>可以玩一下 <a href=\"http://https://codepen.io/hnzxewqw/pen/ExxzraX\" target=\"_blank\" rel=\"noopener\">codepen</a> 看看結果！</li>\n</ol>\n<hr>\n<h2 id=\"typeof-確認屬性\"><a href=\"#typeof-確認屬性\" class=\"headerlink\" title=\"typeof 確認屬性\"></a>typeof 確認屬性</h2><p>在進行計算前，要先確認 input 的值是 string 還是 number，如果要透過 JavaScript 做計算，要先確認輸入的值要是 number，才能正常運算，可以使用下面的方式，確認類型。</p>\n<p>例如現在要確認 hamNum 裡面的值是什麼，就可以這樣確認：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> hamNum = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'hamNumId'</span>).value;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"keyword\">typeof</span>(hamNum)) <span class=\"comment\">//結果會是 string</span></span><br></pre></td></tr></table></figure>\n\n<p>這時如果在 <code>input</code> 輸入 3，<code>console.log</code> 的結果就會變成兩個字串相加，”3” + “3”= 33，但有趣的是，倘若是用相乘，結果竟然會是 “3” * “3” = 9</p>\n<hr>\n<h2 id=\"parseInt-轉換屬性\"><a href=\"#parseInt-轉換屬性\" class=\"headerlink\" title=\"parseInt 轉換屬性\"></a>parseInt 轉換屬性</h2><p>在確認類行為 string 後，要先轉換 <strong>文字變成數字 (string to number)</strong> 的屬性，就可以透過函式來加總。程式碼如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> hamNum = <span class=\"built_in\">parseInt</span>(<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'hamNumId'</span>).value)</span><br></pre></td></tr></table></figure>\n\n<p>將要在 <code>id</code> 所得到的值用 <code>parseInt</code> 語法轉換成數字。</p>\n<hr>\n<p>這時候再把品項的金額用變數做宣告，也將要得到的結果寫在最下方，程式碼如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'countId'</span>).onclick = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//button 使用getElementById (後面不用加點，直接套 id 名稱) 加上一個 onclick 事件，並執行 function 內容</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> hamPrice = <span class=\"number\">50</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> cokePrice = <span class=\"number\">20</span>;</span><br><span class=\"line\">    <span class=\"comment\">//定義變數的內容</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> hamNum = <span class=\"built_in\">parseInt</span>(<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'hamNumId'</span>).value) * hamPrice;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> cokeNum = <span class=\"built_in\">parseInt</span>(<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'cokeNumId'</span>).value) * cokePrice;</span><br><span class=\"line\">    <span class=\"comment\">//命名變數為抓取 input 裡面的數值</span></span><br><span class=\"line\">    <span class=\"comment\">//將要在 id 所得到的值用 parseInt 語法轉換成數字。</span></span><br><span class=\"line\">    <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'totalId'</span>).textContent = hamNum + cokeNum</span><br><span class=\"line\">    <span class=\"comment\">//最終結算的結果</span></span><br></pre></td></tr></table></figure>\n\n<p>可以透過 Codepen 玩玩看! <a href=\"https://codepen.io/hnzxewqw/pen/Yzzbgzm\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/Yzzbgzm</a></p>\n<hr>\n<h2 id=\"return-回傳\"><a href=\"#return-回傳\" class=\"headerlink\" title=\"return 回傳\"></a>return 回傳</h2><p>透過 <code>return</code> 回傳的屬性，可以運算比較複雜的內容，當商品或是後台採購品項較多時，就不用一直打程式碼，前提是參數內的數值要同一個才可以，比如下方例子：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">count</span>(<span class=\"params\">price</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> addTax(price * <span class=\"number\">0.8</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//商品價格要打八折時</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">count</span>(<span class=\"params\">price</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> addTax * <span class=\"number\">1.05</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//當商品要開立發票時</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(count(<span class=\"number\">500</span>);)</span><br><span class=\"line\"><span class=\"comment\">//return 會把 count 的參數 500，套回 function 中，會得到下面結果</span></span><br><span class=\"line\"><span class=\"comment\">// 500 * 0.8</span></span><br><span class=\"line\"><span class=\"comment\">// 500 * 1.05</span></span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"心得\"><a href=\"#心得\" class=\"headerlink\" title=\"心得\"></a>心得</h2><p>這次學習到 JavaScript 新的特性，結合之前所學的，透過 function 建立自己要的功能，在使用不同的語法整理取得自己要的函式，截至目前為止，JS 對我來說是很細緻的給予網頁呈現我想要的行為，並且這個行為會讓使用者更方便，也清楚明瞭好操作！<strong>JS 的語法相對直覺，掌握住一個指令一個動作，不要在 function 建立太複雜的內容。</strong></p>\n","categories":["JavaScript"],"tags":["JavaScript"]},{"title":"JS 筆記 - function 函式 Hoisting 提升觀念","url":"/javascript/20200309/1212075218/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/JavaScript%20note-01.jpg?alt=media&token=7bee0261-72ac-4de4-9f5a-f39d58735b7d\" alt=\"JavaScript Note\"></p>\n<p>瀏覽器在讀取程式碼基本上都是從上到下讀取，在變數的寫法，會是這樣的結果。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(a); <span class=\"comment\">//undefind</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a); <span class=\"comment\">//1</span></span><br></pre></td></tr></table></figure>\n\n<p>上方變數的撰寫跟讀取的結果，會是由上到下讀取，所以在第一行 <code>console.log</code> 因為找不到變數所以結果會是 undefind，第三個 <code>console.log</code> 因為有讀到第二行的變數，所以找到了 a 的值為1。</p>\n<h2 id=\"那-function-呢\"><a href=\"#那-function-呢\" class=\"headerlink\" title=\"那 function 呢?\"></a>那 function 呢?</h2><p>加入一個 function，先看程式碼：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(a); <span class=\"comment\">//undefind</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a); <span class=\"comment\">//1</span></span><br><span class=\"line\"></span><br><span class=\"line\">count();<span class=\"comment\">//會得到什麼?</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">count</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\"> <span class=\"built_in\">console</span>.log(<span class=\"string\">'hello!'</span>); </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>count 結果會是：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">count();<span class=\"comment\">// hello!</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">count</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\"> <span class=\"built_in\">console</span>.log(<span class=\"string\">'hello!'</span>); </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>function 有一個 Hoisting 的向上提升的概念，就是瀏覽器會先把 function 設定為優先讀取，在瀏覽器的讀取順序會變成這樣：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">count</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\"> <span class=\"built_in\">console</span>.log(<span class=\"string\">'hello!'</span>); </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">count();<span class=\"comment\">// hello!</span></span><br></pre></td></tr></table></figure>\n\n<p>故在執行 function 的時候，function 名稱寫在上面或下面是沒有差的，但為了讓自己習慣所有程式碼都遵循由上到下讀取的方式，我還是會寫成剛上方一樣的方式，維持一個習慣寫法，也比較不會讓自己搞混！</p>\n<h2 id=\"補充\"><a href=\"#補充\" class=\"headerlink\" title=\"補充\"></a>補充</h2><p>Hositing 就是將<strong>變數</strong>&amp;<strong>函數</strong>提升到所有程式碼最前面，然後先存進記憶體中，後面在做賦值等動作。由此可知 Hositing 主要跟記憶體有關係，而 Hositing 只是一個觀念。</p>\n<hr>\n<p>文章參考:</p>\n<p><a href=\"https://hsiangfeng.github.io/javascript/20190419/3635730318/\" target=\"_blank\" rel=\"noopener\">https://hsiangfeng.github.io/javascript/20190419/3635730318/</a></p>\n<p><a href=\"https://developer.mozilla.org/zh-TW/docs/Glossary/Hoisting\" target=\"_blank\" rel=\"noopener\">https://developer.mozilla.org/zh-TW/docs/Glossary/Hoisting</a></p>\n","categories":["JavaScript"],"tags":["JavaScript"]},{"title":"JS 筆記 - 函式 function 搭配 return","url":"/javascript/20200302/3851113860/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/JavaScript%20note-01.jpg?alt=media&token=7bee0261-72ac-4de4-9f5a-f39d58735b7d\" alt=\"JavaScript Note\"></p>\n<blockquote>\n<p>函式 function 搭配 return 是一個常用且好用的小技巧。</p>\n</blockquote>\n<hr>\n<h2 id=\"return-回傳\"><a href=\"#return-回傳\" class=\"headerlink\" title=\"return 回傳\"></a>return 回傳</h2><p>透過 <code>return</code> 回傳的屬性，可以運算比較複雜的內容，當商品或是後台採購品項較多時，就不用一直打程式碼，前提是參數內的數值要同一個才可以，比如下方例子：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">count</span>(<span class=\"params\">price</span>) </span>&#123; </span><br><span class=\"line\">  <span class=\"keyword\">return</span> addTax(price * <span class=\"number\">0.8</span>); <span class=\"comment\">// 商品價格要打八折時</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">count</span>(<span class=\"params\">price</span>) </span>&#123; <span class=\"comment\">// 當商品要開立發票時</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> addTax * <span class=\"number\">1.05</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(count(<span class=\"number\">500</span>);)</span><br><span class=\"line\"><span class=\"comment\">//return 會把 count 的參數 500，套回 function 中，會得到下面結果</span></span><br><span class=\"line\"><span class=\"comment\">// 500 * 0.8</span></span><br><span class=\"line\"><span class=\"comment\">// 500 * 1.05</span></span><br></pre></td></tr></table></figure>\n\n<p><code>return</code> 是幫助資料回傳的一個語法，讓 function 中的語法除了更簡潔外，也更可以提高程式碼閱讀性! 也可以透過判斷式的內容，讓 <code>return</code> 讓函式停止執行。</p>\n","categories":["JavaScript"],"tags":["JavaScript"]},{"title":"JS 筆記 - 全域變數與區域變數","url":"/javascript/20200224/3133182567/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/JavaScript%20note-01.jpg?alt=media&token=7bee0261-72ac-4de4-9f5a-f39d58735b7d\" alt=\"JavaScript Note\"></p>\n<p>初學者記法：變數簡單分成兩種，一種在<strong>函式內</strong>、一種在<strong>函式外</strong>，聽起來簡單，但觀念大不同，來紀錄一下。</p>\n<h2 id=\"區域變數\"><a href=\"#區域變數\" class=\"headerlink\" title=\"區域變數\"></a>區域變數</h2><p>簡單來說就是在函式內的變數，函式是這樣寫的：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fName</span>(<span class=\"params\">aName</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> number = aName *<span class=\"number\">10</span>; <span class=\"comment\">//區域變數</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(number); <span class=\"comment\">//驗證變數</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">fName(); <span class=\"comment\">//沒有輸入參數，執行函式</span></span><br></pre></td></tr></table></figure>\n\n<p>上面的寫法會得到的結果是 NaN，因為並沒有帶入其他參數，所以找不到任何的值。</p>\n<p>如果參數帶入 10，會變成這樣寫：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fName</span>(<span class=\"params\">aName</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> number = aName * <span class=\"number\">10</span>; <span class=\"comment\">//區域變數</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(number); <span class=\"comment\">//驗證變數</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">fName(<span class=\"number\">10</span>); <span class=\"comment\">//帶入參數，執行函式</span></span><br></pre></td></tr></table></figure>\n\n<p>執行函式的帶入<strong>參數</strong>後，會帶到<strong>區域變數</strong>，驗證結果會變成 100。</p>\n<p>※區域變數會在執行之後<strong>自動銷毀</strong>，並<strong>同步釋放記憶體</strong>，以免瀏覽器跑很慢，讓使用者體驗不佳。</p>\n<hr>\n<p>以上為原則，但有原則就會有例外，</p>\n<h3 id=\"狀況：開發中也會遇到需要抓之前的變數\"><a href=\"#狀況：開發中也會遇到需要抓之前的變數\" class=\"headerlink\" title=\"狀況：開發中也會遇到需要抓之前的變數\"></a>狀況：開發中也會遇到需要抓之前的變數</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fName</span>(<span class=\"params\">aName</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> number = aName * <span class=\"number\">10</span>; <span class=\"comment\">//區域變數</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(number); <span class=\"comment\">//驗證變數</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">fName(<span class=\"number\">10</span>); <span class=\"comment\">//帶入參數，執行函式</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(number)</span><br></pre></td></tr></table></figure>\n\n<p>這時候 Chrome 開發工具就會顯示下圖：</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/JS5-1.png?alt=media&token=f24b0d8d-0249-441b-b21d-3eecf623056c\" alt=\"區域變數\"></p>\n<p>告訴我們抓不到數值，原因是上述提到，區域變數執行結束後會自動銷毀，然後這邊我記錄的是，<strong>在執行 console.log 的時候，上面一定要是宣告變數了才能驗證，不然會沒有結果。*</strong>(目前學到的概念是這樣，若有誤還請指正或未來修正)*</p>\n<hr>\n<p>但開發中遇到的狀況絕不會這麼單純，如果仍然要設定一個變數值，在區域變數外抓取的話可以這樣寫：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> number</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fName</span>(<span class=\"params\">aName</span>) </span>&#123;</span><br><span class=\"line\">  number = <span class=\"number\">10</span>; <span class=\"comment\">//區域變數</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(number); <span class=\"comment\">//驗證變數</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">fName(); <span class=\"comment\">//執行函式</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(number);</span><br></pre></td></tr></table></figure>\n\n<p>在區域函數外新增一個 var 變數(全域變數)，當最後面的 console.log 執行變數驗證時，它會回去區域變數找到變數的設定值，在套進外面的 console.log 內。<br>得到的畫面如下圖：</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/JS5-2.png?alt=media&token=ccaee45f-ba98-44af-8b9f-b0a67451fb70\" alt=\"找外面的全域變數\"></p>\n<hr>\n<h2 id=\"全域變數\"><a href=\"#全域變數\" class=\"headerlink\" title=\"全域變數\"></a>全域變數</h2><p>簡單來說是在區域變數外的就是叫做全域變數，不過也有參考 <a href=\"http://https://ithelp.ithome.com.tw/articles/10191549\" target=\"_blank\" rel=\"noopener\">Kuro 老師的說法</a>：</p>\n<blockquote>\n<p>在 JavaScript 這門語言中，沒有所謂「全域變數」這種東西。更準確地說，我們所說的「全域變數」其實指的是「全域物件」(或者叫「頂層物件」) 的屬性。以瀏覽器來說，「全域物件」指的就是 <code>window</code>。</p>\n</blockquote>\n<p>這個說法更精準也更正確。</p>\n<p><strong>練習一個全域變數的函式：</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> number; <span class=\"comment\">//全域變數，沒有給予數值</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fName</span>(<span class=\"params\">aName</span>) </span>&#123;</span><br><span class=\"line\">  number = aName + <span class=\"number\">1</span>; <span class=\"comment\">//區域變數</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(number); <span class=\"comment\">//驗證變數</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">fName(<span class=\"number\">10</span>); <span class=\"comment\">//執行函式</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(number);</span><br></pre></td></tr></table></figure>\n\n<p>設定一個全域變數在<strong>最外面</strong>，前面提到在區域變數執行後會註銷該變數效果，但這次裡面的區域變數把 <code>var</code> 變數宣告拿掉，這時他會去抓取執行函式裡面的參數值，在讓全域變數去找到區域變數所套入的數值，在 Chrome 開發工具就會顯示如下圖：</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/JS5-3.png?alt=media&token=e0284e6d-6f47-4b05-989d-6f1d3ee815ab\" alt=\"全域變數\"></p>\n<p>引用 Kuro 老師的文章有彙整以下結論：</p>\n<blockquote>\n<h3 id=\"什麼叫做全域物件的「屬性」呢？\"><a href=\"#什麼叫做全域物件的「屬性」呢？\" class=\"headerlink\" title=\"什麼叫做全域物件的「屬性」呢？\"></a>什麼叫做全域物件的「屬性」呢？</h3></blockquote>\n<blockquote>\n<p>舉個例子，我們在最外層透過 var 建立一個變數 a，像這樣：</p>\n<p><code>var a = 10;</code><br>一直以來我們都稱它叫「全域變數」對吧？<br>這個時候，請你在後面加一行：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( <span class=\"built_in\">window</span>.a );    <span class=\"comment\">// ?</span></span><br></pre></td></tr></table></figure>\n<p>看到了什麼？<br>這時你應該會看到剛剛指定給 a 的 10 這個數字才對。</p>\n<p>那麼就可以來下個結論：</p>\n<p>變數有效範圍 (<code>scope</code>) 的最小切分單位是 <code>function</code> (ES6 的 <code>let</code> 與 <code>const</code> 例外)<br>即使是寫在函式內，沒有 var 的變數會變成「全域變數」<br>全域變數指的是全域物件 (頂層物件) 的「屬性」</p>\n</blockquote>\n<hr>\n<h2 id=\"心得\"><a href=\"#心得\" class=\"headerlink\" title=\"心得\"></a>心得</h2><ol>\n<li>區域變數與全域變數的觀念要弄清楚，不然後面真的會學得很痛苦。JavaScript 有太多名稱要去記，當然不是死背，但需要一一消化跟了解。</li>\n<li>Chrome 的開發工具真的很貼心，都會顯示程式碼哪裡有錯誤，就不用很辛苦的慢慢去看程式碼。</li>\n</ol>\n<p>參考文章 <a href=\"https://ithelp.ithome.com.tw/articles/10191549\" target=\"_blank\" rel=\"noopener\">https://ithelp.ithome.com.tw/articles/10191549</a></p>\n","categories":["JavaScript"],"tags":["JavaScript"]},{"title":"JS 筆記 - 在函式 function 加入參數","url":"/javascript/20200218/2420857626/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/JavaScript%20note-01.jpg?alt=media&token=7bee0261-72ac-4de4-9f5a-f39d58735b7d\" alt=\"JavaScript Note\"></p>\n<p>學習了變數 variable 跟函式 function 的基本認識，單元分開都很可以，最怕就是綜合應用，深怕我自己根基不夠穩，所以我拆了很細來學習，一次學一點，雖然慢，但觀念清楚比較重要。</p>\n<hr>\n<h2 id=\"函式帶入參數\"><a href=\"#函式帶入參數\" class=\"headerlink\" title=\"函式帶入參數\"></a>函式帶入參數</h2><p>函式基本寫法：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">number</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">\"Tim\"</span>); <span class=\"comment\">//字串要加引號</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"number\">323</span>); <span class=\"comment\">//數字不用加引號</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">number(); <span class=\"comment\">//執行函式</span></span><br></pre></td></tr></table></figure>\n\n<p>在小括弧中可以帶入參數名稱，一樣是<strong>自定義</strong>。</p>\n<h3 id=\"練習帶入一個參數會這樣寫：\"><a href=\"#練習帶入一個參數會這樣寫：\" class=\"headerlink\" title=\"練習帶入一個參數會這樣寫：\"></a>練習帶入一個參數會這樣寫：</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">math</span>(<span class=\"params\">number</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> total = number; <span class=\"comment\">//宣告變數的值等於參數</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(total); <span class=\"comment\">//驗證結果是變數的名稱，但這邊不是輸入字串，故不用加上引號</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">math(<span class=\"number\">10</span>); <span class=\"comment\">//執行函式，並帶入參數</span></span><br></pre></td></tr></table></figure>\n\n<hr>\n<h3 id=\"函式-參數-運算\"><a href=\"#函式-參數-運算\" class=\"headerlink\" title=\"函式 + 參數 + 運算\"></a>函式 + 參數 + 運算</h3><p>參數可以帶入兩個、三個甚至無限多，並可以利用變數做加減乘除的方式來做更多元的變化。(變數的加減乘除是：<code>+</code>、<code>-</code>、<code>*</code>、<code>/</code> )</p>\n<p><strong>EX. 加法</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">math</span>(<span class=\"params\">numOne, numTwo</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> total = numOne + numTwo; <span class=\"comment\">//結果為兩個變數相加</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(total); <span class=\"comment\">//驗證變數</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">math(<span class=\"number\">10</span>, <span class=\"number\">25</span>); <span class=\"comment\">//執行函式，並帶入參數</span></span><br></pre></td></tr></table></figure>\n\n<p>在 Chrome 的開發人員工具會顯示如下：</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/%E5%87%BD%E5%BC%8F%E5%B8%B6%E5%8F%83%E6%95%B8.png?alt=media&token=b77596ff-aa8e-453e-9d5e-3c1667933cf0\" alt=\"函式帶參數\"></p>\n<p>其他也可以在 <a href=\"https://codepen.io/hnzxewqw/pen/qBdrKKx\" target=\"_blank\" rel=\"noopener\">codepen</a> 調整不同的加減乘除方式玩玩看。</p>\n","categories":["JavaScript"],"tags":["JavaScript"]},{"title":"JS 筆記 - 認識函式 function 與使用","url":"/javascript/20200211/3165847303/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/JavaScript%20note-01.jpg?alt=media&token=7bee0261-72ac-4de4-9f5a-f39d58735b7d\" alt=\"JavaScript Note\"></p>\n<p>到目前為止，發現 JS 的寫法非常直觀，跟 HTML 與 CSS 的思維不太一樣，之前學過一陣子 jQuery，會覺得思維模式有點不同，直觀卻又要很仔細，而且感受到<strong>電腦很笨</strong>，要一個口令一個動作，這次就要來學習如何告訴電腦我要的指令。</p>\n<hr>\n<h1 id=\"什麼是函式-funciton\"><a href=\"#什麼是函式-funciton\" class=\"headerlink\" title=\"什麼是函式 funciton\"></a>什麼是函式 funciton</h1><p>簡單來說「函式」指的是將一或多段程式指令包裝起來，可以重複使用，也方便維護。<a href=\"http://https://ithelp.ithome.com.tw/articles/10191549\" target=\"_blank\" rel=\"noopener\">(參考來源)</a></p>\n<p>這邊我覺得有一個有趣的事情，英文 function 有<strong>功能</strong>的意思，也的確在撰寫的時候好像透過幾段程式指令告訴電腦我要做什麼，所以可能是因為這樣，被翻譯成函式吧!?<br><em>因為從小數學很爛，所以看到什麼 “式” 都會特別緊張</em></p>\n<hr>\n<h2 id=\"函式的寫法\"><a href=\"#函式的寫法\" class=\"headerlink\" title=\"函式的寫法\"></a>函式的寫法</h2><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">name</span>(<span class=\"params\">params</span>) </span>&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>用 function 做<strong>宣告</strong>，後面<strong>自定義</strong>一個名稱，加上<strong>小括弧</strong>(以後可以放參數用)，再把要寫入函式的程式碼用一個大括弧包起來</p>\n<hr>\n<h3 id=\"實際來寫一個練習：\"><a href=\"#實際來寫一個練習：\" class=\"headerlink\" title=\"實際來寫一個練習：\"></a>實際來寫一個練習：</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">number</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'Tim'</span>) <span class=\"comment\">//字串要加引號</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"number\">323</span>) <span class=\"comment\">//數字不用加引號</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>但這樣只是建立好一個函式而已，不會被執行，若要執行函式，要多寫一行程式碼，會如下呈現：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">number</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'Tim'</span>) <span class=\"comment\">//字串要加引號</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"number\">323</span>) <span class=\"comment\">//數字不用加引號  </span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">number(); <span class=\"comment\">//執行函式</span></span><br></pre></td></tr></table></figure>\n\n<hr>\n<p>函式可以重複執行，如果要重複執行一樣的函式，只要再打上一樣的指令就可了，如下程式碼：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">number</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'Tim'</span>) <span class=\"comment\">//字串要加引號</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"number\">323</span>) <span class=\"comment\">//數字不用加引號    </span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">number(); <span class=\"comment\">//執行函式</span></span><br><span class=\"line\">number(); <span class=\"comment\">//重複執行函式</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"心得\"><a href=\"#心得\" class=\"headerlink\" title=\"心得\"></a>心得</h3><p>function 函式可以當作設定好的功能，等需要執行的時候再找到做好的功能拿出來使用就可以囉！</p>\n","categories":["JavaScript"],"tags":["JavaScript"]},{"title":"JS 筆記 - 認識變數 variable 與使用方法","url":"/javascript/20200208/3675098643/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/JavaScript%20note-01.jpg?alt=media&token=7bee0261-72ac-4de4-9f5a-f39d58735b7d\" alt=\"JavaScript Note\"></p>\n<p>在學習 JavaScript 之前，都會聽到一堆專有名詞，結果專有名詞的白話文還是聽不懂，就覺得很可怕，心中產生排斥，但我發現如果心中產生排斥感，就會稍微拒絕學習該領域的東西，經過 HTML &amp; CSS、jQuery、RWD、Sass、Bootstrap4…等課程後，就比較沒這麼排斥這些「專有名詞」，這幾個月在前端領域中不斷的蒐集資料，也慢慢知道幾位大神級人物，這次的學習也有參考 Kuro 大大的在 <a href=\"http://https://ithelp.ithome.com.tw/users/20065504/ironman/1259\" target=\"_blank\" rel=\"noopener\">2018 鐵人賽</a>撰寫成<a href=\"http://https://www.tenlong.com.tw/products/9789864344130\" target=\"_blank\" rel=\"noopener\">書籍</a>的內容搭配<a href=\"http://https://www.hexschool.com/\" target=\"_blank\" rel=\"noopener\">六角學院</a>的<a href=\"http://https://www.hexschool.com/courses/javascript.html\" target=\"_blank\" rel=\"noopener\">課程</a>來看，廣度學習下，比較能知道課程跟書本內容在講什麼了。</p>\n<h2 id=\"認識變數-Variable\"><a href=\"#認識變數-Variable\" class=\"headerlink\" title=\"認識變數 Variable\"></a>認識變數 Variable</h2><p>簡單來說變數是用來儲存資料和進行運算的基本單位，可以將變數想像為一個盒子，用來存放資料。<br>更多詳盡的定義可以看<a href=\"http://https://ithelp.ithome.com.tw/articles/10190873\" target=\"_blank\" rel=\"noopener\">這篇</a></p>\n<h2 id=\"使用變數\"><a href=\"#使用變數\" class=\"headerlink\" title=\"使用變數\"></a>使用變數</h2><p>使用變數時，需要先使用 <code>var</code> 這個語法，告訴電腦說：我現在要宣告一個變數囉!!<br>再來打上想要的<strong>變數名稱</strong>，就會變成這樣 <code>var varName</code>。</p>\n<blockquote>\n<p>EX. </p>\n<ol>\n<li>命名一個變數是<strong>我的名字</strong>，就會這樣寫： <code>var myName =$;</code></li>\n<li>命名一個變數是<strong>號碼</strong>，就會這樣寫：<code>var number = $;</code></li>\n</ol>\n</blockquote>\n<p>變數的命名是<strong>自己定義的</strong>，但建議要有<strong>語意化</strong>，不然哪天回來修改程式碼，又沒有寫註解，就會忘記為什麼會這樣打，然後就會發生恐怖的事情。<br>另外維持一個習慣就是在每個程式碼<strong>結束後</strong>都打上一個<strong>分號</strong>。</p>\n<blockquote>\n<p><em>通常使用變數會在 HTML 中會建立一個 id 來使用。</em></p>\n</blockquote>\n<h2 id=\"變數的值\"><a href=\"#變數的值\" class=\"headerlink\" title=\"變數的值\"></a>變數的值</h2><p>宣告要使用變數，還有命名之後，要給變數一個值，電腦才會知道這個變數的內容是什麼，呈現的內容稱作為<strong>值</strong>：</p>\n<h3 id=\"Number-數字\"><a href=\"#Number-數字\" class=\"headerlink\" title=\"Number (數字)\"></a>Number (數字)</h3><p>也就是一般的數字 <strong>0 ~ 9</strong></p>\n<blockquote>\n<p>沿用上方例子，<code>var number = 8;</code>,文字解釋為，宣告一個變數，其名稱為 number，數字值為 8。</p>\n</blockquote>\n<p>可以使用這段語法將變數名稱呈現在網頁上</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> number = <span class=\"number\">8</span></span><br><span class=\"line\"><span class=\"comment\">//建立變數</span></span><br><span class=\"line\"><span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'number'</span>).textContent = number</span><br><span class=\"line\"><span class=\"comment\">//透過 textContent 控制 id 的內容，結果要等於變數名稱</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>可參考連結 <a href=\"https://codepen.io/hnzxewqw/pen/abbXXmX\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/abbXXmX</a></p>\n</blockquote>\n<p><em>對了，可以用變數來做加減乘除喔~</em></p>\n<h3 id=\"String-字串\"><a href=\"#String-字串\" class=\"headerlink\" title=\"String (字串)\"></a>String (字串)</h3><p>也就是文字，打中文也可以，但<strong>建議打英文</strong>，不然如果專案是國際專案，會變成亂碼。<br>打字串的時候要加上<strong>單引號</strong>或<strong>雙引號</strong>，不然電腦會不知道這個值是什麼。</p>\n<blockquote>\n<p>沿用上方例子，<code>var myName = &quot;Tim&quot;;</code>,文字解釋為，宣告一個變數，其名稱為 myName，字串值為 Tim。</p>\n</blockquote>\n<p>可以使用這段語法將變數名稱呈現在網頁上</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> myName = <span class=\"string\">\"Tim\"</span>;</span><br><span class=\"line\"><span class=\"comment\">//建立變數，字串值要加上引號</span></span><br><span class=\"line\"><span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'myName'</span>).textContent = myName</span><br><span class=\"line\"><span class=\"comment\">//透過 textContent 控制 id 的內容，結果要等於變數名稱</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>可參考連結 <a href=\"https://codepen.io/hnzxewqw/pen/qBBggaG\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/qBBggaG</a></p>\n</blockquote>\n<h3 id=\"Boolean-布林\"><a href=\"#Boolean-布林\" class=\"headerlink\" title=\"Boolean (布林)\"></a>Boolean (布林)</h3><p>只有兩種值，true 跟 false</p>\n<blockquote>\n<p>可參考連結 <a href=\"https://codepen.io/hnzxewqw/pen/OJJddpb\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/OJJddpb</a></p>\n</blockquote>\n<p><em>之後使用  if 判斷式會滿常被使用</em></p>\n<h2 id=\"什麼是-undefined\"><a href=\"#什麼是-undefined\" class=\"headerlink\" title=\"什麼是 undefined\"></a>什麼是 undefined</h2><p>還沒有給變數數值的時候會顯示的回傳資料，如果程式碼這樣寫：<code>var number;</code><br>因為沒有給任何定義的數值，所以會回傳 undefined。<br>舉例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> number;</span><br><span class=\"line\"><span class=\"comment\">//沒有給值，所以會是 undefined</span></span><br></pre></td></tr></table></figure>\n<p>或是這樣也是一樣的結果</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(number); <span class=\"comment\">//因為前面沒有變數的值，結果會是 undefined</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> number = <span class=\"number\">1</span>;</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"變數的命名規則\"><a href=\"#變數的命名規則\" class=\"headerlink\" title=\"變數的命名規則\"></a>變數的命名規則</h2><h3 id=\"開頭不能用數字\"><a href=\"#開頭不能用數字\" class=\"headerlink\" title=\"開頭不能用數字\"></a>開頭不能用數字</h3><p>宣告變數的名稱若開頭數字，會格式錯誤，如下圖：</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/2-1.png?alt=media&token=1446ae99-7b7e-498e-903a-2baa4636fa75\" alt=\"開頭不能用數字\"></p>\n<h3 id=\"不能包含-或是-等符號\"><a href=\"#不能包含-或是-等符號\" class=\"headerlink\" title=\"不能包含 - 或是 . 等符號\"></a>不能包含 - 或是 . 等符號</h3><p>宣告變數的名稱若使用 “-“ 或 “.”，會格式錯誤，如下圖：</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/2-2.png?alt=media&token=ead6b977-c4c7-4c55-a8e5-90059331a700\" alt=\"不能包含 - 或是 . 等符號\"></p>\n<h3 id=\"不能使用-JS-預設的-關鍵字-指令\"><a href=\"#不能使用-JS-預設的-關鍵字-指令\" class=\"headerlink\" title=\"不能使用 JS 預設的 ( 關鍵字 ) 指令\"></a>不能使用 JS 預設的 ( 關鍵字 ) 指令</h3><p>JS 在變數中有一些預設的關鍵字，初學者可以當作是預設指令，如果重複預設的關鍵字會格式錯誤，如下圖：<br><em>更多關鍵字可以看<a href=\"http://https://www.w3schools.com/js/js_reserved.asp\" target=\"_blank\" rel=\"noopener\">這裡</a></em></p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/2-3.png?alt=media&token=45dd0919-fe5e-4f2c-b724-be5d7d4a177a\" alt=\"不能使用 JS 預設的 ( 關鍵字 ) 指令\"></p>\n<h3 id=\"有大小寫之分\"><a href=\"#有大小寫之分\" class=\"headerlink\" title=\"有大小寫之分\"></a>有大小寫之分</h3><blockquote>\n<p>JavaScript 的語法是有區分大小寫的，也就是說，變數 app 與 App 在 JavaScript 會被認為是兩個不同的變數。<br>如果大小寫弄錯了，在執行變數時會變成找不到資料，如下圖：</p>\n</blockquote>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/2-4.png?alt=media&token=1a3b1b87-7226-4b1f-8b69-c43e5ce155b0\" alt=\"有大小寫之分\"></p>\n<h2 id=\"建議變數名稱要有語意化\"><a href=\"#建議變數名稱要有語意化\" class=\"headerlink\" title=\"建議變數名稱要有語意化\"></a>建議變數名稱要有語意化</h2><p>原因是在寫專案當下可能知道自己在幹嘛，但如果之後要維護或修改時，可能就會找不到相對應的程式碼了。</p>\n<p>參考文章 <a href=\"https://ithelp.ithome.com.tw/articles/10190873\" target=\"_blank\" rel=\"noopener\">https://ithelp.ithome.com.tw/articles/10190873</a></p>\n","categories":["JavaScript"],"tags":["JavaScript"]},{"title":"JS 筆記 - 建立 JS 環境、alert、textContent","url":"/javascript/20200206/2494141895/","content":"<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/JavaScript%20note-01.jpg?alt=media&token=7bee0261-72ac-4de4-9f5a-f39d58735b7d\" alt=\"JavaScript Note\"></p>\n<h2 id=\"JavaScript-概述\"><a href=\"#JavaScript-概述\" class=\"headerlink\" title=\"JavaScript 概述\"></a>JavaScript 概述</h2><h3 id=\"一般來說，完整的JavaScript包括以下幾個部分：\"><a href=\"#一般來說，完整的JavaScript包括以下幾個部分：\" class=\"headerlink\" title=\"一般來說，完整的JavaScript包括以下幾個部分：\"></a>一般來說，完整的JavaScript包括以下幾個部分：</h3><ul>\n<li>ECMAScript，描述了該語言的語法和基本物件</li>\n<li>文件物件模型（DOM），描述處理網頁內容的方法和介面</li>\n<li>瀏覽器物件模型（BOM），描述與瀏覽器進行互動的方法和介面</li>\n</ul>\n<h3 id=\"JavaScript的基本特點如下：\"><a href=\"#JavaScript的基本特點如下：\" class=\"headerlink\" title=\"JavaScript的基本特點如下：\"></a>JavaScript的基本特點如下：</h3><ul>\n<li>是一種解釋性程式語言（代碼不進行預編譯）。</li>\n<li>主要用來向 HTML 頁面添加互動行為。</li>\n<li>可以直接嵌入 HTML 頁面，但寫成單獨的 JS 檔案有利於結構和行為的分離。</li>\n</ul>\n<h3 id=\"JavaScript常用來完成以下任務：\"><a href=\"#JavaScript常用來完成以下任務：\" class=\"headerlink\" title=\"JavaScript常用來完成以下任務：\"></a>JavaScript常用來完成以下任務：</h3><ul>\n<li>嵌入動態文字於 HTML 頁面</li>\n<li>對瀏覽器事件作出回應</li>\n<li>讀寫 HTML 元素</li>\n<li>在資料被提交到伺服器之前驗證資料</li>\n<li>檢測訪客的瀏覽器資訊</li>\n<li>控制 cookies，包括建立和修改等</li>\n</ul>\n<h2 id=\"正文開始\"><a href=\"#正文開始\" class=\"headerlink\" title=\"正文開始\"></a>正文開始</h2><p>首先先學習建立一個 <code>JavaScript</code> 的環境，環境建立如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width, initial-scale=1.0\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"X-UA-Compatible\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"ie=edge\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"js/all.js\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>通常我會把 SCSS 跟 JS 另外各自開立一個資料夾來管理，讓根目錄保持整潔。</p>\n<h2 id=\"alert-警示語法\"><a href=\"#alert-警示語法\" class=\"headerlink\" title=\"alert 警示語法\"></a>alert 警示語法</h2><p>JS 有個警示語法 (alert) 可以來測驗一下目前寫的 JS 有無效果，滿好用的，然後是這樣寫的：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">alert(<span class=\"string\">'test'</span>);</span><br></pre></td></tr></table></figure>\n<p>記得括弧內的「文字」要使用<strong>單引號</strong>或<strong>雙引號</strong>，才能顯示正確文字。<br>可以玩一下 <a href=\"http://https://codepen.io/hnzxewqw/full/RwwEqWx\" target=\"_blank\" rel=\"noopener\">codepen</a><br>這個語法很常被使用，像是錯誤提示、或是購買商品成功或錯誤提示的彈跳視窗，但沒想到寫法這麼簡單。<br><em>另外如果不喜歡原本預設的 alert 視窗，可以看這一篇 <a href=\"http://https://w3c.hexschool.com/blog/13ef5369\" target=\"_blank\" rel=\"noopener\">SweetAlert 的作法</a></em></p>\n<p>原則上通常會把 JS 放在結尾的 <code>&lt;/body&gt;</code> 前面，確保都讀完「靜態的」程式碼後再執行 JS。</p>\n<blockquote>\n<p>&lt;有原則當然也有例外，如果特定要執行 JS 做特別的效果，也可以把 JS 的程式碼放在 <code>HTML</code> 中&gt;</p>\n</blockquote>\n<h2 id=\"textContent-的作法\"><a href=\"#textContent-的作法\" class=\"headerlink\" title=\"textContent 的作法\"></a>textContent 的作法</h2><p>要用 JS 控制網頁的文字，有一個 <code>textContent</code> 的語法，而這個語法編寫如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">document.getElementById(&#39;title1&#39;).textContent &#x3D; &#39;Hello World&#39;;</span><br></pre></td></tr></table></figure>\n\n<p>白話文解釋：<strong>網頁主體( document )</strong>，宣告用 <strong>使用 id 元件( getElementById )</strong> 加上設定的 <strong>id 名稱</strong> 將原本的文字，使用 <strong>文字內容( textContent )</strong> 的語法變成 <strong>指定文字(這裡是寫 Hello World )</strong></p>\n<p>不過這邊有一個地方要注意，如果把 <code>&lt;script&gt;</code> 標籤寫在 head 裡面的時候，會發現網頁不會有效果，反而一直停在原本的寫的畫面。然後打開 Chrome 檢查會看到 console 裡面會顯示下圖：</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/JS1-1.png?alt=media&token=95974db7-9979-4a3c-83d2-25fe0e218cc6\" alt=\"把 `&lt;script&gt;` 標籤寫在 `header` 時，`console` 會跳錯\"></p>\n<p>原因是網頁是從上往下閱讀，但如果發現在 head 就讀到 <code>&lt;script&gt;</code> 標籤時，因為找不到內容而無法順利顯示 JS ，所以常常會把 JS 寫在最後面就是這個原因。</p>\n<p><strong>原本 HTML 程式碼如下：</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width, initial-scale=1.0\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"X-UA-Compatible\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"ie=edge\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>JavaScript practice Day1<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">id</span>=<span class=\"string\">\"title1\"</span>&gt;</span>This is Title<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"js/all.js\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>正常來說畫面應該會是下圖所示：</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/JS%201-2.png?alt=media&token=72be0bdf-22b2-472f-b5df-0344b8ffea64\" alt=\"通常會讓程式碼讀取完後，再跑 `script` 指令\"></p>\n<p>可以點一下<a href=\"http://https://codepen.io/hnzxewqw/pen/OJJraKe\" target=\"_blank\" rel=\"noopener\">這裡</a>把 JS 的註解打開，然後重新整理就會看到透過 JS 就把原本的文字：<strong>This is Title</strong>，變成：<strong>Hello World</strong> 囉~!!</p>\n<p>文獻參考<br> <a href=\"https://zh.wikipedia.org/wiki/JavaScript#%E8%82%87%E5%A7%8B%E6%96%BC%E7%B6%B2%E6%99%AF\" target=\"_blank\" rel=\"noopener\">https://zh.wikipedia.org/wiki/JavaScript#%E8%82%87%E5%A7%8B%E6%96%BC%E7%B6%B2%E6%99%AF</a></p>\n","categories":["JavaScript"],"tags":["JavaScript"]},{"title":"寫一個 search bar","url":"/input/20200106/1702288669/","content":"<h2 id=\"搜尋列-input-button\"><a href=\"#搜尋列-input-button\" class=\"headerlink\" title=\"搜尋列 ( input + button )\"></a>搜尋列 ( input + button )</h2><p>這次來練習寫一個 Search Bar，要寫的樣式如下</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/searchbar01.png?alt=media&token=b380ab04-a70c-469e-82c0-78462af98f22\" alt=\"參考樣式\"></p>\n<h3 id=\"起手式\"><a href=\"#起手式\" class=\"headerlink\" title=\"起手式\"></a>起手式</h3><p>我習慣在最外層寫一個 <code>.wrap</code>，在繼續將裡面要完成的 HTML 先寫完<br>所以程式碼會如下，</p>\n<p><strong>HTML</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"wrap\"</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"search\"</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">class</span>=<span class=\"string\">\"search-bar\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"search\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"search\"</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">\"輸入名稱\"</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"search-btn\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>這時候我才會加入 CSS 的樣式，因為要讓底色是我指定的顏色，還有這次 Search Bar 的裡面所有的連結按鈕我都取消底線的樣式，所以我的 CSS 先把 layout 寫好，</p>\n<p><strong>CSS</strong></p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\">*&#123;<span class=\"attribute\">box-sizing</span>: border-box;&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">body</span>&#123;</span><br><span class=\"line\"> <span class=\"attribute\">background-color</span>: <span class=\"number\">#efe9e7</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">a</span>&#123;</span><br><span class=\"line\"> <span class=\"attribute\">text-decoration</span>: none;</span><br><span class=\"line\"> <span class=\"attribute\">color</span>: <span class=\"number\">#3D1101</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.wrap</span>&#123;</span><br><span class=\"line\"> <span class=\"attribute\">max-width</span>: <span class=\"number\">960px</span>;</span><br><span class=\"line\"> <span class=\"attribute\">margin</span>:<span class=\"number\">20px</span> auto <span class=\"number\">0</span> auto;</span><br><span class=\"line\"> <span class=\"attribute\">height</span>: auto;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>使用 <code>box-sizing:border-box</code> 原因是要讓原本 CSS 預設的 padding 值不要影響我的設定值。<br>這時候畫面會顯示這樣</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/searchbar02.png?alt=media&token=cc40d3ad-325e-4be9-ae09-75f188b57245\" alt=\"大概是我要的感覺了\"></p>\n<hr>\n<h2 id=\"把按鈕的文字改成圖示\"><a href=\"#把按鈕的文字改成圖示\" class=\"headerlink\" title=\"把按鈕的文字改成圖示\"></a>把按鈕的文字改成圖示</h2><p>再來就是優化的內容了，為了要讓搜尋按鈕好看，所以這邊我要載入 fontawesome，方式如下，先到 fontawesome 官網，選擇 Start for free，畫面如下</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/searchbar03.png?alt=media&token=0ef052e3-683e-4925-8547-e3798366f0a6\" alt=\"fontawesome 首頁\"></p>\n<blockquote>\n<p>以前都免費，現在要付費才能升級成 PRO 的會員了…</p>\n</blockquote>\n<blockquote>\n<p>會出現需要輸入 email 的地方，輸入完後會收到官方寄來的認證信，打開信件認證之後，在登入網頁，會給一組專屬的 kit 程式碼跟代碼，記得先複製存檔到電腦裡喔！以後要用到 fontawesome 都要匯入這個 kit 程式！或是去找 CDN 放在 link 裡面也可以！</p>\n</blockquote>\n<p>然後在貼上到 head 裡面就可以讀取到 fontawesome 的圖案了，然後這次我要找的是 Search 的圖案，所以我就在裡面找 search，有很多放大鏡的圖案，就選一個喜歡的來用，於是我就找到了這個圖案</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/searchbar04.png?alt=media&token=d824e86d-b802-405f-a92e-158adf41b4e6\" alt=\"在 fontawesome 搜尋 search 在挑選喜歡的樣式\"></p>\n<p>因為我沒有付費升級成 PRO 會員，所以只能選第一個 solid 的選項把上面的網址複製下來貼到原本程式碼 <code>btn</code> 的地方，程式碼會是這樣</p>\n<p><strong>HTML</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"wrap\"</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"search\"</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">class</span>=<span class=\"string\">\"search-bar\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"search\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"search\"</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">\"輸入名稱\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">class</span>=<span class=\"string\">\"search-btn\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fas fa-search\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>這時候畫面就變成下方所示</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/searchbar05.png?alt=media&token=3db47084-2c4a-4b94-b98e-462071816fca\" alt=\"好像很接近要寫的樣子\"></p>\n<hr>\n<h2 id=\"細節優化\"><a href=\"#細節優化\" class=\"headerlink\" title=\"細節優化\"></a>細節優化</h2><p>這時候 CSS 要繼續往下寫，先設定 <code>.search</code> 的寬度為畫面的 80%，並且靠左，因為等等還要放上購物車，寫入 <code>position</code> 是將 <code>.search</code> 設定為父元素，讓等等放大鏡圖示可以對齊。</p>\n<p><strong>CSS</strong></p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.search</span>&#123;</span><br><span class=\"line\"> <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\"> <span class=\"attribute\">width</span>: <span class=\"number\">80%</span>;</span><br><span class=\"line\"> <span class=\"attribute\">float</span>: left; </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"優化-input\"><a href=\"#優化-input\" class=\"headerlink\" title=\"優化 input\"></a>優化 input</h3><p>再來優化 <code>.search-bar</code> 讓它填滿 <code>.search</code> 的範圍，並按照標記文件 <code>height:32px</code>，並且外框設定 <code>3px</code> 的棕色實心線，為了讓 search bar 與畫面一致，所以也將背景填滿色。</p>\n<p><strong>CSS</strong></p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.search-bar</span>&#123;</span><br><span class=\"line\"> <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\"> <span class=\"attribute\">height</span>: <span class=\"number\">32px</span>;</span><br><span class=\"line\"> <span class=\"attribute\">font-size</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\"> <span class=\"attribute\">border</span>: <span class=\"number\">3px</span> solid <span class=\"number\">#3D1101</span>;</span><br><span class=\"line\"> <span class=\"attribute\">background-color</span>: <span class=\"number\">#efe9e7</span>;</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h3 id=\"優化-button\"><a href=\"#優化-button\" class=\"headerlink\" title=\"優化 button\"></a>優化 button</h3><p>優化按鈕，按照標記文件設定寬高與背景色後，也將 fontawesome 的顏色與背景設定相同，加上 <code>cursor</code> 讓滑鼠移過去時可以變成手指的圖示，再透過 <code>position:absolute</code> 設定成絕對定為，讓按鈕可以靠上靠右對齊 Search bar</p>\n<p><strong>CSS</strong></p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.search-btn</span>&#123;</span><br><span class=\"line\"> <span class=\"attribute\">width</span>: <span class=\"number\">36px</span>;</span><br><span class=\"line\"> <span class=\"attribute\">height</span>: <span class=\"number\">32px</span>;</span><br><span class=\"line\"> <span class=\"attribute\">background-color</span>: <span class=\"number\">#3D1101</span>;</span><br><span class=\"line\"> <span class=\"attribute\">color</span>:<span class=\"number\">#efe9e7</span>;</span><br><span class=\"line\"> <span class=\"attribute\">outline</span>:none;</span><br><span class=\"line\"> <span class=\"attribute\">border</span>: <span class=\"number\">2px</span> solid <span class=\"number\">#3D1101</span>;</span><br><span class=\"line\"> <span class=\"attribute\">cursor</span>: pointer; </span><br><span class=\"line\"> <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\"> <span class=\"attribute\">top</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\"> <span class=\"attribute\">right</span>: <span class=\"number\">0</span>; </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"完成\"><a href=\"#完成\" class=\"headerlink\" title=\"完成\"></a>完成</h2><p>寫完上方程式碼就完成這次的好看的搜尋列囉~~!</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/searchbar06.png?alt=media&token=759ca863-8f17-45e6-9ccd-66feb154d43a\" alt=\"搜尋列完成\"></p>\n<p>完整程式碼在這裡<br><a href=\"https://codepen.io/hnzxewqw/pen/ZgWymm\" target=\"_blank\" rel=\"noopener\">https://codepen.io/hnzxewqw/pen/ZgWymm</a></p>\n","categories":["input"],"tags":["HTML","CSS"]},{"title":"美化 Powershell","url":"/Powershell/20191225/611397980/","content":"<h2 id=\"Powershell-的美化原因\"><a href=\"#Powershell-的美化原因\" class=\"headerlink\" title=\"Powershell 的美化原因\"></a>Powershell 的美化原因</h2><p>為了開發更方便，Win10 有內建一個終端機叫做 Powershell，但原本的樣式很醜…</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/powershell%E9%A0%90%E8%A8%AD.png?alt=media&token=33be3a02-3289-4ee3-adb6-eff49f6d2b72\" alt=\"Windows 預設的樣式\"></p>\n<p>這種配色相當刺眼，所以為了以後開發保護眼睛，還是美化一下好了!</p>\n<hr>\n<h2 id=\"環境條件\"><a href=\"#環境條件\" class=\"headerlink\" title=\"環境條件\"></a>環境條件</h2><ul>\n<li>需要在 Windows 10 1903 版以上才能美化喔~不然會失敗。</li>\n</ul>\n<hr>\n<h2 id=\"查看-Windows-版本\"><a href=\"#查看-Windows-版本\" class=\"headerlink\" title=\"查看 Windows 版本\"></a>查看 Windows 版本</h2><p>在下方搜尋列中打 <code>winver</code>，就可以看到版本喔! 如果發現不是 1903 版本要記得更新系統。</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/winver.png?alt=media&token=e6862e07-d4ab-477e-aada-2db27d22da7e\" alt=\"winver\"></p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/winver1903.png?alt=media&token=7980ae9d-7a88-4047-b40a-48d1a82147b6\" alt=\"winver 1903\"></p>\n<p>確認好後就可以繼續進行美化了。</p>\n<hr>\n<h2 id=\"美化提示條\"><a href=\"#美化提示條\" class=\"headerlink\" title=\"美化提示條\"></a>美化提示條</h2><p>預計要美化提示條的樣式如下：</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/powershell%E6%8F%90%E7%A4%BA%E6%A2%9D.png?alt=media&token=fa27bd1b-6555-4aa9-9120-b835e639eed1\" alt=\"美化後的提示條\"></p>\n<p>安裝提示條套件 <code>oh-my-posh</code>，<a href=\"https://github.com/JanDeDobbeleer/oh-my-posh\" target=\"_blank\" rel=\"noopener\">oh-my-posh GitHub</a></p>\n<h3 id=\"安裝套件\"><a href=\"#安裝套件\" class=\"headerlink\" title=\"安裝套件\"></a>安裝套件</h3><p>在 powershell 輸入下方指令：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">Install-Module posh-git -Scope CurrentUser</span><br></pre></td></tr></table></figure>\n<p>安裝過程會有問題提問，一直輸入 <code>Y</code> 就可以了。</p>\n<p>再來安裝 oh-my-posh 模組，輸入下方指令：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">Install-Module oh-my-posh -Scope CurrentUser</span><br></pre></td></tr></table></figure>\n<p>安裝過程會有問題提問，一樣輸入 <code>Y</code> 就可以了。</p>\n<h3 id=\"設定自動套用\"><a href=\"#設定自動套用\" class=\"headerlink\" title=\"設定自動套用\"></a>設定自動套用</h3><p>在 PowerShell 上面輸入 <code>$profile</code> 來顯示 PowerShell 自定義路徑</p>\n<blockquote>\n<p>C:\\Users\\您的資料夾名稱\\Documents\\WindowsPowerShell\\</p>\n</blockquote>\n<p>複製路徑到文件視窗中貼上，打開資料夾後底下若沒有一個檔案叫 Microsoft.PowerShell_profile.ps1 那就新增一個記事本，如果有的話要在 vscode 打開，並內容填入以下資訊：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">Import-Module posh-git</span><br><span class=\"line\">Import-Module oh-my-posh</span><br><span class=\"line\"><span class=\"built_in\">Set</span>-Theme Agnoster //我是用這個樣式</span><br></pre></td></tr></table></figure>\n\n<p>設定完成後，往後每次打開 powershell 就會自動套用了~如果想換配色的話可以到官方 readme 底下有提供別的名稱。<a href=\"https://github.com/JanDeDobbeleer/oh-my-posh#themes\" target=\"_blank\" rel=\"noopener\">官方 GitHub</a></p>\n<hr>\n<h2 id=\"調整背景色\"><a href=\"#調整背景色\" class=\"headerlink\" title=\"調整背景色\"></a>調整背景色</h2><p>有鑑於藍色底真是太痛苦了，做平面設計出身的我喜歡深灰色背景，閱讀上比較不吃力，所以要來改下背景。</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/powershell%20%E7%BE%8E%E5%8C%96.png?alt=media&token=dd4b4099-8d09-4e57-ba60-ebc048210047\" alt=\"我的 powershell 背景\"></p>\n<ul>\n<li>美化之前要先完成環境條件才可以進行</li>\n</ul>\n<hr>\n<h3 id=\"安裝-Windows-Terminal\"><a href=\"#安裝-Windows-Terminal\" class=\"headerlink\" title=\"安裝 Windows Terminal\"></a>安裝 Windows Terminal</h3><p>新版的 Windows Terminal 是透過 Store 安裝的，<a href=\"ms-windows-store://pdp/?ProductId=9n0dx20hk701\">前往 Store 商店</a></p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/windows%20Terminal.png?alt=media&token=5602a109-7a90-4b4e-ad00-f6869f314af9\" alt=\"Windows Terminal\"></p>\n<p>安裝完畢後在搜尋列輸入 <code>Windows Terminal</code> 即可找到。</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/find%20windows%20Terminal.png?alt=media&token=4ef90689-4e6f-4326-9443-d4acf470550d\" alt=\"直接在搜尋列搜尋 Windows Terminal 即可\"></p>\n<p>打開後在工具列中找到<strong>倒三角形</strong>的圖示，會看到 <strong>setting</strong> 選項。</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/setting.png?alt=media&token=b2e21fef-5297-4366-bd0b-67a6674628c8\" alt=\"setting\"></p>\n<p>選擇後會打開一個記事本檔案，先另存新檔找到該路徑，在把檔案丟掉 VScode 裡面修改第一個物件，會看到如下圖：</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/powershell%20%E8%A8%AD%E5%AE%9A.png?alt=media&token=1d615b67-9a2c-4787-a993-2228534f9bed\" alt=\"修改內容\"></p>\n<p>註解處是我修改的地方，可以參考看看。</p>\n<h4 id=\"注意兩件事情\"><a href=\"#注意兩件事情\" class=\"headerlink\" title=\"注意兩件事情\"></a>注意兩件事情</h4><ul>\n<li>背景圖片的地方不可以有中文字，否則無法正常顯示背景圖片。</li>\n<li>字體建議修改，我個人是使用 Sarasa Term SC，否則滿怪的，原本設定 Arial 但如果出現中文字變亂碼。</li>\n</ul>\n<p>設定完之後就成功囉!!</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/powershell%20%E7%BE%8E%E5%8C%96.png?alt=media&token=dd4b4099-8d09-4e57-ba60-ebc048210047\" alt=\"完成後的 powershell \"></p>\n<hr>\n<blockquote>\n<p>參考文章：<a href=\"https://hsiangfeng.github.io/other/20190924/3446878284/\" target=\"_blank\" rel=\"noopener\">https://hsiangfeng.github.io/other/20190924/3446878284/</a></p>\n</blockquote>\n","categories":["Powershell"],"tags":["Powershell"]},{"title":"第一次建立 Hexo 與推上 GitHub","url":"/hexo/20191217/1291925723/","content":"<h2 id=\"為什麼要建立-Hexo-部落格\"><a href=\"#為什麼要建立-Hexo-部落格\" class=\"headerlink\" title=\"為什麼要建立 Hexo 部落格\"></a>為什麼要建立 Hexo 部落格</h2><p>從今年 2 月開始學習前端，在不同階段給我自己設立目標去挑戰，算一算也 10 個月了，看自己的能力還需要一個挑戰來幫助自己升級，讓我自己可以更快投入前端產業領域，經與 Ray 討論後，開始建立 Hexo 部落格，平台這麼多為什麼要使用 Hexo？</p>\n<p>因為 Hexo 是要使用指令來做開發，也要配合 GitHub 使用，一方面可以練習指令，另一方面可以練習 GitHub 版本控制，算是一石二鳥。</p>\n<p>使用 Hexo 是使用 Markdown 撰寫格式，也需要熟悉 Git 指令還有一點 npm 的知識，可以參考下方連結教學。</p>\n<p><a href=\"https://hsiangfeng.github.io/other/20191111/1875438261/\" target=\"_blank\" rel=\"noopener\">Markdown</a></p>\n<p><a href=\"https://w3c.hexschool.com/git/cfdbd310\" target=\"_blank\" rel=\"noopener\">Git</a></p>\n<p><a href=\"https://hsiangfeng.github.io/nodejs/20190626/1317979814/\" target=\"_blank\" rel=\"noopener\">npm</a></p>\n<hr>\n<h2 id=\"建立-Hexo-部落格\"><a href=\"#建立-Hexo-部落格\" class=\"headerlink\" title=\"建立 Hexo 部落格\"></a>建立 Hexo 部落格</h2><h3 id=\"版本與環境\"><a href=\"#版本與環境\" class=\"headerlink\" title=\"版本與環境\"></a>版本與環境</h3><p>作業系統： Windows10 X64</p>\n<p>Nodejs:：V12.13.1 LTS</p>\n<p>IDE：VS Code</p>\n<h3 id=\"本文環境\"><a href=\"#本文環境\" class=\"headerlink\" title=\"本文環境\"></a>本文環境</h3><p><strong>Hexo 版本</strong></p>\n<p>hexo: 4.1.1</p>\n<p>hexo-cli: 3.1.0</p>\n<p><strong>NexT 版本</strong></p>\n<p>Next: 7.6.0</p>\n<hr>\n<h2 id=\"從-GitHub-建立新的數據-Creat-a-new-Repository\"><a href=\"#從-GitHub-建立新的數據-Creat-a-new-Repository\" class=\"headerlink\" title=\"從 GitHub 建立新的數據 (Creat a new Repository)\"></a>從 GitHub 建立新的數據 (Creat a new Repository)</h2><p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/%E5%BB%BA%E7%AB%8B%E6%95%B8%E6%93%9A.png?alt=media&token=1f2b07d5-023a-48aa-a163-21b4095e955d\" alt=\"初始 GitHub 畫面\"></p>\n<ul>\n<li>名稱務必要謹慎設定，因為之後就無法更改，若想要修改只能重新建立數據庫，記得後面的 github.io 要打一樣的。</li>\n<li>下方的權限直接用 Public (公開) 即可，若一開始還不想公開就選擇 Private (私人的)。</li>\n<li>其他不用更動，直接選擇最下方的綠色按鈕 (Create repostory) 建立數據庫。</li>\n</ul>\n<p><strong>Warning</strong></p>\n<ul>\n<li>有提到 HEXO 是用指令建立的，所以不要在本地端建立數據庫，建立的格式內容會是錯誤的 (我已經失敗過一次，最後還是重新來過。)</li>\n</ul>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/GitHub%20%E4%B8%80%E9%96%8B%E5%A7%8B%E6%9C%83%E7%9C%8B%E5%88%B0%E7%9A%84%E6%A8%A3%E5%AD%90.png?alt=media&token=105bb415-3516-491f-af61-df87a4f22a43\" alt=\"這是一開始看到的樣子，如下圖：\"></p>\n<hr>\n<h2 id=\"安裝-Hexo\"><a href=\"#安裝-Hexo\" class=\"headerlink\" title=\"安裝 Hexo\"></a>安裝 Hexo</h2><p>使用指令安裝 Hexo，開啟終端機 (cmd)輸入以下指令：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm install hexo-cli -g</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/%E5%AE%89%E8%A3%9D%20HEXO.png?alt=media&token=f6e154ec-0f7f-4077-b918-10694c06454d\" alt=\"安裝 Hexo\"></p>\n<p>*指令說明：透過 npm 在 全域 (-g) 下安裝 Hexo-Cli</p>\n<p>輸入後會看到有進度條再跑，大概幾秒後就完成了。</p>\n<hr>\n<h2 id=\"建立-Hexo\"><a href=\"#建立-Hexo\" class=\"headerlink\" title=\"建立 Hexo\"></a>建立 Hexo</h2><p>在要存取的硬碟中開啟一個新資料夾，並自訂名稱 (建議用英文)，之後的資料就會在這個資料夾內，並輸入以下指令：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo init projectname</span><br></pre></td></tr></table></figure>\n<ul>\n<li>projectname 改成自己定義的名稱，建議用英文，安裝完成後如下圖：</li>\n</ul>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/%E5%BB%BA%E7%AB%8B%20HEXO.png?alt=media&token=48c35faf-b65e-42ee-9433-a89d265def7a\" alt=\"\"></p>\n<hr>\n<h2 id=\"進入-Hexo\"><a href=\"#進入-Hexo\" class=\"headerlink\" title=\"進入 Hexo\"></a>進入 Hexo</h2><p>在終端機輸入：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> projectname</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>projectname 改成自己定義的名稱，建議用英文</li>\n</ul>\n<h3 id=\"安裝相關套件\"><a href=\"#安裝相關套件\" class=\"headerlink\" title=\"安裝相關套件\"></a>安裝相關套件</h3><p>由於建立完畢的 Hexo 還必須安裝 npm 相關套件，所以必須在這個目錄下輸入：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>指令說明：將 package.json 相依套件下載下來</li>\n</ul>\n<hr>\n<h2 id=\"啟動-Hexo\"><a href=\"#啟動-Hexo\" class=\"headerlink\" title=\"啟動 Hexo\"></a>啟動 Hexo</h2><p>完成上方內容後再輸入下方指令：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo server</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/%E5%95%9F%E5%8B%95%20hexo.png?alt=media&token=b06502f3-b23c-4a8d-8b69-5e07cd31fdc0\" alt=\"啟動 hexo server\"></p>\n<hr>\n<h2 id=\"使用主題-themes\"><a href=\"#使用主題-themes\" class=\"headerlink\" title=\"使用主題 themes\"></a>使用主題 themes</h2><p>使用 Next 7.6.0 ，<a href=\"https://github.com/theme-next/hexo-theme-next\" target=\"_blank\" rel=\"noopener\">主題連結</a>，或是可以到<a href=\"https://theme-next.iissnan.com/\" target=\"_blank\" rel=\"noopener\">官方網站</a>取得想要的主題，但因為每個主題要修改的程式碼不同，如果要按照我這邊設定，建議選用一樣的樣式!! </p>\n<h3 id=\"替換主題\"><a href=\"#替換主題\" class=\"headerlink\" title=\"替換主題\"></a>替換主題</h3><p>下載 themes 並解壓縮到資料夾內的 themes 資料夾內，並使用 VSCODE 開啟跟目錄資料夾中的 <code>congig.yml</code></p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/timpicturespace.appspot.com/o/themes%20%E8%B3%87%E6%96%99%E5%A4%BE.png?alt=media&token=23291574-3088-4580-8a67-be03a21fa206\" alt=\"資料夾 themes 選項\"></p>\n<p>找到第 96 行更改 themes 後面的名稱如下：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">theme: <span class=\"title\">hexo</span>-<span class=\"title\">theme</span>-<span class=\"title\">next</span>-<span class=\"title\">master</span></span></span><br></pre></td></tr></table></figure>\n\n<hr>\n<p>Hexo 基礎設定</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\">// Site</span><br><span class=\"line\">title: TimCodingBlog// 網站標題</span><br><span class=\"line\">subtitle: 提姆寫程式。 // 網站副標題</span><br><span class=\"line\">description: 提姆的前端筆記 // 網站敘述</span><br><span class=\"line\">keywords: // 關鍵字</span><br><span class=\"line\">author: Tim // 網站作者</span><br><span class=\"line\">language: zh-TW // 網站語系</span><br><span class=\"line\">timezone:</span><br><span class=\"line\"></span><br><span class=\"line\">// URL</span><br><span class=\"line\">url: http://yoursite.com  //輸入您的網站URL，舉例我的就是ray.github.io</span><br><span class=\"line\">root: /</span><br><span class=\"line\">permalink: :year/:month/:day/:title/</span><br><span class=\"line\">permalink_defaults:</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"部署-GitHub\"><a href=\"#部署-GitHub\" class=\"headerlink\" title=\"部署 GitHub\"></a>部署 GitHub</h2><p>需要安裝一個 Hexo 沒有安裝的插件</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n\n<p>修改 _config.yml 中的 Depolyment 如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">  type: git // 模式</span><br><span class=\"line\">  repo: https://github.com/yourGithub /yourGithubName.github.io.git // 自己 GitHub repos 連結</span><br><span class=\"line\">  branch: master // 分支</span><br></pre></td></tr></table></figure>\n\n<p>修改完後輸入下方指令：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo d g</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>指令說明：d →部屬、g →生成靜態頁面</li>\n</ul>\n<hr>\n<h2 id=\"其他指令\"><a href=\"#其他指令\" class=\"headerlink\" title=\"其他指令\"></a>其他指令</h2><figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo new \"<span class=\"built_in\">title</span>\"</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>說明：建立新文章</li>\n</ul>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo s -g</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>說明：s →啟動伺服器 -g →生成靜態頁面</li>\n</ul>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo d -g</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>說明： d →部屬模式 -g →生成靜態頁面</li>\n</ul>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo clean</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>說明：刪除已生成的靜態頁面及快取檔案</li>\n</ul>\n<h2 id=\"刪除指定文章\"><a href=\"#刪除指定文章\" class=\"headerlink\" title=\"刪除指定文章\"></a>刪除指定文章</h2><p>在本地端 source 資料夾，把指定的 md. 檔案刪除，在重新佈署即可，指令為：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo d -g</span><br></pre></td></tr></table></figure>\n\n<hr>\n<blockquote>\n<p>參考文章：<a href=\"https://hsiangfeng.github.io/hexo/20190411/932826160/\" target=\"_blank\" rel=\"noopener\">https://hsiangfeng.github.io/hexo/20190411/932826160/</a></p>\n</blockquote>\n","categories":["hexo"],"tags":["hexo"]}]